
// This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.
var Ammo = (function() {
  var Module = this;

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(' + args.join(',') + '){ ' + source + ' })'); // new Function does not allow upvars in node
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 67108864;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===
var __ZTVN10__cxxabiv117__class_type_infoE = 14544;
var __ZTVN10__cxxabiv120__si_class_type_infoE = 14584;




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + Runtime.alignMemory(15347);
/* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__I_a() } });


/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,49,55,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,49,51,98,116,84,121,112,101,100,79,98,106,101,99,116,0,216,56,0,0,136,0,0,0,96,57,0,0,112,0,0,0,0,0,0,0,1,0,0,0,152,0,0,0,2,4,0,0,0,0,0,0,48,1,0,0,4,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,67,108,111,115,101,115,116,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,216,56,0,0,0,1,0,0,0,57,0,0,208,0,0,0,40,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,6,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,50,48,98,116,68,101,102,97,117,108,116,77,111,116,105,111,110,83,116,97,116,101,0,0,49,51,98,116,77,111,116,105,111,110,83,116,97,116,101,0,216,56,0,0,240,1,0,0,0,57,0,0,216,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,136,2,0,0,8,0,0,0,9,0,0,0,2,0,0,0,1,0,0,0,50,57,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,216,56,0,0,80,2,0,0,0,57,0,0,48,2,0,0,128,2,0,0,0,0,0,0,123,32,118,97,114,32,115,101,108,102,32,61,32,77,111,100,117,108,101,91,39,103,101,116,67,97,99,104,101,39,93,40,77,111,100,117,108,101,91,39,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,39,93,41,91,36,48,93,59,32,105,102,32,40,33,115,101,108,102,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,39,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,39,41,41,32,116,104,114,111,119,32,39,97,32,74,83,73,109,112,108,101,109,101,110,116,97,116,105,111,110,32,109,117,115,116,32,105,109,112,108,101,109,101,110,116,32,97,108,108,32,102,117,110,99,116,105,111,110,115,44,32,121,111,117,32,102,111,114,103,111,116,32,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,58,58,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,46,39,59,32,114,101,116,117,114,110,32,115,101,108,102,46,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,40,36,49,44,36,50,44,36,51,44,36,52,44,36,53,44,36,54,41,59,32,125,0,0,0,0,0,0,0,0,0,0,0,16,4,0,0,10,0,0,0,11,0,0,0,12,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,50,49,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,0,0,57,0,0,248,3,0,0,160,0,0,0,0,0,0,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,5,0,0,0,3,0,0,0,17,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,18,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,19,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,15,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,20,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,1,0,0,0,2,0,0,0,21,0,0,0,20,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,22,0,0,0,21,0,0,0,6,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,87,111,114,108,100,0,0,115,121,110,99,104,114,111,110,105,122,101,77,111,116,105,111,110,83,116,97,116,101,115,0,115,116,101,112,83,105,109,117,108,97,116,105,111,110,0,0,105,110,116,101,114,110,97,108,83,105,110,103,108,101,83,116,101,112,83,105,109,117,108,97,116,105,111,110,0,0,0,0,117,112,100,97,116,101,65,99,116,105,111,110,115,0,0,0,117,112,100,97,116,101,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,0,0,0,115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,0,0,0,0,0,0,0,0,99,97,108,99,117,108,97,116,101,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,114,101,97,116,101,80,114,101,100,105,99,116,105,118,101,67,111,110,116,97,99,116,115,0,0,0,0,0,0,0,0,114,101,108,101,97,115,101,32,112,114,101,100,105,99,116,105,118,101,32,99,111,110,116,97,99,116,32,109,97,110,105,102,111,108,100,115,0,0,0,0,112,114,101,100,105,99,116,105,118,101,32,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,0,0,0,0,0,105,110,116,101,103,114,97,116,101,84,114,97,110,115,102,111,114,109,115,0,0,0,0,0,67,67,68,32,109,111,116,105,111,110,32,99,108,97,109,112,105,110,103,0,0,0,0,0,97,112,112,108,121,32,115,112,101,99,117,108,97,116,105,118,101,32,99,111,110,116,97,99,116,32,114,101,115,116,105,116,117,116,105,111,110,0,0,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,0,0,0,0,0,0,0,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0,0,0,0,0,0,0,49,53,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,0,0,0,0,0,0,0,0,57,0,0,224,6,0,0,112,19,0,0,0,0,0,0,0,57,0,0,192,6,0,0,248,6,0,0,0,0,0,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,0,0,0,0,0,0,83,80,72,69,82,69,0,0,0,0,0,0,0,8,0,0,23,0,0,0,24,0,0,0,5,0,0,0,3,0,0,0,51,52,98,116,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,55,67,108,111,115,101,115,116,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,216,56,0,0,184,7,0,0,0,57,0,0,128,7,0,0,232,7,0,0,0,0,0,0,0,57,0,0,88,7,0,0,240,7,0,0,0,0,0,0,0,0,0,0,240,7,0,0,25,0,0,0,26,0,0,0,6,0,0,0,4,0,0,0,0,0,0,0,152,8,0,0,27,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,50,55,73,110,112,108,97,99,101,83,111,108,118,101,114,73,115,108,97,110,100,67,97,108,108,98,97,99,107,0,0,0,78,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,49,52,73,115,108,97,110,100,67,97,108,108,98,97,99,107,69,0,0,0,216,56,0,0,96,8,0,0,0,57,0,0,64,8,0,0,144,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,22,0,0,0,23,0,0,0,1,0,0,0,2,0,0,0,5,0,0,0,7,0,0,0,3,0,0,0,0,0,0,0,50,51,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,0,0,0,57,0,0,224,8,0,0,160,0,0,0,0,0,0,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,9,0,0,7,0,0,0,32,0,0,0,33,0,0,0,24,0,0,0,8,0,0,0,4,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,0,0,0,49,49,98,116,82,105,103,105,100,66,111,100,121,0,0,0,0,57,0,0,136,9,0,0,112,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,10,0,0,34,0,0,0,35,0,0,0,3,0,0,0,1,0,0,0,4,0,0,0,36,0,0,0,9,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,83,101,116,117,112,0,0,0,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,73,116,101,114,97,116,105,111,110,115,0,0,0,0,0,0,0,115,111,108,118,101,71,114,111,117,112,0,0,0,0,0,0,51,53,98,116,83,101,113,117,101,110,116,105,97,108,73,109,112,117,108,115,101,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,0,0,49,56,98,116,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,0,0,0,216,56,0,0,112,10,0,0,0,57,0,0,72,10,0,0,136,10,0,0,0,0,0,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,13,0,0,37,0,0,0,38,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,6,0,0,0,2,0,0,0,7,0,0,0,26,0,0,0,10,0,0,0,11,0,0,0,6,0,0,0,27,0,0,0,39,0,0,0,49,50,98,116,65,120,105,115,83,119,101,101,112,51,0,0,50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,116,69,0,0,0,0,0,0,0,50,49,98,116,66,114,111,97,100,112,104,97,115,101,73,110,116,101,114,102,97,99,101,0,216,56,0,0,160,13,0,0,0,57,0,0,128,13,0,0,184,13,0,0,0,0,0,0,0,57,0,0,112,13,0,0,192,13,0,0,0,0,0,0,0,0,0,0,192,13,0,0,40,0,0,0,41,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,6,0,0,0,2,0,0,0,7,0,0,0,26,0,0,0,10,0,0,0,11,0,0,0,6,0,0,0,27,0,0,0,39,0,0,0,0,0,0,0,224,14,0,0,42,0,0,0,43,0,0,0,5,0,0,0,1,0,0,0,7,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,8,0,0,0,15,0,0,0,9,0,0,0,28,0,0,0,10,0,0,0,6,0,0,0,16,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,49,53,98,116,78,117,108,108,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,0,50,53,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,216,56,0,0,168,14,0,0,0,57,0,0,136,14,0,0,200,14,0,0,0,0,0,0,0,57,0,0,112,14,0,0,208,14,0,0,0,0,0,0,0,0,0,0,136,15,0,0,44,0,0,0,45,0,0,0,8,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,31,0,0,0,17,0,0,0,1,0,0,0,18,0,0,0,32,0,0,0,7,0,0,0,2,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,12,0,0,0,13,0,0,0,2,0,0,0,9,0,0,0,10,0,0,0,20,0,0,0,14,0,0,0,8,0,0,0,21,0,0,0,22,0,0,0,11,0,0,0,15,0,0,0,23,0,0,0,12,0,0,0,1,0,0,0,16,0,0,0,49,48,98,116,66,111,120,83,104,97,112,101,0,0,0,0,0,57,0,0,120,15,0,0,176,43,0,0,0,0,0,0,66,111,120,0,0,0,0,0,0,0,0,0,32,16,0,0,46,0,0,0,47,0,0,0,13,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,34,0,0,0,17,0,0,0,2,0,0,0,24,0,0,0,35,0,0,0,8,0,0,0,2,0,0,0,25,0,0,0,8,0,0,0,33,0,0,0,17,0,0,0,18,0,0,0,2,0,0,0,14,0,0,0,10,0,0,0,26,0,0,0,19,0,0,0,0,0,0,0,49,52,98,116,67,97,112,115,117,108,101,83,104,97,112,101,0,0,0,0,0,0,0,0,0,57,0,0,8,16,0,0,32,28,0,0,0,0,0,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,0,0,0,0,0,67,97,112,115,117,108,101,83,104,97,112,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,16,0,0,48,0,0,0,49,0,0,0,2,0,0,0,9,0,0,0,36,0,0,0,37,0,0,0,10,0,0,0,11,0,0,0,15,0,0,0,27,0,0,0,9,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,10,0,0,0,38,0,0,0,50,49,98,116,67,111,108,108,105,115,105,111,110,68,105,115,112,97,116,99,104,101,114,0,0,57,0,0,168,16,0,0,8,34,0,0,0,0,0,0,0,0,0,0,40,17,0,0,50,0,0,0,51,0,0,0,11,0,0,0,0,0,0,0,50,51,98,116,67,111,108,108,105,115,105,111,110,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,49,55,98,116,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,0,0,216,56,0,0,8,17,0,0,0,57,0,0,232,16,0,0,32,17,0,0,0,0,0,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,0,0,0,0,0,216,56,0,0,88,17,0,0,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,0,0,0,0,0,216,56,0,0,120,17,0,0,0,0,0,0,112,19,0,0,52,0,0,0,53,0,0,0,15,0,0,0,16,0,0,0,5,0,0,0,3,0,0,0,54,0,0,0,1,0,0,0,2,0,0,0,16,0,0,0,39,0,0,0,18,0,0,0,40,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,79,118,101,114,102,108,111,119,32,105,110,32,65,65,66,66,44,32,111,98,106,101,99,116,32,114,101,109,111,118,101,100,32,102,114,111,109,32,115,105,109,117,108,97,116,105,111,110,0,0,0,0,0,0,0,0,73,102,32,121,111,117,32,99,97,110,32,114,101,112,114,111,100,117,99,101,32,116,104,105,115,44,32,112,108,101,97,115,101,32,101,109,97,105,108,32,98,117,103,115,64,99,111,110,116,105,110,117,111,117,115,112,104,121,115,105,99,115,46,99,111,109,10,0,0,0,0,0,80,108,101,97,115,101,32,105,110,99,108,117,100,101,32,97,98,111,118,101,32,105,110,102,111,114,109,97,116,105,111,110,44,32,121,111,117,114,32,80,108,97,116,102,111,114,109,44,32,118,101,114,115,105,111,110,32,111,102,32,79,83,46,10,0,0,0,0,0,0,0,0,84,104,97,110,107,115,46,10,0,0,0,0,0,0,0,0,117,112,100,97,116,101,65,97,98,98,115,0,0,0,0,0,99,97,108,99,117,108,97,116,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,0,0,0,0,0,0,0,112,101,114,102,111,114,109,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,105,111,110,0,0,0,0,0,0,0,100,105,115,112,97,116,99,104,65,108,108,67,111,108,108,105,115,105,111,110,80,97,105,114,115,0,0,0,0,0,0,0,99,111,110,118,101,120,83,119,101,101,112,67,111,109,112,111,117,110,100,0,0,0,0,0,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,0,0,0,0,0,0,216,56,0,0,88,19,0,0,0,0,0,0,192,19,0,0,55,0,0,0,56,0,0,0,17,0,0,0,18,0,0,0,252,255,255,255,192,19,0,0,57,0,0,0,58,0,0,0,19,0,0,0,0,0,0,0,49,55,68,101,98,117,103,68,114,97,119,99,97,108,108,98,97,99,107,0,0,0,0,0,96,57,0,0,168,19,0,0,0,0,0,0,2,0,0,0,0,47,0,0,2,0,0,0,48,47,0,0,2,4,0,0,50,52,98,116,66,114,111,97,100,112,104,97,115,101,65,97,98,98,67,97,108,108,98,97,99,107,0,0,0,0,0,0,216,56,0,0,224,19,0,0,0,0,0,0,104,20,0,0,59,0,0,0,60,0,0,0,12,0,0,0,0,0,0,0,50,49,98,116,83,105,110,103,108,101,83,119,101,101,112,67,97,108,108,98,97,99,107,0,50,51,98,116,66,114,111,97,100,112,104,97,115,101,82,97,121,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,57,0,0,56,20,0,0,0,20,0,0,0,0,0,0,0,57,0,0,32,20,0,0,88,20,0,0,0,0,0,0,0,0,0,0,168,20,0,0,61,0,0,0,62,0,0,0,13,0,0,0,0,0,0,0,49,57,98,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,0,0,0,57,0,0,144,20,0,0,88,20,0,0,0,0,0,0,0,0,0,0,112,21,0,0,63,0,0,0,64,0,0,0,14,0,0,0,6,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,49,52,76,111,99,97,108,73,110,102,111,65,100,100,101,114,95,49,0,0,0,57,0,0,208,20,0,0,232,7,0,0,0,0,0,0,0,0,0,0,80,22,0,0,65,0,0,0,66,0,0,0,20,0,0,0,1,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,0,0,0,0,0,0,0,0,57,0,0,152,21,0,0,40,44,0,0,0,0,0,0,0,0,0,0,40,23,0,0,67,0,0,0,68,0,0,0,20,0,0,0,2,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,57,0,0,120,22,0,0,40,44,0,0,0,0,0,0,0,0,0,0,216,23,0,0,69,0,0,0,70,0,0,0,15,0,0,0,7,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,49,53,76,111,99,97,108,73,110,102,111,65,100,100,101,114,50,0,0,0,0,0,57,0,0,80,23,0,0,40,1,0,0,0,0,0,0,0,0,0,0,176,24,0,0,71,0,0,0,72,0,0,0,20,0,0,0,41,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,57,82,97,121,84,101,115,116,101,114,95,49,0,78,54,98,116,68,98,118,116,56,73,67,111,108,108,105,100,101,69,0,0,0,0,0,0,216,56,0,0,144,24,0,0,0,57,0,0,16,24,0,0,168,24,0,0,0,0,0,0,0,0,0,0,112,25,0,0,73,0,0,0,74,0,0,0,21,0,0,0,1,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,0,0,0,0,57,0,0,216,24,0,0,248,43,0,0,0,0,0,0,0,0,0,0,48,26,0,0,75,0,0,0,76,0,0,0,21,0,0,0,2,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,57,0,0,152,25,0,0,248,43,0,0,0,0,0,0,0,0,0,0,128,26,0,0,9,0,0,0,42,0,0,0,21,0,0,0,77,0,0,0,78,0,0,0,0,0,0,0,78,49,50,98,116,67,111,110,118,101,120,67,97,115,116,49,48,67,97,115,116,82,101,115,117,108,116,69,0,0,0,0,216,56,0,0,96,26,0,0,0,0,0,0,0,27,0,0,79,0,0,0,80,0,0,0,22,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,43,0,0,0,17,0,0,0,3,0,0,0,31,0,0,0,44,0,0,0,10,0,0,0,2,0,0,0,32,0,0,0,12,0,0,0,33,0,0,0,22,0,0,0,23,0,0,0,2,0,0,0,23,0,0,0,10,0,0,0,26,0,0,0,19,0,0,0,0,0,0,0,49,49,98,116,67,111,110,101,83,104,97,112,101,0,0,0,0,57,0,0,240,26,0,0,32,28,0,0,0,0,0,0,98,116,67,111,110,101,83,104,97,112,101,68,97,116,97,0,67,111,110,101,0,0,0,0,0,0,0,0,96,27,0,0,81,0,0,0,82,0,0,0,1,0,0,0,0,0,0,0,50,55,98,116,67,111,110,116,105,110,117,111,117,115,67,111,110,118,101,120,67,111,108,108,105,115,105,111,110,0,0,0,0,57,0,0,64,27,0,0,0,28,0,0,0,0,0,0,0,0,0,0,224,27,0,0,83,0,0,0,84,0,0,0,24,0,0,0,25,0,0,0,3,0,0,0,0,0,0,0,49,54,98,116,80,111,105,110,116,67,111,108,108,101,99,116,111,114,0,0,0,0,0,0,78,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,54,82,101,115,117,108,116,69,0,216,56,0,0,168,27,0,0,0,57,0,0,144,27,0,0,216,27,0,0,0,0,0,0,49,50,98,116,67,111,110,118,101,120,67,97,115,116,0,0,216,56,0,0,240,27,0,0,50,49,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,0,0,57,0,0,8,28,0,0,64,28,0,0,0,0,0,0,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,0,0,57,0,0,48,28,0,0,144,17,0,0,0,0,0,0,0,0,0,0,168,28,0,0,85,0,0,0,86,0,0,0,2,0,0,0,26,0,0,0,3,0,0,0,24,0,0,0,3,0,0,0,25,0,0,0,45,0,0,0,33,0,0,0,34,0,0,0,27,0,0,0,46,0,0,0,87,0,0,0,49,54,98,116,68,98,118,116,66,114,111,97,100,112,104,97,115,101,0,0,0,0,0,0,0,57,0,0,144,28,0,0,184,13,0,0,0,0,0,0,0,0,0,0,248,28,0,0,88,0,0,0,89,0,0,0,20,0,0,0,47,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,50,48,66,114,111,97,100,112,104,97,115,101,65,97,98,98,84,101,115,116,101,114,0,0,0,57,0,0,224,28,0,0,168,24,0,0,0,0,0,0,0,0,0,0,72,29,0,0,90,0,0,0,91,0,0,0,20,0,0,0,48,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,49,57,66,114,111,97,100,112,104,97,115,101,82,97,121,84,101,115,116,101,114,0,0,0,0,57,0,0,48,29,0,0,168,24,0,0,0,0,0,0,0,0,0,0,152,29,0,0,92,0,0,0,93,0,0,0,28,0,0,0,49,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,49,56,98,116,68,98,118,116,84,114,101,101,67,111,108,108,105,100,101,114,0,0,0,0,0,57,0,0,128,29,0,0,168,24,0,0,0,0,0,0,0,0,0,0,24,30,0,0,94,0,0,0,95,0,0,0,35,0,0,0,36,0,0,0,13,0,0,0,37,0,0,0,51,49,98,116,68,101,102,97,117,108,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,0,0,50,52,98,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,0,216,56,0,0,240,29,0,0,0,57,0,0,200,29,0,0,16,30,0,0,0,0,0,0,0,0,0,0,160,30,0,0,96,0,0,0,97,0,0,0,3,0,0,0,0,0,0,0,78,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,51,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,67,114,101,97,116,101,70,117,110,99,0,0,0,0,0,0,0,0,216,56,0,0,112,30,0,0,0,57,0,0,64,30,0,0,152,30,0,0,0,0,0,0,0,0,0,0,248,30,0,0,98,0,0,0,99,0,0,0,4,0,0,0,0,0,0,0,78,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,57,0,0,200,30,0,0,152,30,0,0,0,0,0,0,0,0,0,0,88,31,0,0,100,0,0,0,101,0,0,0,5,0,0,0,0,0,0,0,78,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,57,0,0,32,31,0,0,152,30,0,0,0,0,0,0,0,0,0,0,184,31,0,0,102,0,0,0,103,0,0,0,6,0,0,0,0,0,0,0,78,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,0,57,0,0,128,31,0,0,152,30,0,0,0,0,0,0,0,0,0,0,8,32,0,0,104,0,0,0,105,0,0,0,7,0,0,0,0,0,0,0,78,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,0,57,0,0,224,31,0,0,152,30,0,0,0,0,0,0,0,0,0,0,104,32,0,0,106,0,0,0,107,0,0,0,8,0,0,0,0,0,0,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,57,0,0,48,32,0,0,152,30,0,0,0,0,0,0,0,0,0,0,200,32,0,0,108,0,0,0,109,0,0,0,9,0,0,0,0,0,0,0,78,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,57,0,0,144,32,0,0,152,30,0,0,0,0,0,0,0,0,0,0,32,33,0,0,110,0,0,0,111,0,0,0,10,0,0,0,0,0,0,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,57,0,0,240,32,0,0,152,30,0,0,0,0,0,0,0,0,0,0,136,33,0,0,112,0,0,0,113,0,0,0,11,0,0,0,0,0,0,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,0,57,0,0,72,33,0,0,152,30,0,0,0,0,0,0,0,0,0,0,232,33,0,0,114,0,0,0,115,0,0,0,12,0,0,0,0,0,0,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,57,0,0,176,33,0,0,152,30,0,0,0,0,0,0,49,50,98,116,68,105,115,112,97,116,99,104,101,114,0,0,216,56,0,0,248,33,0,0,0,0,0,0,104,34,0,0,116,0,0,0,117,0,0,0,4,0,0,0,1,0,0,0,50,0,0,0,0,0,0,0,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,50,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,216,56,0,0,72,34,0,0,0,57,0,0,48,34,0,0,96,34,0,0,0,0,0,0,0,0,0,0,168,34,0,0,118,0,0,0,119,0,0,0,2,0,0,0,0,0,0,0,49,53,98,116,71,106,107,67,111,110,118,101,120,67,97,115,116,0,0,0,0,0,0,0,0,57,0,0,144,34,0,0,0,28,0,0,0,0,0,0,0,0,0,0,40,35,0,0,120,0,0,0,121,0,0,0,1,0,0,0,0,0,0,0,51,48,98,116,71,106,107,69,112,97,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,0,0,51,48,98,116,67,111,110,118,101,120,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,0,0,216,56,0,0,248,34,0,0,0,57,0,0,208,34,0,0,32,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,35,0,0,122,0,0,0,123,0,0,0,5,0,0,0,0,0,0,0,49,55,98,116,71,106,107,80,97,105,114,68,101,116,101,99,116,111,114,0,0,0,0,0,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,0,0,216,56,0,0,120,35,0,0,0,57,0,0,96,35,0,0,160,35,0,0,0,0,0,0,0,0,0,0,240,35,0,0,124,0,0,0,125,0,0,0,29,0,0,0,30,0,0,0,4,0,0,0,0,0,0,0,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,0,0,0,0,0,0,57,0,0,216,35,0,0,216,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,126,0,0,0,127,0,0,0,2,0,0,0,0,0,0,0,51,51,98,116,77,105,110,107], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,57,0,0,0,40,0,0,32,35,0,0,0,0,0,0,0,0,0,0,8,41,0,0,128,0,0,0,129,0,0,0,31,0,0,0,32,0,0,0,5,0,0,0,0,0,0,0,90,78,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,49,50,99,97,108,99,80,101,110,68,101,112,116,104,69,82,50,50,98,116,86,111,114,111,110,111,105,83,105,109,112,108,101,120,83,111,108,118,101,114,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,83,52,95,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,55,95,82,57,98,116,86,101,99,116,111,114,51,83,57,95,83,57,95,80,49,50,98,116,73,68,101,98,117,103,68,114,97,119,69,50,48,98,116,73,110,116,101,114,109,101,100,105,97,116,101,82,101,115,117,108,116,0,0,0,0,0,0,0,57,0,0,88,40,0,0,216,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,41,0,0,130,0,0,0,131,0,0,0,14,0,0,0,13,0,0,0,33,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,34,0,0,0,41,0,0,0,35,0,0,0,51,0,0,0,36,0,0,0,15,0,0,0,42,0,0,0,52,0,0,0,53,0,0,0,0,0,0,0,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,0,0,57,0,0,136,41,0,0,208,14,0,0,0,0,0,0,0,0,0,0,88,42,0,0,132,0,0,0,133,0,0,0,18,0,0,0,0,0,0,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,0,57,0,0,208,41,0,0,32,17,0,0,0,0,0,0,0,0,0,0,240,42,0,0,134,0,0,0,135,0,0,0,19,0,0,0,0,0,0,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,57,0,0,128,42,0,0,32,17,0,0,0,0,0,0,10,215,163,60,0,0,0,0,0,0,0,0,176,43,0,0,136,0,0,0,137,0,0,0,22,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,54,0,0,0,17,0,0,0,4,0,0,0,1,0,0,0,32,0,0,0,10,0,0,0,2,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,17,0,0,0,37,0,0,0,2,0,0,0,26,0,0,0,10,0,0,0,26,0,0,0,19,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,50,51,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,83,104,97,112,101,0,0,0,0,0,0,0,0,57,0,0,144,43,0,0,32,28,0,0,0,0,0,0,0,0,0,0,40,44,0,0,138,0,0,0,139,0,0,0,20,0,0,0,1,0,0,0,50,53,98,116,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,0,57,0,0,216,43,0,0,0,47,0,0,0,0,0,0,50,56,98,116,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,57,0,0,8,44,0,0,0,47,0,0,0,0,0,0,0,0,0,0,216,44,0,0,140,0,0,0,141,0,0,0,27,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,54,0,0,0,17,0,0,0,5,0,0,0,43,0,0,0,32,0,0,0,10,0,0,0,2,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,17,0,0,0,38,0,0,0,2,0,0,0,28,0,0,0,10,0,0,0,44,0,0,0,39,0,0,0,8,0,0,0,45,0,0,0,46,0,0,0,29,0,0,0,40,0,0,0,47,0,0,0,30,0,0,0,2,0,0,0,31,0,0,0,49,53,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,0,0,0,0,0,0,0,0,57,0,0,192,44,0,0,176,43,0,0,0,0,0,0,84,114,105,97,110,103,108,101,0,0,0,0,0,0,0,0,0,0,0,0,96,45,0,0,142,0,0,0,143,0,0,0,41,0,0,0,55,0,0,0,105,115,108,97,110,100,85,110,105,111,110,70,105,110,100,65,110,100,81,117,105,99,107,83,111,114,116,0,0,0,0,0,112,114,111,99,101,115,115,73,115,108,97,110,100,115,0,0,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,0,0,0,0,0,216,56,0,0,64,45,0,0,0,0,0,0,224,45,0,0,144,0,0,0,145,0,0,0,32,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,54,0,0,0,17,0,0,0,6,0,0,0,48,0,0,0,32,0,0,0,11,0,0,0,3,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,42,0,0,0,43,0,0,0,2,0,0,0,33,0,0,0,10,0,0,0,26,0,0,0,19,0,0,0,0,0,0,0,49,51,98,116,83,112,104,101,114,101,83,104,97,112,101,0,0,57,0,0,208,45,0,0,32,28,0,0,0,0,0,0,0,0,0,0,56,46,0,0,146,0,0,0,147,0,0,0,6,0,0,0,2,0,0,0,56,0,0,0,0,0,0,0,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,57,0,0,16,46,0,0,168,47,0,0,0,0,0,0,0,0,0,0,144,46,0,0,148,0,0,0,149,0,0,0,7,0,0,0,3,0,0,0,57,0,0,0,0,0,0,0,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,57,0,0,104,46,0,0,168,47,0,0,0,0,0,0,0,0,0,0,216,46,0,0,150,0,0,0,151,0,0,0,3,0,0,0,0,0,0,0,50,50,98,116,83,117,98,115,105,109,112,108,101,120,67,111,110,118,101,120,67,97,115,116,0,0,0,0,0,0,0,0,0,57,0,0,184,46,0,0,0,28,0,0,0,0,0,0,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,216,56,0,0,232,46,0,0,51,49,98,116,73,110,116,101,114,110,97,108,84,114,105,97,110,103,108,101,73,110,100,101,120,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,216,56,0,0,8,47,0,0,0,0,0,0,112,47,0,0,152,0,0,0,153,0,0,0,8,0,0,0,0,0,0,0,50,50,83,112,104,101,114,101,84,114,105,97,110,103,108,101,68,101,116,101,99,116,111,114,0,0,0,0,0,0,0,0,0,57,0,0,80,47,0,0,160,35,0,0,0,0,0,0,51,48,98,116,65,99,116,105,118,97,116,105,110,103,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,0,0,57,0,0,128,47,0,0,96,34,0,0,0,0,0,0,0,0,0,0,248,47,0,0,154,0,0,0,155,0,0,0,9,0,0,0,4,0,0,0,58,0,0,0,0,0,0,0,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,57,0,0,216,47,0,0,168,47,0,0,0,0,0,0,0,0,0,0,56,48,0,0,156,0,0,0,157,0,0,0,10,0,0,0,0,0,0,0,49,54,98,116,66,111,120,66,111,120,68,101,116,101,99,116,111,114,0,0,0,0,0,0,0,57,0,0,32,48,0,0,160,35,0,0,0,0,0,0,50,49,98,116,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,216,56,0,0,72,48,0,0,0,0,0,0,248,48,0,0,158,0,0,0,159,0,0,0,44,0,0,0,0,0,0,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,55,112,101,114,102,111,114,109,67,111,110,118,101,120,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,83,52,95,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,0,57,0,0,128,48,0,0,96,48,0,0,0,0,0,0,0,0,0,0,136,49,0,0,160,0,0,0,161,0,0,0,45,0,0,0,0,0,0,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,52,112,101,114,102,111,114,109,82,97,121,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,57,0,0,32,49,0,0,96,48,0,0,0,0,0,0,0,0,0,0,216,49,0,0,162,0,0,0,163,0,0,0,11,0,0,0,5,0,0,0,59,0,0,0,0,0,0,0,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,57,0,0,184,49,0,0,168,47,0,0,0,0,0,0,0,0,0,0,48,50,0,0,164,0,0,0,165,0,0,0,20,0,0,0,60,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,50,50,98,116,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,0,57,0,0,16,50,0,0,168,24,0,0,0,0,0,0,0,0,0,0,136,50,0,0,166,0,0,0,167,0,0,0,12,0,0,0,6,0,0,0,61,0,0,0,0,0,0,0,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,57,0,0,96,50,0,0,168,47,0,0,0,0,0,0,0,0,0,0,232,50,0,0,168,0,0,0,169,0,0,0,46,0,0,0,62,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,51,48,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,0,57,0,0,192,50,0,0,168,24,0,0,0,0,0,0,0,0,0,0,88,51,0,0,170,0,0,0,171,0,0,0,13,0,0,0,7,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,136,51,0,0,172,0,0,0,173,0,0,0,34,0,0,0,0,0,0,0,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,57,0,0,48,51,0,0,168,47,0,0,0,0,0,0,50,52,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,57,0,0,104,51,0,0,0,47,0,0,0,0,0,0,0,0,0,0,80,52,0,0,174,0,0,0,175,0,0,0,35,0,0,0,0,0,0,0,90,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,57,0,0,176,51,0,0,0,47,0,0,0,0,0,0,0,0,0,0,240,52,0,0,176,0,0,0,177,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,184,52,0,0,178,0,0,0,179,0,0,0,14,0,0,0,8,0,0,0,64,0,0,0,0,0,0,0,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,0,57,0,0,152,52,0,0,168,47,0,0,0,0,0,0,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,57,0,0,200,52,0,0,152,30,0,0,0,0,0,0,0,0,0,0,64,53,0,0,180,0,0,0,181,0,0,0,29,0,0,0,30,0,0,0,6,0,0,0,0,0,0,0,50,52,98,116,80,101,114,116,117,114,98,101,100,67,111,110,116,97,99,116,82,101,115,117,108,116,0,0,0,0,0,0,0,57,0,0,32,53,0,0,240,35,0,0,0,0,0,0,0,0,0,0,0,54,0,0,182,0,0,0,183,0,0,0,47,0,0,0,48,0,0,0,7,0,0,0,0,0,0,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,50,49,98,116,87,105,116,104,111,117,116,77,97,114,103,105,110,82,101,115,117,108,116,95,48,0,0,0,57,0,0,112,53,0,0,216,27,0,0,0,0,0,0,0,0,0,0,184,54,0,0,184,0,0,0,185,0,0,0,49,0,0,0,50,0,0,0,8,0,0,0,0,0,0,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,49,51,98,116,68,117,109,109,121,82,101,115,117,108,116,0,0,0,0,0,57,0,0,48,54,0,0,216,27,0,0,0,0,0,0,0,0,0,0,16,55,0,0,186,0,0,0,187,0,0,0,15,0,0,0,9,0,0,0,65,0,0,0,0,0,0,0,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,0,57,0,0,232,54,0,0,96,34,0,0,0,0,0,0,0,0,0,0,72,55,0,0,188,0,0,0,189,0,0,0,49,56,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,0,0,0,0,216,56,0,0,48,55,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,55,0,0,190,0,0,0,191,0,0,0,16,0,0,0,17,0,0,0,49,0,0,0,0,0,0,0,50,51,98,116,72,97,115,104,101,100,83,105,109,112,108,101,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,216,56,0,0,168,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,111,111,116,0,0,0,0,8,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,216,56,0,0,72,56,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,0,57,0,0,96,56,0,0,88,56,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,57,0,0,152,56,0,0,136,56,0,0,0,0,0,0,0,0,0,0,192,56,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,18,0,0,0,4,0,0,0,16,0,0,0,36,0,0,0,0,0,0,0,72,57,0,0,192,0,0,0,196,0,0,0,194,0,0,0,195,0,0,0,18,0,0,0,5,0,0,0,17,0,0,0,37,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,57,0,0,32,57,0,0,192,56,0,0,0,0,0,0,0,0,0,0,168,57,0,0,192,0,0,0,197,0,0,0,194,0,0,0,195,0,0,0,18,0,0,0,6,0,0,0,18,0,0,0,38,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,57,0,0,128,57,0,0,192,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,59,0,0,198,0,0,0,199,0,0,0,50,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,0,57,0,0,216,59,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  var _cosf=Math_cos;

   
  Module["_i64Subtract"] = _i64Subtract;

  var _fabsf=Math_abs;

  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;


  function _abort() {
      Module['abort']();
    }

  var _acosf=Math_acos;

   
  Module["_strlen"] = _strlen;

  var _sqrtf=Math_sqrt;

   
  Module["_i64Add"] = _i64Add;

  var _llvm_pow_f32=Math_pow;

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = Math.floor(idx / this.chunkSize);
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(xhr.response || []);
              } else {
                return intArrayFromString(xhr.responseText || '', true);
              }
            });
            var lazyArray = this;
            lazyArray.setDataGetter(function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
              return lazyArray.chunks[chunkNum];
            });
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
          function pointerLockChange() {
            Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                  document['mozPointerLockElement'] === canvas ||
                                  document['webkitPointerLockElement'] === canvas ||
                                  document['msPointerLockElement'] === canvas;
          }
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodf=_fmod;

  var _atan2f=Math_atan2;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _llvm_trap() {
      abort('trap!');
    }

  function ___cxa_guard_release() {}

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((ptr)+(4))>>2)]=Math.floor((now-1000*Math.floor(now/1000))*1000); // microseconds
      return 0;
    }

  function _emscripten_asm_const_double(code) {
      var args = Array.prototype.slice.call(arguments, 1);
      return +Runtime.getAsmConst(code, args.length).apply(null, args);
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  var _sinf=Math_sin;

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function __ZNSt9exceptionD2Ev() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

   
  Module["_memmove"] = _memmove;

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___errno_location() {
      return ___errno_state;
    }


  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _UItoF=true;

  var __ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiidii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiidii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_iiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viidi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viidi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viddiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viddiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vidii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidi(index,a1,a2,a3) {
  try {
    Module["dynCall_vidi"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_diiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiddddiid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    Module["dynCall_viiiiddddiid"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_diiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiid(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiidii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_diiidii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viidii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viidii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_diiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiid(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_diiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_did(index,a1,a2) {
  try {
    return Module["dynCall_did"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiidddddidi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  try {
    Module["dynCall_viiiidddddidi"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diidii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_diidii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_diiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iidid(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iidid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.__ZTISt9exception|0;var p=env.___dso_handle|0;var q=0;var r=0;var s=0;var t=0;var u=+env.NaN,v=+env.Infinity;var w=0,x=0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0.0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=global.Math.floor;var Q=global.Math.abs;var R=global.Math.sqrt;var S=global.Math.pow;var T=global.Math.cos;var U=global.Math.sin;var V=global.Math.tan;var W=global.Math.acos;var X=global.Math.asin;var Y=global.Math.atan;var Z=global.Math.atan2;var _=global.Math.exp;var $=global.Math.log;var aa=global.Math.ceil;var ba=global.Math.imul;var ca=env.abort;var da=env.assert;var ea=env.asmPrintInt;var fa=env.asmPrintFloat;var ga=env.min;var ha=env.invoke_viiiii;var ia=env.invoke_vid;var ja=env.invoke_vi;var ka=env.invoke_viiidii;var la=env.invoke_vii;var ma=env.invoke_iiiiiiiiiii;var na=env.invoke_ii;var oa=env.invoke_viidi;var pa=env.invoke_viddiii;var qa=env.invoke_vidii;var ra=env.invoke_iiiii;var sa=env.invoke_vidi;var ta=env.invoke_diiiiiiii;var ua=env.invoke_viiiiddddiid;var va=env.invoke_diiiii;var wa=env.invoke_iiii;var xa=env.invoke_viiiiii;var ya=env.invoke_iiid;var za=env.invoke_di;var Aa=env.invoke_iiiiiii;var Ba=env.invoke_diiidii;var Ca=env.invoke_viidii;var Da=env.invoke_viiiiiiiii;var Ea=env.invoke_viiiiiiiiii;var Fa=env.invoke_iii;var Ga=env.invoke_diii;var Ha=env.invoke_diiiiiiiiii;var Ia=env.invoke_viiiid;var Ja=env.invoke_diiiiiiiii;var Ka=env.invoke_did;var La=env.invoke_viiiidddddidi;var Ma=env.invoke_diidii;var Na=env.invoke_diiii;var Oa=env.invoke_iiiiiiiiii;var Pa=env.invoke_viiid;var Qa=env.invoke_viii;var Ra=env.invoke_v;var Sa=env.invoke_viid;var Ta=env.invoke_iidid;var Ua=env.invoke_viiii;var Va=env._cosf;var Wa=env.__ZSt9terminatev;var Xa=env._fmod;var Ya=env.___cxa_guard_acquire;var Za=env.___cxa_is_number_type;var _a=env._atan2f;var $a=env.___cxa_find_matching_catch;var ab=env._fflush;var bb=env.___cxa_guard_release;var cb=env._time;var db=env._emscripten_asm_const_double;var eb=env.___setErrNo;var fb=env._fabsf;var gb=env._sbrk;var hb=env._llvm_pow_f32;var ib=env.___cxa_begin_catch;var jb=env._sinf;var kb=env.___resumeException;var lb=env.__ZSt18uncaught_exceptionv;var mb=env._sysconf;var nb=env._acosf;var ob=env._emscripten_memcpy_big;var pb=env._sqrtf;var qb=env.___errno_location;var rb=env.__ZNSt9exceptionD2Ev;var sb=env.___cxa_does_inherit;var tb=env.__exit;var ub=env._abort;var vb=env.___cxa_throw;var wb=env.___cxa_allocate_exception;var xb=env._gettimeofday;var yb=env._atexit;var zb=env._llvm_trap;var Ab=env._exit;var Bb=env.___cxa_pure_virtual;var Cb=0.0;
// EMSCRIPTEN_START_FUNCS
function vi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;f=b+4|0;h=c[f>>2]|0;if(!((h|0)<=(d|0)&(h|0)<(d|0))){c[f>>2]=d;i=g;return}j=b+8|0;if((c[j>>2]|0)<(d|0)){if((d|0)==0){l=0;m=h}else{c[3580]=(c[3580]|0)+1;k=vr((d<<4|3)+16|0)|0;if((k|0)==0){l=0}else{l=k+19&-16;c[l+ -4>>2]=k}m=c[f>>2]|0}k=b+12|0;if((m|0)>0){n=0;do{o=c[k>>2]|0;c[l+(n<<4)>>2]=c[o+(n<<4)>>2];c[l+(n<<4)+4>>2]=c[o+(n<<4)+4>>2];c[l+(n<<4)+8>>2]=c[o+(n<<4)+8>>2];c[l+(n<<4)+12>>2]=c[o+(n<<4)+12>>2];n=n+1|0}while((n|0)!=(m|0))}m=c[k>>2]|0;b=b+16|0;if((m|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[k>>2]=0}a[b]=1;c[k>>2]=l;c[j>>2]=d}else{k=b+12|0}b=e+4|0;j=e+8|0;l=e+12|0;do{o=c[k>>2]|0;c[o+(h<<4)>>2]=c[e>>2];c[o+(h<<4)+4>>2]=c[b>>2];c[o+(h<<4)+8>>2]=c[j>>2];c[o+(h<<4)+12>>2]=c[l>>2];h=h+1|0}while((h|0)!=(d|0));c[f>>2]=d;i=g;return}function wi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;e=a+12|0;while(1){n=(b+d|0)/2|0;k=c[e>>2]|0;h=c[k+(n<<4)>>2]|0;g=c[k+(n<<4)+4>>2]|0;n=c[k+(n<<4)+8>>2]|0;m=(h|0)==0;j=(g|0)==0;o=g+12|0;l=h+12|0;r=b;t=d;while(1){a:while(1){q=c[k+(r<<4)>>2]|0;if((q|0)==0){w=-1}else{w=c[q+12>>2]|0}if(m){s=-1}else{s=c[l>>2]|0}p=c[k+(r<<4)+4>>2]|0;if((p|0)==0){u=-1}else{u=c[p+12>>2]|0}if(j){v=-1}else{v=c[o>>2]|0}do{if((w|0)<=(s|0)){y=(q|0)==(h|0);s=y&(u|0)>(v|0);if(s|y^1){if(s){break}else{break a}}if((p|0)!=(g|0)){break a}if(!((c[k+(r<<4)+8>>2]|0)>>>0>n>>>0)){break a}}}while(0);r=r+1|0}b:do{if(m){s=t;while(1){u=c[k+(s<<4)>>2]|0;t=(u|0)==0;if(t){w=-1}else{w=c[u+12>>2]|0}if(j){x=-1}else{x=c[o>>2]|0}u=c[k+(s<<4)+4>>2]|0;if((u|0)==0){v=-1}else{v=c[u+12>>2]|0}do{if(!((w|0)<-1)){v=t&(x|0)>(v|0);if(v|t^1){if(v){break}else{break b}}if((g|0)!=(u|0)){break b}if(!(n>>>0>(c[k+(s<<4)+8>>2]|0)>>>0)){break b}}}while(0);s=s+ -1|0}}else{s=c[l>>2]|0;u=t;while(1){y=c[k+(u<<4)>>2]|0;if((y|0)==0){v=-1}else{v=c[y+12>>2]|0}if(j){w=-1}else{w=c[o>>2]|0}t=c[k+(u<<4)+4>>2]|0;if((t|0)==0){x=-1}else{x=c[t+12>>2]|0}do{if((s|0)<=(v|0)){y=(h|0)==(y|0);v=y&(w|0)>(x|0);if(v|y^1){if(v){break}else{s=u;break b}}if((g|0)!=(t|0)){s=u;break b}if(!(n>>>0>(c[k+(u<<4)+8>>2]|0)>>>0)){s=u;break b}}}while(0);u=u+ -1|0}}}while(0);if((r|0)<=(s|0)){y=k+(r<<4)|0;w=c[k+(r<<4)+8>>2]|0;x=c[k+(r<<4)+12>>2]|0;v=k+(s<<4)|0;c[y+0>>2]=c[v+0>>2];c[y+4>>2]=c[v+4>>2];c[y+8>>2]=c[v+8>>2];c[y+12>>2]=c[v+12>>2];y=c[e>>2]|0;c[y+(s<<4)>>2]=q;c[y+(s<<4)+4>>2]=p;c[y+(s<<4)+8>>2]=w;c[y+(s<<4)+12>>2]=x;r=r+1|0;s=s+ -1|0}if((r|0)>(s|0)){break}k=c[e>>2]|0;t=s}if((s|0)>(b|0)){wi(a,b,s)}if((r|0)<(d|0)){b=r}else{break}}i=f;return}function xi(a,c,d,e,f,h){a=a|0;c=c|0;d=+d;e=+e;f=+f;h=h|0;var j=0,k=0;j=i;d=(d- +g[a+8>>2])*+g[a+40>>2];e=(e- +g[a+12>>2])*+g[a+44>>2];f=(f- +g[a+16>>2])*+g[a+48>>2];do{if(!(d<=0.0)){k=b[a+6>>1]|0;if(!(d>=+(k&65535|0))){k=b[a+4>>1]&(~~d&65535)&65535|h;break}else{k=b[a+4>>1]&k&65535|h;break}}else{k=h}}while(0);b[c>>1]=k;do{if(!(e<=0.0)){k=b[a+6>>1]|0;if(!(e>=+(k&65535|0))){k=b[a+4>>1]&(~~e&65535)&65535|h;break}else{k=b[a+4>>1]&k&65535|h;break}}else{k=h}}while(0);b[c+2>>1]=k;if(f<=0.0){h=h&65535;k=c+4|0;b[k>>1]=h;i=j;return}k=b[a+6>>1]|0;if(!(f>=+(k&65535|0))){h=b[a+4>>1]&(~~f&65535)&65535|h;h=h&65535;k=c+4|0;b[k>>1]=h;i=j;return}else{h=b[a+4>>1]&k&65535|h;h=h&65535;k=c+4|0;b[k>>1]=h;i=j;return}}function yi(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;t=c[a+(d<<2)+68>>2]|0;s=f&65535;w=t+(s<<2)|0;u=t+(s+ -1<<2)|0;m=a+60|0;v=c[m>>2]|0;s=e[t+(s<<2)+2>>1]|0;t=b[u>>1]|0;if(!((e[w>>1]|0)<(t&65535))){i=h;return}q=v+(s<<6)+(d<<1)+48|0;f=1<<d&3;o=1<<f&3;p=v+(s<<6)+(f<<1)+54|0;n=v+(s<<6)+(f<<1)+48|0;k=v+(s<<6)+(o<<1)+54|0;l=v+(s<<6)+(o<<1)+48|0;r=a+92|0;s=v+(s<<6)|0;a=a+96|0;while(1){x=e[u+2>>1]|0;if((t&1)==0){x=v+(x<<6)+(d<<1)+48|0;b[x>>1]=(b[x>>1]|0)+1<<16>>16}else{if(((((e[p>>1]|0)>=(e[v+(x<<6)+(f<<1)+48>>1]|0)?(e[v+(x<<6)+(f<<1)+54>>1]|0)>=(e[n>>1]|0):0)?(e[k>>1]|0)>=(e[v+(x<<6)+(o<<1)+48>>1]|0):0)?(e[v+(x<<6)+(o<<1)+54>>1]|0)>=(e[l>>1]|0):0)?(g=c[r>>2]|0,j=v+(x<<6)|0,Sb[c[(c[g>>2]|0)+8>>2]&31](g,s,j)|0,g=c[a>>2]|0,(g|0)!=0):0){Sb[c[(c[g>>2]|0)+8>>2]&31](g,s,j)|0}x=v+(x<<6)+(d<<1)+54|0;b[x>>1]=(b[x>>1]|0)+1<<16>>16}b[q>>1]=(b[q>>1]|0)+ -1<<16>>16;t=e[w>>1]|e[w+2>>1]<<16;x=e[u>>1]|e[u+2>>1]<<16;b[w>>1]=x;b[w+2>>1]=x>>>16;b[u>>1]=t;b[u+2>>1]=t>>>16;w=w+ -4|0;u=u+ -4|0;t=b[u>>1]|0;if(!((e[w>>1]|0)<(t&65535))){break}v=c[m>>2]|0}i=h;return}function zi(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;l=i;p=c[a+(d<<2)+68>>2]|0;q=f&65535;t=p+(q<<2)|0;r=p+(q+ -1<<2)|0;f=a+60|0;s=b[r>>1]|0;if(!((e[t>>1]|0)<(s&65535))){i=l;return}u=c[f>>2]|0;n=1<<d&3;m=1<<n&3;o=a+92|0;a=a+96|0;p=u+((e[p+(q<<2)+2>>1]|0)<<6)+(d<<1)+54|0;q=u;while(1){u=e[r+2>>1]|0;if((s&1)==0){s=e[t+2>>1]|0;if(((((e[q+(s<<6)+(n<<1)+54>>1]|0)>=(e[q+(u<<6)+(n<<1)+48>>1]|0)?(e[q+(u<<6)+(n<<1)+54>>1]|0)>=(e[q+(s<<6)+(n<<1)+48>>1]|0):0)?(e[q+(s<<6)+(m<<1)+54>>1]|0)>=(e[q+(u<<6)+(m<<1)+48>>1]|0):0)?(e[q+(u<<6)+(m<<1)+54>>1]|0)>=(e[q+(s<<6)+(m<<1)+48>>1]|0):0)?(k=c[o>>2]|0,j=q+(s<<6)|0,h=q+(u<<6)|0,Nb[c[(c[k>>2]|0)+12>>2]&15](k,j,h,g)|0,k=c[a>>2]|0,(k|0)!=0):0){Nb[c[(c[k>>2]|0)+12>>2]&15](k,j,h,g)|0}u=q+(u<<6)+(d<<1)+48|0;b[u>>1]=(b[u>>1]|0)+1<<16>>16}else{u=q+(u<<6)+(d<<1)+54|0;b[u>>1]=(b[u>>1]|0)+1<<16>>16}b[p>>1]=(b[p>>1]|0)+ -1<<16>>16;s=e[t>>1]|e[t+2>>1]<<16;u=e[r>>1]|e[r+2>>1]<<16;b[t>>1]=u;b[t+2>>1]=u>>>16;b[r>>1]=s;b[r+2>>1]=s>>>16;t=t+ -4|0;r=r+ -4|0;s=b[r>>1]|0;if(!((e[t>>1]|0)<(s&65535))){break}q=c[f>>2]|0}i=l;return}function Ai(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;c[b>>2]=3560;e=b+108|0;if((c[e>>2]|0)!=0){f=b+112|0;g=c[f>>2]|0;Fb[c[c[g>>2]>>2]&255](g);f=c[f>>2]|0;if((f|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0)}g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}}e=c[b+88>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=c[b+84>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=c[b+80>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=c[b+60>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}if((a[b+100|0]|0)==0){i=d;return}b=b+92|0;g=c[b>>2]|0;Fb[c[c[g>>2]>>2]&255](g);b=c[b>>2]|0;if((b|0)==0){i=d;return}c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0);i=d;return}function Bi(a){a=a|0;var b=0;b=i;Ai(a);i=b;return}function Ci(a){a=a|0;var b=0;b=i;Ai(a);if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Di(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;g=i;c[b>>2]=3624;f=b+8|0;e=b+16|0;h=c[e>>2]|0;d=b+20|0;if((h|0)!=0){if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[e>>2]=0}a[d]=1;c[e>>2]=0;c[f>>2]=0;c[b+12>>2]=0;i=g;return}function Ei(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=3624;e=c[b+16>>2]|0;if((e|0)!=0){if((a[b+20|0]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}if((b|0)==0){i=d;return}}wr(b);i=d;return}function Fi(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Gi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function Hi(a,b,c){a=a|0;b=b|0;c=c|0;return}function Ii(a){a=a|0;return c[a+16>>2]|0}function Ji(a){a=a|0;return c[a+16>>2]|0}function Ki(a){a=a|0;return a+4|0}function Li(a,b,c){a=a|0;b=b|0;c=c|0;return}function Mi(a){a=a|0;return 0}function Ni(a,b,c){a=a|0;b=b|0;c=c|0;return}function Oi(a,b){a=a|0;b=b|0;return}function Pi(a,b,c){a=a|0;b=b|0;c=c|0;return}function Qi(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Ri(a){a=a|0;return 1}function Si(a,b){a=a|0;b=b|0;return}function Ti(a,b){a=a|0;b=b|0;return}function Ui(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;f=i;o=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);s=o+ +g[a+28>>2];q=o+ +g[a+32>>2];o=o+ +g[a+36>>2];w=+Q(+(+g[b>>2]));v=+Q(+(+g[b+4>>2]));n=+Q(+(+g[b+8>>2]));u=+Q(+(+g[b+16>>2]));t=+Q(+(+g[b+20>>2]));l=+Q(+(+g[b+24>>2]));r=+Q(+(+g[b+32>>2]));p=+Q(+(+g[b+36>>2]));j=+Q(+(+g[b+40>>2]));m=+g[b+48>>2];k=+g[b+52>>2];h=+g[b+56>>2];n=s*w+q*v+o*n;l=s*u+q*t+o*l;j=s*r+q*p+o*j;g[d>>2]=m-n;g[d+4>>2]=k-l;g[d+8>>2]=h-j;g[d+12>>2]=0.0;g[e>>2]=n+m;g[e+4>>2]=l+k;g[e+8>>2]=j+h;g[e+12>>2]=0.0;i=f;return}function Vi(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;l=+g[a+28>>2];h=+g[a+32>>2];j=+g[a+36>>2];f=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);k=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);f=(l+f)*2.0;k=(h+k)*2.0;j=(j+ +Vb[c[(c[a>>2]|0)+48>>2]&3](a))*2.0;h=b/12.0;b=k*k;j=j*j;f=f*f;g[d>>2]=h*(b+j);g[d+4>>2]=h*(f+j);g[d+8>>2]=h*(f+b);g[d+12>>2]=0.0;i=e;return}function Wi(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=11024;d=a+52|0;a=c[d>>2]|0;if((a|0)==0){i=b;return}Fb[c[c[a>>2]>>2]&255](a);a=c[d>>2]|0;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Xi(a){a=a|0;var b=0,d=0,e=0;b=i;c[a>>2]=11024;d=a+52|0;e=c[d>>2]|0;if((e|0)!=0){Fb[c[c[e>>2]>>2]&255](e);d=c[d>>2]|0;if((d|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0)}if((a|0)==0){i=b;return}}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Yi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0;d=i;p=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);l=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);f=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);o=a+28|0;k=a+32|0;e=a+36|0;u=a+12|0;r=(p+ +g[o>>2])/+g[u>>2];t=a+16|0;n=(l+ +g[k>>2])/+g[t>>2];s=a+20|0;j=(f+ +g[e>>2])/+g[s>>2];q=+Q(+(+g[b>>2]));m=+Q(+(+g[b+4>>2]));h=+Q(+(+g[b+8>>2]));g[u>>2]=q;g[t>>2]=m;g[s>>2]=h;g[a+24>>2]=0.0;g[o>>2]=r*q-p;g[k>>2]=n*m-l;g[e>>2]=j*h-f;g[a+40>>2]=0.0;i=d;return}function Zi(a){a=a|0;return 3992}function _i(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0;d=i;m=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);j=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);n=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);k=a+28|0;m=m+ +g[k>>2];f=a+32|0;j=j+ +g[f>>2];e=a+36|0;n=n+ +g[e>>2];g[a+44>>2]=b;l=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);h=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);b=n- +Vb[c[(c[a>>2]|0)+48>>2]&3](a);g[k>>2]=m-l;g[f>>2]=j-h;g[e>>2]=b;g[a+40>>2]=0.0;i=d;return}function $i(a){a=a|0;return+(+g[a+44>>2])}function aj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;l=+g[b+28>>2];k=+g[b+32>>2];h=+g[b+36>>2];f=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);j=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);f=l+f;j=k+j;h=h+ +Vb[c[(c[b>>2]|0)+48>>2]&3](b);j=+g[d+4>>2]>=0.0?j:-j;h=+g[d+8>>2]>=0.0?h:-h;g[a>>2]=+g[d>>2]>=0.0?f:-f;g[a+4>>2]=j;g[a+8>>2]=h;g[a+12>>2]=0.0;i=e;return}function bj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;d=+g[b+28>>2];e=+g[b+32>>2];e=+g[c+4>>2]>=0.0?e:-e;f=+g[b+36>>2];f=+g[c+8>>2]>=0.0?f:-f;g[a>>2]=+g[c>>2]>=0.0?d:-d;g[a+4>>2]=e;g[a+8>>2]=f;g[a+12>>2]=0.0;return}function cj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0;f=i;if((d|0)<=0){i=f;return}h=a+28|0;e=a+32|0;a=a+36|0;j=0;do{k=+g[h>>2];l=+g[e>>2];l=+g[b+(j<<4)+4>>2]>=0.0?l:-l;m=+g[a>>2];m=+g[b+(j<<4)+8>>2]>=0.0?m:-m;g[c+(j<<4)>>2]=+g[b+(j<<4)>>2]>=0.0?k:-k;g[c+(j<<4)+4>>2]=l;g[c+(j<<4)+8>>2]=m;g[c+(j<<4)+12>>2]=0.0;j=j+1|0}while((j|0)!=(d|0));i=f;return}function dj(a){a=a|0;return 6}function ej(a,b,c){a=a|0;b=b|0;c=c|0;a=i;switch(b|0){case 3:{g[c>>2]=0.0;g[c+4>>2]=-1.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 1:{g[c>>2]=-1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 2:{g[c>>2]=0.0;g[c+4>>2]=1.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 0:{g[c>>2]=1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 5:{g[c>>2]=0.0;g[c+4>>2]=0.0;g[c+8>>2]=-1.0;g[c+12>>2]=0.0;i=a;return};case 4:{g[c>>2]=0.0;g[c+4>>2]=0.0;g[c+8>>2]=1.0;g[c+12>>2]=0.0;i=a;return};default:{i=a;return}}}function fj(a){a=a|0;return 8}function gj(a){a=a|0;return 12}function hj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;switch(b|0){case 1:{g=0;b=2;break};case 0:{g=0;b=1;break};case 8:{g=4;b=5;break};case 4:{g=0;break};case 6:{g=2;break};case 5:{g=1;break};case 2:{g=1;b=3;break};case 7:{g=3;break};case 3:{g=2;break};case 10:{g=5;b=7;break};case 11:{g=6;b=7;break};case 9:{g=4;b=6;break};default:{g=0;b=0}}kc[c[(c[a>>2]|0)+108>>2]&63](a,g,d);kc[c[(c[a>>2]|0)+108>>2]&63](a,b,e);i=f;return}function ij(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0,k=0.0,l=0,m=0.0,n=0.0;e=i;n=+g[a+28>>2];m=+g[a+32>>2];f=+g[a+36>>2];k=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);h=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);k=n+k;h=m+h;f=f+ +Vb[c[(c[a>>2]|0)+48>>2]&3](a);l=b&1;j=b>>>1&1;a=b>>>2&1;g[d>>2]=+(l^1|0)*k- +(l|0)*k;g[d+4>>2]=+(j^1|0)*h- +(j|0)*h;g[d+8>>2]=+(a^1|0)*f- +(a|0)*f;g[d+12>>2]=0.0;i=e;return}function jj(a){a=a|0;return 6}function kj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0;f=i;i=i+48|0;n=f+32|0;h=f+16|0;j=f;kc[c[(c[a>>2]|0)+124>>2]&63](a,n,e);m=+g[n>>2];l=+g[n+4>>2];k=+g[n+8>>2];g[b>>2]=m;g[b+4>>2]=l;g[b+8>>2]=k;g[b+12>>2]=0.0;e=c[(c[a>>2]|0)+64>>2]|0;g[j>>2]=-m;g[j+4>>2]=-l;g[j+8>>2]=-k;g[j+12>>2]=0.0;kc[e&63](h,a,j);c[d+0>>2]=c[h+0>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];i=f;return}function lj(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;d=i;f=+g[a+28>>2];e=+g[a+32>>2];l=+g[a+36>>2];k=+g[b>>2];if((((k<=f+c?k>=-f-c:0)?(j=+g[b+4>>2],j<=e+c):0)?j>=-e-c:0)?(h=+g[b+8>>2],h<=l+c):0){b=h>=-l-c}else{b=0}i=d;return b|0}function mj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0;d=i;f=+g[a+28>>2];e=+g[a+32>>2];h=+g[a+36>>2];switch(c|0){case 3:{g[b>>2]=0.0;g[b+4>>2]=-1.0;g[b+8>>2]=0.0;g[b+12>>2]=-e;i=d;return};case 1:{g[b>>2]=-1.0;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=-f;i=d;return};case 2:{g[b>>2]=0.0;g[b+4>>2]=1.0;g[b+8>>2]=0.0;g[b+12>>2]=-e;i=d;return};case 0:{g[b>>2]=1.0;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=-f;i=d;return};case 5:{g[b>>2]=0.0;g[b+4>>2]=0.0;g[b+8>>2]=-1.0;g[b+12>>2]=-h;i=d;return};case 4:{g[b>>2]=0.0;g[b+4>>2]=0.0;g[b+8>>2]=1.0;g[b+12>>2]=-h;i=d;return};default:{i=d;return}}}function nj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0;j=i;i=i+32|0;q=j+16|0;k=j;e=a+4|0;f=a+8|0;h=a+12|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;l=+g[d>>2];m=+g[d+4>>2];n=+g[d+8>>2];o=l*l+m*m+n*n;if(o<9999999747378752.0e-20){l=1.0;m=0.0;n=0.0}else{v=1.0/+R(+o);l=l*v;m=m*v;n=n*v}d=b+52|0;y=c[d>>2]|0;o=+g[b+(((y+2|0)%3|0)<<2)+28>>2];x=q+4|0;w=q+8|0;z=b+(y<<2)+28|0;c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;g[q+(y<<2)>>2]=+g[z>>2];p=l*o;r=m*o;o=n*o;s=p+ +g[q>>2];v=r+ +g[x>>2];t=o+ +g[w>>2];u=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);s=s-l*u;v=v-m*u;u=t-n*u;t=n*u+(l*s+m*v);if(t>-999999984306749400.0){g[a>>2]=s;g[e>>2]=v;g[f>>2]=u;g[h>>2]=0.0;s=t}else{s=-999999984306749400.0}y=k+4|0;z=k+8|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;x=c[d>>2]|0;g[k+(x<<2)>>2]=-+g[b+(x<<2)+28>>2];u=p+ +g[k>>2];p=r+ +g[y>>2];v=o+ +g[z>>2];r=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);o=u-l*r;p=p-m*r;r=v-n*r;if(!(n*r+(l*o+m*p)>s)){i=j;return}g[a>>2]=o;g[e>>2]=p;g[f>>2]=r;g[h>>2]=0.0;i=j;return}function oj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0;p=i;i=i+32|0;j=p+16|0;k=p;f=a+52|0;r=c[f>>2]|0;h=+g[a+(((r+2|0)%3|0)<<2)+28>>2];if((e|0)<=0){i=p;return}n=j+4|0;o=j+8|0;l=k+4|0;m=k+8|0;q=0;while(1){t=a+(r<<2)+28|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;g[j+(r<<2)>>2]=+g[t>>2];t=b+(q<<4)|0;s=b+(q<<4)+4|0;r=b+(q<<4)+8|0;x=h*+g[t>>2]+ +g[j>>2];A=h*+g[s>>2]+ +g[n>>2];u=h*+g[r>>2]+ +g[o>>2];z=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);y=+g[t>>2];w=+g[s>>2];v=+g[r>>2];x=x-z*y;A=A-z*w;z=u-z*v;u=y*x+w*A+v*z;if(u>-999999984306749400.0){g[d+(q<<4)>>2]=x;g[d+(q<<4)+4>>2]=A;g[d+(q<<4)+8>>2]=z;g[d+(q<<4)+12>>2]=0.0;y=+g[t>>2];w=+g[s>>2];v=+g[r>>2]}else{u=-999999984306749400.0}c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;D=c[f>>2]|0;g[k+(D<<2)>>2]=-+g[a+(D<<2)+28>>2];x=h*y+ +g[k>>2];C=h*w+ +g[l>>2];B=h*v+ +g[m>>2];w=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);y=+g[t>>2];z=+g[s>>2];A=+g[r>>2];x=x-w*y;v=C-w*z;w=B-w*A;if(y*x+z*v+A*w>u){g[d+(q<<4)>>2]=x;g[d+(q<<4)+4>>2]=v;g[d+(q<<4)+8>>2]=w;g[d+(q<<4)+12>>2]=0.0}q=q+1|0;if((q|0)==(e|0)){break}r=c[f>>2]|0}i=p;return}function pj(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;m=e;o=c[a+52>>2]|0;h=+g[a+(((o+2|0)%3|0)<<2)+28>>2];g[m>>2]=h;l=m+4|0;g[l>>2]=h;k=m+8|0;g[k>>2]=h;g[m+12>>2]=0.0;n=m+(o<<2)|0;g[n>>2]=+g[a+(o<<2)+28>>2]+ +g[n>>2];h=(+g[m>>2]+.03999999910593033)*2.0;f=(+g[l>>2]+.03999999910593033)*2.0;j=(+g[k>>2]+.03999999910593033)*2.0;h=h*h;f=f*f;j=j*j;b=b*.0833333283662796;g[d>>2]=b*(f+j);g[d+4>>2]=b*(h+j);g[d+8>>2]=b*(h+f);i=e;return}function qj(a){a=a|0;return}function rj(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function sj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0;f=i;i=i+16|0;z=f;A=c[a+52>>2]|0;p=+g[a+(((A+2|0)%3|0)<<2)+28>>2];g[z>>2]=p;y=z+4|0;g[y>>2]=p;x=z+8|0;g[x>>2]=p;g[z+12>>2]=0.0;g[z+(A<<2)>>2]=p+ +g[a+(A<<2)+28>>2];p=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);h=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);s=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);p=p+ +g[z>>2];g[z>>2]=p;h=h+ +g[y>>2];g[y>>2]=h;s=s+ +g[x>>2];v=+Q(+(+g[b>>2]));m=+Q(+(+g[b+4>>2]));w=+Q(+(+g[b+8>>2]));t=+Q(+(+g[b+16>>2]));k=+Q(+(+g[b+20>>2]));u=+Q(+(+g[b+24>>2]));q=+Q(+(+g[b+32>>2]));o=+Q(+(+g[b+36>>2]));r=+Q(+(+g[b+40>>2]));n=+g[b+48>>2];l=+g[b+52>>2];j=+g[b+56>>2];m=s*w+(v*p+m*h);k=s*u+(t*p+k*h);h=s*r+(q*p+o*h);g[d>>2]=n-m;g[d+4>>2]=l-k;g[d+8>>2]=j-h;g[d+12>>2]=0.0;g[e>>2]=n+m;g[e+4>>2]=l+k;g[e+8>>2]=j+h;g[e+12>>2]=0.0;i=f;return}function tj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0;d=i;p=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);l=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);f=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);o=a+28|0;k=a+32|0;e=a+36|0;u=a+12|0;r=(p+ +g[o>>2])/+g[u>>2];t=a+16|0;n=(l+ +g[k>>2])/+g[t>>2];s=a+20|0;j=(f+ +g[e>>2])/+g[s>>2];q=+Q(+(+g[b>>2]));m=+Q(+(+g[b+4>>2]));h=+Q(+(+g[b+8>>2]));g[u>>2]=q;g[t>>2]=m;g[s>>2]=h;g[a+24>>2]=0.0;g[o>>2]=r*q-p;g[k>>2]=n*m-l;g[e>>2]=j*h-f;g[a+40>>2]=0.0;i=d;return}function uj(a){a=a|0;return 4168}function vj(a,b){a=a|0;b=b|0;var d=0;d=i;b=b+52|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;g[a+(c[b>>2]<<2)>>2]=1.0;i=d;return}function wj(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0;d=i;m=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);j=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);n=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);k=a+28|0;m=m+ +g[k>>2];f=a+32|0;j=j+ +g[f>>2];e=a+36|0;n=n+ +g[e>>2];g[a+44>>2]=b;l=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);h=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);b=n- +Vb[c[(c[a>>2]|0)+48>>2]&3](a);g[k>>2]=m-l;g[f>>2]=j-h;g[e>>2]=b;g[a+40>>2]=0.0;i=d;return}function xj(a){a=a|0;return 60}function yj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=$b[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=$b[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Hb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+52>>2];i=e;return 4144}function zj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0;e=i;i=i+80|0;f=e+56|0;h=e+32|0;j=e;k=c[c[a>>2]>>2]|0;l=c[c[a+4>>2]>>2]|0;if(!(Sb[c[(c[b>>2]|0)+24>>2]&31](b,k,l)|0)){i=e;return}m=c[k+192>>2]|0;c[f>>2]=0;c[f+4>>2]=m;c[f+8>>2]=k;c[f+12>>2]=k+4;c[f+16>>2]=-1;c[f+20>>2]=-1;m=c[l+192>>2]|0;c[h>>2]=0;c[h+4>>2]=m;c[h+8>>2]=l;c[h+12>>2]=l+4;c[h+16>>2]=-1;c[h+20>>2]=-1;a=a+8|0;m=c[a>>2]|0;if((m|0)==0){m=Nb[c[(c[b>>2]|0)+8>>2]&15](b,f,h,0)|0;c[a>>2]=m;if((m|0)==0){i=e;return}}c[j>>2]=9152;c[j+4>>2]=0;c[j+8>>2]=f;c[j+12>>2]=h;if((c[d+8>>2]|0)==1){Db[c[(c[m>>2]|0)+8>>2]&31](m,f,h,d,j);i=e;return}n=+Rb[c[(c[m>>2]|0)+12>>2]&15](m,k,l,d,j);d=d+12|0;if(!(+g[d>>2]>n)){i=e;return}g[d>>2]=n;i=e;return}function Aj(a){a=a|0;return}function Bj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=4200;e=b+12|0;f=b+20|0;h=c[f>>2]|0;g=b+24|0;if((h|0)==0){a[g]=1;c[f>>2]=0;c[e>>2]=0;c[b+16>>2]=0;wr(b);i=d;return}if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}a[g]=1;c[f>>2]=0;c[e>>2]=0;c[b+16>>2]=0;wr(b);i=d;return}function Cj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;g=i;c[b>>2]=4200;f=b+12|0;e=b+20|0;h=c[e>>2]|0;d=b+24|0;if((h|0)!=0){if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[e>>2]=0}a[d]=1;c[e>>2]=0;c[f>>2]=0;c[b+16>>2]=0;i=g;return}function Dj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0.0,p=0,q=0,r=0.0;f=i;i=i+16|0;k=f+4|0;m=f;c[1046]=(c[1046]|0)+1;j=b+4|0;if((c[j>>2]&2|0)==0){k=11008}else{q=c[d+192>>2]|0;o=+ec[c[(c[q>>2]|0)+20>>2]&1](q,.019999999552965164);g[k>>2]=o;q=c[e+192>>2]|0;r=+ec[c[(c[q>>2]|0)+20>>2]&1](q,.019999999552965164);g[m>>2]=r;k=o<r?k:m}l=+g[k>>2];o=+g[d+184>>2];r=+g[e+184>>2];o=o<r?o:r;k=c[b+68>>2]|0;n=k+8|0;m=c[n>>2]|0;if((m|0)==0){if((c[j>>2]&4|0)!=0){q=0;i=f;return q|0}c[3580]=(c[3580]|0)+1;j=vr(791)|0;if((j|0)==0){j=0}else{q=j+19&-16;c[q+ -4>>2]=j;j=q}}else{q=k+12|0;j=c[q>>2]|0;c[q>>2]=c[j>>2];c[n>>2]=m+ -1}c[j>>2]=1025;c[j+116>>2]=0;a[j+120|0]=0;n=j+124|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;c[j+300>>2]=0;a[j+304|0]=0;n=j+308|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;c[j+484>>2]=0;a[j+488|0]=0;n=j+492|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;c[j+668>>2]=0;a[j+672|0]=0;n=j+676|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;c[j+740>>2]=d;c[j+744>>2]=e;c[j+748>>2]=0;g[j+752>>2]=l;g[j+756>>2]=o;d=b+12|0;c[j+768>>2]=c[d>>2];n=c[d>>2]|0;e=b+16|0;if((n|0)==(c[e>>2]|0)?(h=(n|0)==0?1:n<<1,(n|0)<(h|0)):0){if((h|0)==0){k=0}else{c[3580]=(c[3580]|0)+1;k=vr((h<<2|3)+16|0)|0;if((k|0)==0){k=0}else{q=k+19&-16;c[q+ -4>>2]=k;k=q}n=c[d>>2]|0}m=b+20|0;if((n|0)>0){p=0;do{q=k+(p<<2)|0;if((q|0)!=0){c[q>>2]=c[(c[m>>2]|0)+(p<<2)>>2]}p=p+1|0}while((p|0)!=(n|0))}q=c[m>>2]|0;p=b+24|0;if((q|0)!=0){if((a[p]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0);n=c[d>>2]|0}c[m>>2]=0}a[p]=1;c[m>>2]=k;c[e>>2]=h}b=(c[b+20>>2]|0)+(n<<2)|0;if((b|0)!=0){c[b>>2]=j}c[d>>2]=n+1;q=j;i=f;return q|0}function Ej(a,b){a=a|0;b=b|0;var d=0,e=0;a=i;b=b+748|0;e=c[b>>2]|0;if((e|0)>0){d=0;do{d=d+1|0}while((d|0)<(e|0))}c[b>>2]=0;i=a;return}function Fj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;c[1046]=(c[1046]|0)+ -1;Hb[c[(c[a>>2]|0)+20>>2]&127](a,b);f=c[b+768>>2]|0;e=a+12|0;h=(c[e>>2]|0)+ -1|0;g=a+20|0;l=c[g>>2]|0;k=l+(f<<2)|0;j=c[k>>2]|0;c[k>>2]=c[l+(h<<2)>>2];c[(c[g>>2]|0)+(h<<2)>>2]=j;c[(c[(c[g>>2]|0)+(f<<2)>>2]|0)+768>>2]=f;c[e>>2]=(c[e>>2]|0)+ -1;a=c[a+68>>2]|0;if((b|0)==0){i=d;return}e=c[a+16>>2]|0;if(!(e>>>0>b>>>0)?(e+(ba(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){l=a+12|0;c[b>>2]=c[l>>2];c[l>>2]=b;l=a+8|0;c[l>>2]=(c[l>>2]|0)+1;i=d;return}c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0);i=d;return}function Gj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=a;c[g+4>>2]=e;e=c[a+((c[(c[b+4>>2]|0)+4>>2]|0)*144|0)+(c[(c[d+4>>2]|0)+4>>2]<<2)+72>>2]|0;e=Nb[c[(c[e>>2]|0)+8>>2]&15](e,g,b,d)|0;i=f;return e|0}function Hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=i;b=c[b+204>>2]|0;if((b&4|0)==0?(e=c[d+204>>2]|0,(e&4|0)==0):0){if((b&3|0)==0){d=1}else{d=(e&3|0)==0}}else{d=0}i=a;return d|0}function Ij(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=i;e=c[b+216>>2]|0;if((e|0)==2|(e|0)==5?(e=c[d+216>>2]|0,(e|0)==2|(e|0)==5):0){b=0}else{if((c[b+256>>2]|0)==0){b=1}else{b=$b[c[c[b>>2]>>2]&31](b,d)|0}}i=a;return b|0}function Jj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=4312;c[g+4>>2]=d;c[g+8>>2]=a;kc[c[(c[b>>2]|0)+48>>2]&63](b,g,e);i=f;return}function Kj(a){a=a|0;return}function Lj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;f=c[a+64>>2]|0;a=f+8|0;e=c[a>>2]|0;if((e|0)!=0){b=f+12|0;f=c[b>>2]|0;c[b>>2]=c[f>>2];c[a>>2]=e+ -1;i=d;return f|0}c[3580]=(c[3580]|0)+1;b=vr(b+19|0)|0;if((b|0)==0){f=0;i=d;return f|0}f=b+19&-16;c[f+ -4>>2]=b;i=d;return f|0}function Mj(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=c[a+64>>2]|0;if((b|0)==0){i=d;return}e=c[a+16>>2]|0;if(!(e>>>0>b>>>0)?(e+(ba(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){e=a+12|0;c[b>>2]=c[e>>2];c[e>>2]=b;e=a+8|0;c[e>>2]=(c[e>>2]|0)+1;i=d;return}c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0);i=d;return}function Nj(a){a=a|0;return c[a+12>>2]|0}function Oj(a,b){a=a|0;b=b|0;return c[(c[a+20>>2]|0)+(b<<2)>>2]|0}function Pj(a){a=a|0;if((c[a+12>>2]|0)==0){a=0}else{a=c[a+20>>2]|0}return a|0}function Qj(a){a=a|0;return c[a+68>>2]|0}function Rj(a){a=a|0;return c[a+68>>2]|0}function Sj(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Tj(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a+8>>2]|0;kc[c[e+60>>2]&63](b,e,c[a+4>>2]|0);i=d;return 0}function Uj(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Vj(a,b,d){a=a|0;b=b|0;d=d|0;c[a+16>>2]=b;c[a+24>>2]=d;return}function Wj(a,b,d){a=a|0;b=b|0;d=d|0;c[a+20>>2]=b;c[a+28>>2]=d;return}function Xj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0;e=i;g[b+16>>2]=+g[a+4>>2];g[b+20>>2]=+g[a+8>>2];g[b+24>>2]=+g[a+12>>2];g[b+28>>2]=+g[a+16>>2];g[b+32>>2]=+g[a+20>>2];g[b+36>>2]=+g[a+24>>2];g[b+40>>2]=+g[a+28>>2];g[b+44>>2]=+g[a+32>>2];g[b+48>>2]=+g[a+36>>2];g[b+52>>2]=+g[a+40>>2];g[b+56>>2]=+g[a+44>>2];g[b+60>>2]=+g[a+48>>2];g[b+64>>2]=+g[a+52>>2];g[b+68>>2]=+g[a+56>>2];g[b+72>>2]=+g[a+60>>2];g[b+76>>2]=+g[a+64>>2];g[b+80>>2]=+g[a+68>>2];g[b+84>>2]=+g[a+72>>2];g[b+88>>2]=+g[a+76>>2];g[b+92>>2]=+g[a+80>>2];g[b+96>>2]=+g[a+84>>2];g[b+100>>2]=+g[a+88>>2];g[b+104>>2]=+g[a+92>>2];g[b+108>>2]=+g[a+96>>2];g[b+112>>2]=+g[a+100>>2];g[b+116>>2]=+g[a+104>>2];g[b+120>>2]=+g[a+108>>2];g[b+124>>2]=+g[a+112>>2];g[b+128>>2]=+g[a+116>>2];g[b+132>>2]=+g[a+120>>2];g[b+136>>2]=+g[a+124>>2];g[b+140>>2]=+g[a+128>>2];g[b+144>>2]=+g[a+132>>2];g[b+148>>2]=+g[a+136>>2];g[b+152>>2]=+g[a+140>>2];g[b+156>>2]=+g[a+144>>2];g[b+160>>2]=+g[a+148>>2];g[b+164>>2]=+g[a+152>>2];g[b+168>>2]=+g[a+156>>2];g[b+172>>2]=+g[a+160>>2];g[b+176>>2]=+g[a+164>>2];g[b+180>>2]=+g[a+168>>2];g[b+184>>2]=+g[a+172>>2];g[b+188>>2]=+g[a+176>>2];c[b+224>>2]=c[a+180>>2];g[b+192>>2]=+g[a+184>>2];c[b>>2]=0;c[b+4>>2]=$b[c[(c[d>>2]|0)+28>>2]&31](d,c[a+192>>2]|0)|0;c[b+8>>2]=0;c[b+228>>2]=c[a+204>>2];c[b+232>>2]=c[a+208>>2];c[b+236>>2]=c[a+212>>2];c[b+240>>2]=c[a+216>>2];g[b+196>>2]=+g[a+220>>2];g[b+200>>2]=+g[a+224>>2];g[b+204>>2]=+g[a+232>>2];g[b+208>>2]=+g[a+228>>2];c[b+244>>2]=c[a+236>>2];f=$b[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=$b[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b+12>>2]=h;if((h|0)==0){d=a+244|0;j=+g[d>>2];d=b+212|0;g[d>>2]=j;d=a+248|0;j=+g[d>>2];d=b+216|0;g[d>>2]=j;d=a+252|0;j=+g[d>>2];d=b+220|0;g[d>>2]=j;d=a+256|0;d=c[d>>2]|0;h=b+248|0;c[h>>2]=d;i=e;return 4408}Hb[c[(c[d>>2]|0)+48>>2]&127](d,f);d=a+244|0;j=+g[d>>2];d=b+212|0;g[d>>2]=j;d=a+248|0;j=+g[d>>2];d=b+216|0;g[d>>2]=j;d=a+252|0;j=+g[d>>2];d=b+220|0;g[d>>2]=j;d=a+256|0;d=c[d>>2]|0;h=b+248|0;c[h>>2]=d;i=e;return 4408}function Yj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+96|0;s=e+32|0;q=e+16|0;r=e;g[s>>2]=1.0;t=s+4|0;u=s+20|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;g[u>>2]=1.0;u=s+24|0;t=s+40|0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;g[t>>2]=1.0;t=s+44|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;oc[c[(c[a>>2]|0)+8>>2]&63](a,s,q,r);l=+g[r>>2];m=+g[q>>2];p=l-m;j=+g[r+4>>2];k=+g[q+4>>2];o=j-k;f=+g[r+8>>2];h=+g[q+8>>2];n=f-h;g[d>>2]=+R(+(p*p+o*o+n*n))*.5;g[b>>2]=(m+l)*.5;g[b+4>>2]=(k+j)*.5;g[b+8>>2]=(h+f)*.5;g[b+12>>2]=0.0;i=e;return}function Zj(a,b){a=a|0;b=+b;var d=0;d=i;b=+Vb[c[(c[a>>2]|0)+16>>2]&3](a)*b;i=d;return+b}function _j(a){a=a|0;var b=0,d=0.0,e=0,f=0.0,h=0.0,j=0;e=i;i=i+32|0;j=e+8|0;b=e;kc[c[(c[a>>2]|0)+12>>2]&63](a,j,b);h=+g[j>>2];f=+g[j+4>>2];d=+g[j+8>>2];d=+R(+(h*h+f*f+d*d));i=e;return+(d+ +g[b>>2])}function $j(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;f=Jb[c[(c[a>>2]|0)+52>>2]&63](a)|0;f=Sb[c[(c[b>>2]|0)+16>>2]&31](b,f,1)|0;e=Sb[c[(c[a>>2]|0)+56>>2]&31](a,c[f+8>>2]|0,b)|0;Db[c[(c[b>>2]|0)+20>>2]&31](b,f,e,1346455635,a);i=d;return}function ak(a){a=a|0;var b=0;b=i;bk(a);if((a|0)!=0){wr(a)}i=b;return}function bk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;c[b>>2]=4512;f=b+8|0;j=c[f>>2]|0;d=b+16|0;k=c[d>>2]|0;if((j|0)>0){h=b+68|0;g=b+24|0;l=0;do{m=(c[k+(l<<2)>>2]|0)+188|0;n=c[m>>2]|0;if((n|0)!=0){j=c[h>>2]|0;j=Jb[c[(c[j>>2]|0)+36>>2]&63](j)|0;kc[c[(c[j>>2]|0)+40>>2]&63](j,n,c[g>>2]|0);j=c[h>>2]|0;kc[c[(c[j>>2]|0)+12>>2]&63](j,n,c[g>>2]|0);c[m>>2]=0;j=c[f>>2]|0;k=c[d>>2]|0}l=l+1|0}while((l|0)<(j|0))}g=b+20|0;if((k|0)==0){a[g]=1;c[d>>2]=0;c[f>>2]=0;n=b+12|0;c[n>>2]=0;i=e;return}if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0)}c[d>>2]=0;a[g]=1;c[d>>2]=0;c[f>>2]=0;n=b+12|0;c[n>>2]=0;i=e;return}function ck(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;k=i;i=i+96|0;g=k+32|0;h=k+16|0;j=k;l=b+8|0;q=c[l>>2]|0;n=b+12|0;if((q|0)==(c[n>>2]|0)?(m=(q|0)==0?1:q<<1,(q|0)<(m|0)):0){if((m|0)==0){o=0}else{c[3580]=(c[3580]|0)+1;o=vr((m<<2|3)+16|0)|0;if((o|0)==0){o=0}else{s=o+19&-16;c[s+ -4>>2]=o;o=s}q=c[l>>2]|0}p=b+16|0;if((q|0)>0){s=0;do{r=o+(s<<2)|0;if((r|0)!=0){c[r>>2]=c[(c[p>>2]|0)+(s<<2)>>2]}s=s+1|0}while((s|0)!=(q|0))}s=c[p>>2]|0;r=b+20|0;if((s|0)!=0){if((a[r]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[s+ -4>>2]|0);q=c[l>>2]|0}c[p>>2]=0}a[r]=1;c[p>>2]=o;c[n>>2]=m}m=(c[b+16>>2]|0)+(q<<2)|0;if((m|0)!=0){c[m>>2]=d}c[l>>2]=q+1;s=d+4|0;c[g+0>>2]=c[s+0>>2];c[g+4>>2]=c[s+4>>2];c[g+8>>2]=c[s+8>>2];c[g+12>>2]=c[s+12>>2];s=g+16|0;r=d+20|0;c[s+0>>2]=c[r+0>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];s=g+32|0;r=d+36|0;c[s+0>>2]=c[r+0>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];s=g+48|0;r=d+52|0;c[s+0>>2]=c[r+0>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];s=d+192|0;r=c[s>>2]|0;oc[c[(c[r>>2]|0)+8>>2]&63](r,g,h,j);r=c[b+68>>2]|0;c[d+188>>2]=ic[c[(c[r>>2]|0)+8>>2]&3](r,h,j,c[(c[s>>2]|0)+4>>2]|0,d,e,f,c[b+24>>2]|0,0)|0;i=k;return}function dk(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0;d=i;i=i+64|0;e=d+48|0;h=d+32|0;j=d+16|0;k=d;dr(4792);n=b+8|0;M=c[n>>2]|0;if((M|0)>0){p=b+16|0;f=b+76|0;t=e+4|0;u=e+8|0;s=h+4|0;r=h+8|0;q=b+44|0;o=b+68|0;m=b+72|0;A=b+24|0;B=j+4|0;v=j+8|0;w=k+4|0;x=k+8|0;C=e+12|0;b=j+12|0;z=h+12|0;y=k+12|0;D=0;do{E=c[(c[p>>2]|0)+(D<<2)>>2]|0;if(!((a[f]|0)==0?(N=c[E+216>>2]|0,(N|0)==2|(N|0)==5):0)){M=E+192|0;N=c[M>>2]|0;oc[c[(c[N>>2]|0)+8>>2]&63](N,E+4|0,e,h);F=+g[e>>2]+-.019999999552965164;g[e>>2]=F;G=+g[t>>2]+-.019999999552965164;g[t>>2]=G;J=+g[u>>2]+-.019999999552965164;g[u>>2]=J;K=+g[h>>2]+.019999999552965164;g[h>>2]=K;I=+g[s>>2]+.019999999552965164;g[s>>2]=I;H=+g[r>>2]+.019999999552965164;g[r>>2]=H;if(((a[q]|0)!=0?(c[E+236>>2]|0)==2:0)?(c[E+204>>2]&3|0)==0:0){N=c[M>>2]|0;oc[c[(c[N>>2]|0)+8>>2]&63](N,E+68|0,j,k);F=+g[j>>2]+-.019999999552965164;g[j>>2]=F;G=+g[B>>2]+-.019999999552965164;g[B>>2]=G;J=+g[v>>2]+-.019999999552965164;g[v>>2]=J;K=+g[k>>2]+.019999999552965164;g[k>>2]=K;I=+g[w>>2]+.019999999552965164;g[w>>2]=I;H=+g[x>>2]+.019999999552965164;g[x>>2]=H;L=+g[e>>2];if(F<L){g[e>>2]=F}else{F=L}L=+g[t>>2];if(G<L){g[t>>2]=G}else{G=L}L=+g[u>>2];if(J<L){g[u>>2]=J}else{J=L}L=+g[b>>2];if(L<+g[C>>2]){g[C>>2]=L}L=+g[h>>2];if(L<K){g[h>>2]=K}else{K=L}L=+g[s>>2];if(L<I){g[s>>2]=I}else{I=L}L=+g[r>>2];if(L<H){g[r>>2]=H}else{H=L}L=+g[y>>2];if(+g[z>>2]<L){g[z>>2]=L}}M=c[o>>2]|0;if((c[E+204>>2]&1|0)==0?(F=K-F,K=I-G,L=H-J,!(F*F+K*K+L*L<999999995904.0)):0){E=E+216|0;if(!(((c[E>>2]|0)+ -4|0)>>>0<2)){c[E>>2]=5}if((a[4568]|0)!=0?(l=c[m>>2]|0,(l|0)!=0):0){a[4568]=0;Hb[c[(c[l>>2]|0)+36>>2]&127](l,4576);N=c[m>>2]|0;Hb[c[(c[N>>2]|0)+36>>2]&127](N,4632);N=c[m>>2]|0;Hb[c[(c[N>>2]|0)+36>>2]&127](N,4704);N=c[m>>2]|0;Hb[c[(c[N>>2]|0)+36>>2]&127](N,4776)}}else{Db[c[(c[M>>2]|0)+16>>2]&31](M,c[E+188>>2]|0,e,h,c[A>>2]|0)}M=c[n>>2]|0}D=D+1|0}while((D|0)<(M|0))}h=c[3598]|0;f=h+16|0;N=(c[f>>2]|0)+ -1|0;c[f>>2]=N;if((N|0)!=0){i=d;return}do{if((c[h+4>>2]|0)!=0){xb(e|0,0)|0;M=c[3584]|0;N=h+8|0;g[N>>2]=+(((c[e+4>>2]|0)-(c[M+4>>2]|0)+(((c[e>>2]|0)-(c[M>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[N>>2];if((c[f>>2]|0)==0){h=c[3598]|0;break}else{i=d;return}}}while(0);c[3598]=c[h+20>>2];i=d;return}function ek(a){a=a|0;var b=0,d=0,e=0,f=0,h=0;b=i;i=i+16|0;d=b;dr(4808);e=c[a+68>>2]|0;Hb[c[(c[e>>2]|0)+32>>2]&127](e,c[a+24>>2]|0);a=c[3598]|0;e=a+16|0;f=(c[e>>2]|0)+ -1|0;c[e>>2]=f;if((f|0)!=0){i=b;return}do{if((c[a+4>>2]|0)!=0){xb(d|0,0)|0;h=c[3584]|0;f=a+8|0;g[f>>2]=+(((c[d+4>>2]|0)-(c[h+4>>2]|0)+(((c[d>>2]|0)-(c[h>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3+ +g[f>>2];if((c[e>>2]|0)==0){a=c[3598]|0;break}else{i=b;return}}}while(0);c[3598]=c[a+20>>2];i=b;return}function fk(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0;b=i;i=i+16|0;d=b;dr(4840);Fb[c[(c[a>>2]|0)+8>>2]&255](a);Fb[c[(c[a>>2]|0)+12>>2]&255](a);e=a+24|0;f=c[e>>2]|0;dr(4880);if((f|0)!=0){j=c[(c[f>>2]|0)+32>>2]|0;h=c[a+68>>2]|0;h=Jb[c[(c[h>>2]|0)+36>>2]&63](h)|0;oc[j&63](f,h,a+28|0,c[e>>2]|0)}f=c[3598]|0;e=f+16|0;j=(c[e>>2]|0)+ -1|0;c[e>>2]=j;do{if((j|0)==0){if((c[f+4>>2]|0)!=0){xb(d|0,0)|0;h=c[3584]|0;j=f+8|0;g[j>>2]=+(((c[d+4>>2]|0)-(c[h+4>>2]|0)+(((c[d>>2]|0)-(c[h>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3+ +g[j>>2];f=c[3598]|0;if((c[e>>2]|0)!=0){break}}f=c[f+20>>2]|0;c[3598]=f}}while(0);e=f+16|0;j=(c[e>>2]|0)+ -1|0;c[e>>2]=j;if((j|0)!=0){i=b;return}do{if((c[f+4>>2]|0)!=0){xb(d|0,0)|0;h=c[3584]|0;j=f+8|0;g[j>>2]=+(((c[d+4>>2]|0)-(c[h+4>>2]|0)+(((c[d>>2]|0)-(c[h>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3+ +g[j>>2];if((c[e>>2]|0)==0){f=c[3598]|0;break}else{i=b;return}}}while(0);c[3598]=c[f+20>>2];i=b;return}function gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;g=b+188|0;f=c[g>>2]|0;if((f|0)!=0){k=a+68|0;j=c[k>>2]|0;j=Jb[c[(c[j>>2]|0)+36>>2]&63](j)|0;l=a+24|0;kc[c[(c[j>>2]|0)+40>>2]&63](j,f,c[l>>2]|0);k=c[k>>2]|0;kc[c[(c[k>>2]|0)+12>>2]&63](k,f,c[l>>2]|0);c[g>>2]=0}g=a+8|0;f=c[g>>2]|0;if((f|0)<=0){i=e;return}h=a+16|0;a=c[h>>2]|0;j=0;while(1){k=a+(j<<2)|0;l=j+1|0;if((c[k>>2]|0)==(b|0)){break}if((l|0)<(f|0)){j=l}else{d=9;break}}if((d|0)==9){i=e;return}if((j|0)>=(f|0)){i=e;return}l=f+ -1|0;c[k>>2]=c[a+(l<<2)>>2];c[(c[h>>2]|0)+(l<<2)>>2]=b;c[g>>2]=l;i=e;return}function hk(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0;j=i;i=i+1392|0;t=j+1328|0;u=j+1304|0;s=j+1272|0;n=j+1240|0;S=j+1184|0;N=j+1008|0;Q=j+648|0;O=j+632|0;P=j+616|0;L=j+584|0;F=j+568|0;I=j+552|0;H=j+432|0;G=j+312|0;C=j+192|0;B=j+176|0;E=j+160|0;k=j+128|0;M=j+64|0;K=j;c[S+8>>2]=0;g[S+12>>2]=1.0;g[S+16>>2]=1.0;g[S+20>>2]=1.0;g[S+24>>2]=0.0;c[S>>2]=11632;c[S+4>>2]=8;g[S+28>>2]=0.0;g[S+44>>2]=0.0;r=c[f+4>>2]|0;q=c[f+12>>2]|0;J=r+4|0;T=c[J>>2]|0;if((T|0)<20){c[N>>2]=6728;n=N+164|0;c[N+168>>2]=0;g[N+172>>2]=0.0;k=h+4|0;g[n>>2]=+g[k>>2];g[Q+308>>2]=9999999747378752.0e-20;a[Q+332|0]=0;c[O>>2]=11944;c[O+4>>2]=Q;c[O+8>>2]=S;c[O+12>>2]=r;c[P>>2]=8832;c[P+4>>2]=Q;c[P+8>>2]=S;c[P+12>>2]=r;T=(c[h+16>>2]&4|0)==0?P:O;if(!(Wb[c[(c[T>>2]|0)+8>>2]&3](T,d,e,q,q,N)|0)){i=j;return}r=N+132|0;m=+g[r>>2];q=N+136|0;l=+g[q>>2];s=N+140|0;o=+g[s>>2];p=m*m+l*l+o*o;if(!(p>9999999747378752.0e-20)){i=j;return}v=+g[n>>2];if(!(v<+g[k>>2])){i=j;return}Y=1.0/+R(+p);g[r>>2]=m*Y;g[q>>2]=l*Y;g[s>>2]=o*Y;c[L>>2]=c[f+8>>2];c[L+4>>2]=0;T=L+8|0;c[T+0>>2]=c[r+0>>2];c[T+4>>2]=c[r+4>>2];c[T+8>>2]=c[r+8>>2];c[T+12>>2]=c[r+12>>2];g[L+24>>2]=v;+ac[c[(c[h>>2]|0)+12>>2]&7](h,L,1);i=j;return}if((T+ -21|0)>>>0<9){k=q+16|0;M=q+32|0;Q=q+4|0;T=q+20|0;S=q+36|0;L=q+8|0;P=q+24|0;O=q+40|0;Z=+g[q>>2];A=+g[k>>2];z=+g[M>>2];U=+g[Q>>2];V=+g[T>>2];y=+g[S>>2];X=+g[L>>2];Y=+g[P>>2];x=+g[O>>2];N=q+48|0;v=-+g[N>>2];K=q+52|0;p=-+g[K>>2];n=q+56|0;W=-+g[n>>2];_=Z*v+A*p+z*W;D=U*v+V*p+y*W;W=X*v+Y*p+x*W;p=+g[d+48>>2];v=+g[d+52>>2];w=+g[d+56>>2];g[F>>2]=_+(Z*p+A*v+z*w);g[F+4>>2]=D+(U*p+V*v+y*w);g[F+8>>2]=W+(X*p+Y*v+x*w);g[F+12>>2]=0.0;l=+g[e+48>>2];m=+g[e+52>>2];o=+g[e+56>>2];z=_+(Z*l+A*m+z*o);y=D+(U*l+V*m+y*o);x=W+(X*l+Y*m+x*o);g[I>>2]=z;g[I+4>>2]=y;g[I+8>>2]=x;g[I+12>>2]=0.0;e=c[J>>2]|0;if((e|0)==25){S=c[f+8>>2]|0;T=c[h+16>>2]|0;Q=G+4|0;c[Q+0>>2]=c[F+0>>2];c[Q+4>>2]=c[F+4>>2];c[Q+8>>2]=c[F+8>>2];c[Q+12>>2]=c[F+12>>2];Q=G+20|0;c[Q+0>>2]=c[I+0>>2];c[Q+4>>2]=c[I+4>>2];c[Q+8>>2]=c[I+8>>2];c[Q+12>>2]=c[I+12>>2];c[G+36>>2]=T;T=G+40|0;g[T>>2]=1.0;c[G>>2]=6536;c[G+44>>2]=h;c[G+48>>2]=S;c[G+52>>2]=r;S=G+56|0;c[S+0>>2]=c[q+0>>2];c[S+4>>2]=c[q+4>>2];c[S+8>>2]=c[q+8>>2];c[S+12>>2]=c[q+12>>2];S=G+72|0;Q=q+16|0;c[S+0>>2]=c[Q+0>>2];c[S+4>>2]=c[Q+4>>2];c[S+8>>2]=c[Q+8>>2];c[S+12>>2]=c[Q+12>>2];S=G+88|0;Q=q+32|0;c[S+0>>2]=c[Q+0>>2];c[S+4>>2]=c[Q+4>>2];c[S+8>>2]=c[Q+8>>2];c[S+12>>2]=c[Q+12>>2];S=G+104|0;Q=q+48|0;c[S+0>>2]=c[Q+0>>2];c[S+4>>2]=c[Q+4>>2];c[S+8>>2]=c[Q+8>>2];c[S+12>>2]=c[Q+12>>2];g[T>>2]=+g[h+4>>2];oc[c[(c[r>>2]|0)+144>>2]&63](r,G,F,I);i=j;return}else if((e|0)==21){T=c[f+8>>2]|0;k=c[h+16>>2]|0;S=H+4|0;c[S+0>>2]=c[F+0>>2];c[S+4>>2]=c[F+4>>2];c[S+8>>2]=c[F+8>>2];c[S+12>>2]=c[F+12>>2];S=H+20|0;c[S+0>>2]=c[I+0>>2];c[S+4>>2]=c[I+4>>2];c[S+8>>2]=c[I+8>>2];c[S+12>>2]=c[I+12>>2];c[H+36>>2]=k;k=H+40|0;g[k>>2]=1.0;c[H>>2]=6536;c[H+44>>2]=h;c[H+48>>2]=T;c[H+52>>2]=r;T=H+56|0;c[T+0>>2]=c[q+0>>2];c[T+4>>2]=c[q+4>>2];c[T+8>>2]=c[q+8>>2];c[T+12>>2]=c[q+12>>2];T=H+72|0;S=q+16|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];T=H+88|0;S=q+32|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];T=H+104|0;S=q+48|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];g[k>>2]=+g[h+4>>2];k=c[r+48>>2]|0;c[s>>2]=12560;c[s+4>>2]=k;c[s+8>>2]=H;k=c[r+52>>2]|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;T=k+60|0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;if((a[T]|0)==0){Rq(k,s,F,z,y,x,t,u);i=j;return}else{Sq(k,s,F,z,y,x,t,u,c[k+56>>2]|0);i=j;return}}else{$=+g[q>>2];z=+g[k>>2];A=+g[M>>2];U=+g[Q>>2];V=+g[T>>2];W=+g[S>>2];Y=+g[L>>2];Z=+g[P>>2];_=+g[O>>2];y=-+g[N>>2];x=-+g[K>>2];X=-+g[n>>2];aa=$*y+z*x+A*X;D=U*y+V*x+W*X;X=Y*y+Z*x+_*X;x=aa+($*p+z*v+A*w);y=D+(U*p+V*v+W*w);p=X+(Y*p+Z*v+_*w);v=aa+($*l+z*m+A*o);w=D+(U*l+V*m+W*o);l=X+(Y*l+Z*m+_*o);k=c[f+8>>2]|0;n=c[h+16>>2]|0;g[C+4>>2]=x;g[C+8>>2]=y;g[C+12>>2]=p;g[C+16>>2]=0.0;g[C+20>>2]=v;g[C+24>>2]=w;g[C+28>>2]=l;g[C+32>>2]=0.0;c[C+36>>2]=n;n=C+40|0;g[n>>2]=1.0;c[C>>2]=6344;c[C+44>>2]=h;c[C+48>>2]=k;c[C+52>>2]=r;k=C+56|0;c[k+0>>2]=c[q+0>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[k+12>>2]=c[q+12>>2];k=C+72|0;T=q+16|0;c[k+0>>2]=c[T+0>>2];c[k+4>>2]=c[T+4>>2];c[k+8>>2]=c[T+8>>2];c[k+12>>2]=c[T+12>>2];k=C+88|0;T=q+32|0;c[k+0>>2]=c[T+0>>2];c[k+4>>2]=c[T+4>>2];c[k+8>>2]=c[T+8>>2];c[k+12>>2]=c[T+12>>2];k=C+104|0;T=q+48|0;c[k+0>>2]=c[T+0>>2];c[k+4>>2]=c[T+4>>2];c[k+8>>2]=c[T+8>>2];c[k+12>>2]=c[T+12>>2];g[n>>2]=+g[h+4>>2];g[B>>2]=x;n=B+4|0;g[n>>2]=y;k=B+8|0;g[k>>2]=p;g[B+12>>2]=0.0;if(v<x){g[B>>2]=v}if(w<y){g[n>>2]=w}if(l<p){g[k>>2]=l}g[E>>2]=x;n=E+4|0;g[n>>2]=y;k=E+8|0;g[k>>2]=p;g[E+12>>2]=0.0;if(x<v){g[E>>2]=v}if(y<w){g[n>>2]=w}if(p<l){g[k>>2]=l}oc[c[(c[r>>2]|0)+64>>2]&63](r,C,B,E);i=j;return}}if((T|0)!=31){i=j;return}H=c[r+64>>2]|0;C=c[f+8>>2]|0;c[k>>2]=6128;f=k+4|0;c[f>>2]=C;C=k+8|0;c[C>>2]=r;B=k+12|0;c[B>>2]=q;F=k+16|0;c[F>>2]=d;E=k+20|0;c[E>>2]=e;G=k+24|0;c[G>>2]=h;if((H|0)==0){L=c[r+16>>2]|0;if((L|0)<=0){i=j;return}M=u+4|0;N=u+8|0;O=u+12|0;k=u+16|0;n=u+20|0;h=s+4|0;e=s+8|0;d=s+12|0;H=s+14|0;I=s+16|0;J=s+20|0;K=s+24|0;P=0;while(1){T=c[r+24>>2]|0;S=c[T+(P*80|0)+64>>2]|0;Mf(t,q,T+(P*80|0)|0);T=c[f>>2]|0;c[u>>2]=0;c[M>>2]=S;c[N>>2]=T;c[O>>2]=t;c[k>>2]=-1;c[n>>2]=P;T=c[G>>2]|0;g[h>>2]=1.0;c[e>>2]=0;b[d>>1]=1;b[H>>1]=-1;c[I>>2]=0;c[s>>2]=5952;c[J>>2]=T;c[K>>2]=P;g[h>>2]=+g[T+4>>2];c[I>>2]=c[T+16>>2];hk(c[F>>2]|0,c[E>>2]|0,u,s);P=P+1|0;if((P|0)>=(L|0)){break}r=c[C>>2]|0;q=c[B>>2]|0}i=j;return}jk(M,q,d);v=+g[M+48>>2];w=+g[M+52>>2];x=+g[M+56>>2];jk(K,q,e);q=c[H>>2]|0;if((q|0)==0){i=j;return}U=+g[K+48>>2]-v;D=+g[K+52>>2]-w;X=+g[K+56>>2]-x;W=1.0/+R(+(U*U+D*D+X*X));V=U*W;Y=D*W;W=X*W;if(V==0.0){z=999999984306749400.0}else{z=1.0/V}if(Y==0.0){A=999999984306749400.0}else{A=1.0/Y}if(W==0.0){y=999999984306749400.0}else{y=1.0/W}s=z<0.0|0;u=A<0.0|0;f=y<0.0|0;D=V*U+Y*D+W*X;c[3580]=(c[3580]|0)+1;r=vr(531)|0;if((r|0)==0){G=0}else{G=r+19&-16;c[G+ -4>>2]=r}t=0;do{r=G+(t<<2)|0;if((r|0)!=0){c[r>>2]=0}t=t+1|0}while((t|0)!=128);c[G>>2]=q;q=n+16|0;r=n+(s<<4)|0;t=n+((s^1)<<4)|0;s=n+(u<<4)+4|0;u=n+((u^1)<<4)+4|0;h=n+(f<<4)+8|0;f=n+((f^1)<<4)+8|0;e=128;H=128;B=1;F=126;do{C=B+ -1|0;E=c[G+(C<<2)>>2]|0;c[n+0>>2]=c[E+0>>2];c[n+4>>2]=c[E+4>>2];c[n+8>>2]=c[E+8>>2];c[n+12>>2]=c[E+12>>2];T=E+16|0;c[q+0>>2]=c[T+0>>2];c[q+4>>2]=c[T+4>>2];c[q+8>>2]=c[T+8>>2];c[q+12>>2]=c[T+12>>2];U=z*(+g[r>>2]-v);W=z*(+g[t>>2]-v);V=A*(+g[s>>2]-w);X=A*(+g[u>>2]-w);do{if(((!(U>X|V>W)?(l=V>U?V:U,o=X<W?X:W,m=y*(+g[h>>2]-x),p=y*(+g[f>>2]-x),!(l>p|m>o)):0)?(m>l?m:l)<D:0)?(p<o?p:o)>0.0:0){d=E+40|0;if((c[d>>2]|0)==0){Hb[c[(c[k>>2]|0)+12>>2]&127](k,E);B=C;break}if((C|0)>(F|0)){F=e<<1;if((e|0)<(F|0)){if((H|0)<(F|0)){if((e|0)!=0){c[3580]=(c[3580]|0)+1;H=vr((e<<3|3)+16|0)|0;if((H|0)==0){H=0}else{T=H+19&-16;c[T+ -4>>2]=H;H=T}if((e|0)>0){I=0;do{J=H+(I<<2)|0;if((J|0)!=0){c[J>>2]=c[G+(I<<2)>>2]}I=I+1|0}while((I|0)!=(e|0))}}else{H=0}if((G|0)==0){G=H;H=F}else{c[3582]=(c[3582]|0)+1;wr(c[G+ -4>>2]|0);G=H;H=F}}do{I=G+(e<<2)|0;if((I|0)!=0){c[I>>2]=0}e=e+1|0}while((e|0)!=(F|0))}e=F;F=F+ -2|0}c[G+(C<<2)>>2]=c[E+36>>2];c[G+(B<<2)>>2]=c[d>>2];B=B+1|0}else{B=C}}while(0)}while((B|0)!=0);if((G|0)==0){i=j;return}c[3582]=(c[3582]|0)+1;wr(c[G+ -4>>2]|0);i=j;return}function ik(a){a=a|0;return}function jk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;j=+g[c+48>>2]- +g[b+48>>2];h=+g[c+52>>2]- +g[b+52>>2];e=+g[c+56>>2]- +g[b+56>>2];p=+g[b>>2];y=+g[c>>2];o=+g[b+16>>2];x=+g[c+16>>2];n=+g[b+32>>2];w=+g[c+32>>2];v=+g[c+4>>2];u=+g[c+20>>2];t=+g[c+36>>2];s=+g[c+8>>2];r=+g[c+24>>2];q=+g[c+40>>2];m=+g[b+4>>2];l=+g[b+20>>2];k=+g[b+36>>2];i=+g[b+8>>2];f=+g[b+24>>2];d=+g[b+40>>2];g[a>>2]=p*y+o*x+n*w;g[a+4>>2]=p*v+o*u+n*t;g[a+8>>2]=p*s+o*r+n*q;g[a+12>>2]=0.0;g[a+16>>2]=y*m+x*l+w*k;g[a+20>>2]=v*m+u*l+t*k;g[a+24>>2]=s*m+r*l+q*k;g[a+28>>2]=0.0;g[a+32>>2]=y*i+x*f+w*d;g[a+36>>2]=v*i+u*f+t*d;g[a+40>>2]=s*i+r*f+q*d;g[a+44>>2]=0.0;g[a+48>>2]=j*p+h*o+e*n;g[a+52>>2]=j*m+h*l+e*k;g[a+56>>2]=j*i+h*f+e*d;g[a+60>>2]=0.0;return}function kk(d,e,f,h,j,k){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0;l=i;i=i+1664|0;n=l+1600|0;y=l+1424|0;H=l+1064|0;I=l+1056|0;G=l+1032|0;x=l+984|0;B=l+968|0;E=l+904|0;F=l+680|0;C=l+664|0;D=l+648|0;w=l+472|0;J=l+448|0;z=l+400|0;A=l+336|0;u=l+112|0;t=l+96|0;s=l+80|0;r=l+64|0;v=l+48|0;o=l+24|0;p=l;q=c[h+4>>2]|0;m=c[h+12>>2]|0;K=c[q+4>>2]|0;if((K|0)<20){c[y>>2]=6728;n=y+164|0;c[y+168>>2]=0;g[y+172>>2]=k;o=j+4|0;g[n>>2]=+g[o>>2];g[H+308>>2]=9999999747378752.0e-20;a[H+332|0]=0;c[I>>2]=8896;c[G>>2]=6960;c[G+4>>2]=H;c[G+8>>2]=I;c[G+12>>2]=d;c[G+16>>2]=q;c[G+20>>2]=0;if(!(zl(G,e,f,m,m,y)|0)){i=l;return}d=y+132|0;ea=+g[d>>2];e=y+136|0;ga=+g[e>>2];m=y+140|0;k=+g[m>>2];fa=ea*ea+ga*ga+k*k;if(!(fa>9999999747378752.0e-20)){i=l;return}ha=+g[n>>2];if(!(ha<+g[o>>2])){i=l;return}la=1.0/+R(+fa);g[d>>2]=ea*la;g[e>>2]=ga*la;g[m>>2]=k*la;ca=y+148|0;c[x>>2]=c[h+8>>2];c[x+4>>2]=0;da=x+8|0;c[da+0>>2]=c[d+0>>2];c[da+4>>2]=c[d+4>>2];c[da+8>>2]=c[d+8>>2];c[da+12>>2]=c[d+12>>2];da=x+24|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];g[x+40>>2]=ha;+ac[c[(c[j>>2]|0)+12>>2]&7](j,x,1);i=l;return}if(!((K+ -21|0)>>>0<9)){if((K|0)!=31){i=l;return}dr(4912);r=q+16|0;if((c[r>>2]|0)>0){W=q+24|0;X=m+4|0;Y=m+8|0;Z=m+16|0;_=m+20|0;$=m+24|0;aa=m+32|0;ba=m+36|0;ca=m+40|0;da=m+48|0;U=m+52|0;T=m+56|0;S=n+4|0;Q=n+8|0;P=n+12|0;J=n+16|0;N=n+20|0;M=n+24|0;L=n+28|0;K=n+32|0;E=n+36|0;D=n+40|0;C=n+44|0;B=n+48|0;A=n+52|0;z=n+56|0;y=n+60|0;s=o+4|0;x=o+8|0;w=o+10|0;v=o+12|0;u=o+16|0;t=j+4|0;q=h+8|0;V=p+4|0;H=p+8|0;G=p+12|0;O=p+16|0;I=p+20|0;F=0;do{na=c[W>>2]|0;ua=+g[na+(F*80|0)>>2];ra=+g[na+(F*80|0)+4>>2];oa=+g[na+(F*80|0)+8>>2];ta=+g[na+(F*80|0)+16>>2];qa=+g[na+(F*80|0)+20>>2];fa=+g[na+(F*80|0)+24>>2];sa=+g[na+(F*80|0)+32>>2];pa=+g[na+(F*80|0)+36>>2];ha=+g[na+(F*80|0)+40>>2];Ca=+g[na+(F*80|0)+48>>2];Ba=+g[na+(F*80|0)+52>>2];la=+g[na+(F*80|0)+56>>2];na=c[na+(F*80|0)+64>>2]|0;Aa=+g[m>>2];za=+g[X>>2];ya=+g[Y>>2];xa=+g[Z>>2];wa=+g[_>>2];va=+g[$>>2];ea=+g[aa>>2];ga=+g[ba>>2];ia=+g[ca>>2];ja=Ca*Aa+Ba*za+la*ya+ +g[da>>2];ka=Ca*xa+Ba*wa+la*va+ +g[U>>2];la=Ca*ea+Ba*ga+la*ia+ +g[T>>2];g[n>>2]=ua*Aa+ta*za+sa*ya;g[S>>2]=ra*Aa+qa*za+pa*ya;g[Q>>2]=oa*Aa+fa*za+ha*ya;g[P>>2]=0.0;g[J>>2]=ua*xa+ta*wa+sa*va;g[N>>2]=ra*xa+qa*wa+pa*va;g[M>>2]=oa*xa+fa*wa+ha*va;g[L>>2]=0.0;g[K>>2]=ua*ea+ta*ga+sa*ia;g[E>>2]=ra*ea+qa*ga+pa*ia;g[D>>2]=oa*ea+fa*ga+ha*ia;g[C>>2]=0.0;g[B>>2]=ja;g[A>>2]=ka;g[z>>2]=la;g[y>>2]=0.0;b[x>>1]=1;b[w>>1]=-1;c[o>>2]=5312;c[v>>2]=j;c[u>>2]=F;g[s>>2]=+g[t>>2];ma=c[q>>2]|0;c[p>>2]=h;c[V>>2]=na;c[H>>2]=ma;c[G>>2]=n;c[O>>2]=-1;c[I>>2]=F;kk(d,e,f,p,o,k);F=F+1|0}while((F|0)<(c[r>>2]|0))}j=c[3598]|0;h=j+16|0;na=(c[h>>2]|0)+ -1|0;c[h>>2]=na;if((na|0)!=0){i=l;return}do{if((c[j+4>>2]|0)!=0){xb(n|0,0)|0;ma=c[3584]|0;na=j+8|0;g[na>>2]=+(((c[n+4>>2]|0)-(c[ma+4>>2]|0)+(((c[n>>2]|0)-(c[ma>>2]|0)|0)*1e6|0)-(c[j+12>>2]|0)|0)>>>0)/1.0e3+ +g[na>>2];if((c[h>>2]|0)==0){j=c[3598]|0;break}else{i=l;return}}}while(0);c[3598]=c[j+20>>2];i=l;return}if((K|0)==21){ja=+g[m>>2];ka=+g[m+16>>2];la=+g[m+32>>2];oa=+g[m+4>>2];pa=+g[m+20>>2];qa=+g[m+36>>2];xa=+g[m+8>>2];za=+g[m+24>>2];Ba=+g[m+40>>2];ra=-+g[m+48>>2];ga=-+g[m+52>>2];ta=-+g[m+56>>2];ea=ja*ra+ka*ga+la*ta;fa=oa*ra+pa*ga+qa*ta;ta=xa*ra+za*ga+Ba*ta;ga=+g[e+48>>2];ra=+g[e+52>>2];sa=+g[e+56>>2];g[B>>2]=ea+(ja*ga+ka*ra+la*sa);g[B+4>>2]=fa+(oa*ga+pa*ra+qa*sa);g[B+8>>2]=ta+(xa*ga+za*ra+Ba*sa);g[B+12>>2]=0.0;sa=+g[f+48>>2];ra=+g[f+52>>2];ga=+g[f+56>>2];ea=ea+(ja*sa+ka*ra+la*ga);fa=fa+(oa*sa+pa*ra+qa*ga);ga=ta+(xa*sa+za*ra+Ba*ga);ra=+g[f>>2];sa=+g[f+16>>2];ta=+g[f+32>>2];ua=+g[f+4>>2];va=+g[f+20>>2];wa=+g[f+36>>2];ya=+g[f+8>>2];Aa=+g[f+24>>2];Ca=+g[f+40>>2];g[E>>2]=ja*ra+ka*sa+la*ta;g[E+4>>2]=ja*ua+ka*va+la*wa;g[E+8>>2]=ja*ya+ka*Aa+la*Ca;g[E+12>>2]=0.0;g[E+16>>2]=oa*ra+pa*sa+qa*ta;g[E+20>>2]=oa*ua+pa*va+qa*wa;g[E+24>>2]=oa*ya+pa*Aa+qa*Ca;g[E+28>>2]=0.0;g[E+32>>2]=xa*ra+za*sa+Ba*ta;g[E+36>>2]=xa*ua+za*va+Ba*wa;g[E+40>>2]=xa*ya+za*Aa+Ba*Ca;na=E+44|0;c[na+0>>2]=0;c[na+4>>2]=0;c[na+8>>2]=0;c[na+12>>2]=0;c[na+16>>2]=0;na=c[h+8>>2]|0;Ca=+Vb[c[(c[q>>2]|0)+48>>2]&3](q);c[F>>2]=11208;ca=F+8|0;da=F+72|0;ma=F+136|0;c[F+4>>2]=d;c[ca+0>>2]=c[e+0>>2];c[ca+4>>2]=c[e+4>>2];c[ca+8>>2]=c[e+8>>2];c[ca+12>>2]=c[e+12>>2];ca=F+24|0;ba=e+16|0;c[ca+0>>2]=c[ba+0>>2];c[ca+4>>2]=c[ba+4>>2];c[ca+8>>2]=c[ba+8>>2];c[ca+12>>2]=c[ba+12>>2];ca=F+40|0;ba=e+32|0;c[ca+0>>2]=c[ba+0>>2];c[ca+4>>2]=c[ba+4>>2];c[ca+8>>2]=c[ba+8>>2];c[ca+12>>2]=c[ba+12>>2];ca=F+56|0;ba=e+48|0;c[ca+0>>2]=c[ba+0>>2];c[ca+4>>2]=c[ba+4>>2];c[ca+8>>2]=c[ba+8>>2];c[ca+12>>2]=c[ba+12>>2];c[da+0>>2]=c[f+0>>2];c[da+4>>2]=c[f+4>>2];c[da+8>>2]=c[f+8>>2];c[da+12>>2]=c[f+12>>2];da=F+88|0;ca=f+16|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];da=F+104|0;ca=f+32|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];da=F+120|0;ca=f+48|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];c[ma+0>>2]=c[m+0>>2];c[ma+4>>2]=c[m+4>>2];c[ma+8>>2]=c[m+8>>2];c[ma+12>>2]=c[m+12>>2];ma=F+152|0;da=m+16|0;c[ma+0>>2]=c[da+0>>2];c[ma+4>>2]=c[da+4>>2];c[ma+8>>2]=c[da+8>>2];c[ma+12>>2]=c[da+12>>2];ma=F+168|0;da=m+32|0;c[ma+0>>2]=c[da+0>>2];c[ma+4>>2]=c[da+4>>2];c[ma+8>>2]=c[da+8>>2];c[ma+12>>2]=c[da+12>>2];ma=F+184|0;da=m+48|0;c[ma+0>>2]=c[da+0>>2];c[ma+4>>2]=c[da+4>>2];c[ma+8>>2]=c[da+8>>2];c[ma+12>>2]=c[da+12>>2];g[F+204>>2]=Ca;c[F>>2]=5736;c[F+212>>2]=j;c[F+216>>2]=na;c[F+220>>2]=q;g[F+200>>2]=+g[j+4>>2];g[F+208>>2]=k;oc[c[(c[d>>2]|0)+8>>2]&63](d,E,C,D);j=c[q+48>>2]|0;c[n>>2]=12400;c[n+4>>2]=j;c[n+8>>2]=F;j=c[q+52>>2]|0;if((a[j+60|0]|0)==0){Rq(j,n,B,ea,fa,ga,C,D);i=l;return}else{Sq(j,n,B,ea,fa,ga,C,D,c[j+56>>2]|0);i=l;return}}else if((K|0)==28){c[w>>2]=6728;o=w+164|0;c[w+168>>2]=0;g[w+172>>2]=k;n=j+4|0;g[o>>2]=+g[n>>2];c[J>>2]=6960;c[J+4>>2]=0;c[J+8>>2]=0;c[J+12>>2]=d;c[J+16>>2]=0;c[J+20>>2]=q;if(!(zl(J,e,f,m,m,w)|0)){i=l;return}d=w+132|0;k=+g[d>>2];m=w+136|0;ea=+g[m>>2];e=w+140|0;fa=+g[e>>2];ga=k*k+ea*ea+fa*fa;if(!(ga>9999999747378752.0e-20)){i=l;return}ha=+g[o>>2];if(!(ha<+g[n>>2])){i=l;return}Ca=1.0/+R(+ga);g[d>>2]=k*Ca;g[m>>2]=ea*Ca;g[e>>2]=fa*Ca;ma=w+148|0;c[z>>2]=c[h+8>>2];c[z+4>>2]=0;na=z+8|0;c[na+0>>2]=c[d+0>>2];c[na+4>>2]=c[d+4>>2];c[na+8>>2]=c[d+8>>2];c[na+12>>2]=c[d+12>>2];na=z+24|0;c[na+0>>2]=c[ma+0>>2];c[na+4>>2]=c[ma+4>>2];c[na+8>>2]=c[ma+8>>2];c[na+12>>2]=c[ma+12>>2];g[z+40>>2]=ha;+ac[c[(c[j>>2]|0)+12>>2]&7](j,z,1);i=l;return}else{Da=+g[m>>2];ka=+g[m+16>>2];la=+g[m+32>>2];oa=+g[m+4>>2];pa=+g[m+20>>2];qa=+g[m+36>>2];xa=+g[m+8>>2];za=+g[m+24>>2];Ba=+g[m+40>>2];sa=-+g[m+48>>2];ra=-+g[m+52>>2];ta=-+g[m+56>>2];ia=Da*sa+ka*ra+la*ta;ha=oa*sa+pa*ra+qa*ta;ta=xa*sa+za*ra+Ba*ta;ra=+g[e+48>>2];sa=+g[e+52>>2];fa=+g[e+56>>2];ja=ia+(Da*ra+ka*sa+la*fa);ga=ha+(oa*ra+pa*sa+qa*fa);fa=ta+(xa*ra+za*sa+Ba*fa);sa=+g[f+48>>2];ra=+g[f+52>>2];ea=+g[f+56>>2];ia=ia+(Da*sa+ka*ra+la*ea);ha=ha+(oa*sa+pa*ra+qa*ea);ea=ta+(xa*sa+za*ra+Ba*ea);ra=+g[f>>2];sa=+g[f+16>>2];ta=+g[f+32>>2];ua=+g[f+4>>2];va=+g[f+20>>2];wa=+g[f+36>>2];ya=+g[f+8>>2];Aa=+g[f+24>>2];Ca=+g[f+40>>2];g[A>>2]=Da*ra+ka*sa+la*ta;g[A+4>>2]=Da*ua+ka*va+la*wa;g[A+8>>2]=Da*ya+ka*Aa+la*Ca;g[A+12>>2]=0.0;g[A+16>>2]=oa*ra+pa*sa+qa*ta;g[A+20>>2]=oa*ua+pa*va+qa*wa;g[A+24>>2]=oa*ya+pa*Aa+qa*Ca;g[A+28>>2]=0.0;g[A+32>>2]=xa*ra+za*sa+Ba*ta;g[A+36>>2]=xa*ua+za*va+Ba*wa;g[A+40>>2]=xa*ya+za*Aa+Ba*Ca;da=A+44|0;c[da+0>>2]=0;c[da+4>>2]=0;c[da+8>>2]=0;c[da+12>>2]=0;c[da+16>>2]=0;h=c[h+8>>2]|0;Ca=+Vb[c[(c[q>>2]|0)+48>>2]&3](q);c[u>>2]=11208;da=u+8|0;ma=u+72|0;na=u+136|0;c[u+4>>2]=d;c[da+0>>2]=c[e+0>>2];c[da+4>>2]=c[e+4>>2];c[da+8>>2]=c[e+8>>2];c[da+12>>2]=c[e+12>>2];da=u+24|0;ca=e+16|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];da=u+40|0;ca=e+32|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];da=u+56|0;ca=e+48|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];c[ma+0>>2]=c[f+0>>2];c[ma+4>>2]=c[f+4>>2];c[ma+8>>2]=c[f+8>>2];c[ma+12>>2]=c[f+12>>2];ma=u+88|0;da=f+16|0;c[ma+0>>2]=c[da+0>>2];c[ma+4>>2]=c[da+4>>2];c[ma+8>>2]=c[da+8>>2];c[ma+12>>2]=c[da+12>>2];ma=u+104|0;da=f+32|0;c[ma+0>>2]=c[da+0>>2];c[ma+4>>2]=c[da+4>>2];c[ma+8>>2]=c[da+8>>2];c[ma+12>>2]=c[da+12>>2];ma=u+120|0;da=f+48|0;c[ma+0>>2]=c[da+0>>2];c[ma+4>>2]=c[da+4>>2];c[ma+8>>2]=c[da+8>>2];c[ma+12>>2]=c[da+12>>2];c[na+0>>2]=c[m+0>>2];c[na+4>>2]=c[m+4>>2];c[na+8>>2]=c[m+8>>2];c[na+12>>2]=c[m+12>>2];na=u+152|0;ma=m+16|0;c[na+0>>2]=c[ma+0>>2];c[na+4>>2]=c[ma+4>>2];c[na+8>>2]=c[ma+8>>2];c[na+12>>2]=c[ma+12>>2];na=u+168|0;ma=m+32|0;c[na+0>>2]=c[ma+0>>2];c[na+4>>2]=c[ma+4>>2];c[na+8>>2]=c[ma+8>>2];c[na+12>>2]=c[ma+12>>2];na=u+184|0;m=m+48|0;c[na+0>>2]=c[m+0>>2];c[na+4>>2]=c[m+4>>2];c[na+8>>2]=c[m+8>>2];c[na+12>>2]=c[m+12>>2];g[u+204>>2]=Ca;c[u>>2]=5512;c[u+212>>2]=j;c[u+216>>2]=h;c[u+220>>2]=q;g[u+200>>2]=+g[j+4>>2];g[u+208>>2]=k;oc[c[(c[d>>2]|0)+8>>2]&63](d,A,t,s);g[r>>2]=ja;m=r+4|0;g[m>>2]=ga;h=r+8|0;g[h>>2]=fa;g[r+12>>2]=0.0;if(ia<ja){g[r>>2]=ia;ka=ia}else{ka=ja}if(ha<ga){g[m>>2]=ha;k=ha}else{k=ga}if(ea<fa){g[h>>2]=ea;la=ea}else{la=fa}g[v>>2]=ja;j=v+4|0;g[j>>2]=ga;d=v+8|0;g[d>>2]=fa;g[v+12>>2]=0.0;if(ja<ia){g[v>>2]=ia}else{ia=ja}if(ga<ha){g[j>>2]=ha;ga=ha}if(fa<ea){g[d>>2]=ea}else{ea=fa}g[r>>2]=+g[t>>2]+ka;g[m>>2]=+g[t+4>>2]+k;g[h>>2]=+g[t+8>>2]+la;g[v>>2]=+g[s>>2]+ia;g[j>>2]=+g[s+4>>2]+ga;g[d>>2]=+g[s+8>>2]+ea;oc[c[(c[q>>2]|0)+64>>2]&63](q,u,r,v);i=l;return}}function lk(a){a=a|0;return}function mk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0;k=i;i=i+256|0;m=k+32|0;l=k+16|0;f=k;c[m>>2]=5248;j=m+36|0;c[j+0>>2]=c[b+0>>2];c[j+4>>2]=c[b+4>>2];c[j+8>>2]=c[b+8>>2];c[j+12>>2]=c[b+12>>2];h=m+52|0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];c[m+212>>2]=a;c[m+216>>2]=e;g[m+68>>2]=1.0;e=m+72|0;t=m+88|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;g[t>>2]=1.0;t=m+92|0;e=m+108|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;g[e>>2]=1.0;c[m+112>>2]=0;e=m+116|0;c[e+0>>2]=c[j+0>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[e+12>>2]=c[j+12>>2];g[m+132>>2]=1.0;e=m+136|0;t=m+152|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;g[t>>2]=1.0;t=m+156|0;e=m+172|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;g[e>>2]=1.0;c[m+176>>2]=0;e=m+180|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];p=+g[d>>2]- +g[b>>2];o=+g[d+4>>2]- +g[b+4>>2];s=+g[d+8>>2]- +g[b+8>>2];n=1.0/+R(+(p*p+o*o+s*s));p=p*n;o=o*n;n=s*n;if(p==0.0){q=999999984306749400.0}else{q=1.0/p}g[m+4>>2]=q;if(o==0.0){r=999999984306749400.0}else{r=1.0/o}g[m+8>>2]=r;if(n==0.0){s=999999984306749400.0}else{s=1.0/n}g[m+12>>2]=s;c[m+20>>2]=q<0.0;c[m+24>>2]=r<0.0;c[m+28>>2]=s<0.0;g[m+32>>2]=p*(+g[h>>2]- +g[j>>2])+o*(+g[m+56>>2]- +g[m+40>>2])+n*(+g[m+60>>2]- +g[m+44>>2]);t=c[a+68>>2]|0;e=c[(c[t>>2]|0)+24>>2]|0;c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Tb[e&7](t,b,d,m,l,f);i=k;return}function nk(a){a=a|0;return}function ok(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0.0,J=0.0,K=0,L=0.0,M=0,N=0;h=i;i=i+384|0;j=h+180|0;K=h+176|0;N=h+112|0;F=h+48|0;k=h+32|0;l=h+16|0;M=h;dr(4936);c[N+0>>2]=c[d+0>>2];c[N+4>>2]=c[d+4>>2];c[N+8>>2]=c[d+8>>2];c[N+12>>2]=c[d+12>>2];n=N+16|0;C=d+16|0;c[n+0>>2]=c[C+0>>2];c[n+4>>2]=c[C+4>>2];c[n+8>>2]=c[C+8>>2];c[n+12>>2]=c[C+12>>2];n=N+32|0;B=d+32|0;c[n+0>>2]=c[B+0>>2];c[n+4>>2]=c[B+4>>2];c[n+8>>2]=c[B+8>>2];c[n+12>>2]=c[B+12>>2];n=N+48|0;A=d+48|0;c[n+0>>2]=c[A+0>>2];c[n+4>>2]=c[A+4>>2];c[n+8>>2]=c[A+8>>2];c[n+12>>2]=c[A+12>>2];c[F+0>>2]=c[e+0>>2];c[F+4>>2]=c[e+4>>2];c[F+8>>2]=c[e+8>>2];c[F+12>>2]=c[e+12>>2];m=F+16|0;z=e+16|0;c[m+0>>2]=c[z+0>>2];c[m+4>>2]=c[z+4>>2];c[m+8>>2]=c[z+8>>2];c[m+12>>2]=c[z+12>>2];m=F+32|0;y=e+32|0;c[m+0>>2]=c[y+0>>2];c[m+4>>2]=c[y+4>>2];c[m+8>>2]=c[y+8>>2];c[m+12>>2]=c[y+12>>2];m=F+48|0;x=e+48|0;c[m+0>>2]=c[x+0>>2];c[m+4>>2]=c[x+4>>2];c[m+8>>2]=c[x+8>>2];c[m+12>>2]=c[x+12>>2];dg(N,F,j,K);o=+g[K>>2];u=+g[j>>2]*o;v=o*+g[j+4>>2];o=o*+g[j+8>>2];g[j>>2]=1.0;K=j+4|0;F=j+20|0;c[K+0>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;g[F>>2]=1.0;G=j+24|0;D=j+40|0;c[G+0>>2]=0;c[G+4>>2]=0;c[G+8>>2]=0;c[G+12>>2]=0;g[D>>2]=1.0;E=j+44|0;c[E+0>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;c[E+12>>2]=0;c[E+16>>2]=0;Bf(N,M);p=+g[M>>2];w=+g[M+4>>2];L=+g[M+8>>2];I=+g[M+12>>2];H=2.0/(p*p+w*w+L*L+I*I);q=p*H;s=w*H;H=L*H;r=I*q;t=I*s;I=I*H;q=p*q;J=p*s;p=p*H;s=w*s;w=w*H;H=L*H;g[j>>2]=1.0-(s+H);g[K>>2]=J-I;g[j+8>>2]=p+t;g[j+12>>2]=0.0;g[j+16>>2]=J+I;g[F>>2]=1.0-(q+H);g[G>>2]=w-r;g[j+28>>2]=0.0;g[j+32>>2]=p-t;g[j+36>>2]=w+r;g[D>>2]=1.0-(q+s);g[E>>2]=0.0;oc[c[(c[b>>2]|0)+8>>2]&63](b,j,k,l);E=l+4|0;s=+g[E>>2];D=l+8|0;q=+g[D>>2];G=k+4|0;F=k+8|0;r=+g[l>>2];w=+g[k>>2]+0.0;t=+g[G>>2]+0.0;p=+g[F>>2]+0.0;o=+R(+(u*u+v*v+o*o))*+Vb[c[(c[b>>2]|0)+16>>2]&3](b);g[k+12>>2]=0.0;g[l+12>>2]=0.0;g[k>>2]=w-o;g[G>>2]=t-o;g[F>>2]=p-o;g[l>>2]=o+r;g[E>>2]=o+s;g[D>>2]=o+q;c[j>>2]=5136;D=j+36|0;c[D+0>>2]=c[d+0>>2];c[D+4>>2]=c[d+4>>2];c[D+8>>2]=c[d+8>>2];c[D+12>>2]=c[d+12>>2];d=j+52|0;c[d+0>>2]=c[C+0>>2];c[d+4>>2]=c[C+4>>2];c[d+8>>2]=c[C+8>>2];c[d+12>>2]=c[C+12>>2];d=j+68|0;c[d+0>>2]=c[B+0>>2];c[d+4>>2]=c[B+4>>2];c[d+8>>2]=c[B+8>>2];c[d+12>>2]=c[B+12>>2];d=j+84|0;c[d+0>>2]=c[A+0>>2];c[d+4>>2]=c[A+4>>2];c[d+8>>2]=c[A+8>>2];c[d+12>>2]=c[A+12>>2];A=j+100|0;c[A+0>>2]=c[e+0>>2];c[A+4>>2]=c[e+4>>2];c[A+8>>2]=c[e+8>>2];c[A+12>>2]=c[e+12>>2];e=j+116|0;c[e+0>>2]=c[z+0>>2];c[e+4>>2]=c[z+4>>2];c[e+8>>2]=c[z+8>>2];c[e+12>>2]=c[z+12>>2];e=j+132|0;c[e+0>>2]=c[y+0>>2];c[e+4>>2]=c[y+4>>2];c[e+8>>2]=c[y+8>>2];c[e+12>>2]=c[y+12>>2];e=j+148|0;c[e+0>>2]=c[x+0>>2];c[e+4>>2]=c[x+4>>2];c[e+8>>2]=c[x+8>>2];c[e+12>>2]=c[x+12>>2];c[j+180>>2]=a;c[j+184>>2]=f;g[j+188>>2]=0.0;c[j+192>>2]=b;q=+g[e>>2]- +g[d>>2];o=+g[j+152>>2]- +g[j+88>>2];s=+g[j+156>>2]- +g[j+92>>2];r=1.0/+R(+(q*q+o*o+s*s));p=q*r;t=o*r;r=s*r;if(p==0.0){u=999999984306749400.0}else{u=1.0/p}g[j+4>>2]=u;if(t==0.0){v=999999984306749400.0}else{v=1.0/t}g[j+8>>2]=v;if(r==0.0){w=999999984306749400.0}else{w=1.0/r}g[j+12>>2]=w;c[j+20>>2]=u<0.0;c[j+24>>2]=v<0.0;c[j+28>>2]=w<0.0;g[j+32>>2]=s*r+(q*p+o*t);N=c[a+68>>2]|0;Tb[c[(c[N>>2]|0)+24>>2]&7](N,n,m,j,k,l);k=c[3598]|0;l=k+16|0;N=(c[l>>2]|0)+ -1|0;c[l>>2]=N;if((N|0)!=0){i=h;return}do{if((c[k+4>>2]|0)!=0){xb(j|0,0)|0;M=c[3584]|0;N=k+8|0;g[N>>2]=+(((c[j+4>>2]|0)-(c[M+4>>2]|0)+(((c[j>>2]|0)-(c[M>>2]|0)|0)*1e6|0)-(c[k+12>>2]|0)|0)>>>0)/1.0e3+ +g[N>>2];if((c[l>>2]|0)==0){k=c[3598]|0;break}else{i=h;return}}}while(0);c[3598]=c[k+20>>2];i=h;return}function pk(a){a=a|0;return}function qk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0,$=0,aa=0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0,za=0;f=i;i=i+480|0;u=f+416|0;B=f+400|0;A=f+384|0;t=f+320|0;C=f+304|0;p=f+288|0;s=f+272|0;o=f+256|0;r=f+240|0;q=f+224|0;v=f+208|0;x=f+192|0;y=f+176|0;w=f+160|0;n=f+144|0;l=f+128|0;h=f+32|0;k=f+16|0;j=f;m=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;mc[c[(c[m>>2]|0)+56>>2]&1](m,b,1.0);m=d+4|0;z=c[m>>2]|0;switch(z|0){case 28:{ca=+g[d+64>>2];ba=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;Yb[c[(c[ba>>2]|0)+88>>2]&0](ba,d+48|0,ca,b,e);i=f;return};case 9:{r=c[d+92>>2]|0;if((r|0)<=0){i=f;return}h=d+100|0;p=d+120|0;o=b+4|0;n=b+8|0;m=b+16|0;l=b+20|0;k=b+24|0;j=b+32|0;d=b+36|0;J=b+40|0;I=b+48|0;H=b+52|0;G=b+56|0;F=t+4|0;E=t+8|0;K=t+12|0;C=t+16|0;B=t+20|0;A=t+24|0;z=t+28|0;y=t+32|0;x=t+36|0;w=t+40|0;v=t+44|0;s=t+48|0;u=t+52|0;D=t+56|0;q=t+60|0;do{r=r+ -1|0;ba=c[h>>2]|0;xa=+g[ba+(r<<4)>>2];wa=+g[ba+(r<<4)+4>>2];Z=+g[ba+(r<<4)+8>>2];ba=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;aa=c[(c[ba>>2]|0)+16>>2]|0;ca=+g[(c[p>>2]|0)+(r<<2)>>2];va=+g[b>>2];ua=+g[o>>2];qa=ua*0.0;sa=+g[n>>2];ta=sa*0.0;ra=va*0.0;pa=+g[m>>2];oa=+g[l>>2];ka=oa*0.0;ma=+g[k>>2];na=ma*0.0;la=pa*0.0;ja=+g[j>>2];ia=+g[d>>2];ea=ia*0.0;ga=+g[J>>2];ha=ga*0.0;fa=ja*0.0;da=xa*va+wa*ua+Z*sa+ +g[I>>2];Y=xa*pa+wa*oa+Z*ma+ +g[H>>2];Z=xa*ja+wa*ia+Z*ga+ +g[G>>2];g[t>>2]=va+qa+ta;g[F>>2]=ra+ua+ta;g[E>>2]=sa+(ra+qa);g[K>>2]=0.0;g[C>>2]=pa+ka+na;g[B>>2]=la+oa+na;g[A>>2]=ma+(la+ka);g[z>>2]=0.0;g[y>>2]=ja+ea+ha;g[x>>2]=fa+ia+ha;g[w>>2]=ga+(fa+ea);g[v>>2]=0.0;g[s>>2]=da;g[u>>2]=Y;g[D>>2]=Z;g[q>>2]=0.0;Mb[aa&0](ba,ca,t,e)}while((r|0)>0);i=f;return};case 8:{xa=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);ba=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;Mb[c[(c[ba>>2]|0)+16>>2]&0](ba,xa,b,e);i=f;return};case 13:{ba=c[d+52>>2]|0;wa=+Vb[c[(c[d>>2]|0)+92>>2]&3](d);aa=d+28|0;c[C+0>>2]=c[aa+0>>2];c[C+4>>2]=c[aa+4>>2];c[C+8>>2]=c[aa+8>>2];c[C+12>>2]=c[aa+12>>2];ua=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);va=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);xa=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);g[C>>2]=ua+ +g[C>>2];aa=C+4|0;g[aa>>2]=va+ +g[aa>>2];aa=C+8|0;g[aa>>2]=xa+ +g[aa>>2];xa=+g[C+(ba<<2)>>2];aa=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;Lb[c[(c[aa>>2]|0)+80>>2]&0](aa,wa,xa,ba,b,e);i=f;return};case 0:{ba=d+28|0;c[B+0>>2]=c[ba+0>>2];c[B+4>>2]=c[ba+4>>2];c[B+8>>2]=c[ba+8>>2];c[B+12>>2]=c[ba+12>>2];va=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);wa=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);xa=+Vb[c[(c[d>>2]|0)+48>>2]&3](d);va=va+ +g[B>>2];g[B>>2]=va;ba=B+4|0;wa=wa+ +g[ba>>2];g[ba>>2]=wa;ba=B+8|0;xa=xa+ +g[ba>>2];g[ba>>2]=xa;ba=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;aa=c[(c[ba>>2]|0)+72>>2]|0;g[A>>2]=-va;g[A+4>>2]=-wa;g[A+8>>2]=-xa;g[A+12>>2]=0.0;Db[aa&31](ba,A,B,b,e);i=f;return};case 31:{A=c[d+16>>2]|0;if((A|0)<=0){i=f;return}B=d+24|0;C=b+4|0;D=b+8|0;E=b+16|0;F=b+20|0;G=b+24|0;H=b+32|0;I=b+36|0;J=b+40|0;d=b+48|0;h=b+52|0;j=b+56|0;k=u+4|0;l=u+8|0;m=u+12|0;n=u+16|0;o=u+20|0;p=u+24|0;q=u+28|0;r=u+32|0;s=u+36|0;t=u+40|0;v=u+44|0;w=u+48|0;x=u+52|0;y=u+56|0;z=u+60|0;do{A=A+ -1|0;ba=c[B>>2]|0;ja=+g[ba+(A*80|0)>>2];ma=+g[ba+(A*80|0)+4>>2];pa=+g[ba+(A*80|0)+8>>2];ka=+g[ba+(A*80|0)+16>>2];na=+g[ba+(A*80|0)+20>>2];ra=+g[ba+(A*80|0)+24>>2];la=+g[ba+(A*80|0)+32>>2];oa=+g[ba+(A*80|0)+36>>2];ta=+g[ba+(A*80|0)+40>>2];Z=+g[ba+(A*80|0)+48>>2];ca=+g[ba+(A*80|0)+52>>2];xa=+g[ba+(A*80|0)+56>>2];ba=c[ba+(A*80|0)+64>>2]|0;aa=c[(c[a>>2]|0)+28>>2]|0;da=+g[b>>2];ea=+g[C>>2];fa=+g[D>>2];ga=+g[E>>2];ha=+g[F>>2];ia=+g[G>>2];qa=+g[H>>2];sa=+g[I>>2];ua=+g[J>>2];va=Z*da+ca*ea+xa*fa+ +g[d>>2];wa=Z*ga+ca*ha+xa*ia+ +g[h>>2];xa=Z*qa+ca*sa+xa*ua+ +g[j>>2];g[u>>2]=ja*da+ka*ea+la*fa;g[k>>2]=ma*da+na*ea+oa*fa;g[l>>2]=pa*da+ra*ea+ta*fa;g[m>>2]=0.0;g[n>>2]=ja*ga+ka*ha+la*ia;g[o>>2]=ma*ga+na*ha+oa*ia;g[p>>2]=pa*ga+ra*ha+ta*ia;g[q>>2]=0.0;g[r>>2]=ja*qa+ka*sa+la*ua;g[s>>2]=ma*qa+na*sa+oa*ua;g[t>>2]=pa*qa+ra*sa+ta*ua;g[v>>2]=0.0;g[w>>2]=va;g[x>>2]=wa;g[y>>2]=xa;g[z>>2]=0.0;oc[aa&63](a,u,ba,e)}while((A|0)>0);i=f;return};case 11:{wa=+g[d+56>>2];xa=+g[d+60>>2];ba=c[d+68>>2]|0;aa=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;Lb[c[(c[aa>>2]|0)+84>>2]&0](aa,wa,xa,ba,b,e);i=f;return};case 10:{ba=c[d+52>>2]|0;wa=+g[d+(((ba+2|0)%3|0)<<2)+28>>2];xa=+g[d+(ba<<2)+28>>2];aa=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;Lb[c[(c[aa>>2]|0)+76>>2]&0](aa,wa,xa,ba,b,e);i=f;return};default:{a:do{if((z|0)<7){P=c[d+52>>2]|0;if((P|0)==0){if((Jb[c[(c[d>>2]|0)+100>>2]&63](d)|0)<=0){break}q=v+4|0;t=b+4|0;u=v+8|0;z=b+8|0;A=b+16|0;B=b+20|0;C=b+24|0;D=b+32|0;E=b+36|0;F=b+40|0;G=b+48|0;H=b+52|0;I=b+56|0;J=y+4|0;K=y+8|0;L=y+12|0;M=x+4|0;o=x+8|0;p=w+4|0;N=w+8|0;r=w+12|0;s=0;while(1){oc[c[(c[d>>2]|0)+104>>2]&63](d,s,v,x);va=+g[v>>2];ja=+g[b>>2];ta=+g[q>>2];ka=+g[t>>2];ra=+g[u>>2];la=+g[z>>2];na=+g[A>>2];oa=+g[B>>2];pa=+g[C>>2];sa=+g[D>>2];ua=+g[E>>2];wa=+g[F>>2];ma=+g[G>>2];qa=+g[H>>2];xa=+g[I>>2];g[y>>2]=va*ja+ta*ka+ra*la+ma;g[J>>2]=va*na+ta*oa+ra*pa+qa;g[K>>2]=va*sa+ta*ua+ra*wa+xa;g[L>>2]=0.0;ra=+g[x>>2];ta=+g[M>>2];va=+g[o>>2];g[w>>2]=ra*ja+ta*ka+va*la+ma;g[p>>2]=ra*na+ta*oa+va*pa+qa;g[N>>2]=ra*sa+ta*ua+va*wa+xa;g[r>>2]=0.0;ba=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;oc[c[(c[ba>>2]|0)+8>>2]&63](ba,y,w,e);s=s+1|0;if((s|0)>=(Jb[c[(c[d>>2]|0)+100>>2]&63](d)|0)){break a}}}u=P+28|0;if((c[u>>2]|0)>0){x=P+36|0;v=o+4|0;w=o+8|0;E=o+12|0;y=b+4|0;z=b+8|0;A=b+16|0;B=b+20|0;C=b+24|0;N=b+32|0;M=b+36|0;L=b+40|0;K=b+48|0;J=b+52|0;I=b+56|0;H=r+4|0;G=r+8|0;F=r+12|0;O=q+4|0;D=q+8|0;t=q+12|0;U=P+16|0;Q=p+4|0;R=p+8|0;S=p+12|0;P=s+4|0;V=s+8|0;W=s+12|0;T=0;do{_=c[x>>2]|0;X=c[_+(T*36|0)+4>>2]|0;b:do{if((X|0)>0){aa=c[_+(T*36|0)+12>>2]|0;$=aa;ca=0.0;Z=0.0;Y=0.0;aa=c[aa+(X+ -1<<2)>>2]|0;ba=0;while(1){_=c[$+(ba<<2)>>2]|0;$=c[U>>2]|0;ca=ca+ +g[$+(_<<4)>>2];Z=Z+ +g[$+(_<<4)+4>>2];Y=Y+ +g[$+(_<<4)+8>>2];$=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;ya=c[(c[$>>2]|0)+8>>2]|0;za=c[U>>2]|0;va=+g[za+(aa<<4)>>2];ja=+g[b>>2];ta=+g[za+(aa<<4)+4>>2];ka=+g[y>>2];ra=+g[za+(aa<<4)+8>>2];la=+g[z>>2];na=+g[A>>2];oa=+g[B>>2];pa=+g[C>>2];sa=+g[N>>2];ua=+g[M>>2];wa=+g[L>>2];ma=+g[K>>2];qa=+g[J>>2];xa=+g[I>>2];g[p>>2]=va*ja+ta*ka+ra*la+ma;g[Q>>2]=va*na+ta*oa+ra*pa+qa;g[R>>2]=va*sa+ta*ua+ra*wa+xa;g[S>>2]=0.0;ra=+g[za+(_<<4)>>2];ta=+g[za+(_<<4)+4>>2];va=+g[za+(_<<4)+8>>2];g[s>>2]=ra*ja+ta*ka+va*la+ma;g[P>>2]=ra*na+ta*oa+va*pa+qa;g[V>>2]=ra*sa+ta*ua+va*wa+xa;g[W>>2]=0.0;oc[ya&63]($,p,s,e);ba=ba+1|0;$=c[x>>2]|0;if((ba|0)>=(c[$+(T*36|0)+4>>2]|0)){break b}$=c[$+(T*36|0)+12>>2]|0;aa=_}}else{ca=0.0;Z=0.0;Y=0.0}}while(0);xa=1.0/+(X|0);ca=ca*xa;Z=Z*xa;Y=Y*xa;za=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;if(((Jb[c[(c[za>>2]|0)+48>>2]&63](za)|0)&16384|0)!=0){g[o>>2]=1.0;g[v>>2]=1.0;g[w>>2]=0.0;g[E>>2]=0.0;za=c[x>>2]|0;ra=+g[za+(T*36|0)+20>>2];ta=+g[za+(T*36|0)+24>>2];va=+g[za+(T*36|0)+28>>2];za=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;ya=c[(c[za>>2]|0)+8>>2]|0;ja=+g[b>>2];ka=+g[y>>2];la=+g[z>>2];na=+g[A>>2];oa=+g[B>>2];pa=+g[C>>2];sa=+g[N>>2];ua=+g[M>>2];wa=+g[L>>2];ma=+g[K>>2];qa=+g[J>>2];xa=+g[I>>2];g[r>>2]=ca*ja+Z*ka+Y*la+ma;g[H>>2]=ca*na+Z*oa+Y*pa+qa;g[G>>2]=ca*sa+Z*ua+Y*wa+xa;g[F>>2]=0.0;ra=ca+ra;ta=Z+ta;va=Y+va;g[q>>2]=ra*ja+ta*ka+va*la+ma;g[O>>2]=ra*na+ta*oa+va*pa+qa;g[D>>2]=ra*sa+ta*ua+va*wa+xa;g[t>>2]=0.0;oc[ya&63](za,r,q,o)}T=T+1|0}while((T|0)<(c[u>>2]|0))}}}while(0);o=c[m>>2]|0;if((o+ -21|0)>>>0<9){g[n>>2]=999999984306749400.0;g[n+4>>2]=999999984306749400.0;g[n+8>>2]=999999984306749400.0;g[n+12>>2]=0.0;g[l>>2]=-999999984306749400.0;g[l+4>>2]=-999999984306749400.0;g[l+8>>2]=-999999984306749400.0;g[l+12>>2]=0.0;o=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;c[h>>2]=4992;c[h+4>>2]=5016;c[h+8>>2]=o;o=h+12|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];c[o+8>>2]=c[e+8>>2];c[o+12>>2]=c[e+12>>2];o=h+28|0;c[o+0>>2]=c[b+0>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=h+44|0;za=b+16|0;c[o+0>>2]=c[za+0>>2];c[o+4>>2]=c[za+4>>2];c[o+8>>2]=c[za+8>>2];c[o+12>>2]=c[za+12>>2];o=h+60|0;za=b+32|0;c[o+0>>2]=c[za+0>>2];c[o+4>>2]=c[za+4>>2];c[o+8>>2]=c[za+8>>2];c[o+12>>2]=c[za+12>>2];o=h+76|0;za=b+48|0;c[o+0>>2]=c[za+0>>2];c[o+4>>2]=c[za+4>>2];c[o+8>>2]=c[za+8>>2];c[o+12>>2]=c[za+12>>2];oc[c[(c[d>>2]|0)+64>>2]&63](d,h,l,n);o=c[m>>2]|0}if((o|0)!=3){i=f;return}g[k>>2]=999999984306749400.0;g[k+4>>2]=999999984306749400.0;g[k+8>>2]=999999984306749400.0;g[k+12>>2]=0.0;g[j>>2]=-999999984306749400.0;g[j+4>>2]=-999999984306749400.0;g[j+8>>2]=-999999984306749400.0;g[j+12>>2]=0.0;za=Jb[c[(c[a>>2]|0)+20>>2]&63](a)|0;c[h>>2]=4992;c[h+4>>2]=5016;c[h+8>>2]=za;za=h+12|0;c[za+0>>2]=c[e+0>>2];c[za+4>>2]=c[e+4>>2];c[za+8>>2]=c[e+8>>2];c[za+12>>2]=c[e+12>>2];za=h+28|0;c[za+0>>2]=c[b+0>>2];c[za+4>>2]=c[b+4>>2];c[za+8>>2]=c[b+8>>2];c[za+12>>2]=c[b+12>>2];za=h+44|0;ya=b+16|0;c[za+0>>2]=c[ya+0>>2];c[za+4>>2]=c[ya+4>>2];c[za+8>>2]=c[ya+8>>2];c[za+12>>2]=c[ya+12>>2];za=h+60|0;ya=b+32|0;c[za+0>>2]=c[ya+0>>2];c[za+4>>2]=c[ya+4>>2];c[za+8>>2]=c[ya+8>>2];c[za+12>>2]=c[ya+12>>2];za=h+76|0;ya=b+48|0;c[za+0>>2]=c[ya+0>>2];c[za+4>>2]=c[ya+4>>2];c[za+8>>2]=c[ya+8>>2];c[za+12>>2]=c[ya+12>>2];za=c[d+92>>2]|0;oc[c[(c[za>>2]|0)+8>>2]&63](za,h+4|0,j,k);i=f;return}}}function rk(a){a=a|0;return}function sk(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0;d=i;i=i+112|0;s=d+96|0;l=d+80|0;f=d+64|0;h=d+48|0;e=d+32|0;j=d+16|0;k=d;if(((Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)!=0?(R=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0,((Jb[c[(c[R>>2]|0)+48>>2]&63](R)|0)&8|0)!=0):0)?(o=b+24|0,n=c[o>>2]|0,n=Jb[c[(c[n>>2]|0)+36>>2]&63](n)|0,g[s>>2]=1.0,g[s+4>>2]=1.0,g[s+8>>2]=0.0,g[s+12>>2]=0.0,(n|0)>0):0){p=0;do{q=c[o>>2]|0;q=$b[c[(c[q>>2]|0)+40>>2]&31](q,p)|0;r=c[q+748>>2]|0;if((r|0)>0){m=0;do{R=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Gb[c[(c[R>>2]|0)+32>>2]&0](R,q+(m*184|0)+36|0,q+(m*184|0)+68|0,+g[q+(m*184|0)+84>>2],c[q+(m*184|0)+152>>2]|0,s);m=m+1|0}while((m|0)!=(r|0))}p=p+1|0}while((p|0)!=(n|0))}if((Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)==0){i=d;return}R=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;if(((Jb[c[(c[R>>2]|0)+48>>2]&63](R)|0)&3|0)==0){i=d;return}t=b+8|0;if((c[t>>2]|0)<=0){i=d;return}n=b+16|0;u=b+72|0;v=e+4|0;w=e+8|0;x=e+12|0;y=f+4|0;z=f+8|0;A=h+4|0;B=h+8|0;C=b+44|0;E=j+4|0;F=j+8|0;G=k+4|0;H=k+8|0;D=f+12|0;I=j+12|0;r=h+12|0;s=k+12|0;q=l+4|0;p=l+8|0;o=l+12|0;m=0;do{P=c[(c[n>>2]|0)+(m<<2)>>2]|0;Q=P+204|0;if((c[Q>>2]&32|0)==0){if((Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)!=0?(R=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0,((Jb[c[(c[R>>2]|0)+48>>2]&63](R)|0)&1|0)!=0):0){g[l>>2]=1.0;g[q>>2]=1.0;g[p>>2]=1.0;g[o>>2]=0.0;switch(c[P+216>>2]|0){case 1:{g[l>>2]=1.0;g[q>>2]=1.0;g[p>>2]=1.0;g[o>>2]=0.0;break};case 5:{g[l>>2]=1.0;g[q>>2]=1.0;g[p>>2]=0.0;g[o>>2]=0.0;break};case 4:{g[l>>2]=1.0;g[q>>2]=0.0;g[p>>2]=0.0;g[o>>2]=0.0;break};case 2:{g[l>>2]=0.0;g[q>>2]=1.0;g[p>>2]=0.0;g[o>>2]=0.0;break};case 3:{g[l>>2]=0.0;g[q>>2]=1.0;g[p>>2]=1.0;g[o>>2]=0.0;break};default:{g[l>>2]=1.0;g[q>>2]=0.0;g[p>>2]=0.0;g[o>>2]=0.0}}oc[c[(c[b>>2]|0)+28>>2]&63](b,P+4|0,c[P+192>>2]|0,l)}R=c[u>>2]|0;if((R|0)!=0?((Jb[c[(c[R>>2]|0)+48>>2]&63](R)|0)&2|0)!=0:0){g[e>>2]=1.0;g[v>>2]=0.0;g[w>>2]=0.0;g[x>>2]=0.0;R=P+192|0;S=c[R>>2]|0;oc[c[(c[S>>2]|0)+8>>2]&63](S,P+4|0,f,h);g[f>>2]=+g[f>>2]+-.019999999552965164;g[y>>2]=+g[y>>2]+-.019999999552965164;g[z>>2]=+g[z>>2]+-.019999999552965164;g[h>>2]=+g[h>>2]+.019999999552965164;g[A>>2]=+g[A>>2]+.019999999552965164;g[B>>2]=+g[B>>2]+.019999999552965164;if(((a[C]|0)!=0?(c[P+236>>2]|0)==2:0)?(c[Q>>2]&3|0)==0:0){S=c[R>>2]|0;oc[c[(c[S>>2]|0)+8>>2]&63](S,P+68|0,j,k);O=+g[j>>2]+-.019999999552965164;g[j>>2]=O;M=+g[E>>2]+-.019999999552965164;g[E>>2]=M;N=+g[F>>2]+-.019999999552965164;g[F>>2]=N;J=+g[k>>2]+.019999999552965164;g[k>>2]=J;L=+g[G>>2]+.019999999552965164;g[G>>2]=L;K=+g[H>>2]+.019999999552965164;g[H>>2]=K;if(O<+g[f>>2]){g[f>>2]=O}if(M<+g[y>>2]){g[y>>2]=M}if(N<+g[z>>2]){g[z>>2]=N}M=+g[I>>2];if(M<+g[D>>2]){g[D>>2]=M}if(+g[h>>2]<J){g[h>>2]=J}if(+g[A>>2]<L){g[A>>2]=L}if(+g[B>>2]<K){g[B>>2]=K}J=+g[s>>2];if(+g[r>>2]<J){g[r>>2]=J}}S=c[u>>2]|0;oc[c[(c[S>>2]|0)+52>>2]&63](S,f,h,e)}}m=m+1|0}while((m|0)<(c[t>>2]|0));i=d;return}function tk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;f=i;i=i+80|0;e=f;g=b+8|0;M=c[g>>2]|0;if((M|0)>0){q=b+16|0;r=0;do{s=c[(c[q>>2]|0)+(r<<2)>>2]|0;if((c[s+236>>2]|0)==1){Hb[c[(c[s>>2]|0)+24>>2]&127](s,d);M=c[g>>2]|0}r=r+1|0}while((r|0)<(M|0))}E=e+16|0;a[E]=1;w=e+12|0;c[w>>2]=0;v=e+4|0;c[v>>2]=0;x=e+8|0;c[x>>2]=0;B=e+36|0;a[B]=1;z=e+32|0;c[z>>2]=0;y=e+24|0;c[y>>2]=0;F=e+28|0;c[F>>2]=0;s=e+56|0;a[s]=1;t=e+52|0;c[t>>2]=0;q=e+44|0;c[q>>2]=0;r=e+48|0;c[r>>2]=0;C=e+76|0;a[C]=1;u=e+72|0;c[u>>2]=0;A=e+64|0;c[A>>2]=0;D=e+68|0;c[D>>2]=0;if((M|0)<=0){vk(e);i=f;return}b=b+16|0;P=-1;O=0;J=0;N=0;K=0;G=0;while(1){H=c[(c[(c[b>>2]|0)+(G<<2)>>2]|0)+192>>2]|0;L=H;I=L+~(L<<15)|0;I=(I>>10^I)*9|0;I=I>>6^I;I=I+~(I<<11)|0;I=I>>16^I;P=I&P;a:do{if(P>>>0<O>>>0?(h=c[J+(P<<2)>>2]|0,!((h|0)==-1)):0){P=c[u>>2]|0;Q=h;while(1){if((H|0)==(c[P+(Q<<3)>>2]|0)){break}Q=c[N+(Q<<2)>>2]|0;if((Q|0)==-1){j=15;break a}}if(!(!((Q|0)==-1)?((c[t>>2]|0)+(Q<<2)|0)!=0:0)){j=15}}else{j=15}}while(0);if((j|0)==15){j=0;M=I&K+ -1;b:do{if(M>>>0<O>>>0?(k=c[J+(M<<2)>>2]|0,!((k|0)==-1)):0){O=c[u>>2]|0;P=k;while(1){if((H|0)==(c[O+(P<<3)>>2]|0)){break}P=c[N+(P<<2)>>2]|0;if((P|0)==-1){j=22;break b}}if(!((P|0)==-1)){c[(c[t>>2]|0)+(P<<2)>>2]=H}else{j=22}}else{j=22}}while(0);if((j|0)==22){j=0;J=c[q>>2]|0;if((J|0)==(K|0)){O=(K|0)==0?1:K<<1;if((K|0)<(O|0)){if((O|0)!=0?(c[3580]=(c[3580]|0)+1,p=vr((O<<2|3)+16|0)|0,(p|0)!=0):0){N=p+19&-16;c[N+ -4>>2]=p}else{N=0}if((K|0)>0){P=0;do{Q=N+(P<<2)|0;if((Q|0)!=0){c[Q>>2]=c[(c[t>>2]|0)+(P<<2)>>2]}P=P+1|0}while((P|0)!=(K|0))}P=c[t>>2]|0;if((P|0)!=0){if((a[s]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[P+ -4>>2]|0)}c[t>>2]=0}a[s]=1;c[t>>2]=N;c[r>>2]=O;N=K}else{N=K}}else{N=J}O=(c[t>>2]|0)+(N<<2)|0;if((O|0)!=0){c[O>>2]=H}c[q>>2]=N+1;O=c[A>>2]|0;if((O|0)==(c[D>>2]|0)?(o=(O|0)==0?1:O<<1,(O|0)<(o|0)):0){if((o|0)!=0?(c[3580]=(c[3580]|0)+1,m=vr((o<<3|3)+16|0)|0,(m|0)!=0):0){N=m+19&-16;c[N+ -4>>2]=m}else{N=0}if((O|0)>0){P=0;do{Q=N+(P<<3)|0;if((Q|0)!=0){S=(c[u>>2]|0)+(P<<3)|0;R=c[S+4>>2]|0;c[Q>>2]=c[S>>2];c[Q+4>>2]=R}P=P+1|0}while((P|0)!=(O|0))}O=c[u>>2]|0;if((O|0)!=0){if((a[C]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[O+ -4>>2]|0)}c[u>>2]=0}a[C]=1;c[u>>2]=N;c[D>>2]=o;O=c[A>>2]|0}N=(c[u>>2]|0)+(O<<3)|0;if((N|0)!=0){S=N;c[S>>2]=L;c[S+4>>2]=0}c[A>>2]=O+1;L=c[r>>2]|0;if((K|0)<(L|0)){K=c[v>>2]|0;do{if((K|0)<(L|0)){if((K|0)<=(L|0)){if((c[x>>2]|0)<(L|0)){if((L|0)!=0?(c[3580]=(c[3580]|0)+1,l=vr((L<<2|3)+16|0)|0,(l|0)!=0):0){M=l+19&-16;c[M+ -4>>2]=l}else{M=0}N=c[w>>2]|0;if((K|0)>0){P=0;do{O=M+(P<<2)|0;if((O|0)!=0){c[O>>2]=c[N+(P<<2)>>2]}P=P+1|0}while((P|0)!=(K|0))}if((N|0)!=0){if((a[E]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[N+ -4>>2]|0)}c[w>>2]=0}a[E]=1;c[w>>2]=M;c[x>>2]=L}else{M=c[w>>2]|0}N=K;do{O=M+(N<<2)|0;if((O|0)!=0){c[O>>2]=0}N=N+1|0}while((N|0)!=(L|0))}c[v>>2]=L;M=c[y>>2]|0;if((M|0)<(L|0)){if((c[F>>2]|0)<(L|0)){if((L|0)!=0?(c[3580]=(c[3580]|0)+1,n=vr((L<<2|3)+16|0)|0,(n|0)!=0):0){N=n+19&-16;c[N+ -4>>2]=n}else{N=0}O=c[z>>2]|0;if((M|0)>0){Q=0;do{P=N+(Q<<2)|0;if((P|0)!=0){c[P>>2]=c[O+(Q<<2)>>2]}Q=Q+1|0}while((Q|0)!=(M|0))}if((O|0)!=0){if((a[B]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[O+ -4>>2]|0)}c[z>>2]=0}a[B]=1;c[z>>2]=N;c[F>>2]=L}else{N=c[z>>2]|0}do{O=N+(M<<2)|0;if((O|0)!=0){c[O>>2]=0}M=M+1|0}while((M|0)!=(L|0))}c[y>>2]=L;if((L|0)>0){S=L<<2;Cr(c[w>>2]|0,-1,S|0)|0;Cr(c[z>>2]|0,-1,S|0)|0}if((K|0)<=0){L=c[r>>2]|0;break}O=c[u>>2]|0;N=c[w>>2]|0;M=c[z>>2]|0;L=c[r>>2]|0;P=0;do{S=c[O+(P<<3)>>2]|0;S=S+~(S<<15)|0;S=(S>>10^S)*9|0;S=S>>6^S;S=S+~(S<<11)|0;S=N+(((S>>16^S)&L+ -1)<<2)|0;c[M+(P<<2)>>2]=c[S>>2];c[S>>2]=P;P=P+1|0}while((P|0)!=(K|0))}}while(0);K=L;M=I&L+ -1}else{K=L}S=c[w>>2]|0;R=S+(M<<2)|0;N=c[z>>2]|0;c[N+(J<<2)>>2]=c[R>>2];c[R>>2]=J;J=S}Hb[c[(c[H>>2]|0)+60>>2]&127](H,d);M=c[g>>2]|0}G=G+1|0;if((G|0)>=(M|0)){break}P=K+ -1|0;O=c[v>>2]|0}vk(e);i=f;return}function uk(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[b>>2]|0)+32>>2]&255](b);tk(a,b);Fb[c[(c[b>>2]|0)+36>>2]&255](b);i=d;return}function vk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;g=b+64|0;f=b+72|0;h=c[f>>2]|0;e=b+76|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+68>>2]=0;g=b+44|0;f=b+52|0;h=c[f>>2]|0;e=b+56|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+48>>2]=0;g=b+24|0;f=b+32|0;h=c[f>>2]|0;e=b+36|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+28>>2]=0;f=b+4|0;g=b+12|0;e=c[g>>2]|0;h=b+16|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+8|0;c[h>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+8|0;c[h>>2]=0;i=d;return}function wk(a){a=a|0;return}function xk(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function yk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0;o=i;i=i+96|0;l=o+80|0;f=o+64|0;e=o+48|0;d=o+32|0;p=o+16|0;q=o;B=+g[b>>2];H=+g[a+28>>2];z=+g[b+4>>2];G=+g[a+32>>2];n=+g[b+8>>2];F=+g[a+36>>2];E=+g[a+44>>2];D=+g[a+48>>2];C=+g[a+52>>2];A=+g[a+60>>2];w=+g[a+64>>2];u=+g[a+68>>2];t=+g[a+76>>2];j=B*H+z*G+n*F+t;x=+g[a+80>>2];r=B*E+z*D+n*C+x;s=+g[a+84>>2];n=B*A+z*w+n*u+s;g[l>>2]=j;g[l+4>>2]=r;g[l+8>>2]=n;g[l+12>>2]=0.0;z=+g[b+16>>2];B=+g[b+20>>2];m=+g[b+24>>2];h=z*H+B*G+m*F+t;k=z*E+B*D+m*C+x;m=z*A+B*w+m*u+s;g[f>>2]=h;g[f+4>>2]=k;g[f+8>>2]=m;g[f+12>>2]=0.0;B=+g[b+32>>2];z=+g[b+36>>2];v=+g[b+40>>2];t=B*H+z*G+v*F+t;x=B*E+z*D+v*C+x;s=B*A+z*w+v*u+s;g[e>>2]=t;g[e+4>>2]=x;g[e+8>>2]=s;g[e+12>>2]=0.0;u=(j+h+t)*.3333333432674408;v=(r+k+x)*.3333333432674408;w=(n+m+s)*.3333333432674408;g[d>>2]=u;g[d+4>>2]=v;g[d+8>>2]=w;g[d+12>>2]=0.0;b=a+8|0;y=c[b>>2]|0;if(((Jb[c[(c[y>>2]|0)+48>>2]&63](y)|0)&16384|0)==0){q=c[b>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;y=a+12|0;oc[p&63](q,l,f,y);q=c[b>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;oc[p&63](q,f,e,y);b=c[b>>2]|0;q=c[b>>2]|0;q=q+8|0;q=c[q>>2]|0;oc[q&63](b,e,l,y);i=o;return}C=h-j;G=k-r;B=m-n;H=t-j;D=x-r;F=s-n;E=G*F-B*D;F=B*H-C*F;H=C*D-G*H;G=1.0/+R(+(H*H+(E*E+F*F)));g[p>>2]=1.0;g[p+4>>2]=1.0;g[p+8>>2]=0.0;g[p+12>>2]=0.0;y=c[b>>2]|0;I=c[(c[y>>2]|0)+8>>2]|0;g[q>>2]=G*E+u;g[q+4>>2]=G*F+v;g[q+8>>2]=G*H+w;g[q+12>>2]=0.0;oc[I&63](y,d,q,p);q=c[b>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;y=a+12|0;oc[p&63](q,l,f,y);q=c[b>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;oc[p&63](q,f,e,y);b=c[b>>2]|0;q=c[b>>2]|0;q=q+8|0;q=c[q>>2]|0;oc[q&63](b,e,l,y);i=o;return}function zk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;oc[c[(c[a>>2]|0)+8>>2]&63](a,b,d,e);i=f;return}function Ak(a){a=a|0;var b=0;b=i;wr(a+ -4|0);i=b;return}function Bk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;a=a+ -4|0;oc[c[(c[a>>2]|0)+8>>2]&63](a,b,d,e);i=f;return}function Ck(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Dk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0.0,k=0,l=0;d=i;i=i+32|0;f=d;e=a+184|0;h=c[e>>2]|0;if(+g[h+4>>2]==0.0){b=0;i=d;return b|0}b=c[b>>2]|0;if(!($b[c[(c[h>>2]|0)+8>>2]&31](h,c[b+188>>2]|0)|0)){b=1;i=d;return b|0}k=c[a+192>>2]|0;l=c[b+192>>2]|0;h=c[e>>2]|0;j=+g[a+188>>2];c[f>>2]=0;c[f+4>>2]=l;c[f+8>>2]=b;c[f+12>>2]=b+4;c[f+16>>2]=-1;c[f+20>>2]=-1;kk(k,a+36|0,a+100|0,f,h,j);b=1;i=d;return b|0}function Ek(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Fk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0;d=i;i=i+32|0;f=d;e=a+216|0;h=c[e>>2]|0;if(+g[h+4>>2]==0.0){b=0;i=d;return b|0}b=c[b>>2]|0;if(!($b[c[(c[h>>2]|0)+8>>2]&31](h,c[b+188>>2]|0)|0)){b=1;i=d;return b|0}j=c[b+192>>2]|0;h=c[e>>2]|0;c[f>>2]=0;c[f+4>>2]=j;c[f+8>>2]=b;c[f+12>>2]=b+4;c[f+16>>2]=-1;c[f+20>>2]=-1;hk(a+68|0,a+132|0,f,h);b=1;i=d;return b|0}function Gk(a){a=a|0;return}function Hk(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Ik(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+12>>2]|0;a=$b[c[(c[a>>2]|0)+8>>2]&31](a,b)|0;i=d;return a|0}function Jk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0;e=i;i=i+16|0;h=e;c[h>>2]=-1;c[h+4>>2]=c[a+16>>2];f=b+4|0;if((c[f>>2]|0)==0){c[f>>2]=h}h=a+12|0;f=c[h>>2]|0;j=+ac[c[(c[f>>2]|0)+12>>2]&7](f,b,d);g[a+4>>2]=+g[(c[h>>2]|0)+4>>2];i=e;return+j}function Kk(a){a=a|0;return}function Lk(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Mk(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+64|0;l=j+48|0;k=j;c[l>>2]=f;c[l+4>>2]=h;h=c[a+212>>2]|0;if(!(+g[h+4>>2]>=e)){i=j;return+e}c[k>>2]=c[a+216>>2];c[k+4>>2]=l;f=k+8|0;c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];f=k+24|0;c[f+0>>2]=c[d+0>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];g[k+40>>2]=e;e=+ac[c[(c[h>>2]|0)+12>>2]&7](h,k,0);i=j;return+e}function Nk(a){a=a|0;return}function Ok(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Pk(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+64|0;l=j+48|0;k=j;c[l>>2]=f;c[l+4>>2]=h;h=c[a+212>>2]|0;if(!(+g[h+4>>2]>=e)){i=j;return+e}c[k>>2]=c[a+216>>2];c[k+4>>2]=l;f=k+8|0;c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];f=k+24|0;c[f+0>>2]=c[d+0>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];g[k+40>>2]=e;e=+ac[c[(c[h>>2]|0)+12>>2]&7](h,k,1);i=j;return+e}function Qk(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Rk(a){a=a|0;return}function Sk(a){a=a|0;return}function Tk(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Uk(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+20>>2]|0;a=$b[c[(c[a>>2]|0)+8>>2]&31](a,b)|0;i=d;return a|0}function Vk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0;e=i;i=i+16|0;h=e;c[h>>2]=-1;c[h+4>>2]=c[a+24>>2];f=b+4|0;if((c[f>>2]|0)==0){c[f>>2]=h}h=a+20|0;f=c[h>>2]|0;j=+ac[c[(c[f>>2]|0)+12>>2]&7](f,b,d);g[a+4>>2]=+g[(c[h>>2]|0)+4>>2];i=e;return+j}function Wk(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Xk(a,b,c){a=a|0;b=b|0;c=c|0;return}function Yk(a,d){a=a|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0;e=i;i=i+128|0;j=e+56|0;h=e+32|0;f=e;l=c[d+36>>2]|0;k=c[(c[a+8>>2]|0)+24>>2]|0;d=c[k+(l*80|0)+64>>2]|0;Mf(j,c[a+12>>2]|0,k+(l*80|0)|0);k=c[a+4>>2]|0;c[h>>2]=0;c[h+4>>2]=d;c[h+8>>2]=k;c[h+12>>2]=j;c[h+16>>2]=-1;c[h+20>>2]=l;j=c[a+24>>2]|0;k=f+4|0;g[k>>2]=1.0;c[f+8>>2]=0;b[f+12>>1]=1;b[f+14>>1]=-1;d=f+16|0;c[d>>2]=0;c[f>>2]=5952;c[f+20>>2]=j;c[f+24>>2]=l;g[k>>2]=+g[j+4>>2];c[d>>2]=c[j+16>>2];hk(c[a+16>>2]|0,c[a+20>>2]|0,h,f);i=e;return}function Zk(a,b,d){a=a|0;b=b|0;d=+d;var e=0;e=i;Hb[c[(c[a>>2]|0)+12>>2]&127](a,b);i=e;return}function _k(a,b){a=a|0;b=b|0;return 1}function $k(a,b){a=a|0;b=b|0;return 1}function al(a){a=a|0;return}function bl(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function cl(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0;h=i;i=i+48|0;n=h+32|0;j=h;c[n>>2]=e;c[n+4>>2]=f;p=+g[b>>2];o=+g[b+4>>2];k=+g[b+8>>2];m=+g[a+56>>2]*p+ +g[a+60>>2]*o+ +g[a+64>>2]*k;l=p*+g[a+72>>2]+o*+g[a+76>>2]+k*+g[a+80>>2];k=p*+g[a+88>>2]+o*+g[a+92>>2]+k*+g[a+96>>2];c[j>>2]=c[a+48>>2];c[j+4>>2]=n;g[j+8>>2]=m;g[j+12>>2]=l;g[j+16>>2]=k;g[j+20>>2]=0.0;g[j+24>>2]=d;e=c[a+44>>2]|0;d=+ac[c[(c[e>>2]|0)+12>>2]&7](e,j,1);i=h;return+d}function dl(a){a=a|0;return}function el(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function fl(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0;h=i;i=i+48|0;n=h+32|0;j=h;c[n>>2]=e;c[n+4>>2]=f;p=+g[b>>2];o=+g[b+4>>2];k=+g[b+8>>2];m=+g[a+56>>2]*p+ +g[a+60>>2]*o+ +g[a+64>>2]*k;l=p*+g[a+72>>2]+o*+g[a+76>>2]+k*+g[a+80>>2];k=p*+g[a+88>>2]+o*+g[a+92>>2]+k*+g[a+96>>2];c[j>>2]=c[a+48>>2];c[j+4>>2]=n;g[j+8>>2]=m;g[j+12>>2]=l;g[j+16>>2]=k;g[j+20>>2]=0.0;g[j+24>>2]=d;e=c[a+44>>2]|0;d=+ac[c[(c[e>>2]|0)+12>>2]&7](e,j,1);i=h;return+d}function gl(a,b){a=a|0;b=+b;return}function hl(a,b){a=a|0;b=b|0;return}function il(a,b,c){a=a|0;b=b|0;c=c|0;return}function jl(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0;l=i;i=i+48|0;m=l+32|0;k=l+16|0;e=l;h=+g[b+60>>2]*.5;f=c[b+68>>2]|0;n=+g[d>>2];o=+g[d+4>>2];p=+g[d+8>>2];p=+R(+(n*n+o*o+p*p));j=c[b+64>>2]|0;if(+g[d+(f<<2)>>2]>p*+g[b+52>>2]){g[m+(j<<2)>>2]=0.0;g[m+(f<<2)>>2]=h;g[m+(c[b+72>>2]<<2)>>2]=0.0;c[a+0>>2]=c[m+0>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];i=l;return}n=+g[d+(j<<2)>>2];m=c[b+72>>2]|0;o=+g[d+(m<<2)>>2];p=+R(+(n*n+o*o));if(p>1.1920928955078125e-7){p=+g[b+56>>2]/p;g[k+(j<<2)>>2]=n*p;g[k+(f<<2)>>2]=-h;g[k+(m<<2)>>2]=p*o;c[a+0>>2]=c[k+0>>2];c[a+4>>2]=c[k+4>>2];c[a+8>>2]=c[k+8>>2];c[a+12>>2]=c[k+12>>2];i=l;return}else{g[e+(j<<2)>>2]=0.0;g[e+(f<<2)>>2]=-h;g[e+(m<<2)>>2]=0.0;c[a+0>>2]=c[e+0>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];i=l;return}}function ll(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;kl(a,b,c);i=d;return}function ml(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;if((e|0)<=0){i=f;return}h=0;do{j=d+(h<<4)|0;kl(g,a,b+(h<<4)|0);c[j+0>>2]=c[g+0>>2];c[j+4>>2]=c[g+4>>2];c[j+8>>2]=c[g+8>>2];c[j+12>>2]=c[g+12>>2];h=h+1|0}while((h|0)!=(e|0));i=f;return}function nl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;kl(a,b,d);if(!(+Vb[c[(c[b>>2]|0)+48>>2]&3](b)!=0.0)){i=e;return}f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];d=f*f+h*h+j*j<1.4210854715202004e-14;j=d?-1.0:j;h=d?-1.0:h;l=d?-1.0:f;f=1.0/+R(+(j*j+(l*l+h*h)));k=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);g[a>>2]=f*l*k+ +g[a>>2];d=a+4|0;g[d>>2]=k*f*h+ +g[d>>2];d=a+8|0;g[d>>2]=k*f*j+ +g[d>>2];i=e;return}function ol(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0,j=0,k=0;k=c[a+68>>2]|0;j=c[a+64>>2]|0;i=c[a+72>>2]|0;h=a+60|0;e=+g[b+(k<<2)>>2]/+g[a+(k<<2)+12>>2]*+g[h>>2];g[h>>2]=e;h=a+56|0;f=+g[h>>2]*(+g[b+(j<<2)>>2]/+g[a+(j<<2)+12>>2]+ +g[b+(i<<2)>>2]/+g[a+(i<<2)+12>>2])*.5;g[h>>2]=f;g[a+52>>2]=f/+R(+(e*e+f*f));f=+Q(+(+g[b>>2]));e=+Q(+(+g[b+4>>2]));d=+Q(+(+g[b+8>>2]));g[a+12>>2]=f;g[a+16>>2]=e;g[a+20>>2]=d;g[a+24>>2]=0.0;return}function pl(a){a=a|0;return}function ql(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function rl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;oc[c[(c[a>>2]|0)+80>>2]&63](a,b,d,e);i=f;return}function sl(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+96|0;n=e+32|0;l=e+16|0;m=e;g[n>>2]=1.0;o=n+4|0;p=n+20|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;g[p>>2]=1.0;p=n+24|0;o=n+40|0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;g[o>>2]=1.0;o=n+44|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;oc[c[(c[a>>2]|0)+8>>2]&63](a,n,l,m);h=(+g[m>>2]- +g[l>>2])*.5;f=(+g[m+4>>2]- +g[l+4>>2])*.5;k=(+g[m+8>>2]- +g[l+8>>2])*.5;j=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);h=(h+j)*2.0;f=(f+j)*2.0;j=(k+j)*2.0;h=h*h;f=f*f;j=j*j;b=b*.0833333283662796;g[d>>2]=b*(f+j);g[d+4>>2]=b*(h+j);g[d+8>>2]=b*(h+f);g[d+12>>2]=0.0;i=e;return}function tl(a){a=a|0;return 6944}function ul(a,b){a=a|0;b=b|0;g[a>>2]=0.0;g[a+4>>2]=1.0;g[a+8>>2]=0.0;g[a+12>>2]=0.0;return}function vl(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function wl(a){a=a|0;return 60}function xl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=$b[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=$b[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Hb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+68>>2];i=e;return 6928}function yl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0,aa=0,ba=0.0,ca=0.0,da=0.0;n=i;i=i+288|0;o=n+200|0;h=n+64|0;l=n+48|0;m=n+32|0;j=n+16|0;k=n;p=b+16|0;if((c[p>>2]|0)==0){$=c[b+12>>2]|0;O=c[b+20>>2]|0;da=+g[d>>2];ba=+g[d+4>>2];s=+g[d+8>>2];ca=+g[d+16>>2];q=+g[d+20>>2];C=+g[d+24>>2];z=+g[d+32>>2];E=+g[d+36>>2];D=+g[d+40>>2];Q=+g[d+48>>2];P=+g[d+52>>2];w=+g[d+56>>2];L=e+16|0;I=e+32|0;N=e+4|0;K=e+20|0;H=e+36|0;M=e+8|0;J=e+24|0;G=e+40|0;_=+g[e>>2];Z=+g[L>>2];Y=+g[I>>2];V=+g[N>>2];U=+g[K>>2];T=+g[H>>2];u=+g[M>>2];t=+g[J>>2];x=+g[G>>2];o=e+48|0;r=-+g[o>>2];F=e+52|0;v=-+g[F>>2];h=e+56|0;y=-+g[h>>2];X=da*_+ca*Z+z*Y;W=ba*_+q*Z+E*Y;A=s*_+C*Z+D*Y;S=da*V+ca*U+z*T;R=ba*V+q*U+E*T;B=s*V+C*U+D*T;z=da*u+ca*t+z*x;E=ba*u+q*t+E*x;D=s*u+C*t+D*x;aa=c[(c[$>>2]|0)+64>>2]|0;p=O+48|0;C=-+g[p>>2];d=O+52|0;s=-+g[d>>2];b=O+56|0;q=-+g[b>>2];g[m>>2]=X*C+S*s+z*q;g[m+4>>2]=W*C+R*s+E*q;g[m+8>>2]=A*C+B*s+D*q;g[m+12>>2]=0.0;kc[aa&63](l,$,m);q=+g[l>>2];s=+g[l+4>>2];C=+g[l+8>>2];A=Q*_+P*Z+w*Y+(_*r+Z*v+Y*y)+(X*q+W*s+A*C);B=Q*V+P*U+w*T+(V*r+U*v+T*y)+(S*q+R*s+B*C);C=Q*u+P*t+w*x+(u*r+t*v+x*y)+(z*q+E*s+D*C);D=+g[p>>2];s=+g[d>>2];E=+g[b>>2];q=E*C+(D*A+s*B)- +g[O+64>>2];D=A-D*q;s=B-s*q;E=C-E*q;C=+g[e>>2];B=+g[N>>2];A=+g[M>>2];z=+g[L>>2];y=+g[K>>2];x=+g[J>>2];v=+g[I>>2];t=+g[H>>2];r=+g[G>>2];u=z*D+s*y+E*x+ +g[F>>2];w=D*v+s*t+E*r+ +g[h>>2];g[j>>2]=A*E+(C*D+B*s)+ +g[o>>2];g[j+4>>2]=u;g[j+8>>2]=w;g[j+12>>2]=0.0;w=+g[p>>2];u=+g[d>>2];s=+g[b>>2];g[k>>2]=C*w+B*u+A*s;g[k+4>>2]=w*z+u*y+s*x;g[k+8>>2]=w*v+u*t+s*r;g[k+12>>2]=0.0;jc[c[(c[f>>2]|0)+16>>2]&15](f,k,j,q);i=n;return}else{M=b+4|0;N=c[M>>2]|0;a[N+312|0]=0;c[N>>2]=0;a[N+356|0]=1;g[N+292>>2]=999999984306749400.0;g[N+296>>2]=999999984306749400.0;g[N+300>>2]=999999984306749400.0;g[N+304>>2]=0.0;O=N+336|0;N=N+332|0;c[O+0>>2]=0;c[O+4>>2]=0;c[O+8>>2]=0;c[O+12>>2]=0;a[O+16|0]=0;a[N]=a[N]&-16;N=c[b+12>>2]|0;O=c[p>>2]|0;$=c[N+4>>2]|0;aa=c[O+4>>2]|0;ca=+Vb[c[(c[N>>2]|0)+48>>2]&3](N);L=c[p>>2]|0;da=+Vb[c[(c[L>>2]|0)+48>>2]&3](L);M=c[M>>2]|0;L=c[b+8>>2]|0;c[o>>2]=9040;g[o+4>>2]=0.0;g[o+8>>2]=1.0;g[o+12>>2]=0.0;g[o+16>>2]=0.0;c[o+20>>2]=L;c[o+24>>2]=M;c[o+28>>2]=N;c[o+32>>2]=O;c[o+36>>2]=$;c[o+40>>2]=aa;g[o+44>>2]=ca;g[o+48>>2]=da;a[o+52|0]=0;c[o+60>>2]=-1;c[o+72>>2]=1;c[o+76>>2]=1;g[h+128>>2]=999999984306749400.0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];aa=h+16|0;$=d+16|0;c[aa+0>>2]=c[$+0>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];aa=h+32|0;$=d+32|0;c[aa+0>>2]=c[$+0>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];aa=h+48|0;$=d+48|0;c[aa+0>>2]=c[$+0>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];aa=h+64|0;c[aa+0>>2]=c[e+0>>2];c[aa+4>>2]=c[e+4>>2];c[aa+8>>2]=c[e+8>>2];c[aa+12>>2]=c[e+12>>2];aa=h+80|0;$=e+16|0;c[aa+0>>2]=c[$+0>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];aa=h+96|0;$=e+32|0;c[aa+0>>2]=c[$+0>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];aa=h+112|0;$=e+48|0;c[aa+0>>2]=c[$+0>>2];c[aa+4>>2]=c[$+4>>2];c[aa+8>>2]=c[$+8>>2];c[aa+12>>2]=c[$+12>>2];fn(o,h,f,0,0);i=n;return}}function zl(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0.0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0.0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0,$=0;k=i;i=i+304|0;z=k+260|0;_=k+256|0;m=k+240|0;p=k+224|0;l=k+208|0;r=k+192|0;n=k+128|0;q=k+64|0;u=k+48|0;t=k;v=+g[e+48>>2]- +g[d+48>>2];o=+g[e+52>>2]- +g[d+52>>2];s=+g[e+56>>2]- +g[d+56>>2];dg(d,e,z,_);J=+g[_>>2];I=+g[z>>2]*J;A=J*+g[z+4>>2];J=J*+g[z+8>>2];g[m>>2]=I;g[m+4>>2]=A;g[m+8>>2]=J;g[m+12>>2]=0.0;y=+g[h+48>>2]- +g[f+48>>2];x=+g[h+52>>2]- +g[f+52>>2];w=+g[h+56>>2]- +g[f+56>>2];dg(f,h,z,_);U=+g[_>>2];L=+g[z>>2]*U;T=U*+g[z+4>>2];U=U*+g[z+8>>2];g[p>>2]=L;g[p+4>>2]=T;g[p+8>>2]=U;g[p+12>>2]=0.0;h=c[b+12>>2]|0;V=+Vb[c[(c[h>>2]|0)+16>>2]&3](h);h=c[b+16>>2]|0;if((h|0)==0){W=0.0}else{W=+Vb[c[(c[h>>2]|0)+16>>2]&3](h)}I=V*+R(+(I*I+A*A+J*J))+W*+R(+(L*L+T*T+U*U));L=y-v;A=x-o;J=w-s;if(I+ +R(+(L*L+A*A+J*J))==0.0){_=0;i=k;return _|0}c[z>>2]=7032;_=z+36|0;g[_>>2]=999999984306749400.0;S=z+40|0;a[S]=0;yl(b,d,f,z);S=(a[S]|0)==0;Q=z+20|0;c[l+0>>2]=c[Q+0>>2];c[l+4>>2]=c[Q+4>>2];c[l+8>>2]=c[Q+8>>2];c[l+12>>2]=c[Q+12>>2];if(S){_=0;i=k;return _|0}N=j+172|0;T=+g[z+4>>2];U=+g[z+8>>2];V=+g[z+12>>2];if(I+(L*T+A*U+J*V)<=1.1920928955078125e-7){_=0;i=k;return _|0}e=j+168|0;Q=t+36|0;O=t+40|0;P=t+20|0;S=t+4|0;K=t+8|0;D=t+12|0;C=t+16|0;B=n+48|0;H=u+4|0;G=u+8|0;F=u+12|0;h=r+4|0;M=r+8|0;E=r+12|0;W=+g[z+16>>2];Z=+g[_>>2]+ +g[N>>2];X=0.0;z=0;while(1){if(!(Z>.0010000000474974513)){f=18;break}_=c[e>>2]|0;if((_|0)!=0){$=c[(c[_>>2]|0)+20>>2]|0;g[r>>2]=1.0;g[h>>2]=1.0;g[M>>2]=1.0;g[E>>2]=0.0;Kb[$&3](_,l,.20000000298023224,r)}T=I+(J*V+(A*U+L*T));if(T<=1.1920928955078125e-7){j=0;f=19;break}Y=X+Z/T;if(!(!(Y<0.0)&!(Y>1.0)&!(Y<=X))){j=0;f=19;break}Wf(d,v,o,s,m,Y,n);Wf(f,y,x,w,p,Y,q);_=c[e>>2]|0;if((_|0)!=0){$=c[(c[_>>2]|0)+20>>2]|0;g[u>>2]=1.0;g[H>>2]=0.0;g[G>>2]=0.0;g[F>>2]=0.0;Kb[$&3](_,B,.20000000298023224,u)}Eb[c[c[j>>2]>>2]&15](j,Y);c[t>>2]=7032;g[Q>>2]=999999984306749400.0;a[O]=0;yl(b,n,q,t);if((a[O]|0)==0){f=16;break}Z=+g[Q>>2]+ +g[N>>2];c[l+0>>2]=c[P+0>>2];c[l+4>>2]=c[P+4>>2];c[l+8>>2]=c[P+8>>2];c[l+12>>2]=c[P+12>>2];_=z+1|0;if((z|0)>63){f=17;break}else{T=+g[S>>2];U=+g[K>>2];V=+g[D>>2];W=+g[C>>2];X=Y;z=_}}if((f|0)==16){kc[c[(c[j>>2]|0)+8>>2]&63](j,-1,z);$=0;i=k;return $|0}else if((f|0)==17){kc[c[(c[j>>2]|0)+8>>2]&63](j,-2,_);$=0;i=k;return $|0}else if((f|0)==18){g[j+164>>2]=X;g[j+132>>2]=T;g[j+136>>2]=U;g[j+140>>2]=V;g[j+144>>2]=W;$=j+148|0;c[$+0>>2]=c[l+0>>2];c[$+4>>2]=c[l+4>>2];c[$+8>>2]=c[l+8>>2];c[$+12>>2]=c[l+12>>2];$=1;i=k;return $|0}else if((f|0)==19){i=k;return j|0}return 0}function Al(a){a=a|0;return}function Bl(a){a=a|0;return}function Cl(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Dl(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function El(a,b,c){a=a|0;b=b|0;c=c|0;return}function Fl(a,b,c){a=a|0;b=b|0;c=c|0;return}function Gl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0;h=i;j=b+36|0;if(!(+g[j>>2]>f)){i=h;return}a[b+40|0]=1;k=b+4|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];d=b+20|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];g[j>>2]=f;i=h;return}function Hl(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0;e=+Q(+(+g[b>>2]));d=+Q(+(+g[b+4>>2]));c=+Q(+(+g[b+8>>2]));g[a+12>>2]=e;g[a+16>>2]=d;g[a+20>>2]=c;g[a+24>>2]=0.0;return}function Il(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0;z=i;i=i+96|0;h=z+80|0;x=z+64|0;t=z+48|0;D=z+32|0;M=z+16|0;I=z;H=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);j=h+4|0;k=h+8|0;r=b+16|0;s=b+32|0;l=b+4|0;m=b+20|0;n=b+36|0;o=b+8|0;p=b+24|0;q=b+40|0;u=t+4|0;v=t+8|0;w=t+12|0;y=x+4|0;f=x+8|0;C=b+48|0;A=b+52|0;B=b+56|0;E=D+4|0;F=D+8|0;G=D+12|0;J=I+4|0;K=I+8|0;L=I+12|0;N=M+4|0;O=M+8|0;P=0;do{W=h+(P<<2)|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[W>>2]=1.0;Q=c[(c[a>>2]|0)+64>>2]|0;R=+g[h>>2];S=+g[j>>2];T=+g[k>>2];U=R*+g[l>>2]+S*+g[m>>2]+T*+g[n>>2];V=R*+g[o>>2]+S*+g[p>>2]+T*+g[q>>2];g[t>>2]=+g[b>>2]*R+ +g[r>>2]*S+ +g[s>>2]*T;g[u>>2]=U;g[v>>2]=V;g[w>>2]=0.0;kc[Q&63](x,a,t);V=+g[x>>2];U=+g[y>>2];T=+g[f>>2];S=V*+g[r>>2]+U*+g[m>>2]+T*+g[p>>2]+ +g[A>>2];R=V*+g[s>>2]+U*+g[n>>2]+T*+g[q>>2]+ +g[B>>2];g[D>>2]=V*+g[b>>2]+U*+g[l>>2]+T*+g[o>>2]+ +g[C>>2];g[E>>2]=S;g[F>>2]=R;g[G>>2]=0.0;Q=D+(P<<2)|0;g[e+(P<<2)>>2]=H+ +g[Q>>2];g[W>>2]=-1.0;W=c[(c[a>>2]|0)+64>>2]|0;R=+g[h>>2];S=+g[j>>2];T=+g[k>>2];U=R*+g[l>>2]+S*+g[m>>2]+T*+g[n>>2];V=R*+g[o>>2]+S*+g[p>>2]+T*+g[q>>2];g[I>>2]=+g[b>>2]*R+ +g[r>>2]*S+ +g[s>>2]*T;g[J>>2]=U;g[K>>2]=V;g[L>>2]=0.0;kc[W&63](M,a,I);V=+g[M>>2];U=+g[N>>2];T=+g[O>>2];S=V*+g[r>>2]+U*+g[m>>2]+T*+g[p>>2]+ +g[A>>2];R=V*+g[s>>2]+U*+g[n>>2]+T*+g[q>>2]+ +g[B>>2];g[D>>2]=V*+g[b>>2]+U*+g[l>>2]+T*+g[o>>2]+ +g[C>>2];g[E>>2]=S;g[F>>2]=R;g[G>>2]=0.0;g[d+(P<<2)>>2]=+g[Q>>2]-H;P=P+1|0}while((P|0)!=3);i=z;return}function Jl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;kc[c[(c[b>>2]|0)+68>>2]&63](a,b,d);if(!(+Vb[c[(c[b>>2]|0)+48>>2]&3](b)!=0.0)){i=e;return}f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];d=f*f+h*h+j*j<1.4210854715202004e-14;j=d?-1.0:j;h=d?-1.0:h;l=d?-1.0:f;f=1.0/+R(+(j*j+(l*l+h*h)));k=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);g[a>>2]=f*l*k+ +g[a>>2];d=a+4|0;g[d>>2]=k*f*h+ +g[d>>2];d=a+8|0;g[d>>2]=k*f*j+ +g[d>>2];i=e;return}function Kl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0.0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;h=i;i=i+64|0;H=h+48|0;B=h+32|0;E=h+16|0;F=h;p=+g[d>>2];A=b+16|0;m=d+4|0;q=+g[m>>2];v=b+32|0;l=d+8|0;o=+g[l>>2];D=b+4|0;z=b+20|0;t=b+36|0;u=p*+g[D>>2]+q*+g[z>>2]+o*+g[t>>2];C=b+8|0;y=b+24|0;s=b+40|0;w=p*+g[C>>2]+q*+g[y>>2]+o*+g[s>>2];g[H>>2]=+g[b>>2]*p+ +g[A>>2]*q+ +g[v>>2]*o;J=H+4|0;g[J>>2]=u;I=H+8|0;g[I>>2]=w;g[H+12>>2]=0.0;kc[c[(c[a>>2]|0)+64>>2]&63](B,a,H);w=+g[B>>2];u=+g[B+4>>2];o=+g[B+8>>2];B=b+48|0;q=w*+g[b>>2]+u*+g[D>>2]+o*+g[C>>2]+ +g[B>>2];x=b+52|0;p=w*+g[A>>2]+u*+g[z>>2]+o*+g[y>>2]+ +g[x>>2];r=b+56|0;o=w*+g[v>>2]+u*+g[t>>2]+o*+g[s>>2]+ +g[r>>2];G=c[(c[a>>2]|0)+64>>2]|0;u=-+g[J>>2];w=-+g[I>>2];g[F>>2]=-+g[H>>2];g[F+4>>2]=u;g[F+8>>2]=w;g[F+12>>2]=0.0;kc[G&63](E,a,F);w=+g[E>>2];u=+g[E+4>>2];j=+g[E+8>>2];n=w*+g[b>>2]+u*+g[D>>2]+j*+g[C>>2]+ +g[B>>2];k=w*+g[A>>2]+u*+g[z>>2]+j*+g[y>>2]+ +g[x>>2];j=w*+g[v>>2]+u*+g[t>>2]+j*+g[s>>2]+ +g[r>>2];g[e>>2]=q*+g[d>>2]+p*+g[m>>2]+o*+g[l>>2];j=n*+g[d>>2]+k*+g[m>>2]+j*+g[l>>2];g[f>>2]=j;k=+g[e>>2];if(!(k>j)){i=h;return}g[e>>2]=j;g[f>>2]=k;i=h;return}function Ll(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0.0,z=0;e=i;i=i+80|0;z=e+64|0;x=e+48|0;u=e+32|0;p=e+16|0;f=e;switch(c[b+4>>2]|0){case 8:{c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;i=e;return};case 0:{f=b+28|0;h=+g[f>>2];j=+g[f+4>>2];j=+g[d+4>>2]>=0.0?j:-j;k=+g[f+8>>2];k=+g[d+8>>2]>=0.0?k:-k;g[a>>2]=+g[d>>2]>=0.0?h:-h;g[a+4>>2]=j;g[a+8>>2]=k;g[a+12>>2]=0.0;i=e;return};case 4:{f=c[b+104>>2]|0;p=c[b+96>>2]|0;h=+g[b+12>>2];j=+g[b+16>>2];k=+g[b+20>>2];m=+g[d>>2]*h;l=+g[d+4>>2]*j;q=+g[d+8>>2]*k;if((p|0)>0){b=0;n=-3.4028234663852886e+38;u=-1;while(1){o=m*+g[f+(b<<4)>>2]+l*+g[f+(b<<4)+4>>2]+q*+g[f+(b<<4)+8>>2];d=o>n;u=d?b:u;b=b+1|0;if((b|0)==(p|0)){break}else{n=d?o:n}}}else{u=-1}w=j*+g[f+(u<<4)+4>>2];y=k*+g[f+(u<<4)+8>>2];g[a>>2]=h*+g[f+(u<<4)>>2];g[a+4>>2]=w;g[a+8>>2]=y;g[a+12>>2]=0.0;i=e;return};case 10:{h=+g[d>>2];k=+g[d+4>>2];l=+g[d+8>>2];d=c[b+52>>2]|0;j=+g[b+(d<<2)+28>>2];n=+g[b+(((d+2|0)%3|0)<<2)+28>>2];m=h*h+k*k+l*l;if(m<9999999747378752.0e-20){h=1.0;k=0.0;l=0.0}else{y=1.0/+R(+m);h=h*y;k=k*y;l=l*y}x=p+4|0;z=p+8|0;u=p+(d<<2)|0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;g[u>>2]=j;o=n*h;m=n*k;n=n*l;r=+g[b+44>>2];v=h*r;s=k*r;r=l*r;w=+g[p>>2]+o-v;t=m+ +g[x>>2]-s;q=n+ +g[z>>2]-r;y=l*q+(h*w+k*t);if(!(y>-999999984306749400.0)){q=0.0;t=0.0;w=0.0;y=-999999984306749400.0}x=f+4|0;z=f+8|0;j=-j;u=f+(d<<2)|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;g[u>>2]=j;j=o+ +g[f>>2]-v;m=m+ +g[x>>2]-s;n=n+ +g[z>>2]-r;f=l*n+(h*j+k*m)>y;g[a>>2]=f?j:w;g[a+4>>2]=f?m:t;g[a+8>>2]=f?n:q;g[a+12>>2]=0.0;i=e;return};case 13:{p=b+28|0;c[z+0>>2]=c[p+0>>2];c[z+4>>2]=c[p+4>>2];c[z+8>>2]=c[p+8>>2];c[z+12>>2]=c[p+12>>2];g[x>>2]=+g[d>>2];h=+g[d+4>>2];g[x+4>>2]=h;j=+g[d+8>>2];g[x+8>>2]=j;g[x+12>>2]=0.0;p=c[b+52>>2]|0;if((p|0)==2){b=0;f=p;d=1}else if((p|0)==1){h=j;b=0;f=p;d=2}else{h=j;b=1;f=0;d=2}j=+g[z+(b<<2)>>2];l=+g[z+(p<<2)>>2];k=+g[x+(b<<2)>>2];m=+R(+(k*k+h*h));if(m!=0.0){j=j/m;g[u+(b<<2)>>2]=k*j;if(+g[x+(f<<2)>>2]<0.0){l=-l}g[u+(f<<2)>>2]=l;g[u+(d<<2)>>2]=j*h;g[a>>2]=+g[u>>2];g[a+4>>2]=+g[u+4>>2];g[a+8>>2]=+g[u+8>>2];g[a+12>>2]=0.0;i=e;return}else{g[u+(b<<2)>>2]=j;if(+g[x+(f<<2)>>2]<0.0){l=-l}g[u+(f<<2)>>2]=l;g[u+(d<<2)>>2]=0.0;g[a>>2]=+g[u>>2];g[a+4>>2]=+g[u+4>>2];g[a+8>>2]=+g[u+8>>2];g[a+12>>2]=0.0;i=e;return}};case 1:{w=+g[d>>2];y=+g[d+4>>2];k=+g[d+8>>2];f=b+56|0;h=w*+g[f>>2]+y*+g[f+4>>2]+k*+g[f+8>>2];j=w*+g[f+16>>2]+y*+g[f+20>>2]+k*+g[f+24>>2];k=w*+g[f+32>>2]+y*+g[f+36>>2]+k*+g[f+40>>2];if(h<j){d=j<k?2:1}else{d=h<k?2:0}w=+g[f+(d<<4)+4>>2];y=+g[f+(d<<4)+8>>2];g[a>>2]=+g[f+(d<<4)>>2];g[a+4>>2]=w;g[a+8>>2]=y;g[a+12>>2]=0.0;i=e;return};case 5:{f=c[b+92>>2]|0;p=c[b+96>>2]|0;h=+g[b+12>>2];j=+g[b+16>>2];k=+g[b+20>>2];m=+g[d>>2]*h;l=+g[d+4>>2]*j;o=+g[d+8>>2]*k;if((p|0)>0){u=0;n=-3.4028234663852886e+38;b=-1;while(1){q=m*+g[f+(u<<4)>>2]+l*+g[f+(u<<4)+4>>2]+o*+g[f+(u<<4)+8>>2];d=q>n;b=d?u:b;u=u+1|0;if((u|0)==(p|0)){break}else{n=d?q:n}}}else{b=-1}w=j*+g[f+(b<<4)+4>>2];y=k*+g[f+(b<<4)+8>>2];g[a>>2]=h*+g[f+(b<<4)>>2];g[a+4>>2]=w;g[a+8>>2]=y;g[a+12>>2]=0.0;i=e;return};default:{kc[c[(c[b>>2]|0)+68>>2]&63](a,b,d);i=e;return}}}function Ml(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0;h=i;i=i+32|0;f=h+16|0;e=h;c[f+0>>2]=c[d+0>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];l=+g[f>>2];j=f+4|0;m=+g[j>>2];d=f+8|0;k=+g[d>>2];if(l*l+m*m+k*k<1.4210854715202004e-14){g[f>>2]=-1.0;g[j>>2]=-1.0;g[d>>2]=-1.0;g[f+12>>2]=0.0;l=-1.0;m=-1.0;k=-1.0}n=1.0/+R(+(l*l+m*m+k*k));g[f>>2]=l*n;g[j>>2]=m*n;g[d>>2]=k*n;Ll(e,b,f);switch(c[b+4>>2]|0){case 4:case 5:{k=+g[b+44>>2];break};case 0:{k=+g[b+44>>2];break};case 13:{k=+g[b+44>>2];break};case 11:{k=+g[b+44>>2];break};case 1:{k=+g[b+44>>2];break};case 10:{k=+g[b+44>>2];break};case 8:{k=+g[b+28>>2]*+g[b+12>>2];break};default:{k=+Vb[c[(c[b>>2]|0)+48>>2]&3](b)}}m=k*+g[j>>2]+ +g[e+4>>2];n=k*+g[d>>2]+ +g[e+8>>2];g[a>>2]=k*+g[f>>2]+ +g[e>>2];g[a+4>>2]=m;g[a+8>>2]=n;g[a+12>>2]=0.0;i=h;return}function Nl(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0;e=i;c[b>>2]=7256;h=b+124|0;j=b+4|0;do{a[j+36|0]=1;c[j+32>>2]=0;c[j+24>>2]=0;c[j+28>>2]=0;a[j+56|0]=1;c[j+52>>2]=0;c[j+44>>2]=0;c[j+48>>2]=0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=-1;c[j+12>>2]=0;c[j+16>>2]=0;j=j+60|0}while((j|0)!=(h|0));a[b+193|0]=0;a[b+194|0]=1;j=(d|0)!=0;a[b+192|0]=j&1^1;g[b+140>>2]=0.0;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+168>>2]=0;c[b+172>>2]=0;g[b+176>>2]=0.0;if(j){h=d;j=b+136|0;c[j>>2]=h;j=b+188|0;c[j>>2]=0;j=b+180|0;c[j>>2]=0;j=b+184|0;c[j>>2]=0;j=b+124|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;i=e;return}c[3580]=(c[3580]|0)+1;d=vr(95)|0;if((d|0)!=0?(f=d+19&-16,c[f+ -4>>2]=d,(f|0)!=0):0){tn(f)}else{f=0}h=f;j=b+136|0;c[j>>2]=h;j=b+188|0;c[j>>2]=0;j=b+180|0;c[j>>2]=0;j=b+184|0;c[j>>2]=0;j=b+124|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;i=e;return}function Ol(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=7256;if((a[b+192|0]|0)!=0?(e=b+136|0,f=c[e>>2]|0,Fb[c[c[f>>2]>>2]&255](f),e=c[e>>2]|0,(e|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+4|0;f=b+124|0;do{f=f+ -60|0;vq(f)}while((f|0)!=(e|0));if((b|0)==0){i=d;return}wr(b);i=d;return}function Pl(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=7256;if((a[b+192|0]|0)!=0?(e=b+136|0,f=c[e>>2]|0,Fb[c[c[f>>2]>>2]&255](f),e=c[e>>2]|0,(e|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+4|0;b=b+124|0;do{b=b+ -60|0;vq(b)}while((b|0)!=(e|0));i=d;return}function Ql(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;g=i;i=i+48|0;m=g+16|0;l=g;c[3580]=(c[3580]|0)+1;n=vr(83)|0;if((n|0)==0){n=0}else{q=n+19&-16;c[q+ -4>>2]=n;n=q}c[n>>2]=h;b[n+4>>1]=j;b[n+6>>1]=k;k=n+16|0;c[k+0>>2]=c[e+0>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];k=n+32|0;c[k+0>>2]=c[f+0>>2];c[k+4>>2]=c[f+4>>2];c[k+8>>2]=c[f+8>>2];c[k+12>>2]=c[f+12>>2];c[n+8>>2]=0;k=n+56|0;c[k>>2]=0;j=n+52|0;c[j>>2]=0;c[m+0>>2]=c[e+0>>2];c[m+4>>2]=c[e+4>>2];c[m+8>>2]=c[e+8>>2];c[m+12>>2]=c[e+12>>2];q=m+16|0;c[q+0>>2]=c[f+0>>2];c[q+4>>2]=c[f+4>>2];c[q+8>>2]=c[f+8>>2];c[q+12>>2]=c[f+12>>2];f=d+144|0;c[n+60>>2]=c[f>>2];q=d+188|0;e=(c[q>>2]|0)+1|0;c[q>>2]=e;c[n+12>>2]=e;e=d+4|0;q=d+8|0;h=c[q>>2]|0;if((h|0)==0){c[3580]=(c[3580]|0)+1;h=vr(63)|0;if((h|0)!=0?(p=h+19&-16,o=p,c[o+ -4>>2]=h,(p|0)!=0):0){h=o+0|0;o=h+44|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(o|0))}else{p=0}}else{c[q>>2]=0;p=h}c[p+32>>2]=0;c[p+36>>2]=n;c[p+40>>2]=0;c[p+0>>2]=c[m+0>>2];c[p+4>>2]=c[m+4>>2];c[p+8>>2]=c[m+8>>2];c[p+12>>2]=c[m+12>>2];c[p+16>>2]=c[m+16>>2];c[p+20>>2]=c[m+20>>2];c[p+24>>2]=c[m+24>>2];c[p+28>>2]=c[m+28>>2];yq(e,c[e>>2]|0,p);o=d+16|0;c[o>>2]=(c[o>>2]|0)+1;c[n+48>>2]=p;o=d+(c[f>>2]<<2)+124|0;c[j>>2]=0;c[k>>2]=c[o>>2];p=c[o>>2]|0;if((p|0)!=0){c[p+52>>2]=n}c[o>>2]=n;if((a[d+193|0]|0)!=0){i=g;return n|0}c[l>>2]=7520;c[l+4>>2]=d;c[l+8>>2]=n;Rl(c[e>>2]|0,m,l);Rl(c[d+64>>2]|0,m,l);i=g;return n|0}function Rl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0,j=0.0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;k=i;if((a|0)==0){i=k;return}n=+g[b>>2];e=+g[b+4>>2];j=+g[b+8>>2];o=+g[b+16>>2];m=+g[b+20>>2];p=+g[b+24>>2];c[3580]=(c[3580]|0)+1;b=vr(275)|0;if((b|0)!=0){w=b+19&-16;c[w+ -4>>2]=b;q=w;if((w|0)!=0){c[q>>2]=a}}else{q=0}s=64;a=1;do{r=a+ -1|0;t=c[q+(r<<2)>>2]|0;do{if(((((+g[t>>2]<=o?+g[t+16>>2]>=n:0)?+g[t+4>>2]<=m:0)?+g[t+20>>2]>=e:0)?+g[t+8>>2]<=p:0)?+g[t+24>>2]>=j:0){b=t+40|0;if((c[b>>2]|0)==0){Hb[c[(c[d>>2]|0)+12>>2]&127](d,t);a=r;break}t=c[t+36>>2]|0;if((r|0)==(s|0)?(l=(s|0)==0?1:s<<1,(a|0)<=(l|0)):0){if((l|0)!=0?(c[3580]=(c[3580]|0)+1,f=vr((l<<2|3)+16|0)|0,(f|0)!=0):0){u=f+19&-16;c[u+ -4>>2]=f}else{u=0}if((s|0)>0){v=0;do{w=u+(v<<2)|0;if((w|0)!=0){c[w>>2]=c[q+(v<<2)>>2]}v=v+1|0}while((v|0)!=(s|0))}if((q|0)==0){s=l;q=u}else{c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0);s=l;q=u}}r=q+(r<<2)|0;if((r|0)!=0){c[r>>2]=t}b=c[b>>2]|0;if((a|0)==(s|0)){s=(a|0)==0?1:a<<1;if((a|0)<(s|0)){if((s|0)!=0?(c[3580]=(c[3580]|0)+1,h=vr((s<<2|3)+16|0)|0,(h|0)!=0):0){r=h+19&-16;c[r+ -4>>2]=h}else{r=0}if((a|0)>0){u=0;do{t=r+(u<<2)|0;if((t|0)!=0){c[t>>2]=c[q+(u<<2)>>2]}u=u+1|0}while((u|0)!=(a|0))}if((q|0)==0){q=r}else{c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0);q=r}}else{s=a}}r=q+(a<<2)|0;if((r|0)!=0){c[r>>2]=b}a=a+1|0}else{a=r}}while(0)}while((a|0)>0);if((q|0)==0){i=k;return}c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0);i=k;return}function Sl(a){a=a|0;return}function Tl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=d+60|0;if((c[g>>2]|0)==2){j=c[d+48>>2]|0;zq(b+64|0,j)|0;h=b+68|0;k=c[h>>2]|0;if((k|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0)}c[h>>2]=j;l=b+76|0;c[l>>2]=(c[l>>2]|0)+ -1}else{h=c[d+48>>2]|0;zq(b+4|0,h)|0;k=b+8|0;j=c[k>>2]|0;if((j|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0)}c[k>>2]=h;l=b+16|0;c[l>>2]=(c[l>>2]|0)+ -1}h=d+52|0;l=c[h>>2]|0;j=d+56|0;k=c[j>>2]|0;if((l|0)==0){c[b+(c[g>>2]<<2)+124>>2]=k}else{c[l+56>>2]=k}g=c[j>>2]|0;if((g|0)!=0){c[g+52>>2]=c[h>>2]}l=c[b+136>>2]|0;kc[c[(c[l>>2]|0)+16>>2]&63](l,d,e);if((d|0)==0){l=b+194|0;a[l]=1;i=f;return}c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0);l=b+194|0;a[l]=1;i=f;return}function Ul(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;a=i;f=b+16|0;c[d+0>>2]=c[f+0>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];d=b+32|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];i=a;return}function Vl(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0;d=i;i=i+16|0;j=d;c[j>>2]=7440;c[j+4>>2]=e;m=a+4|0;l=e+4|0;k=e+20|0;e=e+32|0;Wl(m,c[m>>2]|0,b,l,k,+g[e>>2],f,h,j);a=a+64|0;Wl(a,c[a>>2]|0,b,l,k,+g[e>>2],f,h,j);i=d;return}function Wl(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=+j;k=k|0;l=l|0;m=m|0;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0;n=i;i=i+32|0;t=n;if((d|0)==0){i=n;return}s=b+44|0;v=c[s>>2]|0;u=b+48|0;if((v|0)<128){if((c[u>>2]|0)<128){c[3580]=(c[3580]|0)+1;w=vr(531)|0;if((w|0)==0){w=0}else{V=w+19&-16;c[V+ -4>>2]=w;w=V}z=c[s>>2]|0;x=b+52|0;if((z|0)>0){A=0;do{y=w+(A<<2)|0;if((y|0)!=0){c[y>>2]=c[(c[x>>2]|0)+(A<<2)>>2]}A=A+1|0}while((A|0)!=(z|0))}z=c[x>>2]|0;y=b+56|0;if((z|0)!=0){if((a[y]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[z+ -4>>2]|0)}c[x>>2]=0}a[y]=1;c[x>>2]=w;c[u>>2]=128}else{x=b+52|0}do{w=(c[x>>2]|0)+(v<<2)|0;if((w|0)!=0){c[w>>2]=0}v=v+1|0}while((v|0)!=128)}c[s>>2]=128;v=b+52|0;c[c[v>>2]>>2]=d;E=l+4|0;w=l+8|0;G=t+4|0;H=t+8|0;I=t+12|0;J=k+4|0;K=k+8|0;L=t+16|0;A=t+20|0;z=t+24|0;x=t+28|0;d=h+4|0;F=e+4|0;y=f+4|0;B=h+8|0;C=e+8|0;D=f+8|0;b=b+56|0;M=1;Q=126;do{N=M+ -1|0;S=c[v>>2]|0;O=c[S+(N<<2)>>2]|0;Y=+g[O+4>>2]- +g[E>>2];X=+g[O+8>>2]- +g[w>>2];g[t>>2]=+g[O>>2]- +g[l>>2];g[G>>2]=Y;g[H>>2]=X;g[I>>2]=0.0;X=+g[O+20>>2]- +g[J>>2];Y=+g[O+24>>2]- +g[K>>2];g[L>>2]=+g[O+16>>2]- +g[k>>2];g[A>>2]=X;g[z>>2]=Y;g[x>>2]=0.0;V=c[h>>2]|0;Y=+g[e>>2];X=+g[f>>2];Z=(+g[t+(V<<4)>>2]-Y)*X;Y=X*(+g[t+(1-V<<4)>>2]-Y);V=c[d>>2]|0;X=+g[F>>2];_=+g[y>>2];W=(+g[t+(V<<4)+4>>2]-X)*_;X=_*(+g[t+(1-V<<4)+4>>2]-X);do{if(((!(Z>X|W>Y)?(o=W>Z?W:Z,r=X<Y?X:Y,V=c[B>>2]|0,q=+g[C>>2],_=+g[D>>2],p=(+g[t+(V<<4)+8>>2]-q)*_,q=_*(+g[t+(1-V<<4)+8>>2]-q),!(o>q|p>r)):0)?(p>o?p:o)<j:0)?(q<r?q:r)>0.0:0){P=O+40|0;if((c[P>>2]|0)==0){Hb[c[(c[m>>2]|0)+12>>2]&127](m,O);M=N;break}if((N|0)>(Q|0)){R=c[s>>2]|0;Q=R<<1;if((R|0)<(Q|0)){if((c[u>>2]|0)<(Q|0)){if((R|0)!=0){c[3580]=(c[3580]|0)+1;S=vr((R<<3|3)+16|0)|0;if((S|0)==0){S=0}else{V=S+19&-16;c[V+ -4>>2]=S;S=V}T=c[s>>2]|0;if((T|0)>0){V=0;do{U=S+(V<<2)|0;if((U|0)!=0){c[U>>2]=c[(c[v>>2]|0)+(V<<2)>>2]}V=V+1|0}while((V|0)!=(T|0))}}else{S=0}T=c[v>>2]|0;if((T|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[T+ -4>>2]|0)}c[v>>2]=0}a[b]=1;c[v>>2]=S;c[u>>2]=Q}do{S=S+(R<<2)|0;if((S|0)!=0){c[S>>2]=0}R=R+1|0;S=c[v>>2]|0}while((R|0)!=(Q|0))}c[s>>2]=Q;Q=Q+ -2|0}c[S+(N<<2)>>2]=c[O+36>>2];c[(c[v>>2]|0)+(M<<2)>>2]=c[P>>2];M=M+1|0}else{M=N}}while(0)}while((M|0)!=0);i=n;return}function Xl(a){a=a|0;return}function Yl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+48|0;g=f+32|0;h=f;c[g>>2]=7360;c[g+4>>2]=e;c[h+0>>2]=c[b+0>>2];c[h+4>>2]=c[b+4>>2];c[h+8>>2]=c[b+8>>2];c[h+12>>2]=c[b+12>>2];e=h+16|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];Rl(c[a+4>>2]|0,h,g);Rl(c[a+64>>2]|0,h,g);i=f;return}function Zl(a){a=a|0;return}function _l(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0,N=0,O=0,P=0.0;j=i;i=i+16|0;h=j;t=+g[e>>2];s=+g[e+4>>2];r=+g[e+8>>2];l=+g[e+12>>2];q=+g[f>>2];p=+g[f+4>>2];n=+g[f+8>>2];m=+g[f+12>>2];k=d+60|0;do{if((c[k>>2]|0)==2){u=d+48|0;w=c[u>>2]|0;zq(b+64|0,w)|0;v=b+68|0;x=c[v>>2]|0;if((x|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[x+ -4>>2]|0)}c[v>>2]=w;v=b+76|0;c[v>>2]=(c[v>>2]|0)+ -1;v=b+4|0;w=b+8|0;x=c[w>>2]|0;if((x|0)==0){c[3580]=(c[3580]|0)+1;w=vr(63)|0;if((w|0)!=0?(z=w+19&-16,o=z,c[o+ -4>>2]=w,(z|0)!=0):0){w=o+0|0;o=w+44|0;do{c[w>>2]=0;w=w+4|0}while((w|0)<(o|0))}else{z=0}}else{c[w>>2]=0;z=x}c[z+32>>2]=0;c[z+36>>2]=d;c[z+40>>2]=0;g[z>>2]=t;g[z+4>>2]=s;g[z+8>>2]=r;g[z+12>>2]=l;g[z+16>>2]=q;g[z+20>>2]=p;g[z+24>>2]=n;g[z+28>>2]=m;yq(v,c[v>>2]|0,z);o=b+16|0;c[o>>2]=(c[o>>2]|0)+1;c[u>>2]=z;o=1}else{o=b+168|0;c[o>>2]=(c[o>>2]|0)+1;o=c[d+48>>2]|0;I=+g[o>>2];if(((((I<=q?(x=o+16|0,D=+g[x>>2],D>=t):0)?(v=o+4|0,H=+g[v>>2],H<=p):0)?(u=o+20|0,G=+g[u>>2],G>=s):0)?(y=o+8|0,E=+g[y>>2],E<=n):0)?(w=o+24|0,F=+g[w>>2],F>=r):0){P=+g[d+16>>2];K=+g[d+20>>2];J=+g[d+24>>2];C=+g[b+140>>2];B=(+g[d+32>>2]-P)*.5*C;A=C*(+g[d+36>>2]-K)*.5;C=C*(+g[d+40>>2]-J)*.5;if(t-P<0.0){B=-B}if(s-K<0.0){A=-A}if(r-J<0.0){C=-C}z=b+4|0;if(!(!(I<=t)|!(H<=s)|!(E<=r)|!(D>=q)|!(G>=p)|!(F>=n))){o=0;break}D=t+-.05000000074505806;t=s+-.05000000074505806;r=r+-.05000000074505806;q=q+.05000000074505806;s=p+.05000000074505806;E=n+.05000000074505806;if(B>0.0){n=D;p=B+q}else{n=B+D;p=q}if(A>0.0){q=t;s=A+s}else{q=A+t}if(C>0.0){E=C+E}else{r=C+r}M=zq(z,o)|0;a:do{if((M|0)!=0){L=c[b+12>>2]|0;if(!((L|0)>-1)){M=c[z>>2]|0;break}if((L|0)>0){N=0;O=M;while(1){M=c[O+32>>2]|0;N=N+1|0;if((M|0)==0){M=O;break a}if((N|0)<(L|0)){O=M}else{break}}}}else{M=0}}while(0);g[o>>2]=n;g[v>>2]=q;g[y>>2]=r;g[o+12>>2]=l;g[x>>2]=p;g[u>>2]=s;g[w>>2]=E;g[o+28>>2]=m;yq(z,M,o);o=b+172|0;c[o>>2]=(c[o>>2]|0)+1;o=1;break}u=b+4|0;w=zq(u,o)|0;b:do{if((w|0)!=0){v=c[b+12>>2]|0;if(!((v|0)>-1)){w=c[u>>2]|0;break}if((v|0)>0){y=0;x=w;while(1){w=c[x+32>>2]|0;y=y+1|0;if((w|0)==0){w=x;break b}if((y|0)<(v|0)){x=w}else{break}}}}else{w=0}}while(0);g[o>>2]=t;g[o+4>>2]=s;g[o+8>>2]=r;g[o+12>>2]=l;g[o+16>>2]=q;g[o+20>>2]=p;g[o+24>>2]=n;g[o+28>>2]=m;yq(u,w,o);o=b+172|0;c[o>>2]=(c[o>>2]|0)+1;o=1}}while(0);v=d+52|0;w=c[v>>2]|0;u=d+56|0;x=c[u>>2]|0;if((w|0)==0){c[b+(c[k>>2]<<2)+124>>2]=x}else{c[w+56>>2]=x}w=c[u>>2]|0;if((w|0)!=0){c[w+52>>2]=c[v>>2]}O=d+16|0;c[O+0>>2]=c[e+0>>2];c[O+4>>2]=c[e+4>>2];c[O+8>>2]=c[e+8>>2];c[O+12>>2]=c[e+12>>2];e=d+32|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=b+144|0;c[k>>2]=c[e>>2];e=b+(c[e>>2]<<2)+124|0;c[v>>2]=0;c[u>>2]=c[e>>2];f=c[e>>2]|0;if((f|0)!=0){c[f+52>>2]=d}c[e>>2]=d;if(!o){i=j;return}a[b+194|0]=1;if((a[b+193|0]|0)!=0){i=j;return}c[h>>2]=7520;c[h+4>>2]=b;N=b+64|0;O=d+48|0;$l(N,c[N>>2]|0,c[O>>2]|0,h);N=b+4|0;$l(N,c[N>>2]|0,c[O>>2]|0,h);i=j;return}function $l(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;if((d|0)==0|(e|0)==0){i=j;return}h=b+24|0;k=b+28|0;if((c[h>>2]|0)<128?(c[k>>2]|0)<128:0){c[3580]=(c[3580]|0)+1;l=vr(1043)|0;if((l|0)==0){m=0}else{m=l+19&-16;c[m+ -4>>2]=l}o=c[h>>2]|0;l=b+32|0;if((o|0)>0){n=0;do{p=m+(n<<3)|0;if((p|0)!=0){q=(c[l>>2]|0)+(n<<3)|0;r=c[q+4>>2]|0;s=p;c[s>>2]=c[q>>2];c[s+4>>2]=r}n=n+1|0}while((n|0)!=(o|0))}n=c[l>>2]|0;o=b+36|0;if((n|0)!=0){if((a[o]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0)}c[l>>2]=0}a[o]=1;c[l>>2]=m;c[k>>2]=128}c[h>>2]=128;l=b+32|0;o=c[l>>2]|0;c[o>>2]=d;c[o+4>>2]=e;b=b+36|0;d=1;o=124;do{n=d+ -1|0;q=c[l>>2]|0;m=c[q+(n<<3)>>2]|0;e=c[q+(n<<3)+4>>2]|0;if((n|0)>(o|0)){p=c[h>>2]|0;o=p<<1;if((p|0)<(o|0)?(c[k>>2]|0)<(o|0):0){if((p|0)!=0){c[3580]=(c[3580]|0)+1;p=vr((p<<4|3)+16|0)|0;if((p|0)==0){q=0}else{q=p+19&-16;c[q+ -4>>2]=p}p=c[h>>2]|0;if((p|0)>0){s=0;do{r=q+(s<<3)|0;if((r|0)!=0){u=(c[l>>2]|0)+(s<<3)|0;t=c[u+4>>2]|0;c[r>>2]=c[u>>2];c[r+4>>2]=t}s=s+1|0}while((s|0)!=(p|0))}}else{q=0}p=c[l>>2]|0;if((p|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[p+ -4>>2]|0)}c[l>>2]=0}a[b]=1;c[l>>2]=q;c[k>>2]=o}c[h>>2]=o;o=o+ -4|0}do{if((m|0)==(e|0)){e=m+40|0;if((c[e>>2]|0)==0){d=n}else{s=m+36|0;t=c[s>>2]|0;u=q+(n<<3)|0;c[u>>2]=t;c[u+4>>2]=t;u=c[e>>2]|0;t=(c[l>>2]|0)+(d<<3)|0;c[t>>2]=u;c[t+4>>2]=u;t=c[e>>2]|0;u=(c[l>>2]|0)+(d+1<<3)|0;c[u>>2]=c[s>>2];c[u+4>>2]=t;d=d+2|0}}else{if(((((+g[m>>2]<=+g[e+16>>2]?+g[m+16>>2]>=+g[e>>2]:0)?+g[m+4>>2]<=+g[e+20>>2]:0)?+g[m+20>>2]>=+g[e+4>>2]:0)?+g[m+8>>2]<=+g[e+24>>2]:0)?+g[m+24>>2]>=+g[e+8>>2]:0){s=m+40|0;p=e+40|0;r=(c[p>>2]|0)!=0;if((c[s>>2]|0)==0){if(r){s=m;u=c[e+36>>2]|0;t=q+(n<<3)|0;c[t>>2]=s;c[t+4>>2]=u;t=c[p>>2]|0;u=(c[l>>2]|0)+(d<<3)|0;c[u>>2]=s;c[u+4>>2]=t;d=d+1|0;break}else{kc[c[(c[f>>2]|0)+8>>2]&63](f,m,e);d=n;break}}else{n=q+(n<<3)|0;m=m+36|0;q=c[m>>2]|0;if(r){t=e+36|0;r=c[t>>2]|0;u=n;c[u>>2]=q;c[u+4>>2]=r;t=c[t>>2]|0;u=(c[l>>2]|0)+(d<<3)|0;c[u>>2]=c[s>>2];c[u+4>>2]=t;u=c[p>>2]|0;t=(c[l>>2]|0)+(d+1<<3)|0;c[t>>2]=c[m>>2];c[t+4>>2]=u;t=c[p>>2]|0;u=(c[l>>2]|0)+(d+2<<3)|0;c[u>>2]=c[s>>2];c[u+4>>2]=t;d=d+3|0;break}else{t=e;u=n;c[u>>2]=q;c[u+4>>2]=t;u=(c[l>>2]|0)+(d<<3)|0;c[u>>2]=c[s>>2];c[u+4>>2]=t;d=d+1|0;break}}}else{d=n}}}while(0)}while((d|0)!=0);i=j;return}function am(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+48|0;q=e+16|0;n=e;m=b+4|0;r=b+16|0;xq(m,((ba(c[b+152>>2]|0,c[r>>2]|0)|0)/100|0)+1|0);o=b+164|0;if((c[o>>2]|0)!=0){t=((ba(c[b+148>>2]|0,c[b+76>>2]|0)|0)/100|0)+1|0;xq(b+64|0,t);t=(c[o>>2]|0)-t|0;c[o>>2]=(t|0)<0?0:t}F=b+144|0;z=((c[F>>2]|0)+1|0)%2|0;c[F>>2]=z;z=c[b+(z<<2)+124>>2]|0;if((z|0)!=0){w=b+132|0;v=q+16|0;x=b+64|0;u=b+8|0;y=b+68|0;t=b+76|0;do{C=z+56|0;B=z;z=c[C>>2]|0;A=B+60|0;D=B+52|0;E=c[D>>2]|0;if((E|0)==0){c[b+(c[A>>2]<<2)+124>>2]=z}else{c[E+56>>2]=z}E=c[C>>2]|0;if((E|0)!=0){c[E+52>>2]=c[D>>2]}c[D>>2]=0;c[C>>2]=c[w>>2];C=c[w>>2]|0;if((C|0)!=0){c[C+52>>2]=B}c[w>>2]=B;C=B+48|0;E=c[C>>2]|0;zq(m,E)|0;D=c[u>>2]|0;if((D|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[D+ -4>>2]|0)}c[u>>2]=E;c[r>>2]=(c[r>>2]|0)+ -1;F=B+16|0;D=B+32|0;c[q+0>>2]=c[F+0>>2];c[q+4>>2]=c[F+4>>2];c[q+8>>2]=c[F+8>>2];c[q+12>>2]=c[F+12>>2];c[v+0>>2]=c[D+0>>2];c[v+4>>2]=c[D+4>>2];c[v+8>>2]=c[D+8>>2];c[v+12>>2]=c[D+12>>2];D=c[y>>2]|0;if((D|0)==0){c[3580]=(c[3580]|0)+1;D=vr(63)|0;if((D|0)!=0?(s=D+19&-16,p=s,c[p+ -4>>2]=D,(s|0)!=0):0){D=s;E=p+0|0;F=E+44|0;do{c[E>>2]=0;E=E+4|0}while((E|0)<(F|0))}else{D=0}}else{c[y>>2]=0}c[D+32>>2]=0;c[D+36>>2]=B;c[D+40>>2]=0;c[D+0>>2]=c[q+0>>2];c[D+4>>2]=c[q+4>>2];c[D+8>>2]=c[q+8>>2];c[D+12>>2]=c[q+12>>2];c[D+16>>2]=c[q+16>>2];c[D+20>>2]=c[q+20>>2];c[D+24>>2]=c[q+24>>2];c[D+28>>2]=c[q+28>>2];yq(x,c[x>>2]|0,D);c[t>>2]=(c[t>>2]|0)+1;c[C>>2]=D;c[A>>2]=2}while((z|0)!=0);c[o>>2]=c[t>>2];a[b+194|0]=1}c[n>>2]=7520;c[n+4>>2]=b;o=b+193|0;if((a[o]|0)!=0?($l(m,c[m>>2]|0,c[b+64>>2]|0,n),(a[o]|0)!=0):0){F=c[m>>2]|0;$l(m,F,F,n)}m=b+194|0;do{if((a[m]|0)!=0?(h=b+136|0,l=c[h>>2]|0,l=Jb[c[(c[l>>2]|0)+28>>2]&63](l)|0,j=l+4|0,k=c[j>>2]|0,(k|0)>0):0){n=(ba(c[b+156>>2]|0,k)|0)/100|0;o=c[b+160>>2]|0;n=(o|0)>(n|0)?o:n;p=(k|0)<(n|0)?k:n;n=b+184|0;if((p|0)>0){l=l+12|0;o=0;do{s=((c[n>>2]|0)+o|0)%(k|0)|0;q=c[l>>2]|0;t=c[q+(s<<4)>>2]|0;s=c[q+(s<<4)+4>>2]|0;q=c[t+48>>2]|0;r=c[s+48>>2]|0;if(!(((((+g[q>>2]<=+g[r+16>>2]?+g[q+16>>2]>=+g[r>>2]:0)?+g[q+4>>2]<=+g[r+20>>2]:0)?+g[q+20>>2]>=+g[r+4>>2]:0)?+g[q+8>>2]<=+g[r+24>>2]:0)?+g[q+24>>2]>=+g[r+8>>2]:0)){k=c[h>>2]|0;Nb[c[(c[k>>2]|0)+12>>2]&15](k,t,s,d)|0;k=c[j>>2]|0;o=o+ -1|0;p=p+ -1|0}o=o+1|0}while((o|0)<(p|0));if((k|0)<=0){c[n>>2]=0;break}}c[n>>2]=((c[n>>2]|0)+p|0)%(k|0)|0}}while(0);j=b+180|0;c[j>>2]=(c[j>>2]|0)+1;c[b+160>>2]=1;a[m]=0;j=b+168|0;h=c[j>>2]|0;if((h|0)==0){g[b+176>>2]=0.0;k=c[b+172>>2]|0}else{k=c[b+172>>2]|0;g[b+176>>2]=+(k>>>0)/+(h>>>0)}c[b+172>>2]=k>>>1;c[j>>2]=h>>>1;j=b+136|0;F=c[j>>2]|0;if(!(Jb[c[(c[F>>2]|0)+56>>2]&63](F)|0)){i=e;return}h=c[j>>2]|0;h=Jb[c[(c[h>>2]|0)+28>>2]&63](h)|0;b=h+4|0;m=c[b>>2]|0;if((m|0)>1){wi(h,0,m+ -1|0);p=0;o=0;k=0;l=0;f=45}else{o=0;q=0;k=0;l=0}while(1){if((f|0)==45){m=c[b>>2]|0;q=p}if((k|0)>=(m|0)){break}n=c[h+12>>2]|0;m=n+(k<<4)|0;f=c[m>>2]|0;n=n+(k<<4)+4|0;p=c[n>>2]|0;if((f|0)==(o|0)){if((p|0)==(q|0)){p=q;f=55}else{f=49}}else{o=f;f=49}if((f|0)==49){f=0;q=c[o+48>>2]|0;r=c[p+48>>2]|0;if(!(((((+g[q>>2]<=+g[r+16>>2]?+g[q+16>>2]>=+g[r>>2]:0)?+g[q+4>>2]<=+g[r+20>>2]:0)?+g[q+20>>2]>=+g[r+4>>2]:0)?+g[q+8>>2]<=+g[r+24>>2]:0)?+g[q+24>>2]>=+g[r+8>>2]:0)){f=55}}if((f|0)==55){F=c[j>>2]|0;kc[c[(c[F>>2]|0)+32>>2]&63](F,m,d);c[m>>2]=0;c[n>>2]=0;l=l+1|0}k=k+1|0;f=45}if((m|0)>1){wi(h,0,m+ -1|0);f=c[b>>2]|0}else{f=m}d=f-l|0;if((l|0)<0){j=h+8|0;if((c[j>>2]|0)<(d|0)){if((f|0)==(l|0)){k=0}else{c[3580]=(c[3580]|0)+1;k=vr((d<<4|3)+16|0)|0;if((k|0)==0){k=0}else{F=k+19&-16;c[F+ -4>>2]=k;k=F}l=c[b>>2]|0}m=h+12|0;if((l|0)>0){n=0;do{F=c[m>>2]|0;c[k+(n<<4)>>2]=c[F+(n<<4)>>2];c[k+(n<<4)+4>>2]=c[F+(n<<4)+4>>2];c[k+(n<<4)+8>>2]=c[F+(n<<4)+8>>2];c[k+(n<<4)+12>>2]=c[F+(n<<4)+12>>2];n=n+1|0}while((n|0)!=(l|0))}l=c[m>>2]|0;h=h+16|0;if((l|0)!=0){if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[l+ -4>>2]|0)}c[m>>2]=0}a[h]=1;c[m>>2]=k;c[j>>2]=d}else{m=h+12|0}do{E=(c[m>>2]|0)+(f<<4)|0;f=f+1|0;F=(f|0)==(d|0);c[E+0>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;c[E+12>>2]=0}while(!F)}c[b>>2]=d;i=e;return}function bm(a){a=a|0;return c[a+136>>2]|0}function cm(a){a=a|0;return c[a+136>>2]|0}function dm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0;e=i;f=c[a+4>>2]|0;a=c[a+64>>2]|0;u=(a|0)==0;do{if((f|0)==0){if(u){h=0.0;o=0.0;q=0.0;r=0.0;n=0.0;j=0.0;k=0.0;l=0.0}else{h=+g[a>>2];o=+g[a+4>>2];q=+g[a+8>>2];r=+g[a+12>>2];n=+g[a+16>>2];j=+g[a+20>>2];k=+g[a+24>>2];l=+g[a+28>>2]}}else{h=+g[f>>2];if(u){o=+g[f+4>>2];q=+g[f+8>>2];r=+g[f+12>>2];n=+g[f+16>>2];j=+g[f+20>>2];k=+g[f+24>>2];l=+g[f+28>>2];break}else{t=+g[a>>2];n=+g[f+16>>2];p=+g[a+16>>2];s=+g[f+4>>2];o=+g[a+4>>2];k=+g[f+20>>2];j=+g[a+20>>2];r=+g[f+8>>2];q=+g[a+8>>2];l=+g[f+24>>2];m=+g[a+24>>2];h=h<t?h:t;o=s<o?s:o;q=r<q?r:q;r=0.0;n=n>p?n:p;j=k>j?k:j;k=l>m?l:m;l=0.0;break}}}while(0);g[b>>2]=h;g[b+4>>2]=o;g[b+8>>2]=q;g[b+12>>2]=r;g[d>>2]=n;g[d+4>>2]=j;g[d+8>>2]=k;g[d+12>>2]=l;i=e;return}function em(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;d=i;if((c[b+16>>2]|0)!=(0-(c[b+76>>2]|0)|0)){i=d;return}e=b+64|0;f=b+4|0;g=c[f>>2]|0;if((g|0)!=0){wq(f,g)}g=b+8|0;f=c[g>>2]|0;if((f|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0)}c[g>>2]=0;c[b+12>>2]=-1;g=b+28|0;f=b+36|0;h=c[f>>2]|0;j=b+40|0;if((h|0)!=0){if((a[j]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[j]=1;c[f>>2]=0;c[g>>2]=0;c[b+32>>2]=0;c[b+20>>2]=0;f=c[e>>2]|0;if((f|0)!=0){wq(e,f)}f=b+68|0;e=c[f>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[f>>2]=0;c[b+72>>2]=-1;f=b+88|0;g=b+96|0;e=c[g>>2]|0;h=b+100|0;if((e|0)!=0){if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0}a[h]=1;c[g>>2]=0;c[f>>2]=0;c[b+92>>2]=0;c[b+80>>2]=0;a[b+193|0]=0;a[b+194|0]=1;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;j=b+168|0;h=b+124|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;i=d;return}function fm(a){a=a|0;return}function gm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function hm(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+4>>2]|0;$b[c[(c[a>>2]|0)+8>>2]&31](a,c[b+36>>2]|0)|0;i=d;return}function im(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function jm(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+4>>2]|0;$b[c[(c[a>>2]|0)+8>>2]&31](a,c[b+36>>2]|0)|0;i=d;return}function km(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function lm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((b|0)==(d|0)){i=e;return}a=a+4|0;f=c[(c[a>>2]|0)+136>>2]|0;Sb[c[(c[f>>2]|0)+8>>2]&31](f,c[b+36>>2]|0,c[d+36>>2]|0)|0;d=(c[a>>2]|0)+160|0;c[d>>2]=(c[d>>2]|0)+1;i=e;return}function mm(a,b){a=a|0;b=b|0;var d=0;d=i;kc[c[(c[a>>2]|0)+8>>2]&63](a,b,c[(c[a+8>>2]|0)+48>>2]|0);i=d;return}



function pc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function qc(){return i|0}function rc(a){a=a|0;i=a}function sc(a,b){a=a|0;b=b|0;if((q|0)==0){q=a;r=b}}function tc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function uc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function vc(a){a=a|0;F=a}function wc(a){a=a|0;G=a}function xc(a){a=a|0;H=a}function yc(a){a=a|0;I=a}function zc(a){a=a|0;J=a}function Ac(a){a=a|0;K=a}function Bc(a){a=a|0;L=a}function Cc(a){a=a|0;M=a}function Dc(a){a=a|0;N=a}function Ec(a){a=a|0;O=a}function Fc(a){a=a|0;return 52}function Gc(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;e=+T(+b);f=+T(+c);l=+T(+d);b=+U(+b);c=+U(+c);k=+U(+d);i=e*l;h=e*k;d=b*l;j=b*k;g[a>>2]=f*l;g[a+4>>2]=c*d-h;g[a+8>>2]=c*i+j;g[a+12>>2]=0.0;g[a+16>>2]=f*k;g[a+20>>2]=c*j+i;g[a+24>>2]=c*h-d;g[a+28>>2]=0.0;g[a+32>>2]=-c;g[a+36>>2]=f*b;g[a+40>>2]=f*e;g[a+44>>2]=0.0;return}function Hc(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Ic(){var a=0,d=0,e=0;a=i;while(1){d=vr(8)|0;if((d|0)!=0){e=6;break}d=c[3818]|0;c[3818]=d+0;if((d|0)==0){e=5;break}lc[d&1]()}if((e|0)==5){e=wb(4)|0;c[e>>2]=15288;vb(e|0,15336,198)}else if((e|0)==6){e=d;c[e>>2]=0;c[e+4>>2]=0;b[d+4>>1]=1;b[d+6>>1]=-1;c[d>>2]=544;i=a;return d|0}return 0}function Jc(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0.0,l=0;l=i;k=+Pb[c[(c[a>>2]|0)+12>>2]&1](a,b,d,e,f,g,h,j);i=l;return+k}function Kc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Lc(){var a=0,b=0,d=0;a=i;while(1){b=vr(196)|0;if((b|0)!=0){d=6;break}b=c[3818]|0;c[3818]=b+0;if((b|0)==0){d=5;break}lc[b&1]()}if((d|0)==5){d=wb(4)|0;c[d>>2]=15288;vb(d|0,15336,198)}else if((d|0)==6){Nl(b,0);i=a;return b|0}return 0}function Mc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Nc(a,b){a=+a;b=+b;var d=0,e=0,f=0;d=i;c[3580]=(c[3580]|0)+1;e=vr(75)|0;if((e|0)==0){e=0}else{f=e+19&-16;c[f+ -4>>2]=e;e=f}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e>>2]=4008;c[e+4>>2]=10;c[e+52>>2]=1;g[e+28>>2]=a;g[e+32>>2]=b*.5;g[e+36>>2]=a;g[e+40>>2]=0.0;i=d;return e|0}function Oc(a){a=a|0;ib(a|0)|0;Wa()}function Pc(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Ob[c[(c[a>>2]|0)+32>>2]&7](a,b,d);i=e;return}function Qc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Rc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;c[3580]=(c[3580]|0)+1;e=vr(135)|0;if((e|0)==0){e=0}else{f=e+19&-16;c[f+ -4>>2]=e;e=f}gi(e,a,b,16384,0,0);i=d;return e|0}function Sc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;c[3580]=(c[3580]|0)+1;f=vr(135)|0;if((f|0)==0){f=0}else{g=f+19&-16;c[g+ -4>>2]=f;f=g}gi(f,a,b,d&65535,0,0);i=e;return f|0}function Tc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;c[3580]=(c[3580]|0)+1;g=vr(135)|0;if((g|0)==0){g=0}else{h=g+19&-16;c[h+ -4>>2]=g;g=h}gi(g,a,b,d&65535,e,0);i=f;return g|0}function Uc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;c[3580]=(c[3580]|0)+1;h=vr(135)|0;if((h|0)==0){h=0}else{j=h+19&-16;c[j+ -4>>2]=h;h=j}gi(h,a,b,d&65535,e,f);i=g;return h|0}function Vc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Wc(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Xc(){var b=0,d=0,e=0;b=i;c[3580]=(c[3580]|0)+1;d=vr(215)|0;if((d|0)==0){d=0}else{e=d+19&-16;c[e+ -4>>2]=d;d=e}c[d>>2]=2488;a[d+20|0]=1;c[d+16>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;a[d+40|0]=1;c[d+36>>2]=0;c[d+28>>2]=0;c[d+32>>2]=0;a[d+60|0]=1;c[d+56>>2]=0;c[d+48>>2]=0;c[d+52>>2]=0;a[d+80|0]=1;c[d+76>>2]=0;c[d+68>>2]=0;c[d+72>>2]=0;a[d+100|0]=1;c[d+96>>2]=0;c[d+88>>2]=0;c[d+92>>2]=0;a[d+120|0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;a[d+140|0]=1;c[d+136>>2]=0;c[d+128>>2]=0;c[d+132>>2]=0;a[d+160|0]=1;c[d+156>>2]=0;c[d+148>>2]=0;c[d+152>>2]=0;a[d+180|0]=1;c[d+176>>2]=0;c[d+168>>2]=0;c[d+172>>2]=0;c[d+192>>2]=0;i=b;return d|0}function Yc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Zc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function _c(a){a=a|0;return a+4|0}function $c(a){a=a|0;var b=0,d=0;b=i;if((c[a+204>>2]&3|0)!=0){i=b;return}d=a+216|0;if(!(((c[d>>2]|0)+ -4|0)>>>0<2)){c[d>>2]=1}g[a+220>>2]=0.0;i=b;return}function ad(a,b){a=a|0;b=b|0;var d=0;d=i;if(!b?(c[a+204>>2]&3|0)!=0:0){i=d;return}b=a+216|0;if(!(((c[b>>2]|0)+ -4|0)>>>0<2)){c[b>>2]=1}g[a+220>>2]=0.0;i=d;return}function bd(a){a=a|0;a=c[a+216>>2]|0;return((a|0)==2?0:(a|0)!=5)|0}function cd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+8>>2]&255](a);i=b;return}function dd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0;f=i;c[3580]=(c[3580]|0)+1;h=vr(343)|0;if((h|0)==0){h=0}else{j=h+19&-16;c[j+ -4>>2]=h;h=j}a[h+20|0]=1;c[h+16>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+24>>2]=b;g[h+28>>2]=0.0;c[h+32>>2]=0;c[h+36>>2]=1;g[h+40>>2]=1.0;a[h+44|0]=1;c[h+48>>2]=0;a[h+52|0]=0;a[h+53|0]=1;a[h+54|0]=1;g[h+56>>2]=.03999999910593033;a[h+60|0]=0;g[h+64>>2]=0.0;c[h+68>>2]=d;c[h+72>>2]=0;a[h+76|0]=1;c[h+80>>2]=0;c[h+84>>2]=0;c[h+88>>2]=0;g[h+92>>2]=.6000000238418579;g[h+96>>2]=1.0;g[h+100>>2]=.30000001192092896;g[h+104>>2]=.01666666753590107;g[h+108>>2]=0.0;g[h+116>>2]=20.0;c[h+112>>2]=10;g[h+124>>2]=.20000000298023224;g[h+128>>2]=.800000011920929;g[h+132>>2]=0.0;g[h+120>>2]=1.0;c[h+136>>2]=1;g[h+140>>2]=-.03999999910593033;g[h+144>>2]=.10000000149011612;g[h+148>>2]=0.0;g[h+152>>2]=.8500000238418579;c[h+156>>2]=260;c[h+160>>2]=2;c[h+164>>2]=128;g[h+168>>2]=100.0;g[h+172>>2]=1.0000000150474662e+30;c[h>>2]=1096;a[h+192|0]=1;c[h+188>>2]=0;c[h+180>>2]=0;c[h+184>>2]=0;d=h+196|0;c[d>>2]=0;j=h+200|0;c[j>>2]=e;a[h+224|0]=1;c[h+220>>2]=0;c[h+212>>2]=0;c[h+216>>2]=0;a[h+244|0]=1;c[h+240>>2]=0;c[h+232>>2]=0;c[h+236>>2]=0;g[h+248>>2]=0.0;g[h+252>>2]=-10.0;n=h+256|0;a[h+274|0]=0;a[h+275|0]=0;m=h+292|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;a[m]=1;c[h+288>>2]=0;c[h+280>>2]=0;c[h+284>>2]=0;c[h+296>>2]=0;a[h+300|0]=1;a[h+320|0]=1;c[h+316>>2]=0;c[h+308>>2]=0;c[h+312>>2]=0;if((e|0)==0){c[3580]=(c[3580]|0)+1;e=vr(215)|0;if((e|0)==0){e=0}else{n=e+19&-16;c[n+ -4>>2]=e;e=n}c[e>>2]=2488;a[e+20|0]=1;c[e+16>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;a[e+40|0]=1;c[e+36>>2]=0;c[e+28>>2]=0;c[e+32>>2]=0;a[e+60|0]=1;c[e+56>>2]=0;c[e+48>>2]=0;c[e+52>>2]=0;a[e+80|0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;a[e+100|0]=1;c[e+96>>2]=0;c[e+88>>2]=0;c[e+92>>2]=0;a[e+120|0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;a[e+140|0]=1;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;a[e+160|0]=1;c[e+156>>2]=0;c[e+148>>2]=0;c[e+152>>2]=0;a[e+180|0]=1;c[e+176>>2]=0;c[e+168>>2]=0;c[e+172>>2]=0;c[e+192>>2]=0;c[j>>2]=e;a[h+273|0]=1}else{a[h+273|0]=0}c[3580]=(c[3580]|0)+1;e=vr(87)|0;if((e|0)!=0?(l=e+19&-16,k=l,c[k+ -4>>2]=e,(l|0)!=0):0){c[l>>2]=11520;a[k+20|0]=1;c[k+16>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;a[k+40|0]=1;c[k+36>>2]=0;c[k+28>>2]=0;c[k+32>>2]=0;a[k+60|0]=1;c[k+56>>2]=0;c[k+48>>2]=0;c[k+52>>2]=0;a[k+64|0]=1}else{l=0}c[h+204>>2]=l;a[h+272|0]=1;c[3580]=(c[3580]|0)+1;e=vr(107)|0;if((e|0)==0){n=0;c[d>>2]=n;i=f;return h|0}k=e+19&-16;l=k;c[l+ -4>>2]=e;if((k|0)==0){n=0;c[d>>2]=n;i=f;return h|0}n=c[j>>2]|0;c[k>>2]=2096;c[l+4>>2]=0;c[l+8>>2]=n;c[l+12>>2]=0;c[l+16>>2]=0;c[l+20>>2]=0;c[l+24>>2]=b;a[l+44|0]=1;c[l+40>>2]=0;c[l+32>>2]=0;c[l+36>>2]=0;a[l+64|0]=1;c[l+60>>2]=0;c[l+52>>2]=0;c[l+56>>2]=0;a[l+84|0]=1;c[l+80>>2]=0;c[l+72>>2]=0;c[l+76>>2]=0;n=k;c[d>>2]=n;i=f;return h|0}function ed(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+72>>2]&127](a,b);i=d;return}function fd(b){b=b|0;var d=0,e=0;e=i;i=i+16|0;d=e;if((a[24]|0)==0?(Ya(24)|0)!=0:0){bb(24)}Hb[c[(c[b>>2]|0)+76>>2]&127](d,b);c[8>>2]=c[d+0>>2];c[12>>2]=c[d+4>>2];c[16>>2]=c[d+8>>2];c[20>>2]=c[d+12>>2];i=e;return 8}function gd(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+84>>2]&127](a,b);i=d;return}function hd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;oc[c[(c[a>>2]|0)+88>>2]&63](a,b,d,e);i=f;return}function id(a,b){a=a|0;b=b|0;var d=0;d=i;kc[c[(c[a>>2]|0)+56>>2]&63](a,b,0);i=d;return}function jd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;kc[c[(c[a>>2]|0)+56>>2]&63](a,b,d);i=e;return}function kd(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+60>>2]&127](a,b);i=d;return}function ld(a,b){a=a|0;b=+b;var d=0;d=i;a=nc[c[(c[a>>2]|0)+52>>2]&1](a,b,1,.01666666753590107)|0;i=d;return a|0}function md(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;a=nc[c[(c[a>>2]|0)+52>>2]&1](a,b,d,.01666666753590107)|0;i=e;return a|0}function nd(a,b,d,e){a=a|0;b=+b;d=d|0;e=+e;var f=0;f=i;a=nc[c[(c[a>>2]|0)+52>>2]&1](a,b,d,e)|0;i=f;return a|0}function od(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function pd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;e=i;c[3580]=(c[3580]|0)+1;f=vr(379)|0;if((f|0)==0){f=0}else{h=f+19&-16;c[h+ -4>>2]=f;f=h}ei(f,3,b);c[f>>2]=2224;h=f+300|0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];n=+g[d>>2];m=+g[d+4>>2];l=+g[d+8>>2];k=n*+g[b+20>>2]+m*+g[b+24>>2]+l*+g[b+28>>2]+ +g[b+56>>2];j=n*+g[b+36>>2]+m*+g[b+40>>2]+l*+g[b+44>>2]+ +g[b+60>>2];g[f+316>>2]=n*+g[b+4>>2]+m*+g[b+8>>2]+l*+g[b+12>>2]+ +g[b+52>>2];g[f+320>>2]=k;g[f+324>>2]=j;g[f+328>>2]=0.0;c[f+332>>2]=0;a[f+344|0]=0;g[f+348>>2]=.30000001192092896;g[f+352>>2]=1.0;g[f+356>>2]=0.0;i=e;return f|0}function qd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0;h=i;c[3580]=(c[3580]|0)+1;j=vr(379)|0;if((j|0)==0){j=0}else{k=j+19&-16;c[k+ -4>>2]=j;j=k}c[j+4>>2]=3;c[j+8>>2]=-1;c[j+12>>2]=-1;g[j+16>>2]=3.4028234663852886e+38;a[j+20|0]=1;a[j+21|0]=0;c[j+24>>2]=-1;c[j+28>>2]=b;c[j+32>>2]=d;g[j+36>>2]=0.0;g[j+40>>2]=.30000001192092896;c[j+44>>2]=0;c[j>>2]=2224;k=j+300|0;c[k+0>>2]=c[e+0>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];k=j+316|0;c[k+0>>2]=c[f+0>>2];c[k+4>>2]=c[f+4>>2];c[k+8>>2]=c[f+8>>2];c[k+12>>2]=c[f+12>>2];c[j+332>>2]=0;a[j+344|0]=0;g[j+348>>2]=.30000001192092896;g[j+352>>2]=1.0;g[j+356>>2]=0.0;i=h;return j|0}function rd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function sd(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+8>>2]&127](a,b);i=d;return}function td(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+12>>2]&127](a,b);i=d;return}function ud(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function vd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0;e=i;c[3580]=(c[3580]|0)+1;f=vr(627)|0;if((f|0)==0){f=0}else{h=f+19&-16;c[h+ -4>>2]=f;f=h}ei(f,5,b);c[f>>2]=968;k=f+300|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];j=f+316|0;b=d+16|0;c[j+0>>2]=c[b+0>>2];c[j+4>>2]=c[b+4>>2];c[j+8>>2]=c[b+8>>2];c[j+12>>2]=c[b+12>>2];b=f+332|0;h=d+32|0;c[b+0>>2]=c[h+0>>2];c[b+4>>2]=c[h+4>>2];c[b+8>>2]=c[h+8>>2];c[b+12>>2]=c[h+12>>2];h=f+348|0;d=d+48|0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];d=f+364|0;h=f+524|0;a[f+527|0]=0;c[d+0>>2]=c[k+0>>2];c[d+4>>2]=c[k+4>>2];c[d+8>>2]=c[k+8>>2];c[d+12>>2]=c[k+12>>2];d=f+380|0;c[d+0>>2]=c[j+0>>2];c[d+4>>2]=c[j+4>>2];c[d+8>>2]=c[j+8>>2];c[d+12>>2]=c[j+12>>2];d=f+396|0;c[d+0>>2]=c[b+0>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];d=f+412|0;a[h]=0;a[f+525|0]=0;a[f+526|0]=0;a[f+552|0]=0;h=f+572|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[h>>2]=-1.0;g[f+444>>2]=999999984306749400.0;g[f+448>>2]=999999984306749400.0;g[f+452>>2]=999999984306749400.0;g[f+428>>2]=1.0;g[f+432>>2]=.30000001192092896;g[f+436>>2]=1.0;g[f+440>>2]=.009999999776482582;g[f+456>>2]=.05000000074505806;c[f+592>>2]=0;g[f+596>>2]=0.0;g[f+600>>2]=.699999988079071;g[f+604>>2]=0.0;i=e;return f|0}function wd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0;h=i;c[3580]=(c[3580]|0)+1;j=vr(627)|0;if((j|0)==0){j=0}else{k=j+19&-16;c[k+ -4>>2]=j;j=k}c[j+4>>2]=5;c[j+8>>2]=-1;c[j+12>>2]=-1;g[j+16>>2]=3.4028234663852886e+38;a[j+20|0]=1;a[j+21|0]=0;c[j+24>>2]=-1;c[j+28>>2]=b;c[j+32>>2]=d;g[j+36>>2]=0.0;g[j+40>>2]=.30000001192092896;c[j+44>>2]=0;c[j>>2]=968;k=j+300|0;c[k+0>>2]=c[e+0>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];k=j+316|0;d=e+16|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];k=j+332|0;d=e+32|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];k=j+348|0;e=e+48|0;c[k+0>>2]=c[e+0>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];k=j+364|0;c[k+0>>2]=c[f+0>>2];c[k+4>>2]=c[f+4>>2];c[k+8>>2]=c[f+8>>2];c[k+12>>2]=c[f+12>>2];k=j+380|0;e=f+16|0;c[k+0>>2]=c[e+0>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];k=j+396|0;e=f+32|0;c[k+0>>2]=c[e+0>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];k=j+412|0;f=f+48|0;c[k+0>>2]=c[f+0>>2];c[k+4>>2]=c[f+4>>2];c[k+8>>2]=c[f+8>>2];c[k+12>>2]=c[f+12>>2];k=j+524|0;a[j+552|0]=0;a[k]=0;a[k+1|0]=0;a[k+2|0]=0;a[k+3|0]=0;g[j+572>>2]=-1.0;g[j+444>>2]=999999984306749400.0;g[j+448>>2]=999999984306749400.0;g[j+452>>2]=999999984306749400.0;g[j+428>>2]=1.0;g[j+432>>2]=.30000001192092896;g[j+436>>2]=1.0;g[j+440>>2]=.009999999776482582;g[j+456>>2]=.05000000074505806;c[j+592>>2]=0;g[j+596>>2]=0.0;g[j+600>>2]=.699999988079071;g[j+604>>2]=0.0;i=h;return j|0}function xd(a,b,c){a=a|0;b=b|0;c=+c;var d=0;d=i;if((b|0)==3){g[a+452>>2]=c}else if((b|0)==5){g[a+444>>2]=c}else if((b|0)==4){g[a+448>>2]=c}i=d;return}function yd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function zd(a,b){a=+a;b=+b;var d=0,e=0,f=0;d=i;c[3580]=(c[3580]|0)+1;e=vr(95)|0;if((e|0)==0){e=0}else{f=e+19&-16;c[f+ -4>>2]=e;e=f}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e>>2]=6800;g[e+56>>2]=a;g[e+60>>2]=b;c[e+4>>2]=11;c[e+64>>2]=0;c[e+68>>2]=1;c[e+72>>2]=2;g[e+28>>2]=a;g[e+32>>2]=b;g[e+36>>2]=a;g[e+52>>2]=a/+R(+(a*a+b*b));i=d;return e|0}function Ad(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Ob[c[(c[a>>2]|0)+32>>2]&7](a,b,d);i=e;return}function Bd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Cd(){var a=0,b=0,d=0,e=0;b=i;i=i+32|0;a=b;while(1){d=vr(92)|0;if((d|0)!=0){e=6;break}d=c[3818]|0;c[3818]=d+0;if((d|0)==0){e=5;break}lc[d&1]()}if((e|0)==5){e=wb(4)|0;c[e>>2]=15288;vb(e|0,15336,198)}else if((e|0)==6){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=4096;c[a+12>>2]=4096;c[a+16>>2]=0;c[a+20>>2]=1;nm(d,a);i=b;return d|0}return 0}function Dd(a){a=a|0;var b=0,d=0,e=0;b=i;while(1){d=vr(92)|0;if((d|0)!=0){e=6;break}d=c[3818]|0;c[3818]=d+0;if((d|0)==0){e=5;break}lc[d&1]()}if((e|0)==5){e=wb(4)|0;c[e>>2]=15288;vb(e|0,15336,198)}else if((e|0)==6){nm(d,a);i=b;return d|0}return 0}function Ed(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Fd(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0.0,l=0;l=i;k=+Pb[c[(c[a>>2]|0)+12>>2]&1](a,b,d,e,f,g,h,j);i=l;return+k}function Gd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Hd(b,d,e){b=+b;d=d|0;e=e|0;var f=0,h=0,j=0,k=0;f=i;while(1){h=vr(140)|0;if((h|0)!=0){break}h=c[3818]|0;c[3818]=h+0;if((h|0)==0){j=5;break}lc[h&1]()}if((j|0)==5){k=wb(4)|0;c[k>>2]=15288;vb(k|0,15336,198)}g[h>>2]=b;c[h+4>>2]=d;d=h+8|0;j=h+56|0;k=d;do{k=k+16|0}while((k|0)!=(j|0));c[h+72>>2]=e;j=h+76|0;k=h+100|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;g[k>>2]=.5;g[h+104>>2]=0.0;g[h+108>>2]=0.0;g[h+112>>2]=.800000011920929;g[h+116>>2]=1.0;a[h+120|0]=0;g[h+124>>2]=.004999999888241291;g[h+128>>2]=.009999999776482582;g[h+132>>2]=.009999999776482582;g[h+136>>2]=.009999999776482582;ef(d);i=f;return h|0}function Id(b,d,e,f){b=+b;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0;h=i;while(1){j=vr(140)|0;if((j|0)!=0){break}j=c[3818]|0;c[3818]=j+0;if((j|0)==0){k=5;break}lc[j&1]()}if((k|0)==5){l=wb(4)|0;c[l>>2]=15288;vb(l|0,15336,198)}g[j>>2]=b;c[j+4>>2]=d;d=j+8|0;k=j+56|0;l=d;do{l=l+16|0}while((l|0)!=(k|0));c[j+72>>2]=e;l=j+76|0;c[l+0>>2]=c[f+0>>2];c[l+4>>2]=c[f+4>>2];c[l+8>>2]=c[f+8>>2];c[l+12>>2]=c[f+12>>2];g[j+92>>2]=0.0;g[j+96>>2]=0.0;g[j+100>>2]=.5;g[j+104>>2]=0.0;g[j+108>>2]=0.0;g[j+112>>2]=.800000011920929;g[j+116>>2]=1.0;a[j+120|0]=0;g[j+124>>2]=.004999999888241291;g[j+128>>2]=.009999999776482582;g[j+132>>2]=.009999999776482582;g[j+136>>2]=.009999999776482582;ef(d);i=h;return j|0}function Jd(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Kd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ld(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0,t=0.0;b=i;c[3580]=(c[3580]|0)+1;d=vr(75)|0;if((d|0)==0){e=0}else{e=d+19&-16;c[e+ -4>>2]=d}c[e+8>>2]=0;d=e+12|0;g[d>>2]=1.0;h=e+16|0;g[h>>2]=1.0;k=e+20|0;g[k>>2]=1.0;g[e+24>>2]=0.0;l=e+44|0;g[l>>2]=.03999999910593033;c[e+52>>2]=0;c[e>>2]=3832;c[e+4>>2]=0;n=+g[a>>2];f=a+4|0;o=+g[f>>2];j=a+8|0;m=+g[j>>2];if(n<o){p=n<m?0:2}else{p=o<m?1:2}m=+g[a+(p<<2)>>2]*.10000000149011612;if(m<.03999999910593033){t=+$i(e);r=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);o=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);s=e+28|0;t=t+ +g[s>>2];q=e+32|0;r=r+ +g[q>>2];p=e+36|0;o=o+ +g[p>>2];g[l>>2]=m;m=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);n=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);o=o- +Vb[c[(c[e>>2]|0)+48>>2]&3](e);g[s>>2]=t-m;g[q>>2]=r-n;g[p>>2]=o;g[e+40>>2]=0.0;l=c[e>>2]|0}else{l=3832|0}o=+Vb[c[l+48>>2]&3](e);r=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);t=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);r=+g[f>>2]*+g[h>>2]-r;t=+g[j>>2]*+g[k>>2]-t;g[e+28>>2]=+g[a>>2]*+g[d>>2]-o;g[e+32>>2]=r;g[e+36>>2]=t;g[e+40>>2]=0.0;i=b;return e|0}function Md(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Ob[c[(c[a>>2]|0)+32>>2]&7](a,b,d);i=e;return}function Nd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Od(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;while(1){e=vr(5260)|0;if((e|0)!=0){break}e=c[3818]|0;c[3818]=e+0;if((e|0)==0){f=5;break}lc[e&1]()}if((f|0)==5){g=wb(4)|0;c[g>>2]=15288;vb(g|0,15336,198)}c[e>>2]=4200;c[e+4>>2]=2;a[e+24|0]=1;c[e+20>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+28>>2]=9152;f=e+5256|0;c[f>>2]=b;c[e+60>>2]=51;c[e+64>>2]=Jb[c[(c[b>>2]|0)+12>>2]&63](b)|0;c[e+68>>2]=Jb[c[(c[b>>2]|0)+8>>2]&63](b)|0;b=0;do{g=0;do{h=c[f>>2]|0;c[e+(b*144|0)+(g<<2)+72>>2]=Sb[c[(c[h>>2]|0)+16>>2]&31](h,b,g)|0;g=g+1|0}while((g|0)<36);b=b+1|0}while((b|0)<36);i=d;return e|0}function Pd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Qd(){var a=0,b=0,d=0;a=i;c[3580]=(c[3580]|0)+1;b=vr(219)|0;if((b|0)==0){b=0}else{d=b+19&-16;c[d+ -4>>2]=b;b=d}Sd();Sd();Rd(b,320,320);i=a;return b|0}function Rd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;c[a>>2]=456;h=a+4|0;g=a+52|0;f=h;do{f=f+16|0}while((f|0)!=(g|0));c[h+0>>2]=c[b+0>>2];c[h+4>>2]=c[b+4>>2];c[h+8>>2]=c[b+8>>2];c[h+12>>2]=c[b+12>>2];j=a+20|0;g=b+16|0;c[j+0>>2]=c[g+0>>2];c[j+4>>2]=c[g+4>>2];c[j+8>>2]=c[g+8>>2];c[j+12>>2]=c[g+12>>2];j=a+36|0;f=b+32|0;c[j+0>>2]=c[f+0>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];j=a+52|0;h=b+48|0;c[j+0>>2]=c[h+0>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];c[j+12>>2]=c[h+12>>2];j=a+68|0;k=a+116|0;l=j;do{l=l+16|0}while((l|0)!=(k|0));c[j+0>>2]=c[d+0>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];j=a+84|0;k=d+16|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];j=a+100|0;k=d+32|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];j=a+116|0;d=d+48|0;c[j+0>>2]=c[d+0>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];d=a+132|0;j=a+180|0;k=d;do{k=k+16|0}while((k|0)!=(j|0));c[d+0>>2]=c[b+0>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];l=a+148|0;c[l+0>>2]=c[g+0>>2];c[l+4>>2]=c[g+4>>2];c[l+8>>2]=c[g+8>>2];c[l+12>>2]=c[g+12>>2];l=a+164|0;c[l+0>>2]=c[f+0>>2];c[l+4>>2]=c[f+4>>2];c[l+8>>2]=c[f+8>>2];c[l+12>>2]=c[f+12>>2];l=a+180|0;c[l+0>>2]=c[h+0>>2];c[l+4>>2]=c[h+4>>2];c[l+8>>2]=c[h+8>>2];c[l+12>>2]=c[h+12>>2];c[a+196>>2]=0;i=e;return}function Sd(){var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+48|0;j=b+32|0;e=b+28|0;f=b+24|0;h=b+20|0;d=b+16|0;k=b+12|0;l=b+8|0;m=b+4|0;n=b;if((a[384]|0)!=0){i=b;return}if((Ya(384)|0)==0){i=b;return}if((a[440]|0)==0?(Ya(440)|0)!=0:0){g[j>>2]=1.0;g[e>>2]=0.0;g[f>>2]=0.0;g[h>>2]=0.0;g[d>>2]=1.0;g[k>>2]=0.0;g[l>>2]=0.0;g[m>>2]=0.0;g[n>>2]=1.0;Hf(392,j,e,f,h,d,k,l,m,n);bb(440);d=320}else{d=320}do{d=d+16|0}while((d|0)!=(368|0));c[320>>2]=c[392>>2];c[324>>2]=c[396>>2];c[328>>2]=c[400>>2];c[332>>2]=c[404>>2];c[336>>2]=c[408>>2];c[340>>2]=c[412>>2];c[344>>2]=c[416>>2];c[348>>2]=c[420>>2];c[352>>2]=c[424>>2];c[356>>2]=c[428>>2];c[360>>2]=c[432>>2];c[364>>2]=c[436>>2];c[368>>2]=0;c[372>>2]=0;c[376>>2]=0;c[380>>2]=0;bb(384);i=b;return}function Td(a){a=a|0;var b=0,d=0,e=0;b=i;c[3580]=(c[3580]|0)+1;d=vr(219)|0;if((d|0)==0){d=0}else{e=d+19&-16;c[e+ -4>>2]=d;d=e}Sd();Rd(d,a,320);i=b;return d|0}function Ud(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;c[3580]=(c[3580]|0)+1;e=vr(219)|0;if((e|0)==0){e=0}else{f=e+19&-16;c[f+ -4>>2]=e;e=f}Rd(e,a,b);i=d;return e|0}function Vd(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+8>>2]&127](a,b);i=d;return}function Wd(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+12>>2]&127](a,b);i=d;return}function Xd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Yd(a,d){a=a|0;d=d|0;var e=0,f=0,h=0;e=i;while(1){f=vr(84)|0;if((f|0)!=0){h=6;break}f=c[3818]|0;c[3818]=f+0;if((f|0)==0){h=5;break}lc[f&1]()}if((h|0)==5){h=wb(4)|0;c[h>>2]=15288;vb(h|0,15336,198)}else if((h|0)==6){g[f+4>>2]=1.0;c[f+8>>2]=0;b[f+12>>1]=1;b[f+14>>1]=-1;c[f+16>>2]=0;c[f>>2]=192;h=f+20|0;c[h+0>>2]=c[a+0>>2];c[h+4>>2]=c[a+4>>2];c[h+8>>2]=c[a+8>>2];c[h+12>>2]=c[a+12>>2];h=f+36|0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];i=e;return f|0}return 0}function Zd(a){a=a|0;return(c[a+8>>2]|0)!=0|0}function _d(a){a=a|0;return a+36|0}function $d(a,b){a=a|0;b=b|0;var d=0;d=i;a=a+36|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];i=d;return}function ae(a){a=a|0;return c[a+8>>2]|0}function be(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function ce(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function de(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0,j=0;f=i;while(1){h=vr(16)|0;if((h|0)!=0){j=6;break}h=c[3818]|0;c[3818]=h+0;if((h|0)==0){j=5;break}lc[h&1]()}if((j|0)==5){j=wb(4)|0;c[j>>2]=15288;vb(j|0,15336,198)}else if((j|0)==6){g[h>>2]=a;g[h+4>>2]=b;g[h+8>>2]=d;g[h+12>>2]=e;i=f;return h|0}return 0}function ee(a){a=a|0;return+(+g[a>>2])}function fe(a){a=a|0;return+(+g[a+4>>2])}function ge(a){a=a|0;return+(+g[a+8>>2])}function he(a){a=a|0;return+(+g[a+12>>2])}function ie(a,b){a=a|0;b=+b;g[a>>2]=b;return}function je(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function ke(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function le(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function me(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function ne(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function oe(a){a=a|0;return(c[a+8>>2]|0)!=0|0}function pe(a){a=a|0;return c[a+8>>2]|0}function qe(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function re(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function se(){var a=0,b=0,d=0;a=i;c[3580]=(c[3580]|0)+1;b=vr(35)|0;if((b|0)==0){b=0;i=a;return b|0}d=b+19&-16;c[d+ -4>>2]=b;b=d;i=a;return b|0}function te(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0,j=0;f=i;c[3580]=(c[3580]|0)+1;h=vr(35)|0;if((h|0)==0){h=0}else{j=h+19&-16;c[j+ -4>>2]=h;h=j}g[h>>2]=a;g[h+4>>2]=b;g[h+8>>2]=d;g[h+12>>2]=e;i=f;return h|0}function ue(a){a=a|0;return+(+g[a+12>>2])}function ve(a){a=a|0;return+(+g[a>>2])}function we(a){a=a|0;return+(+g[a+4>>2])}function xe(a){a=a|0;return+(+g[a+8>>2])}function ye(a,b){a=a|0;b=+b;g[a>>2]=b;return}function ze(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function Ae(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function Be(a,b){a=a|0;b=+b;var c=0;g[a>>2]=+g[a>>2]*b;c=a+4|0;g[c>>2]=+g[c>>2]*b;c=a+8|0;g[c>>2]=+g[c>>2]*b;return a|0}function Ce(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function De(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ee(){var a=0,b=0,d=0;a=i;c[3580]=(c[3580]|0)+1;b=vr(35)|0;if((b|0)==0){b=0;i=a;return b|0}d=b+19&-16;c[d+ -4>>2]=b;b=d;i=a;return b|0}function Fe(a,b,d){a=+a;b=+b;d=+d;var e=0,f=0,h=0;e=i;c[3580]=(c[3580]|0)+1;f=vr(35)|0;if((f|0)==0){f=0}else{h=f+19&-16;c[h+ -4>>2]=f;f=h}g[f>>2]=a;g[f+4>>2]=b;g[f+8>>2]=d;g[f+12>>2]=0.0;i=e;return f|0}function Ge(a){a=a|0;return+(+g[a>>2])}function He(a){a=a|0;return+(+g[a+4>>2])}function Ie(a){a=a|0;return+(+g[a+8>>2])}function Je(a,b){a=a|0;b=+b;g[a>>2]=b;return}function Ke(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function Le(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function Me(a,b){a=a|0;b=+b;var c=0;g[a>>2]=+g[a>>2]*b;c=a+4|0;g[c>>2]=+g[c>>2]*b;c=a+8|0;g[c>>2]=+g[c>>2]*b;return a|0}function Ne(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Oe(a){a=+a;var b=0,d=0,e=0;b=i;c[3580]=(c[3580]|0)+1;d=vr(71)|0;if((d|0)==0){d=0}else{e=d+19&-16;c[e+ -4>>2]=d;d=e}c[d+8>>2]=0;g[d+12>>2]=1.0;g[d+16>>2]=1.0;g[d+20>>2]=1.0;g[d+24>>2]=0.0;c[d>>2]=11632;c[d+4>>2]=8;g[d+28>>2]=a;g[d+44>>2]=a;i=b;return d|0}function Pe(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Ob[c[(c[a>>2]|0)+32>>2]&7](a,b,d);i=e;return}function Qe(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Re(){var a=0,b=0,d=0;a=i;while(1){b=vr(24)|0;if((b|0)!=0){d=6;break}b=c[3818]|0;c[3818]=b+0;if((b|0)==0){d=5;break}lc[b&1]()}if((d|0)==5){d=wb(4)|0;c[d>>2]=15288;vb(d|0,15336,198)}else if((d|0)==6){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=4096;c[b+12>>2]=4096;c[b+16>>2]=0;c[b+20>>2]=1;i=a;return b|0}return 0}function Se(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Te(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Ob[c[(c[a>>2]|0)+32>>2]&7](a,b,d);i=e;return}function Ue(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ve(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function We(b){b=b|0;var d=0,e=0,f=0,h=0;d=i;c[3580]=(c[3580]|0)+1;e=vr(635)|0;if((e|0)==0){e=0}else{f=e+19&-16;c[f+ -4>>2]=e;e=f}g[e+164>>2]=1.0;g[e+168>>2]=1.0;g[e+172>>2]=1.0;g[e+176>>2]=0.0;c[e+180>>2]=0;g[e+184>>2]=999999984306749400.0;f=e+188|0;h=e+204|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[h>>2]=1;c[e+208>>2]=-1;c[e+212>>2]=-1;c[e+216>>2]=1;g[e+220>>2]=0.0;g[e+224>>2]=.5;g[e+228>>2]=0.0;g[e+232>>2]=0.0;c[e+236>>2]=1;c[e+240>>2]=0;g[e+244>>2]=1.0;h=e+248|0;f=e+4|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[f>>2]=1.0;f=e+8|0;h=e+24|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;g[h>>2]=1.0;h=e+28|0;f=e+44|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[f>>2]=1.0;f=e+48|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[e>>2]=2376;a[e+500|0]=1;c[e+496>>2]=0;c[e+488>>2]=0;c[e+492>>2]=0;Ah(e,b);i=d;return e|0}function Xe(a){a=a|0;return c[a+480>>2]|0}function Ye(a){a=a|0;return a+4|0}function Ze(a){a=a|0;var b=0,d=0;b=i;if((c[a+204>>2]&3|0)!=0){i=b;return}d=a+216|0;if(!(((c[d>>2]|0)+ -4|0)>>>0<2)){c[d>>2]=1}g[a+220>>2]=0.0;i=b;return}function _e(a,b){a=a|0;b=b|0;var d=0;d=i;if(!b?(c[a+204>>2]&3|0)!=0:0){i=d;return}b=a+216|0;if(!(((c[b>>2]|0)+ -4|0)>>>0<2)){c[b>>2]=1}g[a+220>>2]=0.0;i=d;return}function $e(a){a=a|0;a=c[a+216>>2]|0;return((a|0)==2?0:(a|0)!=5)|0}function af(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+8>>2]&255](a);i=b;return}function bf(){var a=0,b=0,d=0,e=0;a=i;while(1){b=vr(64)|0;if((b|0)!=0){break}b=c[3818]|0;c[3818]=b+0;if((b|0)==0){d=5;break}lc[b&1]()}if((d|0)==5){e=wb(4)|0;c[e>>2]=15288;vb(e|0,15336,198)}d=b+48|0;e=b;do{e=e+16|0}while((e|0)!=(d|0));i=a;return b|0}function cf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;while(1){e=vr(64)|0;if((e|0)!=0){break}e=c[3818]|0;c[3818]=e+0;if((e|0)==0){f=5;break}lc[e&1]()}if((f|0)==5){g=wb(4)|0;c[g>>2]=15288;vb(g|0,15336,198)}f=e+48|0;g=e;do{g=g+16|0}while((g|0)!=(f|0));Cf(e,a);c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];i=d;return e|0}function df(a){a=a|0;var b=0;b=i;ef(a);i=b;return}function ef(a){a=a|0;var b=0,d=0,e=0;b=i;g[a>>2]=1.0;d=a+4|0;e=a+20|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[e>>2]=1.0;e=a+24|0;d=a+40|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;g[d>>2]=1.0;g[a+44>>2]=0.0;a=a+48|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;i=b;return}function ff(a,b){a=a|0;b=b|0;var d=0;d=i;a=a+48|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];i=d;return}function gf(a,b){a=a|0;b=b|0;var c=0;c=i;Cf(a,b);i=c;return}function hf(a){a=a|0;return a+48|0}function jf(b){b=b|0;var d=0,e=0;e=i;i=i+16|0;d=e;if((a[48]|0)==0?(Ya(48)|0)!=0:0){bb(48)}Bf(b,d);c[32>>2]=c[d+0>>2];c[36>>2]=c[d+4>>2];c[40>>2]=c[d+8>>2];c[44>>2]=c[d+12>>2];i=e;return 32}function kf(a){a=a|0;return a|0}function lf(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function mf(a){a=a|0;return+(+g[a>>2])}function nf(a){a=a|0;return+(+g[a+4>>2])}function of(a){a=a|0;return+(+g[a+8>>2])}function pf(a){a=a|0;return+(+g[a+12>>2])}function qf(a,b){a=a|0;b=+b;g[a>>2]=b;return}function rf(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function sf(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function tf(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function uf(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function vf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Fb[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function wf(a){a=a|0;return}function xf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function yf(a){a=a|0;return}function zf(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return}function Af(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function Bf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0,l=0,m=0,n=0;c=i;i=i+16|0;d=c;j=+g[a>>2];f=+g[a+20>>2];h=+g[a+40>>2];e=j+f+h;if(e>0.0){h=+R(+(e+1.0));j=h*.5;g[d+12>>2]=j;h=.5/h;e=(+g[a+36>>2]- +g[a+24>>2])*h;g[d>>2]=e;f=(+g[a+8>>2]- +g[a+32>>2])*h;g[d+4>>2]=f;h=(+g[a+16>>2]- +g[a+4>>2])*h;g[d+8>>2]=h;g[b>>2]=e;k=b+4|0;g[k>>2]=f;k=b+8|0;g[k>>2]=h;k=b+12|0;g[k>>2]=j;i=c;return}if(j<f){k=f<h?2:1}else{k=j<h?2:0}n=((k+1|0)>>>0)%3|0;m=((k+2|0)>>>0)%3|0;e=+R(+(+g[a+(k<<4)+(k<<2)>>2]- +g[a+(n<<4)+(n<<2)>>2]- +g[a+(m<<4)+(m<<2)>>2]+1.0));g[d+(k<<2)>>2]=e*.5;e=.5/e;l=d+12|0;g[l>>2]=(+g[a+(m<<4)+(n<<2)>>2]- +g[a+(n<<4)+(m<<2)>>2])*e;g[d+(n<<2)>>2]=(+g[a+(n<<4)+(k<<2)>>2]+ +g[a+(k<<4)+(n<<2)>>2])*e;g[d+(m<<2)>>2]=(+g[a+(m<<4)+(k<<2)>>2]+ +g[a+(k<<4)+(m<<2)>>2])*e;e=+g[d>>2];f=+g[d+4>>2];h=+g[d+8>>2];j=+g[l>>2];g[b>>2]=e;k=b+4|0;g[k>>2]=f;k=b+8|0;g[k>>2]=h;k=b+12|0;g[k>>2]=j;i=c;return}function Cf(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;i=+g[b>>2];f=+g[b+4>>2];m=+g[b+8>>2];k=+g[b+12>>2];j=2.0/(i*i+f*f+m*m+k*k);d=i*j;c=f*j;j=m*j;e=k*d;h=k*c;k=k*j;d=i*d;l=i*c;i=i*j;c=f*c;f=f*j;j=m*j;g[a>>2]=1.0-(c+j);g[a+4>>2]=l-k;g[a+8>>2]=i+h;g[a+12>>2]=0.0;g[a+16>>2]=l+k;g[a+20>>2]=1.0-(d+j);g[a+24>>2]=f-e;g[a+28>>2]=0.0;g[a+32>>2]=i-h;g[a+36>>2]=f+e;g[a+40>>2]=1.0-(d+c);g[a+44>>2]=0.0;return}function Df(a){a=a|0;return}function Ef(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Ff(a,c){a=a|0;c=c|0;var d=0;d=i;if((b[c+4>>1]&b[a+14>>1])<<16>>16==0){c=0;i=d;return c|0}c=(b[a+12>>1]&b[c+6>>1])<<16>>16!=0;i=d;return c|0}function Gf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;e=b+24|0;g[a+4>>2]=+g[e>>2];f=c[b>>2]|0;c[a+8>>2]=f;if(d){d=a+52|0;b=b+8|0;c[d+0>>2]=c[b+0>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2]}else{l=+g[b+8>>2];k=+g[b+12>>2];j=+g[b+16>>2];i=+g[f+20>>2]*l+ +g[f+24>>2]*k+ +g[f+28>>2]*j;h=+g[f+36>>2]*l+ +g[f+40>>2]*k+ +g[f+44>>2]*j;g[a+52>>2]=+g[f+4>>2]*l+ +g[f+8>>2]*k+ +g[f+12>>2]*j;g[a+56>>2]=i;g[a+60>>2]=h;g[a+64>>2]=0.0}l=+g[e>>2];k=1.0-l;g[a+68>>2]=k*+g[a+20>>2]+ +g[a+36>>2]*l;g[a+72>>2]=k*+g[a+24>>2]+l*+g[a+40>>2];g[a+76>>2]=k*+g[a+28>>2]+l*+g[a+44>>2];return+(+g[e>>2])}function Hf(a,b,c,d,e,f,h,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=i;m=a+48|0;n=a;do{n=n+16|0}while((n|0)!=(m|0));g[a>>2]=+g[b>>2];g[a+4>>2]=+g[c>>2];g[a+8>>2]=+g[d>>2];g[a+12>>2]=0.0;g[a+16>>2]=+g[e>>2];g[a+20>>2]=+g[f>>2];g[a+24>>2]=+g[h>>2];g[a+28>>2]=0.0;g[a+32>>2]=+g[j>>2];g[a+36>>2]=+g[k>>2];g[a+40>>2]=+g[l>>2];g[a+44>>2]=0.0;i=o;return}function If(a){a=a|0;return}function Jf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Kf(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0.0,h=0.0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0;l=i;i=i+176|0;j=l+128|0;k=l+64|0;e=l;Hf(j,a+68|0,a+84|0,a+100|0,a+72|0,a+88|0,a+104|0,a+76|0,a+92|0,a+108|0);p=-+g[a+116>>2];o=-+g[a+120>>2];d=-+g[a+124>>2];f=+g[j>>2]*p+ +g[j+4>>2]*o+ +g[j+8>>2]*d;h=+g[j+16>>2]*p+ +g[j+20>>2]*o+ +g[j+24>>2]*d;d=+g[j+32>>2]*p+ +g[j+36>>2]*o+ +g[j+40>>2]*d;m=e+48|0;n=e;do{n=n+16|0}while((n|0)!=(m|0));c[e+0>>2]=c[j+0>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[e+12>>2]=c[j+12>>2];n=e+16|0;m=j+16|0;c[n+0>>2]=c[m+0>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];n=e+32|0;m=j+32|0;c[n+0>>2]=c[m+0>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];g[e+48>>2]=f;g[e+52>>2]=h;g[e+56>>2]=d;g[e+60>>2]=0.0;Mf(k,e,a+4|0);c[b+0>>2]=c[k+0>>2];c[b+4>>2]=c[k+4>>2];c[b+8>>2]=c[k+8>>2];c[b+12>>2]=c[k+12>>2];n=b+16|0;m=k+16|0;c[n+0>>2]=c[m+0>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];n=b+32|0;m=k+32|0;c[n+0>>2]=c[m+0>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];b=b+48|0;n=k+48|0;c[b+0>>2]=c[n+0>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];c[b+12>>2]=c[n+12>>2];i=l;return}function Lf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+64|0;e=d;f=a+4|0;Mf(e,b,a+68|0);c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];b=a+20|0;f=e+16|0;c[b+0>>2]=c[f+0>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];b=a+36|0;f=e+32|0;c[b+0>>2]=c[f+0>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];b=a+52|0;a=e+48|0;c[b+0>>2]=c[a+0>>2];c[b+4>>2]=c[a+4>>2];c[b+8>>2]=c[a+8>>2];c[b+12>>2]=c[a+12>>2];i=d;return}function Mf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;f=i;i=i+96|0;x=f+80|0;w=f+76|0;v=f+72|0;u=f+68|0;t=f+64|0;s=f+60|0;r=f+56|0;q=f+52|0;p=f+48|0;e=f;E=+g[d>>2];j=+g[b>>2];D=+g[d+16>>2];o=b+4|0;k=+g[o>>2];C=+g[d+32>>2];n=b+8|0;m=+g[n>>2];g[x>>2]=E*j+D*k+C*m;B=+g[d+4>>2];A=+g[d+20>>2];z=+g[d+36>>2];g[w>>2]=B*j+A*k+z*m;y=+g[d+8>>2];h=+g[d+24>>2];l=+g[d+40>>2];g[v>>2]=y*j+h*k+l*m;m=+g[b+16>>2];k=+g[b+20>>2];j=+g[b+24>>2];g[u>>2]=E*m+D*k+C*j;g[t>>2]=B*m+A*k+z*j;g[s>>2]=y*m+h*k+l*j;j=+g[b+32>>2];k=+g[b+36>>2];m=+g[b+40>>2];g[r>>2]=E*j+D*k+C*m;g[q>>2]=B*j+A*k+z*m;g[p>>2]=y*j+h*k+l*m;Hf(e,x,w,v,u,t,s,r,q,p);m=+g[d+48>>2];l=+g[d+52>>2];k=+g[d+56>>2];h=m*+g[b>>2]+l*+g[o>>2]+k*+g[n>>2]+ +g[b+48>>2];j=m*+g[b+16>>2]+l*+g[b+20>>2]+k*+g[b+24>>2]+ +g[b+52>>2];k=m*+g[b+32>>2]+l*+g[b+36>>2]+k*+g[b+40>>2]+ +g[b+56>>2];b=a+48|0;d=a;do{d=d+16|0}while((d|0)!=(b|0));c[a+0>>2]=c[e+0>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];x=a+16|0;w=e+16|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];x=a+32|0;w=e+32|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];g[a+48>>2]=h;g[a+52>>2]=j;g[a+56>>2]=k;g[a+60>>2]=0.0;i=f;return}function Nf(a){a=a|0;return}function Of(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Pf(a,c){a=a|0;c=c|0;var d=0;d=i;if((b[c+4>>1]&b[a+6>>1])<<16>>16==0){c=0;i=d;return c|0}c=(b[a+4>>1]&b[c+6>>1])<<16>>16!=0;i=d;return c|0}function Qf(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0.0,k=0;k=i;j=+db(664,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0);i=k;return+j}function Rf(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0,l=0,m=0;e=i;if((a[b+527|0]|0)!=0){c[d>>2]=0;c[d+4>>2]=0;i=e;return}c[d>>2]=3;k=d+4|0;c[k>>2]=3;m=c[b+28>>2]|0;l=c[b+32>>2]|0;Sf(b,m+4|0,l+4|0,m+264|0,l+264|0);if(((a[b+526|0]|0)!=0?(f=c[d>>2]|0,c[d>>2]=f+1,h=c[k>>2]|0,c[k>>2]=h+ -1,j=+g[b+456>>2],+g[b+444>>2]<j):0)?+g[b+448>>2]<j:0){c[d>>2]=f+2;c[k>>2]=h+ -2}if((a[b+525|0]|0)==0){i=e;return}c[d>>2]=(c[d>>2]|0)+1;c[k>>2]=(c[k>>2]|0)+ -1;i=e;return}function Sf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,S=0.0,V=0.0,X=0.0,Y=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0,ea=0,fa=0,ga=0,ha=0.0;j=i;i=i+272|0;ga=j+208|0;fa=j+144|0;G=j+80|0;F=j+64|0;da=j+48|0;ea=j+32|0;I=j+16|0;H=j;y=b+504|0;g[y>>2]=0.0;g[b+500>>2]=0.0;l=b+525|0;a[l]=0;k=b+526|0;a[k]=0;if((a[b+552|0]|0)!=0?(a[b+527|0]|0)==0:0){p=+g[b+556>>2];t=+g[b+560>>2];ba=+g[b+564>>2];X=+g[b+568>>2];$=2.0/(p*p+t*t+ba*ba+X*X);s=p*$;ca=t*$;$=ba*$;aa=X*s;_=X*ca;X=X*$;s=p*s;O=p*ca;p=p*$;ca=t*ca;t=t*$;$=ba*$;ba=1.0-(ca+$);P=O-X;V=p+_;X=O+X;$=1.0-(s+$);O=t-aa;_=p-_;aa=t+aa;ca=1.0-(s+ca);Mf(ga,d,b+300|0);Mf(fa,e,b+364|0);s=+g[fa>>2];t=+g[fa+4>>2];p=+g[fa+8>>2];E=ba*s+X*t+_*p;J=P*s+$*t+aa*p;K=V*s+O*t+ca*p;v=+g[fa+16>>2];w=+g[fa+20>>2];o=+g[fa+24>>2];L=ba*v+X*w+_*o;M=P*v+$*w+aa*o;N=V*v+O*w+ca*o;x=+g[fa+32>>2];z=+g[fa+36>>2];A=+g[fa+40>>2];_=ba*x+X*z+_*A;aa=P*x+$*z+aa*A;ca=V*x+O*z+ca*A;O=+g[ga>>2];V=+g[ga+16>>2];$=+g[ga+32>>2];P=+g[ga+4>>2];X=+g[ga+20>>2];ba=+g[ga+36>>2];S=+g[ga+8>>2];Y=+g[ga+24>>2];m=+g[ga+40>>2];q=-+g[ga+48>>2];r=-+g[ga+52>>2];B=-+g[ga+56>>2];C=O*q+V*r+$*B;n=P*q+X*r+ba*B;B=S*q+Y*r+m*B;p=s*0.0+t*0.0+p*0.0+ +g[fa+48>>2]+(K*B+(E*C+J*n));o=v*0.0+w*0.0+o*0.0+ +g[fa+52>>2]+(N*B+(L*C+M*n));n=x*0.0+z*0.0+A*0.0+ +g[fa+56>>2]+(ca*B+(_*C+aa*n));g[G>>2]=E*O+J*P+K*S;g[G+4>>2]=E*V+J*X+K*Y;g[G+8>>2]=E*$+J*ba+K*m;g[G+12>>2]=0.0;g[G+16>>2]=L*O+M*P+N*S;g[G+20>>2]=L*V+M*X+N*Y;g[G+24>>2]=L*$+M*ba+N*m;g[G+28>>2]=0.0;g[G+32>>2]=_*O+aa*P+ca*S;g[G+36>>2]=_*V+aa*X+ca*Y;g[G+40>>2]=_*$+aa*ba+ca*m;g[G+44>>2]=0.0;g[G+48>>2]=p;g[G+52>>2]=o;g[G+56>>2]=n;g[G+60>>2]=0.0;Bf(G,F);n=+g[F>>2];o=+g[F+4>>2];p=+g[F+8>>2];m=n*n+o*o+p*p;if(+Q(+m)<1.1920928955078125e-7){i=j;return}g[b+472>>2]=0.0;m=1.0/+R(+m);g[b+460>>2]=n*m;g[b+464>>2]=o*m;g[b+468>>2]=p*m;m=+g[F+12>>2];m=m<-1.0?-1.0:m;ca=+W(+(m>1.0?1.0:m))*2.0;g[y>>2]=ca;if(+Q(+ca)<1.1920928955078125e-7){i=j;return}a[k]=1;i=j;return}Bf(d,da);G=b+300|0;Bf(G,ea);q=+g[da+12>>2];r=+g[ea>>2];z=+g[da>>2];t=+g[ea+12>>2];A=+g[da+4>>2];B=+g[ea+8>>2];p=+g[da+8>>2];C=+g[ea+4>>2];n=q*r+z*t+A*B-p*C;m=r*p+(t*A+q*C)-z*B;o=q*B+t*p+z*C-r*A;p=q*t-r*z-A*C-B*p;Bf(e,I);F=b+364|0;Bf(F,H);B=+g[I+12>>2];C=+g[H>>2];A=+g[I>>2];z=+g[H+12>>2];r=+g[I+4>>2];t=+g[H+8>>2];q=+g[I+8>>2];s=+g[H+4>>2];v=B*C+A*z+r*t-q*s;x=C*q+(z*r+B*s)-A*t;w=B*t+z*q+A*s-C*r;q=B*z-C*A-r*s-t*q;t=-v;s=-x;r=-w;A=n*q+p*t+o*s-m*r;C=n*r+(m*q+p*s)-o*t;z=m*t+(o*q+p*r)-n*s;B=p*q-n*t-m*s-o*r;ba=C*0.0;N=z*0.0;aa=B+ba-N;K=B*0.0;ca=A*0.0;L=z+K-ca;ca=K+ca-C;K=-A;N=K-ba-N;ba=-C;M=-z;O=L*M+(B*aa+N*K)-ca*ba;J=ca*K+(B*L+N*ba)-aa*M;K=aa*ba+(B*ca+N*M)-L*K;L=1.0/+R(+(K*K+(O*O+J*J)));O=L*O;J=L*J;K=L*K;L=J*0.0;M=K*0.0;N=M+(L+O);if(N<-.9999998807907104){if(+Q(0.0)>.7071067690849304){M=0.0;K=u;L=u;J=0.0}else{M=-0.0;K=1.0;L=0.0;J=0.0}}else{aa=O*0.0;ca=+R(+((N+1.0)*2.0));ba=1.0/ca;M=(M-L)*ba;K=(aa-K)*ba;L=(J-aa)*ba;J=ca*.5}N=1.0/+R(+(J*J+(L*L+(K*K+M*M))));M=M*N;K=K*N;L=L*N;N=J*N;$=-M;aa=-K;J=-L;ba=z*aa+(A*N+B*$)-C*J;ca=A*J+(C*N+B*aa)-z*$;O=C*$+(z*N+B*J)-A*aa;C=B*N-A*$-C*aa-z*J;J=1.0/+R(+(C*C+(O*O+(ba*ba+ca*ca))));B=J*ba;A=J*ca;z=J*O;C=J*C;I=b+444|0;J=+g[I>>2];H=b+456|0;O=+g[H>>2];if(J>=O?(E=+g[b+448>>2],E>=O):0){N=N<-1.0?-1.0:N;N=+W(+(N>1.0?1.0:N))*2.0;if(N>1.1920928955078125e-7){ca=1.0/+R(+(L*L+(M*M+K*K)));M=M*ca;K=K*ca;L=L*ca;if(+Q(+K)>1.1920928955078125e-7){O=L*L/(K*K);O=+R(+((O+1.0)/(1.0/(E*E)+O/(J*J))))}else{O=J}}else{O=0.0;K=0.0;L=0.0;M=0.0}S=+g[b+428>>2];V=O*S;if(N>V){a[k]=1;P=N-V;if(N<O&S<.9999998807907104){N=P/(O-V)}else{N=1.0}g[b+528>>2]=N;g[y>>2]=P;if(+Q(+K)>1.1920928955078125e-7){E=+Q(+(K*-L/K*(E/J)));if(!(L<-0.0)){E=-E}L=1.0/+R(+(K*K+M*M+E*E));M=M*L;K=K*L;L=-(E*L)}ba=-M;aa=-K;$=-L;Y=x*$+q*ba-w*aa;ca=q*aa+w*ba-v*$;_=q*$+v*aa-x*ba;$=-(v*ba)-x*aa-w*$;aa=ca*r+(q*Y+$*t)-_*s;ba=_*t+(q*ca+$*s)-Y*r;ca=Y*s+(q*_+$*r)-ca*t;g[b+460>>2]=aa;g[b+464>>2]=ba;g[b+468>>2]=ca;g[b+472>>2]=0.0;ga=b+536|0;c[ga+0>>2]=0;c[ga+4>>2]=0;c[ga+8>>2]=0;c[ga+12>>2]=0;g[b+492>>2]=1.0/(aa*(+g[f>>2]*aa+ +g[f+16>>2]*ba+ +g[f+32>>2]*ca)+ba*(aa*+g[f+4>>2]+ba*+g[f+20>>2]+ca*+g[f+36>>2])+ca*(aa*+g[f+8>>2]+ba*+g[f+24>>2]+ca*+g[f+40>>2])+(aa*(aa*+g[h>>2]+ba*+g[h+16>>2]+ca*+g[h+32>>2])+ba*(aa*+g[h+4>>2]+ba*+g[h+20>>2]+ca*+g[h+36>>2])+ca*(aa*+g[h+8>>2]+ba*+g[h+24>>2]+ca*+g[h+40>>2])))}}else{D=23}a:do{if((D|0)==23){V=+g[G>>2];$=+g[b+316>>2];O=+g[b+332>>2];ha=+g[d>>2];ca=+g[d+4>>2];L=+g[d+8>>2];J=V*ha+$*ca+O*L;ba=+g[d+16>>2];_=+g[d+20>>2];N=+g[d+24>>2];E=V*ba+$*_+O*N;X=+g[d+32>>2];Y=+g[d+36>>2];aa=+g[d+40>>2];O=V*X+$*Y+O*aa;$=+g[b+304>>2];V=+g[b+320>>2];S=+g[b+336>>2];M=ha*$+ca*V+L*S;K=ba*$+_*V+N*S;S=X*$+Y*V+aa*S;V=+g[b+308>>2];$=+g[b+324>>2];P=+g[b+340>>2];L=ha*V+ca*$+L*P;N=ba*V+_*$+N*P;P=X*V+Y*$+aa*P;aa=+g[F>>2];$=+g[b+380>>2];Y=+g[b+396>>2];V=aa*+g[e>>2]+$*+g[e+4>>2]+Y*+g[e+8>>2];X=aa*+g[e+16>>2]+$*+g[e+20>>2]+Y*+g[e+24>>2];Y=aa*+g[e+32>>2]+$*+g[e+36>>2]+Y*+g[e+40>>2];$=J*V+E*X+O*Y;aa=M*V+K*X+S*Y;_=L*V+N*X+P*Y;ba=+g[I>>2];ca=+g[H>>2];do{if(ba<ca){ba=+g[b+448>>2];if(ba<ca){if(+Q(+aa)<1.1920928955078125e-7?+Q(+_)<1.1920928955078125e-7:0){break a}a[k]=1;g[b+460>>2]=-(O*X-E*Y);g[b+464>>2]=-(J*Y-O*V);g[b+468>>2]=-(E*V-J*X);g[b+472>>2]=0.0;break a}if(+Q(+$)<1.1920928955078125e-7?+Q(+_)<1.1920928955078125e-7:0){break}a[k]=1;if(ba>=ca){aa=+Z(+_,+$);if(aa>ba){$=+T(+ba);aa=0.0;_=+U(+ba);break}if(aa<-ba){$=+T(+ba);aa=0.0;_=-+U(+ba)}else{aa=0.0}}}else{if(+Q(+$)<1.1920928955078125e-7?+Q(+aa)<1.1920928955078125e-7:0){break}a[k]=1;if(ba>=ca){_=+Z(+aa,+$);if(_>ba){$=+T(+ba);aa=+U(+ba);_=0.0;break}if(_<-ba){$=+T(+ba);aa=-+U(+ba);_=0.0}else{_=0.0}}}}while(0);ca=L*_+(M*aa+J*$);ha=N*_+(K*aa+E*$);ba=P*_+(S*aa+O*$);aa=1.0/+R(+(ba*ba+(ca*ca+ha*ha)));ca=aa*ca;ha=aa*ha;ba=aa*ba;aa=X*ba-Y*ha;ba=Y*ca-V*ba;ca=V*ha-X*ca;g[b+472>>2]=0.0;ha=+R(+(aa*aa+ba*ba+ca*ca));g[y>>2]=ha;ha=1.0/ha;g[b+460>>2]=-(aa*ha);g[b+464>>2]=-(ba*ha);g[b+468>>2]=-(ca*ha)}}while(0);E=+g[b+452>>2];y=b+512|0;if(!(E>=0.0)){g[y>>2]=0.0;i=j;return}J=C<-1.0?-1.0:C;J=+W(+(J>1.0?1.0:J))*2.0;if(J>3.1415927410125732){C=C>1.0?-1.0:-C;C=+W(+(C>1.0?1.0:C))*2.0;B=-B;A=-A;z=-z}else{C=J}g[y>>2]=C;if(C>1.1920928955078125e-7){ha=1.0/+R(+(z*z+(A*A+B*B)));B=B*ha;A=A*ha;z=z*ha}K=+g[b+428>>2];J=E*K;if(C>J){a[l]=1;L=C-J;if(C<E&K<.9999998807907104){C=L/(E-J)}else{C=1.0}g[b+532>>2]=C;g[b+508>>2]=L;ca=-B;ba=-A;aa=-z;_=x*aa+q*ca-w*ba;ha=q*ba+w*ca-v*aa;$=q*aa+v*ba-x*ca;aa=-(v*ca)-x*ba-w*aa;ba=ha*r+(q*_+aa*t)-$*s;ca=$*t+(q*ha+aa*s)-_*r;ha=_*s+(q*$+aa*r)-ha*t;g[b+476>>2]=ba;g[b+480>>2]=ca;g[b+484>>2]=ha;g[b+488>>2]=0.0;g[b+496>>2]=1.0/(ba*(+g[f>>2]*ba+ +g[f+16>>2]*ca+ +g[f+32>>2]*ha)+ca*(ba*+g[f+4>>2]+ca*+g[f+20>>2]+ha*+g[f+36>>2])+ha*(ba*+g[f+8>>2]+ca*+g[f+24>>2]+ha*+g[f+40>>2])+(ba*(ba*+g[h>>2]+ca*+g[h+16>>2]+ha*+g[h+32>>2])+ca*(ba*+g[h+4>>2]+ca*+g[h+20>>2]+ha*+g[h+36>>2])+ha*(ba*+g[h+8>>2]+ca*+g[h+24>>2]+ha*+g[h+40>>2])))}if((a[k]|0)==0){i=j;return}_=-B;ha=-A;aa=-z;Y=m*aa+p*_-o*ha;ca=p*ha+o*_-n*aa;$=p*aa+n*ha-m*_;aa=-(n*_)-m*ha-o*aa;ha=-n;_=-m;ba=-o;g[b+536>>2]=ca*ba+(p*Y+aa*ha)-$*_;g[b+540>>2]=$*ha+(p*ca+aa*_)-Y*ba;g[b+544>>2]=Y*_+(p*$+aa*ba)-ca*ha;g[b+548>>2]=0.0;i=j;return}function Tf(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0;e=i;i=i+64|0;p=e;C=c[b+28>>2]|0;u=C+4|0;E=c[b+32>>2]|0;k=E+4|0;Sf(b,u,k,C+264|0,E+264|0);q=c[d+8>>2]|0;g[q>>2]=1.0;v=d+24|0;n=c[v>>2]|0;r=n+1|0;g[q+(r<<2)>>2]=1.0;w=n<<1;o=w+2|0;g[q+(o<<2)>>2]=1.0;q=b+300|0;G=+g[b+348>>2];I=+g[b+352>>2];A=+g[b+356>>2];z=+g[u>>2]*G+ +g[C+8>>2]*I+ +g[C+12>>2]*A;D=G*+g[C+20>>2]+I*+g[C+24>>2]+A*+g[C+28>>2];A=G*+g[C+36>>2]+I*+g[C+40>>2]+A*+g[C+44>>2];j=d+12|0;x=c[j>>2]|0;g[x>>2]=0.0;g[x+4>>2]=A;g[x+8>>2]=-D;g[x+12>>2]=0.0;g[x+(n<<2)>>2]=-A;g[x+(r<<2)>>2]=0.0;s=n+2|0;g[x+(s<<2)>>2]=z;t=n+3|0;g[x+(t<<2)>>2]=0.0;g[x+(w<<2)>>2]=D;y=w|1;g[x+(y<<2)>>2]=-z;g[x+(o<<2)>>2]=0.0;h=w+3|0;g[x+(h<<2)>>2]=0.0;x=c[d+16>>2]|0;g[x>>2]=-1.0;g[x+(r<<2)>>2]=-1.0;g[x+(o<<2)>>2]=-1.0;I=+g[b+412>>2];G=+g[b+416>>2];B=+g[b+420>>2];H=+g[k>>2]*I+ +g[E+8>>2]*G+ +g[E+12>>2]*B;F=I*+g[E+20>>2]+G*+g[E+24>>2]+B*+g[E+28>>2];B=I*+g[E+36>>2]+G*+g[E+40>>2]+B*+g[E+44>>2];k=d+20|0;x=c[k>>2]|0;g[x>>2]=0.0;g[x+4>>2]=-B;g[x+8>>2]=F;g[x+12>>2]=0.0;g[x+(n<<2)>>2]=B;g[x+(r<<2)>>2]=0.0;g[x+(s<<2)>>2]=-H;g[x+(t<<2)>>2]=0.0;g[x+(w<<2)>>2]=-F;g[x+(y<<2)>>2]=H;g[x+(o<<2)>>2]=0.0;g[x+(h<<2)>>2]=0.0;h=b+592|0;o=c[h>>2]|0;G=+g[((o&2|0)==0?d+4|0:b+600|0)>>2]*+g[d>>2];l=c[v>>2]|0;t=d+28|0;w=c[t>>2]|0;s=d+36|0;n=c[s>>2]|0;r=d+40|0;m=c[r>>2]|0;y=b+596|0;f=d+32|0;g[w>>2]=G*(H+ +g[E+52>>2]-z- +g[C+52>>2]);g[n>>2]=-3.4028234663852886e+38;g[m>>2]=3.4028234663852886e+38;if((o&1|0)==0){g[w+(l<<2)>>2]=G*(F+ +g[E+56>>2]-D- +g[C+56>>2]);g[n+(l<<2)>>2]=-3.4028234663852886e+38;g[m+(l<<2)>>2]=3.4028234663852886e+38;y=l<<1;g[w+(y<<2)>>2]=G*(B+ +g[E+60>>2]-A- +g[C+60>>2]);g[n+(y<<2)>>2]=-3.4028234663852886e+38;g[m+(y<<2)>>2]=3.4028234663852886e+38}else{K=c[f>>2]|0;g[K>>2]=+g[y>>2];g[w+(l<<2)>>2]=G*(F+ +g[E+56>>2]-D- +g[C+56>>2]);g[n+(l<<2)>>2]=-3.4028234663852886e+38;g[m+(l<<2)>>2]=3.4028234663852886e+38;g[K+(l<<2)>>2]=+g[y>>2];J=l<<1;g[w+(J<<2)>>2]=G*(B+ +g[E+60>>2]-A- +g[C+60>>2]);g[n+(J<<2)>>2]=-3.4028234663852886e+38;g[m+(J<<2)>>2]=3.4028234663852886e+38;g[K+(J<<2)>>2]=+g[y>>2]}y=l*3|0;do{if((a[b+526|0]|0)!=0){C=c[j>>2]|0;z=+g[b+456>>2];if(+g[b+444>>2]<z?+g[b+448>>2]<z:0){Mf(p,u,q);A=+g[p+4>>2];B=+g[p+20>>2];D=+g[p+36>>2];G=+g[p+8>>2];H=+g[p+24>>2];I=+g[p+40>>2];J=c[v>>2]|0;K=J+y|0;g[C+(y<<2)>>2]=A;w=y+1|0;g[C+(w<<2)>>2]=B;n=y+2|0;g[C+(n<<2)>>2]=D;g[C+(K<<2)>>2]=G;m=K+1|0;g[C+(m<<2)>>2]=H;E=K+2|0;g[C+(E<<2)>>2]=I;g[x+(y<<2)>>2]=-A;g[x+(w<<2)>>2]=-B;g[x+(n<<2)>>2]=-D;g[x+(K<<2)>>2]=-G;g[x+(m<<2)>>2]=-H;g[x+(E<<2)>>2]=-I;F=+g[d>>2]*+g[b+436>>2];E=b+460|0;m=b+464|0;n=b+468|0;w=c[t>>2]|0;g[w+(y<<2)>>2]=F*(A*+g[E>>2]+B*+g[m>>2]+D*+g[n>>2]);g[w+(K<<2)>>2]=F*(G*+g[E>>2]+H*+g[m>>2]+I*+g[n>>2]);n=c[s>>2]|0;g[n+(y<<2)>>2]=-3.4028234663852886e+38;m=c[r>>2]|0;g[m+(y<<2)>>2]=3.4028234663852886e+38;g[n+(K<<2)>>2]=-3.4028234663852886e+38;g[m+(K<<2)>>2]=3.4028234663852886e+38;y=J+K|0;break}I=+g[b+436>>2];G=I*+g[b+460>>2]*I;H=I*I*+g[b+464>>2];I=I*I*+g[b+468>>2];g[C+(y<<2)>>2]=G;J=y+1|0;g[C+(J<<2)>>2]=H;K=y+2|0;g[C+(K<<2)>>2]=I;g[x+(y<<2)>>2]=-G;g[x+(J<<2)>>2]=-H;g[x+(K<<2)>>2]=-I;g[w+(y<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+504>>2];if((o&4|0)!=0){g[(c[f>>2]|0)+(y<<2)>>2]=+g[b+604>>2]}g[n+(y<<2)>>2]=0.0;g[m+(y<<2)>>2]=3.4028234663852886e+38;y=l+y|0}}while(0);if((a[b+525|0]|0)==0){i=e;return}I=+g[b+436>>2];G=I*+g[b+476>>2]*I;H=I*I*+g[b+480>>2];I=I*I*+g[b+484>>2];E=c[j>>2]|0;K=c[k>>2]|0;g[E+(y<<2)>>2]=G;J=y+1|0;g[E+(J<<2)>>2]=H;j=y+2|0;g[E+(j<<2)>>2]=I;g[K+(y<<2)>>2]=-G;g[K+(J<<2)>>2]=-H;g[K+(j<<2)>>2]=-I;j=b+508|0;g[w+(y<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[j>>2];if((c[h>>2]&4|0)!=0){g[(c[f>>2]|0)+(y<<2)>>2]=+g[b+604>>2]}if(!(+g[b+452>>2]>0.0)){g[n+(y<<2)>>2]=-3.4028234663852886e+38;g[m+(y<<2)>>2]=3.4028234663852886e+38;i=e;return}d=n+(y<<2)|0;if(+g[j>>2]>0.0){g[d>>2]=0.0;g[m+(y<<2)>>2]=3.4028234663852886e+38;i=e;return}else{g[d>>2]=-3.4028234663852886e+38;g[m+(y<<2)>>2]=0.0;i=e;return}}function Uf(b){b=b|0;var d=0,e=0,f=0.0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0;d=i;i=i+176|0;j=d+128|0;o=d+80|0;k=d+32|0;h=d+16|0;q=d;if((a[b+527|0]|0)==0){i=d;return}g[b+36>>2]=0.0;g[b+520>>2]=0.0;g[b+516>>2]=0.0;e=b+576|0;ia=b+524|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;e=b+28|0;a:do{if((a[ia]|0)==0){ia=c[e>>2]|0;na=+g[b+348>>2];ma=+g[b+352>>2];n=+g[b+356>>2];m=na*+g[ia+20>>2]+ma*+g[ia+24>>2]+n*+g[ia+28>>2]+ +g[ia+56>>2];l=b+32|0;t=c[l>>2]|0;ja=+g[b+412>>2];da=+g[t+4>>2];la=+g[b+416>>2];ha=+g[t+8>>2];p=+g[b+420>>2];A=+g[t+12>>2];ea=+g[t+20>>2];fa=+g[t+24>>2];y=+g[t+28>>2];ga=+g[t+36>>2];ca=+g[t+40>>2];x=+g[t+44>>2];w=+g[t+52>>2];v=+g[t+56>>2];f=ja*ea+la*fa+p*y+v;u=+g[t+60>>2];r=ja*ga+la*ca+p*x+u;ka=f-m;s=na*+g[ia+4>>2]+ma*+g[ia+8>>2]+n*+g[ia+12>>2]+ +g[ia+52>>2];n=na*+g[ia+36>>2]+ma*+g[ia+40>>2]+n*+g[ia+44>>2]+ +g[ia+60>>2];p=ja*da+la*ha+p*A+w;la=p-s;ja=r-n;ma=la*la+ka*ka+ja*ja;if(ma>1.1920928955078125e-7){ma=1.0/+R(+ma);la=la*ma;na=ka*ma;ka=ja*ma;g[j>>2]=la;g[j+4>>2]=na;g[j+8>>2]=ka;g[j+12>>2]=0.0;ja=na}else{g[j>>2]=1.0;g[j+4>>2]=0.0;g[j+8>>2]=0.0;g[j+12>>2]=0.0;ka=0.0;ja=0.0;la=1.0}z=j+16|0;B=j+32|0;if(+Q(+ka)>.7071067690849304){pa=ka*ka+ja*ja;oa=1.0/+R(+pa);g[z>>2]=0.0;na=-(oa*ka);g[j+20>>2]=na;ma=oa*ja;g[j+24>>2]=ma;g[B>>2]=pa*oa;g[j+36>>2]=-(la*ma);g[j+40>>2]=la*na}else{oa=la*la+ja*ja;pa=1.0/+R(+oa);na=-(ja*pa);g[z>>2]=na;ma=pa*la;g[j+20>>2]=ma;g[j+24>>2]=0.0;g[B>>2]=-(ka*ma);g[j+36>>2]=ka*na;g[j+40>>2]=oa*pa}S=o+4|0;T=o+8|0;C=o+12|0;V=o+16|0;W=o+20|0;X=o+24|0;Y=o+28|0;Z=o+32|0;_=o+36|0;$=o+40|0;aa=o+44|0;ba=k+4|0;P=k+8|0;O=k+12|0;N=k+16|0;M=k+20|0;L=k+24|0;K=k+28|0;J=k+32|0;I=k+36|0;H=k+40|0;z=k+44|0;U=h+4|0;G=h+8|0;F=h+12|0;E=q+4|0;D=q+8|0;B=q+12|0;ia=0;while(1){qa=c[e>>2]|0;g[o>>2]=+g[qa+4>>2];g[S>>2]=+g[qa+20>>2];g[T>>2]=+g[qa+36>>2];g[C>>2]=0.0;g[V>>2]=+g[qa+8>>2];g[W>>2]=+g[qa+24>>2];g[X>>2]=+g[qa+40>>2];g[Y>>2]=0.0;g[Z>>2]=+g[qa+12>>2];g[_>>2]=+g[qa+28>>2];g[$>>2]=+g[qa+44>>2];g[aa>>2]=0.0;g[k>>2]=da;g[ba>>2]=ea;g[P>>2]=ga;g[O>>2]=0.0;g[N>>2]=ha;g[M>>2]=fa;g[L>>2]=ca;g[K>>2]=0.0;g[J>>2]=A;g[I>>2]=y;g[H>>2]=x;g[z>>2]=0.0;oa=m- +g[qa+56>>2];pa=n- +g[qa+60>>2];g[h>>2]=s- +g[qa+52>>2];g[U>>2]=oa;g[G>>2]=pa;g[F>>2]=0.0;g[q>>2]=p-w;g[E>>2]=f-v;g[D>>2]=r-u;g[B>>2]=0.0;eg(b+(ia*84|0)+48|0,o,k,h,q,j+(ia<<4)|0,qa+396|0,+g[qa+344>>2],t+396|0,+g[t+344>>2]);ia=ia+1|0;if((ia|0)==3){break a}t=c[l>>2]|0;da=+g[t+4>>2];ea=+g[t+20>>2];ga=+g[t+36>>2];ha=+g[t+8>>2];fa=+g[t+24>>2];ca=+g[t+40>>2];A=+g[t+12>>2];y=+g[t+28>>2];x=+g[t+44>>2];w=+g[t+52>>2];v=+g[t+56>>2];u=+g[t+60>>2]}}else{l=b+32|0}}while(0);ia=c[e>>2]|0;qa=c[l>>2]|0;Sf(b,ia+4|0,qa+4|0,ia+264|0,qa+264|0);i=d;return}function Vf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0,$=0,aa=0.0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0.0,pa=0.0,qa=0,ra=0,sa=0,ta=0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0.0,Ma=0.0,Na=0.0,Oa=0.0,Pa=0.0;h=i;i=i+448|0;l=h+424|0;n=h+416|0;o=h+352|0;t=h+288|0;z=h+272|0;m=h+256|0;p=h+192|0;q=h+128|0;r=h+64|0;s=h;if((a[b+527|0]|0)==0){i=h;return}k=b+28|0;j=c[k>>2]|0;A=b+348|0;Ba=+g[A>>2];u=b+352|0;Aa=+g[u>>2];v=b+356|0;Z=+g[v>>2];N=+g[j+52>>2];X=Ba*+g[j+4>>2]+Aa*+g[j+8>>2]+Z*+g[j+12>>2]+N;O=+g[j+56>>2];oa=Ba*+g[j+20>>2]+Aa*+g[j+24>>2]+Z*+g[j+28>>2]+O;P=+g[j+60>>2];Z=Ba*+g[j+36>>2]+Aa*+g[j+40>>2]+Z*+g[j+44>>2]+P;j=b+32|0;Ca=c[j>>2]|0;w=b+412|0;Aa=+g[w>>2];x=b+416|0;Ba=+g[x>>2];y=b+420|0;aa=+g[y>>2];Q=+g[Ca+52>>2];pa=Aa*+g[Ca+4>>2]+Ba*+g[Ca+8>>2]+aa*+g[Ca+12>>2]+Q;S=+g[Ca+56>>2];Y=Aa*+g[Ca+20>>2]+Ba*+g[Ca+24>>2]+aa*+g[Ca+28>>2]+S;T=+g[Ca+60>>2];aa=Aa*+g[Ca+36>>2]+Ba*+g[Ca+40>>2]+aa*+g[Ca+44>>2]+T;if((a[b+524|0]|0)==0){N=X-N;O=oa-O;P=Z-P;Q=pa-Q;S=Y-S;W=aa-T;M=d+64|0;B=d+68|0;C=d+72|0;D=d+80|0;za=+g[d+192>>2]+ +g[D>>2];E=d+84|0;Aa=+g[d+196>>2]+ +g[E>>2];F=d+88|0;ya=+g[d+200>>2]+ +g[F>>2];G=e+64|0;H=e+68|0;I=e+72|0;J=e+80|0;Ba=+g[e+192>>2]+ +g[J>>2];K=e+84|0;V=+g[e+196>>2]+ +g[K>>2];L=e+88|0;U=+g[e+200>>2]+ +g[L>>2];T=+g[d+176>>2]+ +g[M>>2]+(P*Aa-O*ya)-(+g[e+176>>2]+ +g[G>>2]+(W*V-S*U));U=+g[d+180>>2]+ +g[B>>2]+(N*ya-P*za)-(+g[e+180>>2]+ +g[H>>2]+(Q*U-W*Ba));V=+g[d+184>>2]+ +g[C>>2]+(O*za-N*Aa)-(+g[e+184>>2]+ +g[I>>2]+(S*Ba-Q*V));X=X-pa;Y=oa-Y;aa=Z-aa;ea=b+36|0;$=e+240|0;ta=e+112|0;_=e+116|0;fa=e+120|0;na=e+96|0;ga=e+100|0;ha=e+104|0;da=d+112|0;ba=d+116|0;ca=d+120|0;ka=d+96|0;ia=d+100|0;ja=d+104|0;la=c[d+240>>2]|0;ma=0;do{xa=1.0/+g[b+(ma*84|0)+128>>2];sa=b+(ma*84|0)+48|0;ya=+g[sa>>2];qa=b+(ma*84|0)+52|0;Aa=+g[qa>>2];ra=b+(ma*84|0)+56|0;ua=+g[ra>>2];ua=xa*((X*ya+Y*Aa+aa*ua)*-.30000001192092896/f)-xa*(T*ya+U*Aa+V*ua);g[ea>>2]=+g[ea>>2]+ua;Aa=+g[ra>>2];ya=+g[qa>>2];xa=O*Aa-P*ya;za=+g[sa>>2];va=P*za-N*Aa;wa=N*ya-O*za;oa=S*Aa-W*ya;Z=W*za-Q*Aa;pa=Q*ya-S*za;Ca=c[k>>2]|0;Ba=+g[Ca+344>>2];if((la|0)!=0){Da=va*+g[Ca+300>>2]+xa*+g[Ca+296>>2]+wa*+g[Ca+304>>2];Ea=va*+g[Ca+284>>2]+xa*+g[Ca+280>>2]+wa*+g[Ca+288>>2];xa=va*+g[Ca+268>>2]+xa*+g[Ca+264>>2]+wa*+g[Ca+272>>2];ya=ua*ya*Ba*+g[ba>>2];Aa=ua*Aa*Ba*+g[ca>>2];g[M>>2]=ua*za*Ba*+g[da>>2]+ +g[M>>2];g[B>>2]=ya+ +g[B>>2];g[C>>2]=Aa+ +g[C>>2];Aa=Ea*ua*+g[ia>>2];Ba=Da*ua*+g[ja>>2];g[D>>2]=xa*ua*+g[ka>>2]+ +g[D>>2];g[E>>2]=Aa+ +g[E>>2];g[F>>2]=Ba+ +g[F>>2]}Ca=c[j>>2]|0;va=+g[Ca+344>>2];ua=-ua;if((c[$>>2]|0)!=0){Ea=Z*+g[Ca+300>>2]+oa*+g[Ca+296>>2]+pa*+g[Ca+304>>2];Da=Z*+g[Ca+284>>2]+oa*+g[Ca+280>>2]+pa*+g[Ca+288>>2];Ba=Z*+g[Ca+268>>2]+oa*+g[Ca+264>>2]+pa*+g[Ca+272>>2];za=va*+g[qa>>2]*ua*+g[_>>2];Aa=va*+g[ra>>2]*ua*+g[fa>>2];g[G>>2]=+g[ta>>2]*va*+g[sa>>2]*ua+ +g[G>>2];g[H>>2]=za+ +g[H>>2];g[I>>2]=Aa+ +g[I>>2];Da=Da*+g[ga>>2]*ua;Ea=Ea*+g[ha>>2]*ua;g[J>>2]=Ba*+g[na>>2]*ua+ +g[J>>2];g[K>>2]=Da+ +g[K>>2];g[L>>2]=Ea+ +g[L>>2]}ma=ma+1|0}while((ma|0)!=3)}do{if((a[b+552|0]|0)==0){Z=+g[b+440>>2];B=d+192|0;if(!(Z>1.1920928955078125e-7)){M=d+80|0;L=d+196|0;K=d+84|0;J=d+200|0;I=d+88|0;H=e+192|0;G=e+80|0;F=e+196|0;E=e+84|0;D=e+200|0;C=e+88|0;break}M=d+80|0;L=d+196|0;K=d+84|0;J=d+200|0;I=d+88|0;H=e+192|0;G=e+80|0;F=e+196|0;E=e+84|0;D=e+200|0;C=e+88|0;Y=+g[H>>2]+ +g[G>>2]-(+g[B>>2]+ +g[M>>2]);X=+g[F>>2]+ +g[E>>2]-(+g[L>>2]+ +g[K>>2]);aa=+g[D>>2]+ +g[C>>2]-(+g[J>>2]+ +g[I>>2]);N=Y*Y+X*X+aa*aa;if(N>1.1920928955078125e-7){Ea=1.0/+R(+N);Ba=Y*Ea;Da=X*Ea;Ea=aa*Ea;l=c[k>>2]|0;V=+g[l+264>>2];O=+g[l+280>>2];N=+g[l+296>>2];T=+g[l+268>>2];U=+g[l+284>>2];Q=+g[l+300>>2];W=+g[l+272>>2];P=+g[l+288>>2];S=+g[l+304>>2];l=c[j>>2]|0;Ea=Z*(1.0/(Ba*(Ba*V+Da*O+Ea*N)+Da*(Ba*T+Da*U+Ea*Q)+Ea*(Ba*W+Da*P+Ea*S)+(Ba*(Ba*+g[l+264>>2]+Da*+g[l+280>>2]+Ea*+g[l+296>>2])+Da*(Ba*+g[l+268>>2]+Da*+g[l+284>>2]+Ea*+g[l+300>>2])+Ea*(Ba*+g[l+272>>2]+Da*+g[l+288>>2]+Ea*+g[l+304>>2]))));Z=Y*Ea;Da=X*Ea;Y=aa*Ea;X=+R(+(Y*Y+(Z*Z+Da*Da)));Ea=1.0/X;Z=Ea*Z;aa=Ea*Da;Y=Ea*Y;if((c[d+240>>2]|0)!=0){Ba=X*0.0;Ea=Ba*+g[d+116>>2];Da=Ba*+g[d+120>>2];l=d+64|0;g[l>>2]=Ba*+g[d+112>>2]+ +g[l>>2];l=d+68|0;g[l>>2]=Ea+ +g[l>>2];l=d+72|0;g[l>>2]=Da+ +g[l>>2];Da=(aa*U+Z*O+Y*P)*X*+g[d+100>>2];Ea=(aa*Q+Z*N+Y*S)*X*+g[d+104>>2];g[M>>2]=(aa*T+Z*V+Y*W)*X*+g[d+96>>2]+ +g[M>>2];g[K>>2]=Da+ +g[K>>2];g[I>>2]=Ea+ +g[I>>2];l=c[j>>2]|0}N=-X;if((c[e+240>>2]|0)!=0){Ea=aa*+g[l+300>>2]+Z*+g[l+296>>2]+Y*+g[l+304>>2];Da=aa*+g[l+284>>2]+Z*+g[l+280>>2]+Y*+g[l+288>>2];Ba=aa*+g[l+268>>2]+Z*+g[l+264>>2]+Y*+g[l+272>>2];ya=X*-0.0;za=ya*+g[e+116>>2];Aa=ya*+g[e+120>>2];Ca=e+64|0;g[Ca>>2]=ya*+g[e+112>>2]+ +g[Ca>>2];Ca=e+68|0;g[Ca>>2]=za+ +g[Ca>>2];Ca=e+72|0;g[Ca>>2]=Aa+ +g[Ca>>2];Da=Da*+g[e+100>>2]*N;Ea=Ea*+g[e+104>>2]*N;g[G>>2]=Ba*+g[e+96>>2]*N+ +g[G>>2];g[E>>2]=Da+ +g[E>>2];g[C>>2]=Ea+ +g[C>>2]}}}else{B=c[k>>2]|0;M=B+4|0;c[o+0>>2]=c[M+0>>2];c[o+4>>2]=c[M+4>>2];c[o+8>>2]=c[M+8>>2];c[o+12>>2]=c[M+12>>2];M=o+16|0;L=B+20|0;c[M+0>>2]=c[L+0>>2];c[M+4>>2]=c[L+4>>2];c[M+8>>2]=c[L+8>>2];c[M+12>>2]=c[L+12>>2];M=o+32|0;L=B+36|0;c[M+0>>2]=c[L+0>>2];c[M+4>>2]=c[L+4>>2];c[M+8>>2]=c[L+8>>2];c[M+12>>2]=c[L+12>>2];M=o+48|0;B=B+52|0;c[M+0>>2]=c[B+0>>2];c[M+4>>2]=c[B+4>>2];c[M+8>>2]=c[B+8>>2];c[M+12>>2]=c[B+12>>2];M=c[j>>2]|0;B=M+4|0;c[t+0>>2]=c[B+0>>2];c[t+4>>2]=c[B+4>>2];c[t+8>>2]=c[B+8>>2];c[t+12>>2]=c[B+12>>2];B=t+16|0;L=M+20|0;c[B+0>>2]=c[L+0>>2];c[B+4>>2]=c[L+4>>2];c[B+8>>2]=c[L+8>>2];c[B+12>>2]=c[L+12>>2];B=t+32|0;L=M+36|0;c[B+0>>2]=c[L+0>>2];c[B+4>>2]=c[L+4>>2];c[B+8>>2]=c[L+8>>2];c[B+12>>2]=c[L+12>>2];B=t+48|0;M=M+52|0;c[B+0>>2]=c[M+0>>2];c[B+4>>2]=c[M+4>>2];c[B+8>>2]=c[M+8>>2];c[B+12>>2]=c[M+12>>2];B=d+192|0;M=d+80|0;L=d+196|0;K=d+84|0;Ha=+g[L>>2]+ +g[K>>2];J=d+200|0;I=d+88|0;Ia=+g[J>>2]+ +g[I>>2];g[z>>2]=+g[B>>2]+ +g[M>>2];ra=z+4|0;g[ra>>2]=Ha;sa=z+8|0;g[sa>>2]=Ia;g[z+12>>2]=0.0;H=e+192|0;G=e+80|0;F=e+196|0;E=e+84|0;Ia=+g[F>>2]+ +g[E>>2];D=e+200|0;C=e+88|0;Ha=+g[D>>2]+ +g[C>>2];g[m>>2]=+g[H>>2]+ +g[G>>2];ta=m+4|0;g[ta>>2]=Ia;Ca=m+8|0;g[Ca>>2]=Ha;g[m+12>>2]=0.0;g[p>>2]=1.0;la=p+4|0;ma=p+20|0;c[la+0>>2]=0;c[la+4>>2]=0;c[la+8>>2]=0;c[la+12>>2]=0;g[ma>>2]=1.0;na=p+24|0;qa=p+40|0;c[na+0>>2]=0;c[na+4>>2]=0;c[na+8>>2]=0;c[na+12>>2]=0;g[qa>>2]=1.0;ha=p+44|0;c[ha+0>>2]=0;c[ha+4>>2]=0;c[ha+8>>2]=0;c[ha+12>>2]=0;c[ha+16>>2]=0;Wf(o,0.0,0.0,0.0,z,f,p);g[q>>2]=1.0;ha=q+4|0;ia=q+20|0;c[ha+0>>2]=0;c[ha+4>>2]=0;c[ha+8>>2]=0;c[ha+12>>2]=0;g[ia>>2]=1.0;ja=q+24|0;ka=q+40|0;c[ja+0>>2]=0;c[ja+4>>2]=0;c[ja+8>>2]=0;c[ja+12>>2]=0;g[ka>>2]=1.0;ga=q+44|0;c[ga+0>>2]=0;c[ga+4>>2]=0;c[ga+8>>2]=0;c[ga+12>>2]=0;c[ga+16>>2]=0;Wf(t,0.0,0.0,0.0,m,f,q);Ha=+g[b+556>>2];Ia=+g[b+560>>2];Ka=+g[b+564>>2];Ma=+g[b+568>>2];La=2.0/(Ha*Ha+Ia*Ia+Ka*Ka+Ma*Ma);Ja=Ha*La;T=Ia*La;La=Ka*La;W=Ma*Ja;S=Ma*T;Ma=Ma*La;Ja=Ha*Ja;Pa=Ha*T;Ha=Ha*La;T=Ia*T;Ia=Ia*La;La=Ka*La;Ka=1.0-(T+La);Oa=Pa-Ma;Na=Ha+S;Ma=Pa+Ma;La=1.0-(Ja+La);Pa=Ia-W;S=Ha-S;W=Ia+W;T=1.0-(Ja+T);Ja=+g[b+364>>2];Ia=+g[b+368>>2];Ha=+g[b+372>>2];Fa=S*Ha+(Ia*Ma+Ja*Ka);Z=Ha*W+(Ja*Oa+Ia*La);Ga=Ja*Na+Ia*Pa+Ha*T;V=+g[b+380>>2];X=+g[b+384>>2];Y=+g[b+388>>2];pa=Ka*V+Ma*X+S*Y;U=Oa*V+La*X+W*Y;oa=Na*V+Pa*X+T*Y;ua=+g[b+396>>2];va=+g[b+400>>2];Ea=+g[b+404>>2];S=Ka*ua+Ma*va+S*Ea;W=Oa*ua+La*va+W*Ea;T=Na*ua+Pa*va+T*Ea;Pa=+g[b+300>>2];Na=+g[b+316>>2];La=+g[b+332>>2];Oa=+g[b+304>>2];Ma=+g[b+320>>2];Ka=+g[b+336>>2];Da=+g[b+308>>2];P=+g[b+324>>2];Q=+g[b+340>>2];xa=-+g[A>>2];wa=-+g[u>>2];O=-+g[v>>2];N=Pa*xa+Na*wa+La*O;aa=Oa*xa+Ma*wa+Ka*O;O=Da*xa+P*wa+Q*O;wa=Fa*Pa+Z*Oa+Ga*Da;xa=Fa*Na+Z*Ma+Ga*P;ya=Fa*La+Z*Ka+Ga*Q;za=pa*Pa+U*Oa+oa*Da;Aa=pa*Na+U*Ma+oa*P;Ba=pa*La+U*Ka+oa*Q;Da=S*Pa+W*Oa+T*Da;P=S*Na+W*Ma+T*P;Q=S*La+W*Ka+T*Q;Z=Ja*0.0+Ia*0.0+Ha*0.0+ +g[w>>2]+(Ga*O+(Fa*N+Z*aa));U=V*0.0+X*0.0+Y*0.0+ +g[x>>2]+(oa*O+(pa*N+U*aa));aa=ua*0.0+va*0.0+Ea*0.0+ +g[y>>2]+(T*O+(S*N+W*aa));W=+g[q>>2];N=+g[ha>>2];S=+g[q+8>>2];O=+g[q+16>>2];T=+g[ia>>2];Ea=+g[ja>>2];va=+g[q+32>>2];ua=+g[q+36>>2];pa=+g[ka>>2];oa=S*aa+(W*Z+N*U)+ +g[q+48>>2];Y=aa*Ea+(O*Z+T*U)+ +g[q+52>>2];X=Z*va+U*ua+aa*pa+ +g[q+56>>2];g[r>>2]=wa*W+za*N+Da*S;g[r+4>>2]=xa*W+Aa*N+P*S;g[r+8>>2]=ya*W+Ba*N+Q*S;g[r+12>>2]=0.0;g[r+16>>2]=wa*O+za*T+Da*Ea;g[r+20>>2]=xa*O+Aa*T+P*Ea;g[r+24>>2]=ya*O+Ba*T+Q*Ea;g[r+28>>2]=0.0;g[r+32>>2]=wa*va+za*ua+Da*pa;g[r+36>>2]=xa*va+Aa*ua+P*pa;g[r+40>>2]=ya*va+Ba*ua+Q*pa;g[r+44>>2]=0.0;g[r+48>>2]=oa;g[r+52>>2]=Y;g[r+56>>2]=X;g[r+60>>2]=0.0;Z=-Z;U=-U;aa=-aa;X=Da*aa+(wa*Z+za*U);Y=P*aa+(xa*Z+Aa*U);U=Q*aa+(ya*Z+Ba*U);Z=+g[p>>2];aa=+g[la>>2];oa=+g[p+8>>2];pa=+g[p+16>>2];ua=+g[ma>>2];va=+g[na>>2];Ea=+g[p+32>>2];T=+g[p+36>>2];O=+g[qa>>2];S=X*Z+Y*aa+U*oa+ +g[p+48>>2];N=X*pa+Y*ua+U*va+ +g[p+52>>2];U=X*Ea+Y*T+U*O+ +g[p+56>>2];g[s>>2]=wa*Z+xa*aa+ya*oa;g[s+4>>2]=za*Z+Aa*aa+Ba*oa;g[s+8>>2]=Da*Z+P*aa+Q*oa;g[s+12>>2]=0.0;g[s+16>>2]=wa*pa+xa*ua+ya*va;g[s+20>>2]=za*pa+Aa*ua+Ba*va;g[s+24>>2]=Da*pa+P*ua+Q*va;g[s+28>>2]=0.0;g[s+32>>2]=wa*Ea+xa*T+ya*O;g[s+36>>2]=za*Ea+Aa*T+Ba*O;g[s+40>>2]=Da*Ea+P*T+Q*O;g[s+44>>2]=0.0;g[s+48>>2]=S;g[s+52>>2]=N;g[s+56>>2]=U;g[s+60>>2]=0.0;U=1.0/f;dg(o,r,l,n);N=+g[n>>2];S=U*+g[l>>2]*N;O=U*N*+g[l+4>>2];N=U*N*+g[l+8>>2];dg(t,s,l,n);Q=+g[n>>2];S=S- +g[z>>2];O=O- +g[ra>>2];N=N- +g[sa>>2];T=U*+g[l>>2]*Q- +g[m>>2];P=U*Q*+g[l+4>>2]- +g[ta>>2];Q=U*Q*+g[l+8>>2]- +g[Ca>>2];U=S*S+O*O+N*N;if(U>1.1920928955078125e-7){V=1.0/+R(+U);X=S*V;Z=O*V;V=N*V;Ca=c[k>>2]|0;U=X*(X*+g[Ca+264>>2]+Z*+g[Ca+280>>2]+V*+g[Ca+296>>2])+Z*(X*+g[Ca+268>>2]+Z*+g[Ca+284>>2]+V*+g[Ca+300>>2])+V*(X*+g[Ca+272>>2]+Z*+g[Ca+288>>2]+V*+g[Ca+304>>2])}else{U=0.0;X=0.0;Z=0.0;V=0.0}W=T*T+P*P+Q*Q;if(W>1.1920928955078125e-7){Y=1.0/+R(+W);oa=T*Y;aa=P*Y;Y=Q*Y;Ca=c[j>>2]|0;W=oa*(oa*+g[Ca+264>>2]+aa*+g[Ca+280>>2]+Y*+g[Ca+296>>2])+aa*(oa*+g[Ca+268>>2]+aa*+g[Ca+284>>2]+Y*+g[Ca+300>>2])+Y*(oa*+g[Ca+272>>2]+aa*+g[Ca+288>>2]+Y*+g[Ca+304>>2])}else{W=0.0;oa=0.0;aa=0.0;Y=0.0}X=X*U+oa*W;Z=Z*U+aa*W;U=V*U+Y*W;V=U*U+(X*X+Z*Z);if(V>1.1920928955078125e-7){V=1.0/+R(+V);Oa=X*V;Pa=Z*V;U=U*V;t=c[k>>2]|0;q=t+264|0;m=t+280|0;n=t+296|0;p=t+268|0;u=t+284|0;s=t+300|0;r=t+272|0;o=t+288|0;t=t+304|0;V=Oa*(Oa*+g[q>>2]+Pa*+g[m>>2]+U*+g[n>>2])+Pa*(Oa*+g[p>>2]+Pa*+g[u>>2]+U*+g[s>>2])+U*(Oa*+g[r>>2]+Pa*+g[o>>2]+U*+g[t>>2]);l=c[j>>2]|0;U=Oa*(Oa*+g[l+264>>2]+Pa*+g[l+280>>2]+U*+g[l+296>>2])+Pa*(Oa*+g[l+268>>2]+Pa*+g[l+284>>2]+U*+g[l+300>>2])+U*(Oa*+g[l+272>>2]+Pa*+g[l+288>>2]+U*+g[l+304>>2]);Pa=V+U;Pa=1.0/(Pa*Pa);S=Pa*(S*V-T*U);O=Pa*(O*V-P*U);N=Pa*(N*V-Q*U);U=+g[b+572>>2];if(U>=0.0){if((a[b+553|0]|0)!=0){U=U/V}v=b+576|0;Q=+g[v>>2];X=S+Q;x=b+580|0;T=+g[x>>2];W=O+T;w=b+584|0;P=+g[w>>2];V=N+P;Y=+R(+(X*X+W*W+V*V));if(Y>U){N=1.0/Y;S=U*X*N-Q;O=U*W*N-T;N=U*V*N-P}g[v>>2]=S+Q;g[x>>2]=O+T;g[w>>2]=N+P}P=+R(+(N*N+(O*O+S*S)));Pa=1.0/P;Q=S*Pa;O=O*Pa;N=N*Pa;if((c[d+240>>2]|0)!=0){Pa=O*+g[s>>2]+Q*+g[n>>2]+N*+g[t>>2];Oa=O*+g[u>>2]+Q*+g[m>>2]+N*+g[o>>2];Na=O*+g[p>>2]+Q*+g[q>>2]+N*+g[r>>2];Ka=P*0.0;La=Ka*+g[d+116>>2];Ma=Ka*+g[d+120>>2];l=d+64|0;g[l>>2]=Ka*+g[d+112>>2]+ +g[l>>2];l=d+68|0;g[l>>2]=La+ +g[l>>2];l=d+72|0;g[l>>2]=Ma+ +g[l>>2];Oa=Oa*P*+g[d+100>>2];Pa=Pa*P*+g[d+104>>2];g[M>>2]=Na*P*+g[d+96>>2]+ +g[M>>2];g[K>>2]=Oa+ +g[K>>2];g[I>>2]=Pa+ +g[I>>2];l=c[j>>2]|0}S=-P;if((c[e+240>>2]|0)!=0){Pa=O*+g[l+300>>2]+Q*+g[l+296>>2]+N*+g[l+304>>2];Oa=O*+g[l+284>>2]+Q*+g[l+280>>2]+N*+g[l+288>>2];Na=O*+g[l+268>>2]+Q*+g[l+264>>2]+N*+g[l+272>>2];Ka=P*-0.0;La=Ka*+g[e+116>>2];Ma=Ka*+g[e+120>>2];Ca=e+64|0;g[Ca>>2]=Ka*+g[e+112>>2]+ +g[Ca>>2];Ca=e+68|0;g[Ca>>2]=La+ +g[Ca>>2];Ca=e+72|0;g[Ca>>2]=Ma+ +g[Ca>>2];Oa=Oa*+g[e+100>>2]*S;Pa=Pa*+g[e+104>>2]*S;g[G>>2]=Na*+g[e+96>>2]*S+ +g[G>>2];g[E>>2]=Oa+ +g[E>>2];g[C>>2]=Pa+ +g[C>>2]}}}}while(0);N=+g[B>>2]+ +g[M>>2];O=+g[L>>2]+ +g[K>>2];P=+g[J>>2]+ +g[I>>2];Q=+g[H>>2]+ +g[G>>2];S=+g[F>>2]+ +g[E>>2];T=+g[D>>2]+ +g[C>>2];if((a[b+526|0]|0)!=0){Y=+g[b+528>>2];X=Y*+g[b+504>>2]*+g[b+432>>2]/f;U=+g[b+460>>2];V=+g[b+464>>2];W=+g[b+468>>2];Z=(Q-N)*U+(S-O)*V+(T-P)*W;if(Z>0.0){Y=X+Y*Z*+g[b+436>>2]}else{Y=X}l=b+516|0;X=+g[l>>2];Y=X+Y*+g[b+492>>2];Pa=Y>0.0?Y:0.0;g[l>>2]=Pa;Pa=Pa-X;Na=U*Pa;Oa=V*Pa;Pa=W*Pa;W=+g[b+536>>2];X=+g[b+540>>2];U=+g[b+544>>2];V=W*Na+Oa*X+Pa*U;W=Na-W*V;X=Oa-X*V;V=Pa-U*V;U=+R(+(V*V+(W*W+X*X)));Pa=1.0/U;W=Pa*W;X=Pa*X;V=Pa*V;l=c[k>>2]|0;if((c[d+240>>2]|0)!=0){Pa=X*+g[l+300>>2]+W*+g[l+296>>2]+V*+g[l+304>>2];Oa=X*+g[l+284>>2]+W*+g[l+280>>2]+V*+g[l+288>>2];Na=X*+g[l+268>>2]+W*+g[l+264>>2]+V*+g[l+272>>2];Ka=U*0.0;La=Ka*+g[d+116>>2];Ma=Ka*+g[d+120>>2];Ca=d+64|0;g[Ca>>2]=Ka*+g[d+112>>2]+ +g[Ca>>2];Ca=d+68|0;g[Ca>>2]=La+ +g[Ca>>2];Ca=d+72|0;g[Ca>>2]=Ma+ +g[Ca>>2];Oa=Oa*U*+g[d+100>>2];Pa=Pa*U*+g[d+104>>2];g[M>>2]=Na*U*+g[d+96>>2]+ +g[M>>2];g[K>>2]=Oa+ +g[K>>2];g[I>>2]=Pa+ +g[I>>2]}l=c[j>>2]|0;Y=-U;if((c[e+240>>2]|0)!=0){Pa=X*+g[l+300>>2]+W*+g[l+296>>2]+V*+g[l+304>>2];Oa=X*+g[l+284>>2]+W*+g[l+280>>2]+V*+g[l+288>>2];Na=X*+g[l+268>>2]+W*+g[l+264>>2]+V*+g[l+272>>2];Ka=U*-0.0;La=Ka*+g[e+116>>2];Ma=Ka*+g[e+120>>2];Ca=e+64|0;g[Ca>>2]=Ka*+g[e+112>>2]+ +g[Ca>>2];Ca=e+68|0;g[Ca>>2]=La+ +g[Ca>>2];Ca=e+72|0;g[Ca>>2]=Ma+ +g[Ca>>2];Oa=Oa*+g[e+100>>2]*Y;Pa=Pa*+g[e+104>>2]*Y;g[G>>2]=Na*+g[e+96>>2]*Y+ +g[G>>2];g[E>>2]=Oa+ +g[E>>2];g[C>>2]=Pa+ +g[C>>2]}}if((a[b+525|0]|0)==0){i=h;return}W=+g[b+532>>2];X=W*+g[b+508>>2]*+g[b+432>>2]/f;m=b+476|0;U=+g[m>>2];n=b+480|0;V=+g[n>>2];l=b+484|0;f=+g[l>>2];N=(Q-N)*U+(S-O)*V+(T-P)*f;if(N>0.0){X=X+W*N*+g[b+436>>2]}o=b+520|0;N=+g[o>>2];O=N+X*+g[b+496>>2];Pa=O>0.0?O:0.0;g[o>>2]=Pa;N=Pa-N;k=c[k>>2]|0;if((c[d+240>>2]|0)!=0){Pa=V*+g[k+300>>2]+U*+g[k+296>>2]+f*+g[k+304>>2];Oa=V*+g[k+284>>2]+U*+g[k+280>>2]+f*+g[k+288>>2];f=V*+g[k+268>>2]+U*+g[k+264>>2]+f*+g[k+272>>2];Na=N*0.0;V=Na*+g[d+116>>2];U=Na*+g[d+120>>2];Ca=d+64|0;g[Ca>>2]=Na*+g[d+112>>2]+ +g[Ca>>2];Ca=d+68|0;g[Ca>>2]=V+ +g[Ca>>2];Ca=d+72|0;g[Ca>>2]=U+ +g[Ca>>2];U=Oa*N*+g[d+100>>2];V=Pa*N*+g[d+104>>2];g[M>>2]=f*N*+g[d+96>>2]+ +g[M>>2];g[K>>2]=U+ +g[K>>2];g[I>>2]=V+ +g[I>>2];V=+g[n>>2];U=+g[m>>2];f=+g[l>>2]}j=c[j>>2]|0;O=-N;if((c[e+240>>2]|0)==0){i=h;return}Pa=V*+g[j+300>>2]+U*+g[j+296>>2]+f*+g[j+304>>2];Oa=V*+g[j+284>>2]+U*+g[j+280>>2]+f*+g[j+288>>2];Na=V*+g[j+268>>2]+U*+g[j+264>>2]+f*+g[j+272>>2];Ka=N*-0.0;La=Ka*+g[e+116>>2];Ma=Ka*+g[e+120>>2];Ca=e+64|0;g[Ca>>2]=Ka*+g[e+112>>2]+ +g[Ca>>2];Ca=e+68|0;g[Ca>>2]=La+ +g[Ca>>2];Ca=e+72|0;g[Ca>>2]=Ma+ +g[Ca>>2];Oa=Oa*+g[e+100>>2]*O;Pa=Pa*+g[e+104>>2]*O;g[G>>2]=Na*+g[e+96>>2]*O+ +g[G>>2];g[E>>2]=Oa+ +g[E>>2];g[C>>2]=Pa+ +g[C>>2];i=h;return}function Wf(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=e|0;f=+f;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;j=i;i=i+16|0;k=j;c=c*f+ +g[a+52>>2];d=d*f+ +g[a+56>>2];g[h+48>>2]=b*f+ +g[a+48>>2];g[h+52>>2]=c;g[h+56>>2]=d;g[h+60>>2]=0.0;b=+g[e>>2];d=+g[e+4>>2];c=+g[e+8>>2];l=+R(+(b*b+d*d+c*c));if(l*f>.7853981852531433){l=.7853981852531433/f}if(l<.0010000000474974513){m=f*.5-l*f*f*f*.02083333395421505*l}else{m=+U(+(l*.5*f))/l}b=m*b;d=m*d;n=m*c;r=+T(+(l*f*.5));Bf(a,k);m=+g[k>>2];o=+g[k+12>>2];p=+g[k+8>>2];l=+g[k+4>>2];f=r*m+b*o+d*p-n*l;c=n*m+(d*o+r*l)-b*p;q=n*o+r*p+b*l-d*m;p=r*o-b*m-d*l-n*p;n=1.0/+R(+(p*p+(q*q+(f*f+c*c))));f=f*n;c=n*c;q=n*q;p=n*p;n=2.0/(p*p+(q*q+(f*f+c*c)));l=f*n;m=n*c;n=n*q;d=p*l;b=p*m;p=p*n;l=f*l;o=f*m;f=f*n;m=c*m;c=c*n;n=q*n;g[h>>2]=1.0-(n+m);g[h+4>>2]=o-p;g[h+8>>2]=f+b;g[h+12>>2]=0.0;g[h+16>>2]=p+o;g[h+20>>2]=1.0-(l+n);g[h+24>>2]=c-d;g[h+28>>2]=0.0;g[h+32>>2]=f-b;g[h+36>>2]=d+c;g[h+40>>2]=1.0-(l+m);g[h+44>>2]=0.0;i=j;return}function Xf(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;e=+T(+c);c=+U(+c);f=+g[b+444>>2];if(+Q(+e)>1.1920928955078125e-7){h=c*c;i=e*e;j=h/i;k=+g[b+448>>2];f=+R(+((j+1.0)/(1.0/(k*k)+j/(f*f))))}else{h=c*c;i=e*e}m=f*.5;h=+U(+m)/+R(+(i+0.0+h));k=h*0.0;e=e*h;h=c*h;c=+T(+m);m=e*0.0;i=h*-0.0;l=c*d+m-i;n=c*0.0;f=k*0.0;j=n-h*d-f;f=n+f-e*d;i=-(k*d)-m-i;k=-k;e=-e;g[a>>2]=h*j+(c*l+i*k)-f*e;g[a+4>>2]=f*k+(c*j+i*e)-h*l;g[a+8>>2]=l*e+(c*f+h*i)-j*k;g[a+12>>2]=0.0;return}function Yf(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0;f=i;if((b|0)==2|(b|0)==1){if(e>>>0<3){g[a+600>>2]=d;b=a+592|0;c[b>>2]=c[b>>2]|2;i=f;return}else{g[a+432>>2]=d;i=f;return}}else if((b|0)==4|(b|0)==3){if(e>>>0<3){g[a+596>>2]=d;b=a+592|0;c[b>>2]=c[b>>2]|1;i=f;return}else{g[a+604>>2]=d;b=a+592|0;c[b>>2]=c[b>>2]|4;i=f;return}}else{i=f;return}}function Zf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0;d=i;do{if((b|0)==2|(b|0)==1){if(c>>>0<3){e=+g[a+600>>2];break}if((c+ -3|0)>>>0<3){e=+g[a+432>>2]}else{e=0.0}}else if((b|0)==4|(b|0)==3){if(c>>>0<3){e=+g[a+596>>2];break}if((c+ -3|0)>>>0<3){e=+g[a+604>>2]}else{e=0.0}}else{e=0.0}}while(0);i=d;return+e}function _f(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a+300|0;c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];f=a+316|0;g=b+16|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];f=a+332|0;g=b+32|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];f=a+348|0;b=b+48|0;c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];b=a+364|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];b=a+380|0;f=d+16|0;c[b+0>>2]=c[f+0>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];b=a+396|0;f=d+32|0;c[b+0>>2]=c[f+0>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];b=a+412|0;d=d+48|0;c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];Fb[c[(c[a>>2]|0)+8>>2]&255](a);i=e;return}function $f(a){a=a|0;return}function ag(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function bg(a){a=a|0;return 212}function cg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;fi(a,b,c)|0;g[b+52>>2]=+g[a+300>>2];g[b+56>>2]=+g[a+304>>2];g[b+60>>2]=+g[a+308>>2];g[b+64>>2]=+g[a+312>>2];g[b+68>>2]=+g[a+316>>2];g[b+72>>2]=+g[a+320>>2];g[b+76>>2]=+g[a+324>>2];g[b+80>>2]=+g[a+328>>2];g[b+84>>2]=+g[a+332>>2];g[b+88>>2]=+g[a+336>>2];g[b+92>>2]=+g[a+340>>2];g[b+96>>2]=+g[a+344>>2];g[b+100>>2]=+g[a+348>>2];g[b+104>>2]=+g[a+352>>2];g[b+108>>2]=+g[a+356>>2];g[b+112>>2]=+g[a+360>>2];g[b+116>>2]=+g[a+364>>2];g[b+120>>2]=+g[a+368>>2];g[b+124>>2]=+g[a+372>>2];g[b+128>>2]=+g[a+376>>2];g[b+132>>2]=+g[a+380>>2];g[b+136>>2]=+g[a+384>>2];g[b+140>>2]=+g[a+388>>2];g[b+144>>2]=+g[a+392>>2];g[b+148>>2]=+g[a+396>>2];g[b+152>>2]=+g[a+400>>2];g[b+156>>2]=+g[a+404>>2];g[b+160>>2]=+g[a+408>>2];g[b+164>>2]=+g[a+412>>2];g[b+168>>2]=+g[a+416>>2];g[b+172>>2]=+g[a+420>>2];g[b+176>>2]=+g[a+424>>2];g[b+180>>2]=+g[a+444>>2];g[b+184>>2]=+g[a+448>>2];g[b+188>>2]=+g[a+452>>2];g[b+192>>2]=+g[a+428>>2];g[b+196>>2]=+g[a+432>>2];g[b+200>>2]=+g[a+436>>2];g[b+204>>2]=+g[a+440>>2];i=d;return 1056}function dg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;e=i;i=i+64|0;m=e+16|0;n=e;y=+g[a+20>>2];q=+g[a+40>>2];l=+g[a+24>>2];p=+g[a+36>>2];u=y*q-l*p;w=+g[a+32>>2];A=+g[a+16>>2];t=l*w-q*A;s=p*A-y*w;z=+g[a>>2];h=+g[a+4>>2];v=+g[a+8>>2];x=1.0/(u*z+h*t+s*v);u=u*x;r=x*(p*v-q*h);o=x*(l*h-y*v);t=t*x;q=x*(q*z-w*v);l=x*(A*v-l*z);s=s*x;p=x*(w*h-p*z);h=x*(y*z-A*h);A=+g[b>>2];z=+g[b+4>>2];y=+g[b+8>>2];x=+g[b+16>>2];w=+g[b+20>>2];v=+g[b+24>>2];k=+g[b+32>>2];j=+g[b+36>>2];f=+g[b+40>>2];g[m>>2]=u*A+t*z+s*y;g[m+4>>2]=A*r+z*q+p*y;g[m+8>>2]=A*o+z*l+h*y;g[m+12>>2]=0.0;g[m+16>>2]=u*x+t*w+s*v;g[m+20>>2]=r*x+q*w+p*v;g[m+24>>2]=o*x+l*w+h*v;g[m+28>>2]=0.0;g[m+32>>2]=u*k+t*j+s*f;g[m+36>>2]=r*k+q*j+p*f;g[m+40>>2]=o*k+l*j+h*f;g[m+44>>2]=0.0;Bf(m,n);f=+g[n>>2];m=n+4|0;h=+g[m>>2];a=n+8|0;j=+g[a>>2];b=n+12|0;l=+g[b>>2];k=1.0/+R(+(f*f+h*h+j*j+l*l));f=f*k;g[n>>2]=f;h=h*k;g[m>>2]=h;j=j*k;g[a>>2]=j;k=l*k;g[b>>2]=k;k=k<-1.0?-1.0:k;g[d>>2]=+W(+(k>1.0?1.0:k))*2.0;g[c>>2]=f;d=c+4|0;g[d>>2]=h;a=c+8|0;g[a>>2]=j;b=c+12|0;g[b>>2]=0.0;k=f*f+h*h+j*j;if(k<1.4210854715202004e-14){g[c>>2]=1.0;g[d>>2]=0.0;g[a>>2]=0.0;g[b>>2]=0.0;i=e;return}else{A=1.0/+R(+k);g[c>>2]=f*A;g[d>>2]=A*h;g[a>>2]=A*j;i=e;return}}function eg(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=+k;l=l|0;m=+m;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;n=i;c[a+0>>2]=c[h+0>>2];c[a+4>>2]=c[h+4>>2];c[a+8>>2]=c[h+8>>2];c[a+12>>2]=c[h+12>>2];u=+g[e+4>>2];z=+g[a+8>>2];s=+g[e+8>>2];q=+g[a+4>>2];t=u*z-s*q;o=+g[a>>2];y=+g[e>>2];s=s*o-z*y;u=q*y-u*o;y=t*+g[b>>2]+ +g[b+4>>2]*s+u*+g[b+8>>2];w=t*+g[b+16>>2]+s*+g[b+20>>2]+u*+g[b+24>>2];u=t*+g[b+32>>2]+s*+g[b+36>>2]+u*+g[b+40>>2];g[a+16>>2]=y;g[a+20>>2]=w;g[a+24>>2]=u;g[a+28>>2]=0.0;o=-o;q=-q;z=-z;s=+g[f+4>>2];t=+g[f+8>>2];x=s*z-t*q;v=+g[f>>2];z=t*o-v*z;o=v*q-s*o;s=+g[d>>2]*x+ +g[d+4>>2]*z+o*+g[d+8>>2];q=x*+g[d+16>>2]+z*+g[d+20>>2]+o*+g[d+24>>2];o=x*+g[d+32>>2]+z*+g[d+36>>2]+o*+g[d+40>>2];g[a+32>>2]=s;g[a+36>>2]=q;g[a+40>>2]=o;g[a+44>>2]=0.0;z=+g[j>>2]*y;x=+g[j+4>>2]*w;v=+g[j+8>>2]*u;g[a+48>>2]=z;g[a+52>>2]=x;g[a+56>>2]=v;g[a+60>>2]=0.0;t=+g[l>>2]*s;r=+g[l+4>>2]*q;p=+g[l+8>>2]*o;g[a+64>>2]=t;g[a+68>>2]=r;g[a+72>>2]=p;g[a+76>>2]=0.0;g[a+80>>2]=z*y+x*w+v*u+k+m+(t*s+r*q+p*o);i=n;return}function fg(a){a=a|0;var b=0;b=i;gg(a);if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function gg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=1096;if((a[b+272|0]|0)!=0?(g=b+204|0,h=c[g>>2]|0,Fb[c[c[h>>2]>>2]&255](h),g=c[g>>2]|0,(g|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}g=b+196|0;h=c[g>>2]|0;if((h|0)!=0?(Fb[c[c[h>>2]>>2]&255](h),f=c[g>>2]|0,(f|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0)}if((a[b+273|0]|0)!=0?(e=b+200|0,h=c[e>>2]|0,Fb[c[c[h>>2]>>2]&255](h),e=c[e>>2]|0,(e|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}g=b+308|0;f=b+316|0;h=c[f>>2]|0;e=b+320|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+312>>2]=0;h=b+280|0;f=b+288|0;g=c[f>>2]|0;e=b+292|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[h>>2]=0;c[b+284>>2]=0;g=b+232|0;f=b+240|0;h=c[f>>2]|0;e=b+244|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+236>>2]=0;g=b+212|0;f=b+220|0;h=c[f>>2]|0;e=b+224|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+216>>2]=0;g=b+180|0;h=b+188|0;f=c[h>>2]|0;e=b+192|0;if((f|0)==0){a[e]=1;c[h>>2]=0;c[g>>2]=0;h=b+184|0;c[h>>2]=0;bk(b);i=d;return}if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0)}c[h>>2]=0;a[e]=1;c[h>>2]=0;c[g>>2]=0;h=b+184|0;c[h>>2]=0;bk(b);i=d;return}function hg(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0;h=i;i=i+32|0;f=h+8|0;d=h;e=a+8|0;m=c[e>>2]|0;if((m|0)<=0){i=h;return}a=a+16|0;j=b!=0.0;b=1.0/b;l=f+4|0;k=f+8|0;o=m;m=0;do{n=c[(c[a>>2]|0)+(m<<2)>>2]|0;if((!((c[n+236>>2]&2|0)==0|(n|0)==0)?(c[n+216>>2]|0)!=2:0)?!((c[n+204>>2]&2|0)==0|j^1):0){o=c[n+480>>2]|0;if((o|0)==0){o=n+4|0}else{p=n+4|0;Hb[c[(c[o>>2]|0)+8>>2]&127](o,p);o=p}p=n+68|0;s=n+312|0;r=n+328|0;u=(+g[n+56>>2]- +g[n+120>>2])*b;v=b*(+g[n+60>>2]- +g[n+124>>2]);g[s>>2]=(+g[n+52>>2]- +g[n+116>>2])*b;g[n+316>>2]=u;g[n+320>>2]=v;g[n+324>>2]=0.0;dg(p,o,f,d);v=+g[d>>2];u=b*v*+g[l>>2];t=b*v*+g[k>>2];g[r>>2]=b*+g[f>>2]*v;g[n+332>>2]=u;g[n+336>>2]=t;g[n+340>>2]=0.0;q=n+132|0;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=n+148|0;c[q+0>>2]=c[r+0>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];c[p+0>>2]=c[o+0>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];o=n+84|0;p=n+20|0;c[o+0>>2]=c[p+0>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];o=n+100|0;p=n+36|0;c[o+0>>2]=c[p+0>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];o=n+116|0;p=n+52|0;c[o+0>>2]=c[p+0>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];o=c[e>>2]|0}m=m+1|0}while((m|0)<(o|0));i=h;return}function ig(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Eb=0,Fb=0,Gb=0,Ib=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Rb=0.0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0.0,Zb=0,_b=0.0,ac=0.0,bc=0.0,cc=0.0,dc=0.0,ec=0.0,gc=0.0,hc=0.0,ic=0.0,jc=0.0,kc=0.0,lc=0.0,nc=0.0,pc=0.0,qc=0.0,rc=0,sc=0;d=i;i=i+1024|0;e=d+1008|0;j=d+944|0;k=d+880|0;M=d+816|0;N=d+800|0;O=d+784|0;P=d+768|0;R=d+704|0;l=d+640|0;m=d+624|0;n=d+608|0;o=d+592|0;p=d+576|0;q=d+512|0;r=d+448|0;s=d+432|0;t=d+416|0;u=d+400|0;v=d+384|0;h=d+320|0;C=d+304|0;D=d+288|0;E=d+272|0;F=d+256|0;G=d+240|0;H=d+224|0;L=d+208|0;I=d+192|0;J=d+176|0;K=d+160|0;Na=d+96|0;w=d+80|0;x=d+64|0;y=d+48|0;z=d+32|0;A=d+16|0;B=d;dr(1280);sk(b);a:do{if((Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)!=0?(Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0,((Jb[c[(c[Zb>>2]|0)+48>>2]&63](Zb)|0)&6144|0)!=0):0){_=j+4|0;$=j+20|0;aa=j+24|0;ba=j+40|0;ca=j+44|0;da=j+48|0;ea=j+52|0;fa=j+56|0;ga=j+60|0;vb=k+16|0;ub=M+16|0;yb=k+32|0;wb=M+32|0;Ab=k+48|0;zb=M+48|0;Bb=k+8|0;Cb=k+24|0;Fb=k+40|0;Eb=N+4|0;Gb=N+8|0;Ib=N+12|0;Kb=k+16|0;Mb=k+32|0;Lb=O+4|0;Nb=O+8|0;Ob=O+12|0;ia=R+16|0;ha=l+16|0;ka=R+32|0;ja=l+32|0;ma=R+48|0;la=l+48|0;na=m+4|0;xa=R+4|0;oa=m+8|0;ya=R+8|0;pa=R+16|0;qa=R+20|0;ra=R+24|0;ta=R+32|0;ua=R+36|0;va=R+40|0;za=R+48|0;sa=R+52|0;wa=R+56|0;Aa=m+12|0;Ba=n+4|0;Ca=n+8|0;Da=n+12|0;Ea=q+16|0;Fa=q+32|0;Ga=q+48|0;Ka=t+4|0;La=t+8|0;Ma=t+12|0;Q=u+4|0;Oa=u+8|0;Pa=u+12|0;Ha=r+16|0;Ia=r+32|0;Ja=r+48|0;X=h+16|0;Y=h+32|0;Z=h+48|0;bb=h+8|0;cb=h+24|0;eb=h+40|0;db=C+4|0;fb=C+8|0;gb=C+12|0;hb=h+16|0;jb=h+32|0;ib=D+4|0;kb=D+8|0;lb=D+12|0;mb=h+4|0;nb=h+20|0;ob=h+36|0;pb=F+4|0;qb=F+8|0;rb=G+4|0;sb=G+8|0;tb=G+12|0;S=Na+16|0;V=Na+32|0;W=Na+48|0;Qa=w+4|0;Ra=w+8|0;Sa=w+12|0;Ta=x+4|0;Ua=x+8|0;Va=x+12|0;Wa=z+4|0;Ya=z+8|0;Za=z+12|0;_a=A+4|0;$a=A+8|0;ab=A+12|0;Sb=Jb[c[(c[b>>2]|0)+104>>2]&63](b)|0;b:while(1){Pb=Sb+ -1|0;if((Sb|0)<=0){break a}Sb=$b[c[(c[b>>2]|0)+108>>2]&31](b,Pb)|0;Vb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Vb=(Jb[c[(c[Vb>>2]|0)+48>>2]&63](Vb)|0)>>>11;Tb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Tb=(Jb[c[(c[Tb>>2]|0)+48>>2]&63](Tb)|0)>>>12;Rb=+g[Sb+40>>2];if(Rb<=0.0){Sb=Pb;continue}switch(c[Sb+4>>2]|0){case 5:{Wb=Sb+28|0;Ub=Sb+300|0;Mf(R,(c[Wb>>2]|0)+4|0,Ub);if((Vb&1|0)==0){Mf(l,(c[Sb+32>>2]|0)+4|0,Sb+364|0);c[R+0>>2]=c[l+0>>2];c[R+4>>2]=c[l+4>>2];c[R+8>>2]=c[l+8>>2];c[R+12>>2]=c[l+12>>2];c[ia+0>>2]=c[ha+0>>2];c[ia+4>>2]=c[ha+4>>2];c[ia+8>>2]=c[ha+8>>2];c[ia+12>>2]=c[ha+12>>2];c[ka+0>>2]=c[ja+0>>2];c[ka+4>>2]=c[ja+4>>2];c[ka+8>>2]=c[ja+8>>2];c[ka+12>>2]=c[ja+12>>2];c[ma+0>>2]=c[la+0>>2];c[ma+4>>2]=c[la+4>>2];c[ma+8>>2]=c[la+8>>2];c[ma+12>>2]=c[la+12>>2]}else{Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[Zb>>2]|0)+56>>2]&1](Zb,R,Rb);Mf(l,(c[Sb+32>>2]|0)+4|0,Sb+364|0);c[R+0>>2]=c[l+0>>2];c[R+4>>2]=c[l+4>>2];c[R+8>>2]=c[l+8>>2];c[R+12>>2]=c[l+12>>2];c[ia+0>>2]=c[ha+0>>2];c[ia+4>>2]=c[ha+4>>2];c[ia+8>>2]=c[ha+8>>2];c[ia+12>>2]=c[ha+12>>2];c[ka+0>>2]=c[ja+0>>2];c[ka+4>>2]=c[ja+4>>2];c[ka+8>>2]=c[ja+8>>2];c[ka+12>>2]=c[ja+12>>2];c[ma+0>>2]=c[la+0>>2];c[ma+4>>2]=c[la+4>>2];c[ma+8>>2]=c[la+8>>2];c[ma+12>>2]=c[la+12>>2];Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[Zb>>2]|0)+56>>2]&1](Zb,R,Rb)}if((Tb&1|0)==0){Sb=Pb;continue b}Xf(m,Sb,6.0868353843688965,Rb);cc=+g[m>>2];bc=+g[na>>2];ac=+g[oa>>2];Yb=cc*+g[pa>>2]+bc*+g[qa>>2]+ac*+g[ra>>2]+ +g[sa>>2];_b=cc*+g[ta>>2]+bc*+g[ua>>2]+ac*+g[va>>2]+ +g[wa>>2];g[m>>2]=cc*+g[R>>2]+bc*+g[xa>>2]+ac*+g[ya>>2]+ +g[za>>2];g[na>>2]=Yb;g[oa>>2]=_b;g[Aa>>2]=0.0;Tb=0;do{Xf(n,Sb,+(Tb|0)*6.283185005187988*.03125,Rb);Yb=+g[n>>2];_b=+g[Ba>>2];ac=+g[Ca>>2];bc=Yb*+g[pa>>2]+_b*+g[qa>>2]+ac*+g[ra>>2]+ +g[sa>>2];cc=Yb*+g[ta>>2]+_b*+g[ua>>2]+ac*+g[va>>2]+ +g[wa>>2];g[n>>2]=Yb*+g[R>>2]+_b*+g[xa>>2]+ac*+g[ya>>2]+ +g[za>>2];g[Ba>>2]=bc;g[Ca>>2]=cc;g[Da>>2]=0.0;Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Xb=c[(c[Zb>>2]|0)+8>>2]|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;oc[Xb&63](Zb,m,n,o);if((Tb&3|0)==0){Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Xb=c[(c[Zb>>2]|0)+8>>2]|0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;oc[Xb&63](Zb,ma,n,p)}c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];Tb=Tb+1|0}while((Tb|0)!=32);_b=+g[Sb+452>>2];Yb=+g[Sb+512>>2];Tb=c[Sb+32>>2]|0;if(+g[Tb+344>>2]>0.0){Mf(q,Tb+4|0,Sb+364|0);c[R+0>>2]=c[q+0>>2];c[R+4>>2]=c[q+4>>2];c[R+8>>2]=c[q+8>>2];c[R+12>>2]=c[q+12>>2];c[ia+0>>2]=c[Ea+0>>2];c[ia+4>>2]=c[Ea+4>>2];c[ia+8>>2]=c[Ea+8>>2];c[ia+12>>2]=c[Ea+12>>2];c[ka+0>>2]=c[Fa+0>>2];c[ka+4>>2]=c[Fa+4>>2];c[ka+8>>2]=c[Fa+8>>2];c[ka+12>>2]=c[Fa+12>>2];c[ma+0>>2]=c[Ga+0>>2];c[ma+4>>2]=c[Ga+4>>2];c[ma+8>>2]=c[Ga+8>>2];c[ma+12>>2]=c[Ga+12>>2]}else{Mf(r,(c[Wb>>2]|0)+4|0,Ub);c[R+0>>2]=c[r+0>>2];c[R+4>>2]=c[r+4>>2];c[R+8>>2]=c[r+8>>2];c[R+12>>2]=c[r+12>>2];c[ia+0>>2]=c[Ha+0>>2];c[ia+4>>2]=c[Ha+4>>2];c[ia+8>>2]=c[Ha+8>>2];c[ia+12>>2]=c[Ha+12>>2];c[ka+0>>2]=c[Ia+0>>2];c[ka+4>>2]=c[Ia+4>>2];c[ka+8>>2]=c[Ia+8>>2];c[ka+12>>2]=c[Ia+12>>2];c[ma+0>>2]=c[Ja+0>>2];c[ma+4>>2]=c[Ja+4>>2];c[ma+8>>2]=c[Ja+8>>2];c[ma+12>>2]=c[Ja+12>>2]}c[s+0>>2]=c[ma+0>>2];c[s+4>>2]=c[ma+4>>2];c[s+8>>2]=c[ma+8>>2];c[s+12>>2]=c[ma+12>>2];g[t>>2]=+g[R>>2];g[Ka>>2]=+g[pa>>2];g[La>>2]=+g[ta>>2];g[Ma>>2]=0.0;g[u>>2]=+g[xa>>2];g[Q>>2]=+g[qa>>2];g[Oa>>2]=+g[ua>>2];g[Pa>>2]=0.0;Sb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Zb=c[(c[Sb>>2]|0)+60>>2]|0;bc=-Yb-_b;cc=_b-Yb;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[v+12>>2]=0;Qb[Zb&0](Sb,s,t,u,Rb,Rb,bc,cc,v,1,10.0);Sb=Pb;continue b};case 7:{Ub=Sb+824|0;c[Na+0>>2]=c[Ub+0>>2];c[Na+4>>2]=c[Ub+4>>2];c[Na+8>>2]=c[Ub+8>>2];c[Na+12>>2]=c[Ub+12>>2];Zb=Ub+16|0;c[S+0>>2]=c[Zb+0>>2];c[S+4>>2]=c[Zb+4>>2];c[S+8>>2]=c[Zb+8>>2];c[S+12>>2]=c[Zb+12>>2];Zb=Ub+32|0;c[V+0>>2]=c[Zb+0>>2];c[V+4>>2]=c[Zb+4>>2];c[V+8>>2]=c[Zb+8>>2];c[V+12>>2]=c[Zb+12>>2];Zb=Ub+48|0;c[W+0>>2]=c[Zb+0>>2];c[W+4>>2]=c[Zb+4>>2];c[W+8>>2]=c[Zb+8>>2];c[W+12>>2]=c[Zb+12>>2];if((Vb&1|0)==0){Zb=Sb+888|0;c[Na+0>>2]=c[Zb+0>>2];c[Na+4>>2]=c[Zb+4>>2];c[Na+8>>2]=c[Zb+8>>2];c[Na+12>>2]=c[Zb+12>>2];Xb=Zb+16|0;c[S+0>>2]=c[Xb+0>>2];c[S+4>>2]=c[Xb+4>>2];c[S+8>>2]=c[Xb+8>>2];c[S+12>>2]=c[Xb+12>>2];Xb=Zb+32|0;c[V+0>>2]=c[Xb+0>>2];c[V+4>>2]=c[Xb+4>>2];c[V+8>>2]=c[Xb+8>>2];c[V+12>>2]=c[Xb+12>>2];Zb=Zb+48|0;c[W+0>>2]=c[Zb+0>>2];c[W+4>>2]=c[Zb+4>>2];c[W+8>>2]=c[Zb+8>>2];c[W+12>>2]=c[Zb+12>>2]}else{Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[Zb>>2]|0)+56>>2]&1](Zb,Na,Rb);Zb=Sb+888|0;c[Na+0>>2]=c[Zb+0>>2];c[Na+4>>2]=c[Zb+4>>2];c[Na+8>>2]=c[Zb+8>>2];c[Na+12>>2]=c[Zb+12>>2];Xb=Zb+16|0;c[S+0>>2]=c[Xb+0>>2];c[S+4>>2]=c[Xb+4>>2];c[S+8>>2]=c[Xb+8>>2];c[S+12>>2]=c[Xb+12>>2];Xb=Zb+32|0;c[V+0>>2]=c[Xb+0>>2];c[V+4>>2]=c[Xb+4>>2];c[V+8>>2]=c[Xb+8>>2];c[V+12>>2]=c[Xb+12>>2];Zb=Zb+48|0;c[W+0>>2]=c[Zb+0>>2];c[W+4>>2]=c[Zb+4>>2];c[W+8>>2]=c[Zb+8>>2];c[W+12>>2]=c[Zb+12>>2];Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[Zb>>2]|0)+56>>2]&1](Zb,Na,Rb)}if((Tb&1|0)==0){Sb=Pb;continue b}Tb=Sb+888|0;Zb=(a[Sb+180|0]|0)!=0?Ub:Tb;dc=+g[Zb>>2];ac=+g[Zb+4>>2];Yb=+g[Zb+16>>2];cc=+g[Zb+20>>2];_b=+g[Zb+32>>2];bc=+g[Zb+36>>2];qc=+g[Zb+48>>2];lc=+g[Zb+52>>2];ic=+g[Zb+56>>2];ec=+g[Sb+184>>2];nc=ac*0.0;pc=+g[Zb+8>>2]*0.0;jc=cc*0.0;kc=+g[Zb+24>>2]*0.0;gc=bc*0.0;hc=+g[Zb+40>>2]*0.0;g[w>>2]=qc+(pc+(nc+dc*ec));g[Qa>>2]=lc+(kc+(jc+Yb*ec));g[Ra>>2]=ic+(hc+(gc+_b*ec));g[Sa>>2]=0.0;ec=+g[Sb+188>>2];g[x>>2]=qc+(pc+(nc+dc*ec));g[Ta>>2]=lc+(kc+(jc+Yb*ec));g[Ua>>2]=ic+(hc+(gc+_b*ec));g[Va>>2]=0.0;Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Xb=c[(c[Zb>>2]|0)+8>>2]|0;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;oc[Xb&63](Zb,w,x,y);g[z>>2]=dc;g[Wa>>2]=Yb;g[Ya>>2]=_b;g[Za>>2]=0.0;g[A>>2]=ac;g[_a>>2]=cc;g[$a>>2]=bc;g[ab>>2]=0.0;bc=+g[Sb+192>>2];cc=+g[Sb+196>>2];Zb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Sb=Tb+48|0;Xb=c[(c[Zb>>2]|0)+60>>2]|0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[B+12>>2]=0;Qb[Xb&0](Zb,Sb,z,A,Rb,Rb,bc,cc,B,1,10.0);Sb=Pb;continue b};case 6:case 9:{Wb=Sb+1064|0;c[h+0>>2]=c[Wb+0>>2];c[h+4>>2]=c[Wb+4>>2];c[h+8>>2]=c[Wb+8>>2];c[h+12>>2]=c[Wb+12>>2];Xb=Wb+16|0;c[X+0>>2]=c[Xb+0>>2];c[X+4>>2]=c[Xb+4>>2];c[X+8>>2]=c[Xb+8>>2];c[X+12>>2]=c[Xb+12>>2];Ub=Wb+32|0;c[Y+0>>2]=c[Ub+0>>2];c[Y+4>>2]=c[Ub+4>>2];c[Y+8>>2]=c[Ub+8>>2];c[Y+12>>2]=c[Ub+12>>2];Zb=Wb+48|0;c[Z+0>>2]=c[Zb+0>>2];c[Z+4>>2]=c[Zb+4>>2];c[Z+8>>2]=c[Zb+8>>2];c[Z+12>>2]=c[Zb+12>>2];if((Vb&1|0)==0){Vb=Sb+1128|0;c[h+0>>2]=c[Vb+0>>2];c[h+4>>2]=c[Vb+4>>2];c[h+8>>2]=c[Vb+8>>2];c[h+12>>2]=c[Vb+12>>2];rc=Vb+16|0;c[X+0>>2]=c[rc+0>>2];c[X+4>>2]=c[rc+4>>2];c[X+8>>2]=c[rc+8>>2];c[X+12>>2]=c[rc+12>>2];rc=Vb+32|0;c[Y+0>>2]=c[rc+0>>2];c[Y+4>>2]=c[rc+4>>2];c[Y+8>>2]=c[rc+8>>2];c[Y+12>>2]=c[rc+12>>2];Vb=Vb+48|0;c[Z+0>>2]=c[Vb+0>>2];c[Z+4>>2]=c[Vb+4>>2];c[Z+8>>2]=c[Vb+8>>2];c[Z+12>>2]=c[Vb+12>>2]}else{rc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[rc>>2]|0)+56>>2]&1](rc,h,Rb);rc=Sb+1128|0;c[h+0>>2]=c[rc+0>>2];c[h+4>>2]=c[rc+4>>2];c[h+8>>2]=c[rc+8>>2];c[h+12>>2]=c[rc+12>>2];Vb=rc+16|0;c[X+0>>2]=c[Vb+0>>2];c[X+4>>2]=c[Vb+4>>2];c[X+8>>2]=c[Vb+8>>2];c[X+12>>2]=c[Vb+12>>2];Vb=rc+32|0;c[Y+0>>2]=c[Vb+0>>2];c[Y+4>>2]=c[Vb+4>>2];c[Y+8>>2]=c[Vb+8>>2];c[Y+12>>2]=c[Vb+12>>2];rc=rc+48|0;c[Z+0>>2]=c[rc+0>>2];c[Z+4>>2]=c[rc+4>>2];c[Z+8>>2]=c[rc+8>>2];c[Z+12>>2]=c[rc+12>>2];rc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[rc>>2]|0)+56>>2]&1](rc,h,Rb)}if((Tb&1|0)==0){Sb=Pb;continue b}c[h+0>>2]=c[Wb+0>>2];c[h+4>>2]=c[Wb+4>>2];c[h+8>>2]=c[Wb+8>>2];c[h+12>>2]=c[Wb+12>>2];c[X+0>>2]=c[Xb+0>>2];c[X+4>>2]=c[Xb+4>>2];c[X+8>>2]=c[Xb+8>>2];c[X+12>>2]=c[Xb+12>>2];c[Y+0>>2]=c[Ub+0>>2];c[Y+4>>2]=c[Ub+4>>2];c[Y+8>>2]=c[Ub+8>>2];c[Y+12>>2]=c[Ub+12>>2];c[Z+0>>2]=c[Zb+0>>2];c[Z+4>>2]=c[Zb+4>>2];c[Z+8>>2]=c[Zb+8>>2];c[Z+12>>2]=c[Zb+12>>2];rc=Sb+1128|0;Tb=rc+48|0;g[C>>2]=+g[bb>>2];g[db>>2]=+g[cb>>2];g[fb>>2]=+g[eb>>2];g[gb>>2]=0.0;g[D>>2]=+g[h>>2];g[ib>>2]=+g[hb>>2];g[kb>>2]=+g[jb>>2];g[lb>>2]=0.0;Vb=Sb+932|0;nc=+g[Vb>>2];Yb=+g[Vb+4>>2];Vb=Sb+996|0;qc=+g[Vb>>2];lc=+g[Vb+4>>2];Vb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;sc=c[(c[Vb>>2]|0)+64>>2]|0;pc=Rb*.8999999761581421;c[E+0>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;c[E+12>>2]=0;fc[sc&0](Vb,Tb,C,D,pc,nc,Yb,qc,lc,E,10.0,1);lc=+g[mb>>2];qc=+g[nb>>2];Yb=+g[ob>>2];g[D>>2]=lc;g[ib>>2]=qc;g[kb>>2]=Yb;g[lb>>2]=0.0;nc=+g[Sb+1196>>2];pc=+g[Sb+1200>>2];_b=+T(+nc);nc=+U(+nc);kc=+T(+pc);pc=+U(+pc);g[F>>2]=_b*kc*lc+_b*pc*qc-nc*Yb;g[pb>>2]=kc*qc-pc*lc;g[qb>>2]=nc*kc*lc+nc*pc*qc+_b*Yb;c[h+0>>2]=c[rc+0>>2];c[h+4>>2]=c[rc+4>>2];c[h+8>>2]=c[rc+8>>2];c[h+12>>2]=c[rc+12>>2];Vb=rc+16|0;c[X+0>>2]=c[Vb+0>>2];c[X+4>>2]=c[Vb+4>>2];c[X+8>>2]=c[Vb+8>>2];c[X+12>>2]=c[Vb+12>>2];rc=rc+32|0;c[Y+0>>2]=c[rc+0>>2];c[Y+4>>2]=c[rc+4>>2];c[Y+8>>2]=c[rc+8>>2];c[Y+12>>2]=c[rc+12>>2];c[Z+0>>2]=c[Tb+0>>2];c[Z+4>>2]=c[Tb+4>>2];c[Z+8>>2]=c[Tb+8>>2];c[Z+12>>2]=c[Tb+12>>2];Yb=-+g[hb>>2];_b=-+g[jb>>2];g[G>>2]=-+g[h>>2];g[rb>>2]=Yb;g[sb>>2]=_b;g[tb>>2]=0.0;rc=Sb+868|0;_b=+g[rc>>2];Yb=+g[rc+4>>2];if(!(_b>Yb)){if(_b<Yb){sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;rc=c[(c[sc>>2]|0)+60>>2]|0;c[L+0>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;Qb[rc&0](sc,Tb,G,F,Rb,Rb,_b,Yb,L,1,10.0)}}else{sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;rc=c[(c[sc>>2]|0)+60>>2]|0;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;c[H+12>>2]=0;Qb[rc&0](sc,Tb,G,F,Rb,Rb,-3.1415927410125732,3.1415927410125732,H,0,10.0)}c[h+0>>2]=c[Wb+0>>2];c[h+4>>2]=c[Wb+4>>2];c[h+8>>2]=c[Wb+8>>2];c[h+12>>2]=c[Wb+12>>2];c[X+0>>2]=c[Xb+0>>2];c[X+4>>2]=c[Xb+4>>2];c[X+8>>2]=c[Xb+8>>2];c[X+12>>2]=c[Xb+12>>2];c[Y+0>>2]=c[Ub+0>>2];c[Y+4>>2]=c[Ub+4>>2];c[Y+8>>2]=c[Ub+8>>2];c[Y+12>>2]=c[Ub+12>>2];c[Z+0>>2]=c[Zb+0>>2];c[Z+4>>2]=c[Zb+4>>2];c[Z+8>>2]=c[Zb+8>>2];c[Z+12>>2]=c[Zb+12>>2];Sb=Sb+680|0;c[I+0>>2]=c[Sb+0>>2];c[I+4>>2]=c[Sb+4>>2];c[I+8>>2]=c[Sb+8>>2];c[I+12>>2]=c[Sb+12>>2];Sb=Sb+16|0;c[J+0>>2]=c[Sb+0>>2];c[J+4>>2]=c[Sb+4>>2];c[J+8>>2]=c[Sb+8>>2];c[J+12>>2]=c[Sb+12>>2];Sb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;sc=c[(c[Sb>>2]|0)+72>>2]|0;c[K+0>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;Db[sc&31](Sb,I,J,h,K);Sb=Pb;continue b};case 3:{g[j>>2]=1.0;c[_+0>>2]=0;c[_+4>>2]=0;c[_+8>>2]=0;c[_+12>>2]=0;g[$>>2]=1.0;c[aa+0>>2]=0;c[aa+4>>2]=0;c[aa+8>>2]=0;c[aa+12>>2]=0;g[ba>>2]=1.0;c[ca+0>>2]=0;c[ca+4>>2]=0;c[ca+8>>2]=0;c[ca+12>>2]=0;c[ca+16>>2]=0;qc=+g[Sb+300>>2];pc=+g[Sb+304>>2];nc=+g[Sb+308>>2];sc=c[Sb+28>>2]|0;lc=qc*+g[sc+20>>2]+pc*+g[sc+24>>2]+nc*+g[sc+28>>2]+ +g[sc+56>>2];kc=qc*+g[sc+36>>2]+pc*+g[sc+40>>2]+nc*+g[sc+44>>2]+ +g[sc+60>>2];g[da>>2]=qc*+g[sc+4>>2]+pc*+g[sc+8>>2]+nc*+g[sc+12>>2]+ +g[sc+52>>2];g[ea>>2]=lc;g[fa>>2]=kc;g[ga>>2]=0.0;sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[sc>>2]|0)+56>>2]&1](sc,j,Rb);kc=+g[Sb+316>>2];lc=+g[Sb+320>>2];nc=+g[Sb+324>>2];sc=c[Sb+32>>2]|0;pc=kc*+g[sc+20>>2]+lc*+g[sc+24>>2]+nc*+g[sc+28>>2]+ +g[sc+56>>2];qc=kc*+g[sc+36>>2]+lc*+g[sc+40>>2]+nc*+g[sc+44>>2]+ +g[sc+60>>2];g[da>>2]=kc*+g[sc+4>>2]+lc*+g[sc+8>>2]+nc*+g[sc+12>>2]+ +g[sc+52>>2];g[ea>>2]=pc;g[fa>>2]=qc;g[ga>>2]=0.0;if((Vb&1|0)==0){Sb=Pb;continue b}Sb=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[Sb>>2]|0)+56>>2]&1](Sb,j,Rb);Sb=Pb;continue b};case 4:{Mf(k,(c[Sb+28>>2]|0)+4|0,Sb+552|0);if((Vb&1|0)==0){Mf(M,(c[Sb+32>>2]|0)+4|0,Sb+616|0);c[k+0>>2]=c[M+0>>2];c[k+4>>2]=c[M+4>>2];c[k+8>>2]=c[M+8>>2];c[k+12>>2]=c[M+12>>2];c[vb+0>>2]=c[ub+0>>2];c[vb+4>>2]=c[ub+4>>2];c[vb+8>>2]=c[ub+8>>2];c[vb+12>>2]=c[ub+12>>2];c[yb+0>>2]=c[wb+0>>2];c[yb+4>>2]=c[wb+4>>2];c[yb+8>>2]=c[wb+8>>2];c[yb+12>>2]=c[wb+12>>2];c[Ab+0>>2]=c[zb+0>>2];c[Ab+4>>2]=c[zb+4>>2];c[Ab+8>>2]=c[zb+8>>2];c[Ab+12>>2]=c[zb+12>>2]}else{sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[sc>>2]|0)+56>>2]&1](sc,k,Rb);Mf(M,(c[Sb+32>>2]|0)+4|0,Sb+616|0);c[k+0>>2]=c[M+0>>2];c[k+4>>2]=c[M+4>>2];c[k+8>>2]=c[M+8>>2];c[k+12>>2]=c[M+12>>2];c[vb+0>>2]=c[ub+0>>2];c[vb+4>>2]=c[ub+4>>2];c[vb+8>>2]=c[ub+8>>2];c[vb+12>>2]=c[ub+12>>2];c[yb+0>>2]=c[wb+0>>2];c[yb+4>>2]=c[wb+4>>2];c[yb+8>>2]=c[wb+8>>2];c[yb+12>>2]=c[wb+12>>2];c[Ab+0>>2]=c[zb+0>>2];c[Ab+4>>2]=c[zb+4>>2];c[Ab+8>>2]=c[zb+8>>2];c[Ab+12>>2]=c[zb+12>>2];sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;mc[c[(c[sc>>2]|0)+56>>2]&1](sc,k,Rb)}Ub=Sb+688|0;Sb=Ub+4|0;Yb=+Xa(+(+g[Ub>>2]- +g[Sb>>2]),6.2831854820251465);if(!(Yb<-3.1415927410125732)){if(Yb>3.1415927410125732){Yb=Yb+-6.2831854820251465}}else{Yb=Yb+6.2831854820251465}_b=+Xa(+(+g[Ub>>2]+ +g[Sb>>2]),6.2831854820251465);if(!(_b<-3.1415927410125732)){if(_b>3.1415927410125732){_b=_b+-6.2831854820251465}}else{_b=_b+6.2831854820251465}if(Yb==_b){Sb=Pb;continue b}Sb=Yb>_b;if((Tb&1|0)==0){Sb=Pb;continue b}g[N>>2]=+g[Bb>>2];g[Eb>>2]=+g[Cb>>2];g[Gb>>2]=+g[Fb>>2];g[Ib>>2]=0.0;g[O>>2]=+g[k>>2];g[Lb>>2]=+g[Kb>>2];g[Nb>>2]=+g[Mb>>2];g[Ob>>2]=0.0;Ub=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;Tb=Sb^1;_b=Sb?6.2831854820251465:_b;qc=Sb?0.0:Yb;Sb=c[(c[Ub>>2]|0)+60>>2]|0;c[P+0>>2]=0;c[P+4>>2]=0;c[P+8>>2]=0;c[P+12>>2]=0;Qb[Sb&0](Ub,Ab,N,O,Rb,Rb,qc,_b,P,Tb,10.0);Sb=Pb;continue b};default:{Sb=Pb;continue b}}}}}while(0);if(((((Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)!=0?(sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0,((Jb[c[(c[sc>>2]|0)+48>>2]&63](sc)|0)&16387|0)!=0):0)?(Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)!=0:0)?(sc=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0,(Jb[c[(c[sc>>2]|0)+48>>2]&63](sc)|0)!=0):0)?(f=b+280|0,(c[f>>2]|0)>0):0){h=b+288|0;b=b+72|0;j=0;do{sc=c[(c[h>>2]|0)+(j<<2)>>2]|0;Hb[c[(c[sc>>2]|0)+12>>2]&127](sc,c[b>>2]|0);j=j+1|0}while((j|0)<(c[f>>2]|0))}f=c[3598]|0;b=f+16|0;sc=(c[b>>2]|0)+ -1|0;c[b>>2]=sc;if((sc|0)!=0){i=d;return}do{if((c[f+4>>2]|0)!=0){xb(e|0,0)|0;rc=c[3584]|0;sc=f+8|0;g[sc>>2]=+(((c[e+4>>2]|0)-(c[rc+4>>2]|0)+(((c[e>>2]|0)-(c[rc>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3+ +g[sc>>2];if((c[b>>2]|0)==0){f=c[3598]|0;break}else{i=d;return}}}while(0);c[3598]=c[f+20>>2];i=d;return}function jg(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=a+232|0;if((c[d>>2]|0)<=0){i=b;return}a=a+240|0;e=0;do{f=(c[(c[a>>2]|0)+(e<<2)>>2]|0)+412|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;e=e+1|0}while((e|0)<(c[d>>2]|0));i=b;return}function kg(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0.0,k=0.0;b=i;d=c[a+232>>2]|0;if((d|0)<=0){i=b;return}a=c[a+240>>2]|0;e=0;do{f=c[a+(e<<2)>>2]|0;h=c[f+216>>2]|0;if(!((h|0)==2|(h|0)==5)?(c[f+204>>2]&3|0)==0:0){k=+g[f+368>>2]*+g[f+352>>2];j=+g[f+372>>2]*+g[f+356>>2];h=f+412|0;g[h>>2]=+g[f+364>>2]*+g[f+348>>2]+ +g[h>>2];h=f+416|0;g[h>>2]=k+ +g[h>>2];h=f+420|0;g[h>>2]=j+ +g[h>>2]}e=e+1|0}while((e|0)<(d|0));i=b;return}function lg(b){b=b|0;var d=0,e=0,f=0.0,h=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+144|0;e=d+128|0;h=d+64|0;m=d;dr(1296);if((a[b+274|0]|0)==0){h=b+232|0;r=c[h>>2]|0;if((r|0)>0){n=b+240|0;o=b+300|0;l=b+264|0;b=b+268|0;p=0;do{q=c[(c[n>>2]|0)+(p<<2)>>2]|0;s=c[q+216>>2]|0;if((!((s|0)==2|(s|0)==5)?(j=q+480|0,(c[j>>2]|0)!=0):0)?(c[q+204>>2]&3|0)==0:0){s=q+68|0;r=q+148|0;if((a[o]|0)!=0?(f=+g[b>>2],f!=0.0):0){k=+g[l>>2]-f}else{k=+g[l>>2]*+g[q+244>>2]}Wf(s,+g[q+132>>2],+g[q+136>>2],+g[q+140>>2],r,k,m);r=c[j>>2]|0;Hb[c[(c[r>>2]|0)+12>>2]&127](r,m);r=c[h>>2]|0}p=p+1|0}while((p|0)<(r|0))}}else{o=b+8|0;r=c[o>>2]|0;if((r|0)>0){m=b+16|0;n=b+300|0;j=b+264|0;b=b+268|0;p=0;do{q=c[(c[m>>2]|0)+(p<<2)>>2]|0;if((!((c[q+236>>2]&2|0)==0|(q|0)==0)?(l=q+480|0,(c[l>>2]|0)!=0):0)?(c[q+204>>2]&3|0)==0:0){r=q+68|0;s=q+148|0;if((a[n]|0)!=0?(k=+g[b>>2],k!=0.0):0){f=+g[j>>2]-k}else{f=+g[j>>2]*+g[q+244>>2]}Wf(r,+g[q+132>>2],+g[q+136>>2],+g[q+140>>2],s,f,h);r=c[l>>2]|0;Hb[c[(c[r>>2]|0)+12>>2]&127](r,h);r=c[o>>2]|0}p=p+1|0}while((p|0)<(r|0))}}h=c[3598]|0;j=h+16|0;s=(c[j>>2]|0)+ -1|0;c[j>>2]=s;if((s|0)!=0){i=d;return}do{if((c[h+4>>2]|0)!=0){xb(e|0,0)|0;r=c[3584]|0;s=h+8|0;g[s>>2]=+(((c[e+4>>2]|0)-(c[r+4>>2]|0)+(((c[e>>2]|0)-(c[r>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[s>>2];if((c[j>>2]|0)==0){h=c[3598]|0;break}else{i=d;return}}}while(0);c[3598]=c[h+20>>2];i=d;return}function mg(b,d,e,f){b=b|0;d=+d;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h;xb(c[3584]|0,0)|0;br(14344);c[14348>>2]=(c[14348>>2]|0)+1;l=c[14360>>2]|0;c[14360>>2]=l+1;if((l|0)==0){xb(j|0,0)|0;l=c[3584]|0;c[14356>>2]=(c[j+4>>2]|0)-(c[l+4>>2]|0)+(((c[j>>2]|0)-(c[l>>2]|0)|0)*1e6|0)}c[3600]=0;xb(j|0,0)|0;dr(1320);if((e|0)!=0){g[b+268>>2]=f;k=b+264|0;d=+g[k>>2]+d;g[k>>2]=d;if(!(d>=f)){k=0}else{l=~~(d/f);g[k>>2]=d- +(l|0)*f;k=l}}else{g[b+264>>2]=(a[b+300|0]|0)!=0?0.0:d;g[b+268>>2]=0.0;k=!(+Q(+d)<1.1920928955078125e-7)&1;e=k;f=d}if((Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0)!=0){l=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;a[2360]=(Jb[c[(c[l>>2]|0)+48>>2]&63](l)|0)>>>4&1}if((k|0)!=0){e=(k|0)>(e|0)?e:k;Eb[c[(c[b>>2]|0)+164>>2]&15](b,f*+(e|0));Fb[c[(c[b>>2]|0)+168>>2]&255](b);if((e|0)>0){l=0;do{Eb[c[(c[b>>2]|0)+160>>2]&15](b,f);Fb[c[(c[b>>2]|0)+80>>2]&255](b);l=l+1|0}while((l|0)<(e|0))}}else{Fb[c[(c[b>>2]|0)+80>>2]&255](b)}Fb[c[(c[b>>2]|0)+120>>2]&255](b);c[3600]=(c[3600]|0)+1;b=c[3598]|0;e=b+16|0;l=(c[e>>2]|0)+ -1|0;c[e>>2]=l;if((l|0)!=0){i=h;return k|0}do{if((c[b+4>>2]|0)!=0){xb(j|0,0)|0;m=c[3584]|0;l=b+8|0;g[l>>2]=+(((c[j+4>>2]|0)-(c[m+4>>2]|0)+(((c[j>>2]|0)-(c[m>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[l>>2];if((c[e>>2]|0)==0){b=c[3598]|0;break}else{i=h;return k|0}}}while(0);c[3598]=c[b+20>>2];i=h;return k|0}function ng(d,e){d=d|0;e=+e;var f=0,h=0,j=0.0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0,t=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0.0,Ma=0.0,Na=0.0,Oa=0.0,Pa=0.0,Qa=0.0;f=i;i=i+464|0;h=f+280|0;q=f+216|0;l=f+120|0;s=f+64|0;k=f;dr(1336);y=c[d+84>>2]|0;if((y|0)!=0){Eb[y&15](d,e)}Eb[c[(c[d>>2]|0)+140>>2]&15](d,e);g[d+28>>2]=e;c[d+32>>2]=0;c[d+48>>2]=Jb[c[(c[d>>2]|0)+20>>2]&63](d)|0;dr(1472);dr(1504);z=d+308|0;y=d+316|0;C=c[y>>2]|0;if((c[z>>2]|0)>0){A=d+24|0;B=0;do{Ea=c[A>>2]|0;Hb[c[(c[Ea>>2]|0)+16>>2]&127](Ea,c[C+(B<<2)>>2]|0);B=B+1|0;C=c[y>>2]|0}while((B|0)<(c[z>>2]|0))}A=d+320|0;if((C|0)!=0){if((a[A]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[C+ -4>>2]|0)}c[y>>2]=0}a[A]=1;c[y>>2]=0;c[z>>2]=0;B=d+312|0;c[B>>2]=0;C=c[3598]|0;D=C+16|0;Ea=(c[D>>2]|0)+ -1|0;c[D>>2]=Ea;do{if((Ea|0)==0){if((c[C+4>>2]|0)!=0){xb(h|0,0)|0;Da=c[3584]|0;Ea=C+8|0;g[Ea>>2]=+(((c[h+4>>2]|0)-(c[Da+4>>2]|0)+(((c[h>>2]|0)-(c[Da>>2]|0)|0)*1e6|0)-(c[C+12>>2]|0)|0)>>>0)/1.0e3+ +g[Ea>>2];if((c[D>>2]|0)!=0){break}C=c[3598]|0}c[3598]=c[C+20>>2]}}while(0);M=d+232|0;if((c[M>>2]|0)>0){J=d+240|0;ka=q+48|0;D=q+52|0;C=q+56|0;ma=d+44|0;fa=d+68|0;ea=d+24|0;ga=l+4|0;ha=l+8|0;ia=l+10|0;ja=l+12|0;la=l+28|0;O=l+76|0;G=l+80|0;na=l+84|0;oa=l+88|0;pa=l+92|0;N=s+4|0;L=s+28|0;K=s+44|0;I=d+56|0;F=k+16|0;E=k+32|0;H=k+48|0;T=l+44|0;ca=l+48|0;da=l+52|0;P=h+16|0;Q=h+20|0;R=h+24|0;S=h+28|0;U=h+64|0;V=h+80|0;W=h+84|0;X=h+88|0;Y=h+92|0;Z=h+112|0;_=h+116|0;$=h+120|0;qa=s+8|0;ra=s+12|0;sa=s+16|0;ta=s+20|0;ua=s+24|0;ba=h+4|0;aa=0;do{wa=c[(c[J>>2]|0)+(aa<<2)>>2]|0;g[wa+244>>2]=1.0;Ea=c[wa+216>>2]|0;do{if(((!((Ea|0)==2|(Ea|0)==5)?(c[wa+204>>2]&3|0)==0:0)?(x=wa+4|0,Wf(x,+g[wa+312>>2],+g[wa+316>>2],+g[wa+320>>2],wa+328|0,e,q),p=wa+52|0,r=+g[ka>>2],m=r- +g[p>>2],j=+g[D>>2],t=wa+56|0,n=j- +g[t>>2],u=+g[C>>2],v=wa+60|0,o=u- +g[v>>2],(a[ma]|0)!=0):0)?(Aa=+g[wa+252>>2],Aa=Aa*Aa,Aa!=0.0&Aa<m*m+n*n+o*o):0){dr(1544);if((c[(c[wa+192>>2]|0)+4>>2]|0)<20){c[366]=(c[366]|0)+1;Da=c[fa>>2]|0;Da=Jb[c[(c[Da>>2]|0)+36>>2]&63](Da)|0;Ea=c[ea>>2]|0;g[ga>>2]=1.0;b[ha>>1]=1;b[ia>>1]=-1;c[l>>2]=2072;c[ja+0>>2]=c[p+0>>2];c[ja+4>>2]=c[p+4>>2];c[ja+8>>2]=c[p+8>>2];c[ja+12>>2]=c[p+12>>2];c[la+0>>2]=c[ka+0>>2];c[la+4>>2]=c[ka+4>>2];c[la+8>>2]=c[ka+8>>2];c[la+12>>2]=c[ka+12>>2];c[O>>2]=0;c[l>>2]=1864;c[G>>2]=wa;g[na>>2]=0.0;c[oa>>2]=Da;c[pa>>2]=Ea;xa=+g[wa+248>>2];c[qa>>2]=0;g[ra>>2]=1.0;g[sa>>2]=1.0;g[ta>>2]=1.0;g[ua>>2]=0.0;c[s>>2]=11632;c[N>>2]=8;g[L>>2]=xa;g[K>>2]=xa;g[na>>2]=+g[I>>2];Ea=c[wa+188>>2]|0;b[ha>>1]=b[Ea+4>>1]|0;b[ia>>1]=b[Ea+6>>1]|0;c[H+0>>2]=c[ka+0>>2];c[H+4>>2]=c[ka+4>>2];c[H+8>>2]=c[ka+8>>2];c[H+12>>2]=c[ka+12>>2];c[k+0>>2]=c[x+0>>2];c[k+4>>2]=c[x+4>>2];c[k+8>>2]=c[x+8>>2];c[k+12>>2]=c[x+12>>2];Ea=wa+20|0;c[F+0>>2]=c[Ea+0>>2];c[F+4>>2]=c[Ea+4>>2];c[F+8>>2]=c[Ea+8>>2];c[F+12>>2]=c[Ea+12>>2];Ea=wa+36|0;c[E+0>>2]=c[Ea+0>>2];c[E+4>>2]=c[Ea+4>>2];c[E+8>>2]=c[Ea+8>>2];c[E+12>>2]=c[Ea+12>>2];ok(d,s,x,k,l);xa=+g[ga>>2];if(xa<1.0){Aa=xa*(r- +g[p>>2]);ya=xa*(j- +g[t>>2]);za=xa*(u- +g[v>>2]);xa=-(ya*+g[ca>>2])-Aa*+g[T>>2]-za*+g[da>>2];va=c[ea>>2]|0;va=Sb[c[(c[va>>2]|0)+12>>2]&31](va,wa,c[O>>2]|0)|0;Ca=c[z>>2]|0;if((Ca|0)==(c[B>>2]|0)?(w=(Ca|0)==0?1:Ca<<1,(Ca|0)<(w|0)):0){if((w|0)==0){Ba=0}else{c[3580]=(c[3580]|0)+1;Ba=vr((w<<2|3)+16|0)|0;if((Ba|0)==0){Ba=0}else{Ea=Ba+19&-16;c[Ea+ -4>>2]=Ba;Ba=Ea}Ca=c[z>>2]|0}if((Ca|0)>0){Ea=0;do{Da=Ba+(Ea<<2)|0;if((Da|0)!=0){c[Da>>2]=c[(c[y>>2]|0)+(Ea<<2)>>2]}Ea=Ea+1|0}while((Ea|0)!=(Ca|0))}Da=c[y>>2]|0;if((Da|0)!=0){if((a[A]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[Da+ -4>>2]|0);Ca=c[z>>2]|0}c[y>>2]=0}a[A]=1;c[y>>2]=Ba;c[B>>2]=w}Ba=(c[y>>2]|0)+(Ca<<2)|0;if((Ba|0)!=0){c[Ba>>2]=va}c[z>>2]=Ca+1;Aa=Aa+ +g[p>>2];ya=ya+ +g[t>>2];za=za+ +g[v>>2];Ba=c[O>>2]|0;Qa=+g[Ba+4>>2];Pa=+g[Ba+20>>2];Ha=+g[Ba+36>>2];Oa=+g[Ba+8>>2];Na=+g[Ba+24>>2];Ga=+g[Ba+40>>2];Ma=+g[Ba+12>>2];Ka=+g[Ba+28>>2];Ia=+g[Ba+44>>2];La=-+g[Ba+52>>2];Ja=-+g[Ba+56>>2];Fa=-+g[Ba+60>>2];Ha=Aa*Qa+ya*Pa+za*Ha+(Qa*La+Pa*Ja+Ha*Fa);Ga=Aa*Oa+ya*Na+za*Ga+(Oa*La+Na*Ja+Ga*Fa);Fa=Aa*Ma+ya*Ka+za*Ia+(Ma*La+Ka*Ja+Ia*Fa);c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[P>>2]=Ha;g[Q>>2]=Ga;g[R>>2]=Fa;g[S>>2]=0.0;c[U+0>>2]=c[T+0>>2];c[U+4>>2]=c[T+4>>2];c[U+8>>2]=c[T+8>>2];c[U+12>>2]=c[T+12>>2];g[V>>2]=xa;g[W>>2]=0.0;g[X>>2]=0.0;g[Y>>2]=0.0;c[Z>>2]=0;a[_]=0;c[$+0>>2]=0;c[$+4>>2]=0;c[$+8>>2]=0;c[$+12>>2]=0;c[$+16>>2]=0;c[$+20>>2]=0;c[$+24>>2]=0;c[$+28>>2]=0;Ba=Tn(va,h)|0;g[va+(Ba*184|0)+96>>2]=0.0;xa=+g[wa+224>>2]*+g[(c[O>>2]|0)+224>>2];xa=xa<-10.0?-10.0:xa;g[va+(Ba*184|0)+88>>2]=xa>10.0?10.0:xa;Ea=va+(Ba*184|0)+52|0;c[Ea+0>>2]=c[p+0>>2];c[Ea+4>>2]=c[p+4>>2];c[Ea+8>>2]=c[p+8>>2];c[Ea+12>>2]=c[p+12>>2];g[va+(Ba*184|0)+36>>2]=Aa;g[va+(Ba*184|0)+40>>2]=ya;g[va+(Ba*184|0)+44>>2]=za;g[va+(Ba*184|0)+48>>2]=0.0}}va=c[3598]|0;wa=va+16|0;Ea=(c[wa>>2]|0)+ -1|0;c[wa>>2]=Ea;if((Ea|0)==0){if((c[va+4>>2]|0)!=0){xb(h|0,0)|0;Da=c[3584]|0;Ea=va+8|0;g[Ea>>2]=+(((c[ba>>2]|0)-(c[Da+4>>2]|0)+(((c[h>>2]|0)-(c[Da>>2]|0)|0)*1e6|0)-(c[va+12>>2]|0)|0)>>>0)/1.0e3+ +g[Ea>>2];if((c[wa>>2]|0)!=0){break}va=c[3598]|0}c[3598]=c[va+20>>2]}}}while(0);aa=aa+1|0}while((aa|0)<(c[M>>2]|0))}l=c[3598]|0;k=l+16|0;Ea=(c[k>>2]|0)+ -1|0;c[k>>2]=Ea;do{if((Ea|0)==0){if((c[l+4>>2]|0)!=0){xb(h|0,0)|0;Da=c[3584]|0;Ea=l+8|0;g[Ea>>2]=+(((c[h+4>>2]|0)-(c[Da+4>>2]|0)+(((c[h>>2]|0)-(c[Da>>2]|0)|0)*1e6|0)-(c[l+12>>2]|0)|0)>>>0)/1.0e3+ +g[Ea>>2];if((c[k>>2]|0)!=0){break}l=c[3598]|0}c[3598]=c[l+20>>2]}}while(0);Fb[c[(c[d>>2]|0)+44>>2]&255](d);Fb[c[(c[d>>2]|0)+148>>2]&255](d);g[d+104>>2]=e;Hb[c[(c[d>>2]|0)+152>>2]&127](d,d+92|0);Eb[c[(c[d>>2]|0)+144>>2]&15](d,e);dr(1368);l=d+280|0;if((c[l>>2]|0)>0){p=d+288|0;k=0;do{Ea=c[(c[p>>2]|0)+(k<<2)>>2]|0;mc[c[(c[Ea>>2]|0)+8>>2]&1](Ea,d,e);k=k+1|0}while((k|0)<(c[l>>2]|0))}l=c[3598]|0;k=l+16|0;Ea=(c[k>>2]|0)+ -1|0;c[k>>2]=Ea;do{if((Ea|0)==0){if((c[l+4>>2]|0)!=0){xb(h|0,0)|0;Da=c[3584]|0;Ea=l+8|0;g[Ea>>2]=+(((c[h+4>>2]|0)-(c[Da+4>>2]|0)+(((c[h>>2]|0)-(c[Da>>2]|0)|0)*1e6|0)-(c[l+12>>2]|0)|0)>>>0)/1.0e3+ +g[Ea>>2];if((c[k>>2]|0)!=0){break}l=c[3598]|0}c[3598]=c[l+20>>2]}}while(0);Eb[c[(c[d>>2]|0)+156>>2]&15](d,e);k=c[d+80>>2]|0;if((k|0)!=0){Eb[k&15](d,e)}d=c[3598]|0;k=d+16|0;Ea=(c[k>>2]|0)+ -1|0;c[k>>2]=Ea;if((Ea|0)!=0){i=f;return}do{if((c[d+4>>2]|0)!=0){xb(h|0,0)|0;Da=c[3584]|0;Ea=d+8|0;g[Ea>>2]=+(((c[h+4>>2]|0)-(c[Da+4>>2]|0)+(((c[h>>2]|0)-(c[Da>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3+ +g[Ea>>2];if((c[k>>2]|0)==0){d=c[3598]|0;break}else{i=f;return}}}while(0);c[3598]=c[d+20>>2];i=f;return}function og(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0.0;e=i;d=a+248|0;c[d+0>>2]=c[b+0>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];d=a+232|0;l=c[d>>2]|0;if((l|0)<=0){i=e;return}a=a+240|0;h=b+4|0;f=b+8|0;j=0;do{k=c[(c[a>>2]|0)+(j<<2)>>2]|0;n=c[k+216>>2]|0;if(!((n|0)==2|(n|0)==5)?(c[k+504>>2]&1|0)==0:0){m=+g[k+344>>2];if(m!=0.0){p=1.0/m;o=p*+g[h>>2];m=p*+g[f>>2];g[k+364>>2]=p*+g[b>>2];g[k+368>>2]=o;g[k+372>>2]=m;g[k+376>>2]=0.0}l=k+380|0;c[l+0>>2]=c[b+0>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];c[l+12>>2]=c[b+12>>2];l=c[d>>2]|0}j=j+1|0}while((j|0)<(l|0));i=e;return}function pg(a,b){a=a|0;b=b|0;var d=0;d=i;b=b+248|0;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];i=d;return}function qg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;ck(a,b,c,d);i=e;return}function rg(a,b){a=a|0;b=b|0;var d=0;d=i;if((c[b+236>>2]&2|0)==0|(b|0)==0){gk(a,b);i=d;return}else{Hb[c[(c[a>>2]|0)+92>>2]&127](a,b);i=d;return}}function sg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;e=a+232|0;d=c[e>>2]|0;a:do{if((d|0)>0){h=a+240|0;g=c[h>>2]|0;j=0;while(1){k=g+(j<<2)|0;l=j+1|0;if((c[k>>2]|0)==(b|0)){break}if((l|0)<(d|0)){j=l}else{break a}}if((j|0)<(d|0)){l=d+ -1|0;c[k>>2]=c[g+(l<<2)>>2];c[(c[h>>2]|0)+(l<<2)>>2]=b;c[e>>2]=l}}}while(0);gk(a,b);i=f;return}function tg(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0;e=i;f=d+204|0;j=c[f>>2]|0;if((j&3|0)==0?(c[d+504>>2]&1|0)==0:0){k=b+248|0;q=+g[d+344>>2];if(q!=0.0){s=1.0/q;r=s*+g[b+252>>2];q=s*+g[b+256>>2];g[d+364>>2]=s*+g[k>>2];g[d+368>>2]=r;g[d+372>>2]=q;g[d+376>>2]=0.0}p=d+380|0;c[p+0>>2]=c[k+0>>2];c[p+4>>2]=c[k+4>>2];c[p+8>>2]=c[k+8>>2];c[p+12>>2]=c[k+12>>2]}if((c[d+192>>2]|0)==0){i=e;return}if((j&1|0)!=0){f=d+216|0;if(!(((c[f>>2]|0)+ -4|0)>>>0<2)){c[f>>2]=2}}else{j=b+232|0;n=c[j>>2]|0;k=b+236|0;if((n|0)==(c[k>>2]|0)?(h=(n|0)==0?1:n<<1,(n|0)<(h|0)):0){if((h|0)==0){l=0}else{c[3580]=(c[3580]|0)+1;l=vr((h<<2|3)+16|0)|0;if((l|0)==0){l=0}else{p=l+19&-16;c[p+ -4>>2]=l;l=p}n=c[j>>2]|0}m=b+240|0;if((n|0)>0){p=0;do{o=l+(p<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[m>>2]|0)+(p<<2)>>2]}p=p+1|0}while((p|0)!=(n|0))}p=c[m>>2]|0;o=b+244|0;if((p|0)!=0){if((a[o]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[p+ -4>>2]|0);n=c[j>>2]|0}c[m>>2]=0}a[o]=1;c[m>>2]=l;c[k>>2]=h}h=(c[b+240>>2]|0)+(n<<2)|0;if((h|0)!=0){c[h>>2]=d}c[j>>2]=n+1;j=c[f>>2]|0}if((j&1|0)==0){f=(j&2|0)==0}else{f=0}oc[c[(c[b>>2]|0)+36>>2]&63](b,d,f?1:2,f?-1:-3);i=e;return}function ug(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0;h=i;l=c[d+204>>2]|0;if((l&3|0)==0?(c[d+504>>2]&1|0)==0:0){k=b+248|0;r=+g[d+344>>2];if(r!=0.0){t=1.0/r;s=t*+g[b+252>>2];r=t*+g[b+256>>2];g[d+364>>2]=t*+g[k>>2];g[d+368>>2]=s;g[d+372>>2]=r;g[d+376>>2]=0.0}q=d+380|0;c[q+0>>2]=c[k+0>>2];c[q+4>>2]=c[k+4>>2];c[q+8>>2]=c[k+8>>2];c[q+12>>2]=c[k+12>>2]}if((c[d+192>>2]|0)==0){i=h;return}if((l&1|0)!=0){j=d+216|0;if(!(((c[j>>2]|0)+ -4|0)>>>0<2)){c[j>>2]=2}}else{k=b+232|0;o=c[k>>2]|0;l=b+236|0;if((o|0)==(c[l>>2]|0)?(j=(o|0)==0?1:o<<1,(o|0)<(j|0)):0){if((j|0)==0){m=0}else{c[3580]=(c[3580]|0)+1;m=vr((j<<2|3)+16|0)|0;if((m|0)==0){m=0}else{q=m+19&-16;c[q+ -4>>2]=m;m=q}o=c[k>>2]|0}n=b+240|0;if((o|0)>0){p=0;do{q=m+(p<<2)|0;if((q|0)!=0){c[q>>2]=c[(c[n>>2]|0)+(p<<2)>>2]}p=p+1|0}while((p|0)!=(o|0))}q=c[n>>2]|0;p=b+244|0;if((q|0)!=0){if((a[p]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0);o=c[k>>2]|0}c[n>>2]=0}a[p]=1;c[n>>2]=m;c[l>>2]=j}j=(c[b+240>>2]|0)+(o<<2)|0;if((j|0)!=0){c[j>>2]=d}c[k>>2]=o+1}oc[c[(c[b>>2]|0)+36>>2]&63](b,d,e,f);i=h;return}function vg(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0;e=i;i=i+16|0;f=e;dr(1384);j=b+232|0;if((c[j>>2]|0)>0){k=b+240|0;b=(a[2360]|0)==0;l=0;do{m=c[(c[k>>2]|0)+(l<<2)>>2]|0;a:do{if((m|0)!=0){n=m+216|0;o=c[n>>2]|0;do{if(!((o|0)==4|(o|0)==2)){s=+g[m+312>>2];r=+g[m+316>>2];q=+g[m+320>>2];p=+g[m+472>>2];if(s*s+r*r+q*q<p*p?(p=+g[m+328>>2],q=+g[m+332>>2],r=+g[m+336>>2],s=+g[m+476>>2],p*p+q*q+r*r<s*s):0){h=m+220|0;g[h>>2]=+g[h>>2]+d;h=10;break}g[m+220>>2]=0.0;if(!((o+ -4|0)>>>0<2)){c[n>>2]=0;o=0}else{h=10}}else{h=10}}while(0);if((h|0)==10){h=0;if((o|0)==4){break}}do{if(b){if(!((o+ -2|0)>>>0<2)?!(+g[m+220>>2]>2.0):0){break}if((c[m+204>>2]&3|0)!=0){if((o+ -4|0)>>>0<2){break a}c[n>>2]=2;break a}if((o|0)==1){c[n>>2]=3;break a}if((o|0)!=2){break a}o=m+260|0;t=m+328|0;n=(c[o>>2]|0)+2|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[o>>2]=n;o=m+312|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;break a}}while(0);if(!((o+ -4|0)>>>0<2)){c[n>>2]=1}}}while(0);l=l+1|0}while((l|0)<(c[j>>2]|0))}h=c[3598]|0;j=h+16|0;t=(c[j>>2]|0)+ -1|0;c[j>>2]=t;if((t|0)!=0){i=e;return}do{if((c[h+4>>2]|0)!=0){xb(f|0,0)|0;o=c[3584]|0;t=h+8|0;g[t>>2]=+(((c[f+4>>2]|0)-(c[o+4>>2]|0)+(((c[f>>2]|0)-(c[o>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[t>>2];if((c[j>>2]|0)==0){h=c[3598]|0;break}else{i=e;return}}}while(0);c[3598]=c[h+20>>2];i=e;return}function wg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;f=b+212|0;m=c[f>>2]|0;h=b+216|0;if((m|0)==(c[h>>2]|0)?(j=(m|0)==0?1:m<<1,(m|0)<(j|0)):0){if((j|0)==0){k=0}else{c[3580]=(c[3580]|0)+1;k=vr((j<<2|3)+16|0)|0;if((k|0)==0){k=0}else{o=k+19&-16;c[o+ -4>>2]=k;k=o}m=c[f>>2]|0}l=b+220|0;if((m|0)>0){n=0;do{o=k+(n<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[l>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(m|0))}o=c[l>>2]|0;n=b+224|0;if((o|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[o+ -4>>2]|0);m=c[f>>2]|0}c[l>>2]=0}a[n]=1;c[l>>2]=k;c[h>>2]=j}b=(c[b+220>>2]|0)+(m<<2)|0;if((b|0)!=0){c[b>>2]=d}c[f>>2]=m+1;if(!e){i=g;return}Dh(c[d+28>>2]|0,d);Dh(c[d+32>>2]|0,d);i=g;return}function xg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;f=a+212|0;g=c[f>>2]|0;a:do{if((g|0)>0){k=a+220|0;l=c[k>>2]|0;j=0;while(1){h=l+(j<<2)|0;a=j+1|0;if((c[h>>2]|0)==(b|0)){break}if((a|0)<(g|0)){j=a}else{break a}}if((j|0)<(g|0)){m=g+ -1|0;c[h>>2]=c[l+(m<<2)>>2];c[(c[k>>2]|0)+(m<<2)>>2]=b;c[f>>2]=m}}}while(0);f=c[b+28>>2]|0;g=f+488|0;h=c[g>>2]|0;b:do{if((h|0)>0){k=f+496|0;j=c[k>>2]|0;l=0;while(1){m=j+(l<<2)|0;a=l+1|0;if((c[m>>2]|0)==(b|0)){break}if((a|0)<(h|0)){l=a}else{break b}}if((l|0)<(h|0)){h=h+ -1|0;c[m>>2]=c[j+(h<<2)>>2];c[(c[k>>2]|0)+(h<<2)>>2]=b;c[g>>2]=h}}}while(0);c[f+256>>2]=(h|0)>0;f=c[b+32>>2]|0;m=f+488|0;l=c[m>>2]|0;if((l|0)<=0){l=(l|0)>0;l=l&1;m=f+256|0;c[m>>2]=l;i=d;return}j=f+496|0;k=c[j>>2]|0;h=0;while(1){a=k+(h<<2)|0;g=h+1|0;if((c[a>>2]|0)==(b|0)){break}if((g|0)<(l|0)){h=g}else{e=19;break}}if((e|0)==19){l=(l|0)>0;l=l&1;m=f+256|0;c[m>>2]=l;i=d;return}if((h|0)>=(l|0)){l=(l|0)>0;l=l&1;m=f+256|0;c[m>>2]=l;i=d;return}l=l+ -1|0;c[a>>2]=c[k+(l<<2)>>2];c[(c[j>>2]|0)+(l<<2)>>2]=b;c[m>>2]=l;l=(l|0)>0;l=l&1;m=f+256|0;c[m>>2]=l;i=d;return}function yg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+280|0;m=c[e>>2]|0;h=b+284|0;if((m|0)==(c[h>>2]|0)?(g=(m|0)==0?1:m<<1,(m|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}m=c[e>>2]|0}k=b+288|0;if((m|0)>0){l=0;do{n=j+(l<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[k>>2]|0)+(l<<2)>>2]}l=l+1|0}while((l|0)!=(m|0))}n=c[k>>2]|0;l=b+292|0;if((n|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);m=c[e>>2]|0}c[k>>2]=0}a[l]=1;c[k>>2]=j;c[h>>2]=g}b=(c[b+288>>2]|0)+(m<<2)|0;if((b|0)==0){n=m+1|0;c[e>>2]=n;i=f;return}c[b>>2]=d;n=m+1|0;c[e>>2]=n;i=f;return}function zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;g=i;e=a+280|0;d=c[e>>2]|0;if((d|0)<=0){i=g;return}j=a+288|0;h=c[j>>2]|0;k=0;while(1){l=h+(k<<2)|0;a=k+1|0;if((c[l>>2]|0)==(b|0)){break}if((a|0)<(d|0)){k=a}else{f=7;break}}if((f|0)==7){i=g;return}if((k|0)>=(d|0)){i=g;return}k=d+ -1|0;c[l>>2]=c[h+(k<<2)>>2];c[(c[j>>2]|0)+(k<<2)>>2]=b;c[e>>2]=k;i=g;return}function Ag(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+64>>2]&127](a,b);i=d;return}function Bg(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+68>>2]&127](a,b);i=d;return}function Cg(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+64>>2]&127](a,b);i=d;return}function Dg(a,b){a=a|0;b=b|0;var d=0;d=i;Hb[c[(c[a>>2]|0)+68>>2]&127](a,b);i=d;return}function Eg(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+16|0;f=e;dr(1408);j=b+176|0;k=c[b+212>>2]|0;l=b+180|0;p=c[l>>2]|0;if((p|0)<(k|0)){q=b+184|0;if((c[q>>2]|0)<(k|0)){if((k|0)==0){s=0;u=p}else{c[3580]=(c[3580]|0)+1;r=vr((k<<2|3)+16|0)|0;if((r|0)==0){s=0}else{s=r+19&-16;c[s+ -4>>2]=r}u=c[l>>2]|0}r=b+188|0;if((u|0)>0){t=0;do{v=s+(t<<2)|0;if((v|0)!=0){c[v>>2]=c[(c[r>>2]|0)+(t<<2)>>2]}t=t+1|0}while((t|0)!=(u|0))}t=c[r>>2]|0;u=b+192|0;if((t|0)!=0){if((a[u]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[t+ -4>>2]|0)}c[r>>2]=0}a[u]=1;c[r>>2]=s;c[q>>2]=k}else{r=b+188|0}do{q=(c[r>>2]|0)+(p<<2)|0;if((q|0)!=0){c[q>>2]=0}p=p+1|0}while((p|0)!=(k|0))}c[l>>2]=k;p=b+220|0;k=b+188|0;q=0;while(1){if((q|0)>=(Jb[c[(c[b>>2]|0)+104>>2]&63](b)|0)){break}c[(c[k>>2]|0)+(q<<2)>>2]=c[(c[p>>2]|0)+(q<<2)>>2];q=q+1|0}p=c[l>>2]|0;if((p|0)>1){Xg(j,0,p+ -1|0)}if((Jb[c[(c[b>>2]|0)+104>>2]&63](b)|0)==0){p=0}else{p=c[k>>2]|0}j=b+196|0;k=c[j>>2]|0;r=c[l>>2]|0;l=Jb[c[(c[b>>2]|0)+20>>2]&63](b)|0;c[k+4>>2]=d;c[k+12>>2]=p;c[k+16>>2]=r;c[k+20>>2]=l;l=k+32|0;r=c[l>>2]|0;if((r|0)<0){s=k+36|0;p=k+40|0;if((c[s>>2]|0)<0){t=c[p>>2]|0;q=k+44|0;if((t|0)!=0){if((a[q]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[t+ -4>>2]|0)}c[p>>2]=0}a[q]=1;c[p>>2]=0;c[s>>2]=0}do{q=(c[p>>2]|0)+(r<<2)|0;if((q|0)!=0){c[q>>2]=0}r=r+1|0}while((r|0)!=0)}c[l>>2]=0;l=k+52|0;r=c[l>>2]|0;if((r|0)<0){q=k+56|0;p=k+60|0;if((c[q>>2]|0)<0){s=c[p>>2]|0;t=k+64|0;if((s|0)!=0){if((a[t]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[s+ -4>>2]|0)}c[p>>2]=0}a[t]=1;c[p>>2]=0;c[q>>2]=0}do{q=(c[p>>2]|0)+(r<<2)|0;if((q|0)!=0){c[q>>2]=0}r=r+1|0}while((r|0)!=0)}c[l>>2]=0;l=k+72|0;r=c[l>>2]|0;if((r|0)<0){s=k+76|0;p=k+80|0;if((c[s>>2]|0)<0){q=c[p>>2]|0;k=k+84|0;if((q|0)!=0){if((a[k]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0)}c[p>>2]=0}a[k]=1;c[p>>2]=0;c[s>>2]=0}do{k=(c[p>>2]|0)+(r<<2)|0;if((k|0)!=0){c[k>>2]=0}r=r+1|0}while((r|0)!=0)}c[l>>2]=0;k=b+200|0;s=c[k>>2]|0;w=c[(c[s>>2]|0)+8>>2]|0;r=b+8|0;l=c[r>>2]|0;q=b+24|0;p=c[q>>2]|0;p=Jb[c[(c[p>>2]|0)+36>>2]&63](p)|0;kc[w&63](s,l,p);p=c[b+204>>2]|0;q=c[q>>2]|0;l=c[j>>2]|0;dr(11536);s=p+28|0;w=c[s>>2]|0;if((w|0)<0){u=p+32|0;t=p+36|0;if((c[u>>2]|0)<0){x=c[t>>2]|0;v=p+40|0;if((x|0)!=0){if((a[v]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[x+ -4>>2]|0)}c[t>>2]=0}a[v]=1;c[t>>2]=0;c[u>>2]=0}do{u=(c[t>>2]|0)+(w<<2)|0;if((u|0)!=0){c[u>>2]=0}w=w+1|0}while((w|0)!=0)}c[s>>2]=0;v=p+4|0;t=p+8|0;u=c[t>>2]|0;if((u|0)>0){x=c[p+16>>2]|0;y=0;do{w=x+(y<<3)|0;A=c[w>>2]|0;if((A|0)==(y|0)){B=y}else{z=w;do{B=x+(A<<3)|0;c[z>>2]=c[B>>2];B=c[B>>2]|0;z=x+(B<<3)|0;A=c[z>>2]|0}while((B|0)!=(A|0))}c[w>>2]=B;y=y+1|0}while((y|0)!=(u|0));u=c[t>>2]|0;if((u|0)>1){Wo(v,0,u+ -1|0);u=c[t>>2]|0}if((u|0)>0){w=b+16|0;v=c[p+16>>2]|0;B=0;while(1){A=c[v+(B<<3)>>2]|0;z=B;do{z=z+1|0;y=(z|0)<(u|0);if(!y){break}}while((c[v+(z<<3)>>2]|0)==(A|0));if((B|0)<(z|0)){x=c[w>>2]|0;E=1;C=B;do{D=c[x+(c[v+(C<<3)+4>>2]<<2)>>2]|0;if((c[D+208>>2]|0)==(A|0)){D=c[D+216>>2]|0;E=E&(D|0)!=1&(D|0)!=4}C=C+1|0}while((C|0)!=(z|0));if(E){do{C=c[x+(c[v+(B<<3)+4>>2]<<2)>>2]|0;if((c[C+208>>2]|0)==(A|0)?(n=C+216|0,!(((c[n>>2]|0)+ -4|0)>>>0<2)):0){c[n>>2]=2}B=B+1|0}while((B|0)<(z|0))}else{do{C=c[x+(c[v+(B<<3)+4>>2]<<2)>>2]|0;if((c[C+208>>2]|0)==(A|0)?(o=C+216|0,(c[o>>2]|0)==2):0){c[o>>2]=3;g[C+220>>2]=0.0}B=B+1|0}while((B|0)<(z|0))}}if(y){B=z}else{break}}}}n=Jb[c[(c[q>>2]|0)+36>>2]&63](q)|0;if((n|0)>0){w=p+64|0;v=p+32|0;y=p+36|0;u=p+40|0;o=0;do{x=$b[c[(c[q>>2]|0)+40>>2]&31](q,o)|0;z=c[x+740>>2]|0;A=c[x+744>>2]|0;if((z|0)!=0?(c[z+216>>2]|0)!=2:0){B=101}else{B=99}if(((B|0)==99?(B=0,(A|0)!=0):0)?(c[A+216>>2]|0)!=2:0){B=101}if((B|0)==101){B=z+204|0;C=c[B>>2]|0;if((((C&2|0)!=0?(c[z+216>>2]|0)!=2:0)?(C&4|0)==0:0)?(c[A+204>>2]&3|0)==0:0){C=A+216|0;if(!(((c[C>>2]|0)+ -4|0)>>>0<2)){c[C>>2]=1}g[A+220>>2]=0.0}C=c[A+204>>2]|0;if((((C&2|0)!=0?(c[A+216>>2]|0)!=2:0)?(C&4|0)==0:0)?(c[B>>2]&3|0)==0:0){B=z+216|0;if(!(((c[B>>2]|0)+ -4|0)>>>0<2)){c[B>>2]=1}g[z+220>>2]=0.0}if((a[w]|0)!=0?Sb[c[(c[q>>2]|0)+28>>2]&31](q,z,A)|0:0){A=c[s>>2]|0;if((A|0)==(c[v>>2]|0)?(m=(A|0)==0?1:A<<1,(A|0)<(m|0)):0){if((m|0)==0){z=0}else{c[3580]=(c[3580]|0)+1;z=vr((m<<2|3)+16|0)|0;if((z|0)==0){z=0}else{E=z+19&-16;c[E+ -4>>2]=z;z=E}A=c[s>>2]|0}if((A|0)>0){B=0;do{C=z+(B<<2)|0;if((C|0)!=0){c[C>>2]=c[(c[y>>2]|0)+(B<<2)>>2]}B=B+1|0}while((B|0)!=(A|0))}B=c[y>>2]|0;if((B|0)!=0){if((a[u]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[B+ -4>>2]|0);A=c[s>>2]|0}c[y>>2]=0}a[u]=1;c[y>>2]=z;c[v>>2]=m}z=(c[y>>2]|0)+(A<<2)|0;if((z|0)!=0){c[z>>2]=x}c[s>>2]=A+1}}o=o+1|0}while((o|0)<(n|0))}n=c[3598]|0;m=n+16|0;E=(c[m>>2]|0)+ -1|0;c[m>>2]=E;do{if((E|0)==0){if((c[n+4>>2]|0)!=0){xb(f|0,0)|0;D=c[3584]|0;E=n+8|0;g[E>>2]=+(((c[f+4>>2]|0)-(c[D+4>>2]|0)+(((c[f>>2]|0)-(c[D>>2]|0)|0)*1e6|0)-(c[n+12>>2]|0)|0)>>>0)/1.0e3+ +g[E>>2];if((c[m>>2]|0)!=0){break}n=c[3598]|0}c[3598]=c[n+20>>2]}}while(0);m=c[t>>2]|0;dr(11568);if((a[p+64|0]|0)!=0){s=c[s>>2]|0;if((s|0)>1){Do(p+24|0,0,s+ -1|0)}if((m|0)>0){t=p+16|0;r=p+36|0;n=p+48|0;q=p+52|0;o=p+56|0;v=p+60|0;u=b+16|0;x=1;y=0;p=0;do{B=c[t>>2]|0;w=c[B+(y<<3)>>2]|0;a:do{if((y|0)<(m|0)){A=w;z=1;while(1){if((A|0)!=(w|0)){break a}A=c[(c[u>>2]|0)+(c[B+(y<<3)+4>>2]<<2)>>2]|0;C=c[n>>2]|0;if((C|0)==(c[q>>2]|0)?(h=(C|0)==0?1:C<<1,(C|0)<(h|0)):0){if((h|0)==0){B=0}else{c[3580]=(c[3580]|0)+1;B=vr((h<<2|3)+16|0)|0;if((B|0)==0){B=0}else{E=B+19&-16;c[E+ -4>>2]=B;B=E}C=c[n>>2]|0}if((C|0)>0){E=0;do{D=B+(E<<2)|0;if((D|0)!=0){c[D>>2]=c[(c[o>>2]|0)+(E<<2)>>2]}E=E+1|0}while((E|0)!=(C|0))}D=c[o>>2]|0;if((D|0)!=0){if((a[v]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[D+ -4>>2]|0);C=c[n>>2]|0}c[o>>2]=0}a[v]=1;c[o>>2]=B;c[q>>2]=h}B=(c[o>>2]|0)+(C<<2)|0;if((B|0)!=0){c[B>>2]=A}c[n>>2]=C+1;E=c[A+216>>2]|0;z=z&((E|0)==2|(E|0)==5);y=y+1|0;if((y|0)>=(m|0)){break a}B=c[t>>2]|0;A=c[B+(y<<3)>>2]|0}}else{z=1}}while(0);if((p|0)<(s|0)){B=c[r>>2]|0;A=B+(p<<2)|0;C=c[A>>2]|0;D=c[(c[C+740>>2]|0)+208>>2]|0;if(!((D|0)>-1)){D=c[(c[C+744>>2]|0)+208>>2]|0}if((D|0)==(w|0)){C=p;do{C=C+1|0;if((C|0)>=(s|0)){break}D=c[B+(C<<2)>>2]|0;x=c[(c[D+740>>2]|0)+208>>2]|0;if(!((x|0)>-1)){x=c[(c[D+744>>2]|0)+208>>2]|0}}while((w|0)==(x|0));x=C;B=C-p|0}else{B=0;A=0}}else{B=0;A=0}if(!z){Tb[c[(c[l>>2]|0)+8>>2]&7](l,c[o>>2]|0,c[n>>2]|0,A,B,w)}p=(B|0)==0?p:x;z=c[n>>2]|0;if((z|0)<0){if((c[q>>2]|0)<0){w=c[o>>2]|0;if((w|0)!=0){if((a[v]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[w+ -4>>2]|0)}c[o>>2]=0}a[v]=1;c[o>>2]=0;c[q>>2]=0}do{w=(c[o>>2]|0)+(z<<2)|0;if((w|0)!=0){c[w>>2]=0}z=z+1|0}while((z|0)!=0)}c[n>>2]=0}while((y|0)<(m|0))}}else{D=Jb[c[(c[q>>2]|0)+44>>2]&63](q)|0;E=Jb[c[(c[q>>2]|0)+36>>2]&63](q)|0;Tb[c[(c[l>>2]|0)+8>>2]&7](l,c[b+16>>2]|0,c[r>>2]|0,D,E,-1)}l=c[3598]|0;h=l+16|0;E=(c[h>>2]|0)+ -1|0;c[h>>2]=E;do{if((E|0)==0){if((c[l+4>>2]|0)!=0){xb(f|0,0)|0;D=c[3584]|0;E=l+8|0;g[E>>2]=+(((c[f+4>>2]|0)-(c[D+4>>2]|0)+(((c[f>>2]|0)-(c[D>>2]|0)|0)*1e6|0)-(c[l+12>>2]|0)|0)>>>0)/1.0e3+ +g[E>>2];if((c[h>>2]|0)!=0){break}l=c[3598]|0}c[3598]=c[l+20>>2]}}while(0);Fg(c[j>>2]|0);E=c[k>>2]|0;kc[c[(c[E>>2]|0)+16>>2]&63](E,d,c[b+72>>2]|0);b=c[3598]|0;d=b+16|0;E=(c[d>>2]|0)+ -1|0;c[d>>2]=E;if((E|0)!=0){i=e;return}do{if((c[b+4>>2]|0)!=0){xb(f|0,0)|0;D=c[3584]|0;E=b+8|0;g[E>>2]=+(((c[f+4>>2]|0)-(c[D+4>>2]|0)+(((c[f>>2]|0)-(c[D>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[E>>2];if((c[d>>2]|0)==0){b=c[3598]|0;break}else{i=e;return}}}while(0);c[3598]=c[b+20>>2];i=e;return}



function Fg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;g=b+32|0;h=c[g>>2]|0;if((h|0)==0){j=0}else{j=c[b+40>>2]|0}f=b+52|0;m=c[f>>2]|0;if((m|0)==0){n=0}else{n=c[b+60>>2]|0}e=b+72|0;k=c[e>>2]|0;if((k|0)==0){l=0}else{l=c[b+80>>2]|0}o=c[b+8>>2]|0;+bc[c[(c[o>>2]|0)+12>>2]&3](o,j,h,n,m,l,k,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);l=c[g>>2]|0;if((l|0)<0){j=b+36|0;h=b+40|0;if((c[j>>2]|0)<0){m=c[h>>2]|0;k=b+44|0;if((m|0)!=0){if((a[k]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[h>>2]=0}a[k]=1;c[h>>2]=0;c[j>>2]=0}do{j=(c[h>>2]|0)+(l<<2)|0;if((j|0)!=0){c[j>>2]=0}l=l+1|0}while((l|0)!=0)}c[g>>2]=0;l=c[f>>2]|0;if((l|0)<0){h=b+56|0;g=b+60|0;if((c[h>>2]|0)<0){k=c[g>>2]|0;j=b+64|0;if((k|0)!=0){if((a[j]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0)}c[g>>2]=0}a[j]=1;c[g>>2]=0;c[h>>2]=0}do{h=(c[g>>2]|0)+(l<<2)|0;if((h|0)!=0){c[h>>2]=0}l=l+1|0}while((l|0)!=0)}c[f>>2]=0;g=c[e>>2]|0;if((g|0)>=0){c[e>>2]=0;i=d;return}h=b+76|0;f=b+80|0;if((c[h>>2]|0)<0){j=c[f>>2]|0;b=b+84|0;if((j|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0)}c[f>>2]=0}a[b]=1;c[f>>2]=0;c[h>>2]=0}do{b=(c[f>>2]|0)+(g<<2)|0;if((b|0)!=0){c[b>>2]=0}g=g+1|0}while((g|0)!=0);c[e>>2]=0;i=d;return}function Gg(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d;dr(1432);h=b+204|0;k=c[h>>2]|0;kc[c[(c[k>>2]|0)+8>>2]&63](k,b,c[b+24>>2]|0);k=b+308|0;if((c[k>>2]|0)>0){m=c[b+316>>2]|0;l=0;do{n=c[m+(l<<2)>>2]|0;o=c[n+740>>2]|0;n=c[n+744>>2]|0;if(((o|0)!=0?!((c[o+204>>2]&3|0)!=0|(n|0)==0):0)?(c[n+204>>2]&3|0)==0:0){p=c[o+208>>2]|0;o=c[n+208>>2]|0;n=c[(c[h>>2]|0)+16>>2]|0;q=n+(p<<3)|0;r=c[q>>2]|0;if((r|0)!=(p|0)){p=r;while(1){p=n+(p<<3)|0;c[q>>2]=c[p>>2];p=c[p>>2]|0;q=n+(p<<3)|0;r=c[q>>2]|0;if((p|0)==(r|0)){break}else{p=r}}}q=n+(o<<3)|0;r=c[q>>2]|0;if((r|0)!=(o|0)){o=r;while(1){o=n+(o<<3)|0;c[q>>2]=c[o>>2];o=c[o>>2]|0;q=n+(o<<3)|0;r=c[q>>2]|0;if((o|0)==(r|0)){break}else{o=r}}}if((p|0)!=(o|0)){c[n+(p<<3)>>2]=o;r=n+(o<<3)+4|0;c[r>>2]=(c[r>>2]|0)+(c[n+(p<<3)+4>>2]|0)}}l=l+1|0}while((l|0)<(c[k>>2]|0))}k=c[b+212>>2]|0;if((k|0)>0){l=c[b+220>>2]|0;m=0;do{n=c[l+(m<<2)>>2]|0;if((((a[n+20|0]|0)!=0?(j=c[n+28>>2]|0,f=c[n+32>>2]|0,(j|0)!=0):0)?!((c[j+204>>2]&3|0)!=0|(f|0)==0):0)?(c[f+204>>2]&3|0)==0:0){p=c[j+208>>2]|0;o=c[f+208>>2]|0;n=c[(c[h>>2]|0)+16>>2]|0;q=n+(p<<3)|0;r=c[q>>2]|0;if((r|0)!=(p|0)){p=r;while(1){p=n+(p<<3)|0;c[q>>2]=c[p>>2];p=c[p>>2]|0;q=n+(p<<3)|0;r=c[q>>2]|0;if((p|0)==(r|0)){break}else{p=r}}}q=n+(o<<3)|0;r=c[q>>2]|0;if((r|0)!=(o|0)){o=r;while(1){o=n+(o<<3)|0;c[q>>2]=c[o>>2];o=c[o>>2]|0;q=n+(o<<3)|0;r=c[q>>2]|0;if((o|0)==(r|0)){break}else{o=r}}}if((p|0)!=(o|0)){c[n+(p<<3)>>2]=o;r=n+(o<<3)+4|0;c[r>>2]=(c[r>>2]|0)+(c[n+(p<<3)+4>>2]|0)}}m=m+1|0}while((m|0)!=(k|0))}f=c[h>>2]|0;Hb[c[(c[f>>2]|0)+12>>2]&127](f,b);f=c[3598]|0;h=f+16|0;r=(c[h>>2]|0)+ -1|0;c[h>>2]=r;if((r|0)!=0){i=d;return}do{if((c[f+4>>2]|0)!=0){xb(e|0,0)|0;q=c[3584]|0;r=f+8|0;g[r>>2]=+(((c[e+4>>2]|0)-(c[q+4>>2]|0)+(((c[e>>2]|0)-(c[q>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3+ +g[r>>2];if((c[h>>2]|0)==0){f=c[3598]|0;break}else{i=d;return}}}while(0);c[3598]=c[f+20>>2];i=d;return}function Hg(a){a=a|0;return}function Ig(a){a=a|0;return}function Jg(d,e){d=d|0;e=+e;var f=0,h=0,j=0.0,k=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0;f=i;i=i+352|0;h=f+248|0;w=f+184|0;v=f+128|0;u=f+64|0;n=f+48|0;l=f+32|0;q=f+16|0;k=f;dr(1576);I=d+232|0;if((c[I>>2]|0)>0){Z=d+240|0;E=w+48|0;W=w+52|0;X=w+56|0;Y=d+44|0;y=d+68|0;z=d+24|0;A=h+4|0;B=h+8|0;C=h+10|0;D=h+12|0;F=h+28|0;G=h+76|0;H=h+80|0;aa=h+84|0;J=h+88|0;K=h+92|0;P=v+4|0;Q=v+28|0;R=v+44|0;S=d+56|0;U=u+16|0;V=u+32|0;T=u+48|0;L=v+8|0;M=v+12|0;s=v+16|0;N=v+20|0;O=v+24|0;x=h+4|0;_=0;do{$=c[(c[Z>>2]|0)+(_<<2)>>2]|0;ba=$+244|0;g[ba>>2]=1.0;ha=c[$+216>>2]|0;do{if(!((ha|0)==2|(ha|0)==5)?(c[$+204>>2]&3|0)==0:0){ca=$+4|0;ga=$+328|0;da=$+312|0;ea=$+316|0;fa=$+320|0;Wf(ca,+g[da>>2],+g[ea>>2],+g[fa>>2],ga,e,w);ha=$+52|0;ka=+g[E>>2]- +g[ha>>2];ja=+g[W>>2]- +g[$+56>>2];ia=+g[X>>2]- +g[$+60>>2];if((a[Y]|0)!=0?(la=+g[$+252>>2],la=la*la,la!=0.0&la<ka*ka+ja*ja+ia*ia):0){dr(1600);if((c[(c[$+192>>2]|0)+4>>2]|0)<20){c[366]=(c[366]|0)+1;na=c[y>>2]|0;na=Jb[c[(c[na>>2]|0)+36>>2]&63](na)|0;ma=c[z>>2]|0;g[A>>2]=1.0;b[B>>1]=1;b[C>>1]=-1;c[h>>2]=2072;c[D+0>>2]=c[ha+0>>2];c[D+4>>2]=c[ha+4>>2];c[D+8>>2]=c[ha+8>>2];c[D+12>>2]=c[ha+12>>2];c[F+0>>2]=c[E+0>>2];c[F+4>>2]=c[E+4>>2];c[F+8>>2]=c[E+8>>2];c[F+12>>2]=c[E+12>>2];c[G>>2]=0;c[h>>2]=1864;c[H>>2]=$;g[aa>>2]=0.0;c[J>>2]=na;c[K>>2]=ma;ia=+g[$+248>>2];c[L>>2]=0;g[M>>2]=1.0;g[s>>2]=1.0;g[N>>2]=1.0;g[O>>2]=0.0;c[v>>2]=11632;c[P>>2]=8;g[Q>>2]=ia;g[R>>2]=ia;g[aa>>2]=+g[S>>2];ha=c[$+188>>2]|0;b[B>>1]=b[ha+4>>1]|0;b[C>>1]=b[ha+6>>1]|0;c[T+0>>2]=c[E+0>>2];c[T+4>>2]=c[E+4>>2];c[T+8>>2]=c[E+8>>2];c[T+12>>2]=c[E+12>>2];c[u+0>>2]=c[ca+0>>2];c[u+4>>2]=c[ca+4>>2];c[u+8>>2]=c[ca+8>>2];c[u+12>>2]=c[ca+12>>2];ha=$+20|0;c[U+0>>2]=c[ha+0>>2];c[U+4>>2]=c[ha+4>>2];c[U+8>>2]=c[ha+8>>2];c[U+12>>2]=c[ha+12>>2];ha=$+36|0;c[V+0>>2]=c[ha+0>>2];c[V+4>>2]=c[ha+4>>2];c[V+8>>2]=c[ha+8>>2];c[V+12>>2]=c[ha+12>>2];ok(d,v,ca,u,h);ia=+g[A>>2];if(ia<1.0){g[ba>>2]=ia;Wf(ca,+g[da>>2],+g[ea>>2],+g[fa>>2],ga,ia*e,w);g[ba>>2]=0.0;Bh($,w);ba=4}else{ba=0}if((ba|0)==0){t=11}}else{t=11}if((t|0)==11){t=0;ba=0}da=c[3598]|0;ca=da+16|0;na=(c[ca>>2]|0)+ -1|0;c[ca>>2]=na;do{if((na|0)==0){if((c[da+4>>2]|0)!=0){xb(h|0,0)|0;ma=c[3584]|0;na=da+8|0;g[na>>2]=+(((c[x>>2]|0)-(c[ma+4>>2]|0)+(((c[h>>2]|0)-(c[ma>>2]|0)|0)*1e6|0)-(c[da+12>>2]|0)|0)>>>0)/1.0e3+ +g[na>>2];if((c[ca>>2]|0)!=0){break}da=c[3598]|0}c[3598]=c[da+20>>2]}}while(0);if((ba|0)==4){break}}Bh($,w)}}while(0);_=_+1|0}while((_|0)<(c[I>>2]|0))}do{if((a[d+275|0]|0)!=0){dr(1624);s=d+308|0;J=c[s>>2]|0;if((J|0)>0){d=d+316|0;w=n+4|0;x=n+8|0;E=n+12|0;y=l+4|0;z=l+8|0;A=l+12|0;B=q+4|0;C=q+8|0;D=q+12|0;t=k+4|0;u=k+8|0;v=k+12|0;F=0;do{G=c[(c[d>>2]|0)+(F<<2)>>2]|0;Q=c[G+740>>2]|0;if((c[Q+236>>2]&2|0)==0){Q=0}H=c[G+744>>2]|0;if((c[H+236>>2]&2|0)==0){H=0}I=G+748|0;S=c[I>>2]|0;if((S|0)>0){N=Q+52|0;L=Q+56|0;J=Q+60|0;P=H+52|0;O=H+56|0;K=H+60|0;M=(H|0)==0;if((Q|0)==0){Q=H+228|0;R=0;do{e=+g[57]*+g[Q>>2];if((e>0.0?(j=+g[G+(R*184|0)+124>>2],j!=0.0):0)?(r=e*j*+g[G+(R*184|0)+68>>2],p=e*j*+g[G+(R*184|0)+72>>2],o=e*j*+g[G+(R*184|0)+76>>2],g[n>>2]=-r,g[w>>2]=-p,g[x>>2]=-o,g[E>>2]=0.0,la=+g[G+(R*184|0)+56>>2]- +g[L>>2],ka=+g[G+(R*184|0)+60>>2]- +g[J>>2],g[l>>2]=+g[G+(R*184|0)+52>>2]- +g[N>>2],g[y>>2]=la,g[z>>2]=ka,g[A>>2]=0.0,ka=+g[G+(R*184|0)+40>>2]- +g[O>>2],la=+g[G+(R*184|0)+44>>2]- +g[K>>2],g[q>>2]=+g[G+(R*184|0)+36>>2]- +g[P>>2],g[B>>2]=ka,g[C>>2]=la,g[D>>2]=0.0,!M):0){g[k>>2]=r;g[t>>2]=p;g[u>>2]=o;g[v>>2]=0.0;Kg(H,k,q);S=c[I>>2]|0}R=R+1|0}while((R|0)<(S|0))}else{R=Q+228|0;S=H+228|0;T=0;do{e=+g[R>>2]*+g[S>>2];if((e>0.0?(m=+g[G+(T*184|0)+124>>2],m!=0.0):0)?(ka=-(e*m*+g[G+(T*184|0)+72>>2]),la=-(e*m*+g[G+(T*184|0)+76>>2]),g[n>>2]=-(e*m*+g[G+(T*184|0)+68>>2]),g[w>>2]=ka,g[x>>2]=la,g[E>>2]=0.0,la=+g[G+(T*184|0)+56>>2]- +g[L>>2],ka=+g[G+(T*184|0)+60>>2]- +g[J>>2],g[l>>2]=+g[G+(T*184|0)+52>>2]- +g[N>>2],g[y>>2]=la,g[z>>2]=ka,g[A>>2]=0.0,ka=+g[G+(T*184|0)+40>>2]- +g[O>>2],la=+g[G+(T*184|0)+44>>2]- +g[K>>2],g[q>>2]=+g[G+(T*184|0)+36>>2]- +g[P>>2],g[B>>2]=ka,g[C>>2]=la,g[D>>2]=0.0,Kg(Q,n,l),!M):0){ka=-+g[w>>2];la=-+g[x>>2];g[k>>2]=-+g[n>>2];g[t>>2]=ka;g[u>>2]=la;g[v>>2]=0.0;Kg(H,k,q)}T=T+1|0}while((T|0)<(c[I>>2]|0))}J=c[s>>2]|0}F=F+1|0}while((F|0)<(J|0))}l=c[3598]|0;k=l+16|0;na=(c[k>>2]|0)+ -1|0;c[k>>2]=na;if((na|0)==0){if((c[l+4>>2]|0)!=0){xb(h|0,0)|0;ma=c[3584]|0;na=l+8|0;g[na>>2]=+(((c[h+4>>2]|0)-(c[ma+4>>2]|0)+(((c[h>>2]|0)-(c[ma>>2]|0)|0)*1e6|0)-(c[l+12>>2]|0)|0)>>>0)/1.0e3+ +g[na>>2];if((c[k>>2]|0)!=0){break}l=c[3598]|0}c[3598]=c[l+20>>2]}}}while(0);k=c[3598]|0;l=k+16|0;na=(c[l>>2]|0)+ -1|0;c[l>>2]=na;if((na|0)!=0){i=f;return}do{if((c[k+4>>2]|0)!=0){xb(h|0,0)|0;ma=c[3584]|0;na=k+8|0;g[na>>2]=+(((c[h+4>>2]|0)-(c[ma+4>>2]|0)+(((c[h>>2]|0)-(c[ma>>2]|0)|0)*1e6|0)-(c[k+12>>2]|0)|0)>>>0)/1.0e3+ +g[na>>2];if((c[l>>2]|0)==0){k=c[3598]|0;break}else{i=f;return}}}while(0);c[3598]=c[k+20>>2];i=f;return}function Kg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0;d=i;e=+g[a+344>>2];if(!(e!=0.0)){i=d;return}f=+g[a+348>>2];o=b+4|0;l=+g[a+352>>2];n=b+8|0;j=+g[a+356>>2];m=e*+g[o>>2]*l;h=e*+g[n>>2]*j;p=a+312|0;g[p>>2]=e*+g[b>>2]*f+ +g[p>>2];p=a+316|0;g[p>>2]=m+ +g[p>>2];p=a+320|0;g[p>>2]=h+ +g[p>>2];f=+g[b>>2]*f;l=+g[o>>2]*l;j=+g[n>>2]*j;h=+g[c+4>>2];m=+g[c+8>>2];k=h*j-l*m;e=+g[c>>2];j=f*m-j*e;h=l*e-f*h;f=(k*+g[a+280>>2]+j*+g[a+284>>2]+h*+g[a+288>>2])*+g[a+548>>2];e=(k*+g[a+296>>2]+j*+g[a+300>>2]+h*+g[a+304>>2])*+g[a+552>>2];c=a+328|0;g[c>>2]=(+g[a+264>>2]*k+ +g[a+268>>2]*j+h*+g[a+272>>2])*+g[a+544>>2]+ +g[c>>2];c=a+332|0;g[c>>2]=f+ +g[c>>2];c=a+336|0;g[c>>2]=e+ +g[c>>2];i=d;return}function Lg(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;e=i;i=i+16|0;f=e;dr(1664);h=b+232|0;l=c[h>>2]|0;if((l|0)>0){b=b+240|0;j=0;do{k=c[(c[b>>2]|0)+(j<<2)>>2]|0;if((c[k+204>>2]&3|0)==0){s=+g[k+444>>2];u=+S(+(1.0-s),+d);q=k+312|0;v=u*+g[q>>2];g[q>>2]=v;p=k+316|0;w=u*+g[p>>2];g[p>>2]=w;r=k+320|0;u=u*+g[r>>2];g[r>>2]=u;o=+g[k+448>>2];y=+S(+(1.0-o),+d);n=k+328|0;t=y*+g[n>>2];g[n>>2]=t;m=k+332|0;x=y*+g[m>>2];g[m>>2]=x;l=k+336|0;y=y*+g[l>>2];g[l>>2]=y;do{if((a[k+452|0]|0)!=0){if(y*y+(t*t+x*x)<+g[k+464>>2]?v*v+w*w+u*u<+g[k+460>>2]:0){z=+g[k+456>>2];t=t*z;g[n>>2]=t;x=z*x;g[m>>2]=x;y=z*y;g[l>>2]=y;v=z*v;g[q>>2]=v;w=z*w;g[p>>2]=w;u=z*u;g[r>>2]=u}z=+R(+(v*v+w*w+u*u));do{if(z<s){if(z>.004999999888241291){z=1.0/z;v=v-v*z*.004999999888241291;g[q>>2]=v;w=w-w*z*.004999999888241291;g[p>>2]=w;u=u-u*z*.004999999888241291;g[r>>2]=u;break}else{c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;v=0.0;w=0.0;u=0.0;break}}}while(0);s=+R(+(t*t+x*x+y*y));if(s<o){if(s>.004999999888241291){z=1.0/s;g[n>>2]=t-t*z*.004999999888241291;g[m>>2]=x-x*z*.004999999888241291;g[l>>2]=y-y*z*.004999999888241291;break}else{c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;break}}}}while(0);Wf(k+4|0,v,w,u,k+328|0,d,k+68|0);l=c[h>>2]|0}j=j+1|0}while((j|0)<(l|0))}h=c[3598]|0;b=h+16|0;r=(c[b>>2]|0)+ -1|0;c[b>>2]=r;if((r|0)!=0){i=e;return}do{if((c[h+4>>2]|0)!=0){xb(f|0,0)|0;q=c[3584]|0;r=h+8|0;g[r>>2]=+(((c[f+4>>2]|0)-(c[q+4>>2]|0)+(((c[f>>2]|0)-(c[q>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[r>>2];if((c[b>>2]|0)==0){h=c[3598]|0;break}else{i=e;return}}}while(0);c[3598]=c[h+20>>2];i=e;return}function Mg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=i;e=b+273|0;f=b+200|0;if((a[e]|0)!=0?(h=c[f>>2]|0,(h|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}a[e]=0;c[f>>2]=d;c[(c[b+196>>2]|0)+8>>2]=d;i=g;return}function Ng(a){a=a|0;return c[a+200>>2]|0}function Og(a){a=a|0;return c[a+212>>2]|0}function Pg(a,b){a=a|0;b=b|0;return c[(c[a+220>>2]|0)+(b<<2)>>2]|0}function Qg(a,b){a=a|0;b=b|0;return c[(c[a+220>>2]|0)+(b<<2)>>2]|0}function Rg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0;d=i;Fb[c[(c[b>>2]|0)+32>>2]&255](b);j=Sb[c[(c[b>>2]|0)+16>>2]&31](b,104,1)|0;f=c[j+8>>2]|0;e=f+0|0;h=e+104|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(h|0));g[f+88>>2]=+g[a+248>>2];g[f+92>>2]=+g[a+252>>2];g[f+96>>2]=+g[a+256>>2];g[f+100>>2]=+g[a+260>>2];g[f>>2]=+g[a+92>>2];g[f+4>>2]=+g[a+96>>2];g[f+8>>2]=+g[a+100>>2];g[f+12>>2]=+g[a+104>>2];g[f+16>>2]=+g[a+108>>2];g[f+20>>2]=+g[a+116>>2];g[f+24>>2]=+g[a+120>>2];g[f+28>>2]=+g[a+124>>2];g[f+32>>2]=+g[a+128>>2];g[f+36>>2]=+g[a+132>>2];g[f+40>>2]=+g[a+140>>2];g[f+44>>2]=+g[a+144>>2];g[f+48>>2]=+g[a+148>>2];g[f+52>>2]=+g[a+152>>2];g[f+56>>2]=+g[a+168>>2];g[f+60>>2]=+g[a+172>>2];c[f+64>>2]=c[a+112>>2];c[f+68>>2]=c[a+156>>2];c[f+72>>2]=c[a+160>>2];c[f+76>>2]=c[a+164>>2];c[f+80>>2]=c[a+136>>2];Db[c[(c[b>>2]|0)+20>>2]&31](b,j,1696,1145853764,f);e=a+8|0;j=c[e>>2]|0;if((j|0)>0){f=a+16|0;h=0;do{k=c[(c[f>>2]|0)+(h<<2)>>2]|0;if((c[k+236>>2]&2|0)!=0){l=Jb[c[(c[k>>2]|0)+16>>2]&63](k)|0;l=Sb[c[(c[b>>2]|0)+16>>2]&31](b,l,1)|0;j=Sb[c[(c[k>>2]|0)+20>>2]&31](k,c[l+8>>2]|0,b)|0;Db[c[(c[b>>2]|0)+20>>2]&31](b,l,j,1497645650,k);j=c[e>>2]|0}h=h+1|0}while((h|0)<(j|0))}f=a+212|0;if((c[f>>2]|0)<=0){tk(a,b);l=c[b>>2]|0;l=l+36|0;l=c[l>>2]|0;Fb[l&255](b);i=d;return}h=a+220|0;e=0;do{l=c[(c[h>>2]|0)+(e<<2)>>2]|0;j=Jb[c[(c[l>>2]|0)+36>>2]&63](l)|0;j=Sb[c[(c[b>>2]|0)+16>>2]&31](b,j,1)|0;k=Sb[c[(c[l>>2]|0)+40>>2]&31](l,c[j+8>>2]|0,b)|0;Db[c[(c[b>>2]|0)+20>>2]&31](b,j,k,1397641027,l);e=e+1|0}while((e|0)<(c[f>>2]|0));tk(a,b);l=c[b>>2]|0;l=l+36|0;l=c[l>>2]|0;Fb[l&255](b);i=d;return}function Sg(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function Tg(a){a=a|0;return c[a+72>>2]|0}function Ug(a){a=a|0;return 2}function Vg(a,b){a=a|0;b=b|0;return}function Wg(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;dr(1368);f=a+280|0;if((c[f>>2]|0)>0){h=a+288|0;j=0;do{k=c[(c[h>>2]|0)+(j<<2)>>2]|0;mc[c[(c[k>>2]|0)+8>>2]&1](k,a,b);j=j+1|0}while((j|0)<(c[f>>2]|0))}a=c[3598]|0;f=a+16|0;k=(c[f>>2]|0)+ -1|0;c[f>>2]=k;if((k|0)!=0){i=d;return}do{if((c[a+4>>2]|0)!=0){xb(e|0,0)|0;j=c[3584]|0;k=a+8|0;g[k>>2]=+(((c[e+4>>2]|0)-(c[j+4>>2]|0)+(((c[e>>2]|0)-(c[j>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3+ +g[k>>2];if((c[f>>2]|0)==0){a=c[3598]|0;break}else{i=d;return}}}while(0);c[3598]=c[a+20>>2];i=d;return}function Xg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=a+12|0;while(1){g=c[f>>2]|0;h=c[g+(((b+d|0)/2|0)<<2)>>2]|0;j=h+28|0;h=h+32|0;m=b;n=d;while(1){k=c[(c[j>>2]|0)+208>>2]|0;o=(k|0)>-1;if(o){while(1){l=c[g+(m<<2)>>2]|0;p=c[(c[l+28>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[l+32>>2]|0)+208>>2]|0}if((p|0)<(k|0)){m=m+1|0}else{break}}}else{p=c[(c[h>>2]|0)+208>>2]|0;while(1){l=c[g+(m<<2)>>2]|0;q=c[(c[l+28>>2]|0)+208>>2]|0;if(!((q|0)>-1)){q=c[(c[l+32>>2]|0)+208>>2]|0}if((q|0)<(p|0)){m=m+1|0}else{break}}}if(o){while(1){o=c[g+(n<<2)>>2]|0;p=c[(c[o+28>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[o+32>>2]|0)+208>>2]|0}if((k|0)<(p|0)){n=n+ -1|0}else{break}}}else{k=c[(c[h>>2]|0)+208>>2]|0;while(1){o=c[g+(n<<2)>>2]|0;p=c[(c[o+28>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[o+32>>2]|0)+208>>2]|0}if((k|0)<(p|0)){n=n+ -1|0}else{break}}}if((m|0)<=(n|0)){c[g+(m<<2)>>2]=o;c[(c[f>>2]|0)+(n<<2)>>2]=l;m=m+1|0;n=n+ -1|0}if((m|0)>(n|0)){break}g=c[f>>2]|0}if((n|0)>(b|0)){Xg(a,b,n)}if((m|0)<(d|0)){b=m}else{break}}i=e;return}function Yg(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Zg(a){a=a|0;return a+12|0}function _g(a){a=a|0;return 1848}function $g(a,b){a=a|0;b=b|0;g[a>>2]=1.0;g[a+4>>2]=1.0;g[a+8>>2]=1.0;g[a+12>>2]=0.0;return}function ah(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function bh(a){a=a|0;return+(+g[a+28>>2]*+g[a+12>>2])}function ch(a){a=a|0;return 52}function dh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=$b[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=$b[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Hb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];i=e;return 1816}function eh(a){a=a|0;return 0}function fh(a,b,c){a=a|0;b=b|0;c=c|0;return}function gh(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function hh(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;e=i;g=c[d>>2]|0;f=c[a+80>>2]|0;if((g|0)==(f|0)){d=0;i=e;return d|0}if((b[a+10>>1]&b[d+4>>1])<<16>>16==0){d=0;i=e;return d|0}if((b[d+6>>1]&b[a+8>>1])<<16>>16==0){d=0;i=e;return d|0}d=c[a+92>>2]|0;d=Sb[c[(c[d>>2]|0)+28>>2]&31](d,f,g)|0;i=e;return d|0}function ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;e=i;f=c[b>>2]|0;if((f|0)==(c[a+80>>2]|0)){m=1.0;i=e;return+m}if((c[f+204>>2]&4|0)!=0){m=1.0;i=e;return+m}h=b+8|0;j=b+12|0;k=b+16|0;if((+g[a+28>>2]- +g[a+12>>2])*+g[h>>2]+(+g[a+32>>2]- +g[a+16>>2])*+g[j>>2]+(+g[a+36>>2]- +g[a+20>>2])*+g[k>>2]>=-+g[a+84>>2]){m=1.0;i=e;return+m}l=b+40|0;g[a+4>>2]=+g[l>>2];c[a+76>>2]=f;if(d){k=a+44|0;c[k+0>>2]=c[h+0>>2];c[k+4>>2]=c[h+4>>2];c[k+8>>2]=c[h+8>>2];c[k+12>>2]=c[h+12>>2]}else{q=+g[b+8>>2];p=+g[j>>2];o=+g[k>>2];n=q*+g[f+20>>2]+p*+g[f+24>>2]+o*+g[f+28>>2];m=q*+g[f+36>>2]+p*+g[f+40>>2]+o*+g[f+44>>2];g[a+44>>2]=+g[f+4>>2]*q+ +g[f+8>>2]*p+ +g[f+12>>2]*o;g[a+48>>2]=n;g[a+52>>2]=m;g[a+56>>2]=0.0}k=a+60|0;j=b+24|0;c[k+0>>2]=c[j+0>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2];c[k+12>>2]=c[j+12>>2];q=+g[l>>2];i=e;return+q}function jh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;e=i;f=b+40|0;g[a+4>>2]=+g[f>>2];h=c[b>>2]|0;c[a+76>>2]=h;if(d){d=a+44|0;h=b+8|0;c[d+0>>2]=c[h+0>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];d=a+60|0;a=b+24|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];j=+g[f>>2];i=e;return+j}else{n=+g[b+8>>2];m=+g[b+12>>2];l=+g[b+16>>2];k=n*+g[h+20>>2]+m*+g[h+24>>2]+l*+g[h+28>>2];j=n*+g[h+36>>2]+m*+g[h+40>>2]+l*+g[h+44>>2];g[a+44>>2]=+g[h+4>>2]*n+ +g[h+8>>2]*m+ +g[h+12>>2]*l;g[a+48>>2]=k;g[a+52>>2]=j;g[a+56>>2]=0.0;d=a+60|0;a=b+24|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];j=+g[f>>2];i=e;return+j}return 0.0}function kh(a,c){a=a|0;c=c|0;var d=0;d=i;if((b[a+10>>1]&b[c+4>>1])<<16>>16==0){a=0;i=d;return a|0}a=(b[c+6>>1]&b[a+8>>1])<<16>>16!=0;i=d;return a|0}function lh(a){a=a|0;return}function mh(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function nh(a){a=a|0;var b=0;b=i;qh(a);i=b;return}function oh(a){a=a|0;var b=0;b=i;qh(a);if((a|0)!=0){wr(a)}i=b;return}function ph(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;if((h|0)<0){w=c[b+8>>2]|0;+bc[c[(c[w>>2]|0)+12>>2]&3](w,d,e,f,g,c[b+12>>2]|0,c[b+16>>2]|0,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);i=j;return}m=c[b+16>>2]|0;a:do{if((m|0)>0){l=c[b+12>>2]|0;o=0;while(1){k=l+(o<<2)|0;p=c[k>>2]|0;n=c[(c[p+28>>2]|0)+208>>2]|0;if((n|0)>-1){p=n}else{p=c[(c[p+32>>2]|0)+208>>2]|0}n=o+1|0;if((p|0)==(h|0)){break a}if((n|0)<(m|0)){o=n}else{o=n;k=0;break}}}else{o=0;k=0}}while(0);if((o|0)<(m|0)){n=c[b+12>>2]|0;l=0;do{q=c[n+(o<<2)>>2]|0;p=c[(c[q+28>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[q+32>>2]|0)+208>>2]|0}l=((p|0)==(h|0))+l|0;o=o+1|0}while((o|0)<(m|0))}else{l=0}h=b+4|0;m=c[h>>2]|0;if((c[m+72>>2]|0)<2){w=c[b+8>>2]|0;+bc[c[(c[w>>2]|0)+12>>2]&3](w,d,e,f,g,k,l,m,c[b+20>>2]|0,c[b+24>>2]|0);i=j;return}if((e|0)>0){m=b+32|0;o=b+36|0;q=b+40|0;n=b+44|0;t=c[m>>2]|0;u=c[o>>2]|0;r=0;while(1){p=d+(r<<2)|0;if((t|0)==(u|0)){s=(u|0)==0?1:u<<1;if((u|0)<(s|0)){if((s|0)==0){t=0}else{c[3580]=(c[3580]|0)+1;t=vr((s<<2|3)+16|0)|0;if((t|0)==0){t=0}else{w=t+19&-16;c[w+ -4>>2]=t;t=w}u=c[m>>2]|0}if((u|0)>0){v=0;do{w=t+(v<<2)|0;if((w|0)!=0){c[w>>2]=c[(c[q>>2]|0)+(v<<2)>>2]}v=v+1|0}while((v|0)!=(u|0))}v=c[q>>2]|0;if((v|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[v+ -4>>2]|0);u=c[m>>2]|0}c[q>>2]=0}a[n]=1;c[q>>2]=t;c[o>>2]=s;t=u}else{t=u;s=u}}else{s=u}u=(c[q>>2]|0)+(t<<2)|0;if((u|0)!=0){c[u>>2]=c[p>>2]}t=t+1|0;c[m>>2]=t;r=r+1|0;if((r|0)==(e|0)){break}else{u=s}}}if((g|0)>0){m=b+52|0;e=b+56|0;p=b+60|0;d=b+64|0;r=c[m>>2]|0;s=c[e>>2]|0;n=0;while(1){o=f+(n<<2)|0;if((r|0)==(s|0)){q=(s|0)==0?1:s<<1;if((s|0)<(q|0)){if((q|0)==0){r=0}else{c[3580]=(c[3580]|0)+1;r=vr((q<<2|3)+16|0)|0;if((r|0)==0){r=0}else{w=r+19&-16;c[w+ -4>>2]=r;r=w}s=c[m>>2]|0}if((s|0)>0){t=0;do{u=r+(t<<2)|0;if((u|0)!=0){c[u>>2]=c[(c[p>>2]|0)+(t<<2)>>2]}t=t+1|0}while((t|0)!=(s|0))}t=c[p>>2]|0;if((t|0)!=0){if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[t+ -4>>2]|0);s=c[m>>2]|0}c[p>>2]=0}a[d]=1;c[p>>2]=r;c[e>>2]=q;r=s}else{r=s;q=s}}else{q=s}s=(c[p>>2]|0)+(r<<2)|0;if((s|0)!=0){c[s>>2]=c[o>>2]}r=r+1|0;c[m>>2]=r;n=n+1|0;if((n|0)==(g|0)){break}else{s=q}}}d=b+72|0;if((l|0)>0){f=b+76|0;e=b+80|0;g=b+84|0;p=c[d>>2]|0;q=c[f>>2]|0;m=0;while(1){n=k+(m<<2)|0;if((p|0)==(q|0)){o=(q|0)==0?1:q<<1;if((q|0)<(o|0)){if((o|0)==0){p=0}else{c[3580]=(c[3580]|0)+1;p=vr((o<<2|3)+16|0)|0;if((p|0)==0){p=0}else{w=p+19&-16;c[w+ -4>>2]=p;p=w}q=c[d>>2]|0}if((q|0)>0){s=0;do{r=p+(s<<2)|0;if((r|0)!=0){c[r>>2]=c[(c[e>>2]|0)+(s<<2)>>2]}s=s+1|0}while((s|0)!=(q|0))}r=c[e>>2]|0;if((r|0)!=0){if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[r+ -4>>2]|0);q=c[d>>2]|0}c[e>>2]=0}a[g]=1;c[e>>2]=p;c[f>>2]=o;p=q}else{p=q;o=q}}else{o=q}q=(c[e>>2]|0)+(p<<2)|0;if((q|0)!=0){c[q>>2]=c[n>>2]}p=p+1|0;c[d>>2]=p;m=m+1|0;if((m|0)==(l|0)){break}else{q=o}}}else{p=c[d>>2]|0}if(((c[b+52>>2]|0)+p|0)<=(c[(c[h>>2]|0)+72>>2]|0)){i=j;return}Fg(b);i=j;return}function qh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=2096;g=b+72|0;f=b+80|0;h=c[f>>2]|0;e=b+84|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+76>>2]=0;f=b+52|0;h=b+60|0;g=c[h>>2]|0;e=b+64|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[f>>2]=0;c[b+56>>2]=0;f=b+32|0;g=b+40|0;e=c[g>>2]|0;h=b+44|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+36|0;c[h>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+36|0;c[h>>2]=0;i=d;return}function rh(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0;z=i;i=i+144|0;d=z+128|0;f=z+80|0;u=z+32|0;J=z+16|0;Q=z;g[a+36>>2]=0.0;e=a+28|0;h=f+4|0;j=f+8|0;k=f+12|0;l=f+16|0;m=f+20|0;n=f+24|0;o=f+28|0;p=f+32|0;q=f+36|0;r=f+40|0;s=f+44|0;t=a+32|0;v=u+4|0;w=u+8|0;x=u+12|0;y=u+16|0;b=u+20|0;A=u+24|0;B=u+28|0;C=u+32|0;D=u+36|0;E=u+40|0;F=u+44|0;G=a+300|0;H=a+304|0;I=a+308|0;K=J+4|0;L=J+8|0;M=J+12|0;N=a+316|0;O=a+320|0;P=a+324|0;R=Q+4|0;S=Q+8|0;T=Q+12|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;U=0;do{V=d+(U<<2)|0;g[V>>2]=1.0;X=c[e>>2]|0;ta=+g[X+4>>2];g[f>>2]=ta;pa=+g[X+20>>2];g[h>>2]=pa;Y=+g[X+36>>2];g[j>>2]=Y;g[k>>2]=0.0;sa=+g[X+8>>2];g[l>>2]=sa;oa=+g[X+24>>2];g[m>>2]=oa;ha=+g[X+40>>2];g[n>>2]=ha;g[o>>2]=0.0;ra=+g[X+12>>2];g[p>>2]=ra;na=+g[X+28>>2];g[q>>2]=na;aa=+g[X+44>>2];g[r>>2]=aa;g[s>>2]=0.0;W=c[t>>2]|0;ka=+g[W+4>>2];g[u>>2]=ka;ga=+g[W+20>>2];g[v>>2]=ga;ba=+g[W+36>>2];g[w>>2]=ba;g[x>>2]=0.0;ja=+g[W+8>>2];g[y>>2]=ja;fa=+g[W+24>>2];g[b>>2]=fa;$=+g[W+40>>2];g[A>>2]=$;g[B>>2]=0.0;ia=+g[W+12>>2];g[C>>2]=ia;ea=+g[W+28>>2];g[D>>2]=ea;Z=+g[W+44>>2];g[E>>2]=Z;g[F>>2]=0.0;la=+g[G>>2];da=+g[H>>2];_=+g[I>>2];qa=+g[X+52>>2];ma=+g[X+56>>2];ca=+g[X+60>>2];g[J>>2]=la*ta+da*sa+_*ra+qa-qa;g[K>>2]=la*pa+da*oa+_*na+ma-ma;g[L>>2]=la*Y+da*ha+_*aa+ca-ca;g[M>>2]=0.0;ca=+g[N>>2];aa=+g[O>>2];_=+g[P>>2];ha=+g[W+52>>2];da=+g[W+56>>2];Y=+g[W+60>>2];g[Q>>2]=ca*ka+aa*ja+_*ia+ha-ha;g[R>>2]=ca*ga+aa*fa+_*ea+da-da;g[S>>2]=ca*ba+aa*$+_*Z+Y-Y;g[T>>2]=0.0;X=c[e>>2]|0;eg(a+(U*84|0)+48|0,f,u,J,Q,d,X+396|0,+g[X+344>>2],W+396|0,+g[W+344>>2]);g[V>>2]=0.0;U=U+1|0}while((U|0)!=3);i=z;return}function sh(b,d){b=b|0;d=d|0;var e=0;e=i;if((a[b+344|0]|0)==0){c[d>>2]=3;c[d+4>>2]=3;i=e;return}else{c[d>>2]=0;c[d+4>>2]=0;i=e;return}}function th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0;d=i;j=c[a+28>>2]|0;k=c[a+32>>2]|0;f=c[b+8>>2]|0;g[f>>2]=1.0;e=b+24|0;x=c[e>>2]|0;w=x+1|0;g[f+(w<<2)>>2]=1.0;t=x<<1;r=t+2|0;g[f+(r<<2)>>2]=1.0;y=+g[a+300>>2];z=+g[a+304>>2];l=+g[a+308>>2];o=+g[j+4>>2]*y+ +g[j+8>>2]*z+ +g[j+12>>2]*l;n=y*+g[j+20>>2]+z*+g[j+24>>2]+l*+g[j+28>>2];l=y*+g[j+36>>2]+z*+g[j+40>>2]+l*+g[j+44>>2];f=c[b+12>>2]|0;g[f>>2]=0.0;g[f+4>>2]=l;g[f+8>>2]=-n;g[f+12>>2]=0.0;g[f+(x<<2)>>2]=-l;g[f+(w<<2)>>2]=0.0;v=x+2|0;g[f+(v<<2)>>2]=o;u=x+3|0;g[f+(u<<2)>>2]=0.0;g[f+(t<<2)>>2]=n;s=t|1;g[f+(s<<2)>>2]=-o;g[f+(r<<2)>>2]=0.0;h=t+3|0;g[f+(h<<2)>>2]=0.0;f=c[b+16>>2]|0;g[f>>2]=-1.0;g[f+(w<<2)>>2]=-1.0;g[f+(r<<2)>>2]=-1.0;z=+g[a+316>>2];y=+g[a+320>>2];m=+g[a+324>>2];p=+g[k+4>>2]*z+ +g[k+8>>2]*y+ +g[k+12>>2]*m;q=z*+g[k+20>>2]+y*+g[k+24>>2]+m*+g[k+28>>2];m=z*+g[k+36>>2]+y*+g[k+40>>2]+m*+g[k+44>>2];f=c[b+20>>2]|0;g[f>>2]=0.0;g[f+4>>2]=-m;g[f+8>>2]=q;g[f+12>>2]=0.0;g[f+(x<<2)>>2]=m;g[f+(w<<2)>>2]=0.0;g[f+(v<<2)>>2]=-p;g[f+(u<<2)>>2]=0.0;g[f+(t<<2)>>2]=-q;g[f+(s<<2)>>2]=p;g[f+(r<<2)>>2]=0.0;g[f+(h<<2)>>2]=0.0;h=c[a+332>>2]|0;z=+g[((h&1|0)==0?b+4|0:a+336|0)>>2]*+g[b>>2];e=c[e>>2]|0;x=c[b+28>>2]|0;g[x>>2]=z*(p+ +g[k+52>>2]-o- +g[j+52>>2]);g[x+(e<<2)>>2]=z*(q+ +g[k+56>>2]-n- +g[j+56>>2]);f=e<<1;g[x+(f<<2)>>2]=z*(m+ +g[k+60>>2]-l- +g[j+60>>2]);if((h&2|0)!=0){w=a+340|0;x=c[b+32>>2]|0;g[x>>2]=+g[w>>2];g[x+(e<<2)>>2]=+g[w>>2];g[x+(f<<2)>>2]=+g[w>>2]}k=a+356|0;m=+g[k>>2];l=-m;h=b+36|0;j=b+40|0;if(m>0.0){g[c[h>>2]>>2]=l;g[c[j>>2]>>2]=m;n=+g[k>>2]}else{n=m}if(n>0.0){g[(c[h>>2]|0)+(e<<2)>>2]=l;g[(c[j>>2]|0)+(e<<2)>>2]=m;n=+g[k>>2]}if(!(n>0.0)){x=a+352|0;z=+g[x>>2];x=b+52|0;g[x>>2]=z;i=d;return}g[(c[h>>2]|0)+(f<<2)>>2]=l;g[(c[j>>2]|0)+(f<<2)>>2]=m;x=a+352|0;z=+g[x>>2];x=b+52|0;g[x>>2]=z;i=d;return}function uh(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0;f=i;do{if((e|0)==-1){if((b|0)==4|(b|0)==3){g[a+340>>2]=d;e=a+332|0;c[e>>2]=c[e>>2]|2;break}else if((b|0)==2|(b|0)==1){g[a+336>>2]=d;e=a+332|0;c[e>>2]=c[e>>2]|1;break}else{break}}}while(0);i=f;return}function vh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0;d=i;do{if((c|0)==-1){if((b|0)==4|(b|0)==3){e=+g[a+340>>2];break}else if((b|0)==2|(b|0)==1){e=+g[a+336>>2];break}else{e=3.4028234663852886e+38;break}}else{e=3.4028234663852886e+38}}while(0);i=d;return+e}function wh(a){a=a|0;return}function xh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function yh(a){a=a|0;return 84}function zh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;fi(a,b,c)|0;g[b+52>>2]=+g[a+300>>2];g[b+56>>2]=+g[a+304>>2];g[b+60>>2]=+g[a+308>>2];g[b+64>>2]=+g[a+312>>2];g[b+68>>2]=+g[a+316>>2];g[b+72>>2]=+g[a+320>>2];g[b+76>>2]=+g[a+324>>2];g[b+80>>2]=+g[a+328>>2];i=d;return 2320}function Ah(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0;e=i;c[b+236>>2]=2;j=b+312|0;f=b+544|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;c[j+24>>2]=0;c[j+28>>2]=0;g[f>>2]=1.0;g[b+548>>2]=1.0;g[b+552>>2]=1.0;g[b+556>>2]=0.0;f=b+348|0;g[f>>2]=1.0;j=b+352|0;g[j>>2]=1.0;h=b+356|0;g[h>>2]=1.0;k=b+364|0;q=b+368|0;p=b+372|0;l=b+376|0;m=b+380|0;o=b+384|0;n=b+388|0;t=b+412|0;w=d+92|0;v=b+360|0;u=v+36|0;do{c[v>>2]=0;v=v+4|0}while((v|0)<(u|0));c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;c[t+20>>2]=0;c[t+24>>2]=0;c[t+28>>2]=0;s=+g[w>>2];r=+g[d+96>>2];if(s<0.0){s=0.0}else{s=s>1.0?1.0:s}g[b+444>>2]=s;if(r<0.0){r=0.0}else{r=r>1.0?1.0:r}g[b+448>>2]=r;g[b+472>>2]=+g[d+112>>2];g[b+476>>2]=+g[d+116>>2];t=c[d+4>>2]|0;c[b+480>>2]=t;c[b+608>>2]=0;c[b+612>>2]=0;a[b+452|0]=a[d+120|0]|0;g[b+456>>2]=+g[d+124>>2];g[b+460>>2]=+g[d+128>>2];g[b+464>>2]=+g[d+132>>2];g[b+468>>2]=+g[d+136>>2];if((t|0)==0){w=b+4|0;v=d+8|0;c[w+0>>2]=c[v+0>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[w+12>>2]=c[v+12>>2];v=b+20|0;u=d+24|0;c[v+0>>2]=c[u+0>>2];c[v+4>>2]=c[u+4>>2];c[v+8>>2]=c[u+8>>2];c[v+12>>2]=c[u+12>>2];u=b+36|0;t=d+40|0;c[u+0>>2]=c[t+0>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];c[u+12>>2]=c[t+12>>2];t=b+52|0;z=d+56|0;c[t+0>>2]=c[z+0>>2];c[t+4>>2]=c[z+4>>2];c[t+8>>2]=c[z+8>>2];c[t+12>>2]=c[z+12>>2]}else{w=b+4|0;Hb[c[(c[t>>2]|0)+8>>2]&127](t,w);t=b+52|0;v=b+20|0;u=b+36|0}z=b+68|0;c[z+0>>2]=c[w+0>>2];c[z+4>>2]=c[w+4>>2];c[z+8>>2]=c[w+8>>2];c[z+12>>2]=c[w+12>>2];z=b+84|0;c[z+0>>2]=c[v+0>>2];c[z+4>>2]=c[v+4>>2];c[z+8>>2]=c[v+8>>2];c[z+12>>2]=c[v+12>>2];z=b+100|0;c[z+0>>2]=c[u+0>>2];c[z+4>>2]=c[u+4>>2];c[z+8>>2]=c[u+8>>2];c[z+12>>2]=c[u+12>>2];u=b+116|0;c[u+0>>2]=c[t+0>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];c[u+12>>2]=c[t+12>>2];t=b+132|0;u=d+100|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;c[t+20>>2]=0;c[t+24>>2]=0;c[t+28>>2]=0;g[b+224>>2]=+g[u>>2];g[b+232>>2]=+g[d+104>>2];g[b+228>>2]=+g[d+108>>2];Hb[c[(c[b>>2]|0)+12>>2]&127](b,c[d+72>>2]|0);u=c[602]|0;c[602]=u+1;c[b+508>>2]=u;s=+g[d>>2];u=b+204|0;t=c[u>>2]|0;if(s==0.0){c[u>>2]=t|1;g[b+344>>2]=0.0;r=0.0}else{c[u>>2]=t&-2;r=1.0/s;g[b+344>>2]=r}x=s*+g[o>>2];y=s*+g[n>>2];g[k>>2]=s*+g[m>>2];g[q>>2]=x;g[p>>2]=y;g[l>>2]=0.0;s=+g[d+76>>2];if(s!=0.0){s=1.0/s}else{s=0.0}x=+g[d+80>>2];if(x!=0.0){x=1.0/x}else{x=0.0}y=+g[d+84>>2];if(y!=0.0){y=1.0/y}else{y=0.0}g[b+396>>2]=s;g[b+400>>2]=x;g[b+404>>2]=y;g[b+408>>2]=0.0;O=r*+g[j>>2];I=r*+g[h>>2];w=b+560|0;g[w>>2]=r*+g[f>>2];z=b+564|0;g[z>>2]=O;u=b+568|0;g[u>>2]=I;v=b+572|0;g[v>>2]=0.0;I=+g[b+4>>2];O=I*s;H=+g[b+8>>2];N=H*x;G=+g[b+12>>2];M=G*y;F=+g[b+20>>2];L=s*F;E=+g[b+24>>2];K=x*E;D=+g[b+28>>2];J=y*D;C=+g[b+36>>2];B=s*C;A=+g[b+40>>2];r=x*A;x=+g[b+44>>2];s=y*x;g[b+264>>2]=I*O+H*N+G*M;g[b+268>>2]=O*F+N*E+M*D;g[b+272>>2]=O*C+N*A+M*x;g[b+276>>2]=0.0;g[b+280>>2]=I*L+H*K+G*J;g[b+284>>2]=F*L+E*K+D*J;g[b+288>>2]=L*C+K*A+J*x;g[b+292>>2]=0.0;g[b+296>>2]=I*B+H*r+G*s;g[b+300>>2]=F*B+E*r+D*s;g[b+304>>2]=C*B+A*r+x*s;g[b+308>>2]=0.0;c[b+504>>2]=0;q=b+512|0;t=b+344|0;c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[q+16>>2]=0;c[q+20>>2]=0;c[q+24>>2]=0;c[q+28>>2]=0;s=+g[t>>2];x=s*+g[j>>2];y=s*+g[h>>2];g[w>>2]=+g[f>>2]*s;g[z>>2]=x;g[u>>2]=y;v=v+0|0;u=v+36|0;do{c[v>>2]=0;v=v+4|0}while((v|0)<(u|0));i=e;return}function Bh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0;d=i;e=a+68|0;if((c[a+204>>2]&2|0)==0){c[e+0>>2]=c[b+0>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];l=a+84|0;m=b+16|0;c[l+0>>2]=c[m+0>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];c[l+12>>2]=c[m+12>>2];l=a+100|0;k=b+32|0;c[l+0>>2]=c[k+0>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];l=a+116|0;h=b+48|0;c[l+0>>2]=c[h+0>>2];c[l+4>>2]=c[h+4>>2];c[l+8>>2]=c[h+8>>2];c[l+12>>2]=c[h+12>>2];l=a+20|0;j=a+36|0;e=a+4|0;f=a+52|0}else{k=a+4|0;c[e+0>>2]=c[k+0>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];m=a+84|0;l=a+20|0;c[m+0>>2]=c[l+0>>2];c[m+4>>2]=c[l+4>>2];c[m+8>>2]=c[l+8>>2];c[m+12>>2]=c[l+12>>2];m=a+100|0;j=a+36|0;c[m+0>>2]=c[j+0>>2];c[m+4>>2]=c[j+4>>2];c[m+8>>2]=c[j+8>>2];c[m+12>>2]=c[j+12>>2];m=a+116|0;f=a+52|0;c[m+0>>2]=c[f+0>>2];c[m+4>>2]=c[f+4>>2];c[m+8>>2]=c[f+8>>2];c[m+12>>2]=c[f+12>>2];m=b+16|0;e=k;k=b+32|0;h=b+48|0}F=a+132|0;G=a+312|0;c[F+0>>2]=c[G+0>>2];c[F+4>>2]=c[G+4>>2];c[F+8>>2]=c[G+8>>2];c[F+12>>2]=c[G+12>>2];F=a+148|0;G=a+328|0;c[F+0>>2]=c[G+0>>2];c[F+4>>2]=c[G+4>>2];c[F+8>>2]=c[G+8>>2];c[F+12>>2]=c[G+12>>2];c[e+0>>2]=c[b+0>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[l+0>>2]=c[m+0>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];c[l+12>>2]=c[m+12>>2];c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];c[f+0>>2]=c[h+0>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];c[f+12>>2]=c[h+12>>2];y=+g[a+4>>2];r=+g[a+396>>2];E=y*r;x=+g[a+8>>2];p=+g[a+400>>2];D=x*p;w=+g[a+12>>2];n=+g[a+404>>2];C=w*n;v=+g[a+20>>2];B=r*v;u=+g[a+24>>2];A=p*u;t=+g[a+28>>2];z=n*t;s=+g[a+36>>2];r=r*s;q=+g[a+40>>2];p=p*q;o=+g[a+44>>2];n=n*o;g[a+264>>2]=y*E+x*D+w*C;g[a+268>>2]=E*v+D*u+C*t;g[a+272>>2]=E*s+D*q+C*o;g[a+276>>2]=0.0;g[a+280>>2]=y*B+x*A+w*z;g[a+284>>2]=v*B+u*A+t*z;g[a+288>>2]=B*s+A*q+z*o;g[a+292>>2]=0.0;g[a+296>>2]=y*r+x*p+w*n;g[a+300>>2]=v*r+u*p+t*n;g[a+304>>2]=s*r+q*p+o*n;g[a+308>>2]=0.0;i=d;return}function Ch(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;a:do{if((c[d+236>>2]&2|0)!=0?(f=c[b+488>>2]|0,(f|0)>0):0){b=c[b+496>>2]|0;g=0;while(1){h=c[b+(g<<2)>>2]|0;if((a[h+20|0]|0)!=0){if((c[h+28>>2]|0)==(d|0)){d=0;break a}if((c[h+32>>2]|0)==(d|0)){d=0;break a}}g=g+1|0;if((g|0)>=(f|0)){d=1;break}}}else{d=1}}while(0);i=e;return d|0}function Dh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+488|0;m=c[e>>2]|0;a:do{if((m|0)>0){j=c[b+496>>2]|0;k=0;while(1){h=k+1|0;if((c[j+(k<<2)>>2]|0)==(d|0)){break}if((h|0)<(m|0)){k=h}else{break a}}if((k|0)!=(m|0)){n=b+256|0;c[n>>2]=1;i=f;return}}}while(0);h=b+492|0;if((m|0)==(c[h>>2]|0)?(g=(m|0)==0?1:m<<1,(m|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}m=c[e>>2]|0}k=b+496|0;if((m|0)>0){n=0;do{l=j+(n<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(m|0))}n=c[k>>2]|0;l=b+500|0;if((n|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);m=c[e>>2]|0}c[k>>2]=0}a[l]=1;c[k>>2]=j;c[h>>2]=g}g=(c[b+496>>2]|0)+(m<<2)|0;if((g|0)!=0){c[g>>2]=d}c[e>>2]=m+1;n=b+256|0;c[n>>2]=1;i=f;return}function Eh(a){a=a|0;return 488}function Fh(a,b,e){a=a|0;b=b|0;e=e|0;var f=0;f=i;Xj(a,b,e)|0;g[b+256>>2]=+g[a+264>>2];g[b+260>>2]=+g[a+268>>2];g[b+264>>2]=+g[a+272>>2];g[b+268>>2]=+g[a+276>>2];g[b+272>>2]=+g[a+280>>2];g[b+276>>2]=+g[a+284>>2];g[b+280>>2]=+g[a+288>>2];g[b+284>>2]=+g[a+292>>2];g[b+288>>2]=+g[a+296>>2];g[b+292>>2]=+g[a+300>>2];g[b+296>>2]=+g[a+304>>2];g[b+300>>2]=+g[a+308>>2];g[b+304>>2]=+g[a+312>>2];g[b+308>>2]=+g[a+316>>2];g[b+312>>2]=+g[a+320>>2];g[b+316>>2]=+g[a+324>>2];g[b+320>>2]=+g[a+328>>2];g[b+324>>2]=+g[a+332>>2];g[b+328>>2]=+g[a+336>>2];g[b+332>>2]=+g[a+340>>2];g[b+448>>2]=+g[a+344>>2];g[b+336>>2]=+g[a+544>>2];g[b+340>>2]=+g[a+548>>2];g[b+344>>2]=+g[a+552>>2];g[b+348>>2]=+g[a+556>>2];g[b+352>>2]=+g[a+348>>2];g[b+356>>2]=+g[a+352>>2];g[b+360>>2]=+g[a+356>>2];g[b+364>>2]=+g[a+360>>2];g[b+368>>2]=+g[a+364>>2];g[b+372>>2]=+g[a+368>>2];g[b+376>>2]=+g[a+372>>2];g[b+380>>2]=+g[a+376>>2];g[b+384>>2]=+g[a+380>>2];g[b+388>>2]=+g[a+384>>2];g[b+392>>2]=+g[a+388>>2];g[b+396>>2]=+g[a+392>>2];g[b+400>>2]=+g[a+396>>2];g[b+404>>2]=+g[a+400>>2];g[b+408>>2]=+g[a+404>>2];g[b+412>>2]=+g[a+408>>2];g[b+416>>2]=+g[a+412>>2];g[b+420>>2]=+g[a+416>>2];g[b+424>>2]=+g[a+420>>2];g[b+428>>2]=+g[a+424>>2];g[b+432>>2]=+g[a+428>>2];g[b+436>>2]=+g[a+432>>2];g[b+440>>2]=+g[a+436>>2];g[b+444>>2]=+g[a+440>>2];g[b+452>>2]=+g[a+444>>2];g[b+456>>2]=+g[a+448>>2];c[b+484>>2]=d[a+452|0]|0;g[b+460>>2]=+g[a+456>>2];g[b+464>>2]=+g[a+460>>2];g[b+468>>2]=+g[a+464>>2];g[b+472>>2]=+g[a+468>>2];g[b+476>>2]=+g[a+472>>2];g[b+480>>2]=+g[a+476>>2];i=f;return 2416}function Gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[(c[b>>2]|0)+16>>2]|0;f=Jb[c[(c[a>>2]|0)+16>>2]&63](a)|0;f=Sb[e&31](b,f,1)|0;e=Sb[c[(c[a>>2]|0)+20>>2]&31](a,c[f+8>>2]|0,b)|0;Db[c[(c[b>>2]|0)+20>>2]&31](b,f,e,1497645650,a);i=d;return}function Hh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;g=i;c[b>>2]=2376;f=b+488|0;e=b+496|0;h=c[e>>2]|0;d=b+500|0;if((h|0)!=0){if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[e>>2]=0}a[d]=1;c[e>>2]=0;c[f>>2]=0;c[b+492>>2]=0;i=g;return}function Ih(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=2376;e=b+488|0;f=b+496|0;h=c[f>>2]|0;g=b+500|0;if((h|0)==0){a[g]=1;c[f>>2]=0;c[e>>2]=0;c[b+492>>2]=0}else{if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}a[g]=1;c[f>>2]=0;c[e>>2]=0;c[b+492>>2]=0}c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0);i=d;return}function Jh(a,b){a=a|0;b=b|0;var d=0;d=a+260|0;c[d>>2]=(c[d>>2]|0)+1;c[a+192>>2]=b;c[a+200>>2]=b;return}function Kh(a){a=a|0;var b=0;b=i;Lh(a);if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Lh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=2488;g=b+168|0;f=b+176|0;h=c[f>>2]|0;e=b+180|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+172>>2]=0;g=b+148|0;f=b+156|0;h=c[f>>2]|0;e=b+160|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+152>>2]=0;g=b+128|0;f=b+136|0;h=c[f>>2]|0;e=b+140|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+132>>2]=0;g=b+108|0;f=b+116|0;h=c[f>>2]|0;e=b+120|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+112>>2]=0;f=b+88|0;h=b+96|0;g=c[h>>2]|0;e=b+100|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[f>>2]=0;c[b+92>>2]=0;g=b+68|0;f=b+76|0;h=c[f>>2]|0;e=b+80|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+72>>2]=0;g=b+48|0;f=b+56|0;h=c[f>>2]|0;e=b+60|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+52>>2]=0;g=b+28|0;f=b+36|0;h=c[f>>2]|0;e=b+40|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+32>>2]=0;f=b+8|0;g=b+16|0;e=c[g>>2]|0;h=b+20|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+12|0;c[h>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+12|0;c[h>>2]=0;i=d;return}function Mh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0.0,D=0.0;t=i;B=d+100|0;C=+g[B>>2];s=+g[d+16>>2];e=a+64|0;q=+g[d+20>>2];u=a+68|0;r=+g[d+24>>2];v=a+72|0;w=a+80|0;x=a+84|0;y=a+88|0;j=d+48|0;k=b+64|0;f=d+52|0;l=b+68|0;h=d+56|0;m=b+72|0;n=b+80|0;o=b+84|0;p=b+88|0;z=+g[d+108>>2];z=+g[d+112>>2]-C*+g[d+116>>2]-(s*+g[e>>2]+q*+g[u>>2]+r*+g[v>>2]+(+g[d>>2]*+g[w>>2]+ +g[d+4>>2]*+g[x>>2]+ +g[d+8>>2]*+g[y>>2]))*z-z*(+g[j>>2]*+g[k>>2]+ +g[f>>2]*+g[l>>2]+ +g[h>>2]*+g[m>>2]+(+g[d+32>>2]*+g[n>>2]+ +g[d+36>>2]*+g[o>>2]+ +g[d+40>>2]*+g[p>>2]));A=C+z;D=+g[d+120>>2];do{if(!(A<D)){D=+g[d+124>>2];if(A>D){g[B>>2]=D;z=D-C;break}else{g[B>>2]=A;break}}else{g[B>>2]=D;z=D-C}}while(0);if((c[a+240>>2]|0)!=0){D=z*+g[a+132>>2]*q*+g[a+116>>2];C=z*+g[a+136>>2]*r*+g[a+120>>2];g[e>>2]=+g[a+112>>2]*z*+g[a+128>>2]*s+ +g[e>>2];g[u>>2]=D+ +g[u>>2];g[v>>2]=C+ +g[v>>2];C=z*+g[a+100>>2]*+g[d+68>>2];D=z*+g[a+104>>2]*+g[d+72>>2];g[w>>2]=z*+g[a+96>>2]*+g[d+64>>2]+ +g[w>>2];g[x>>2]=C+ +g[x>>2];g[y>>2]=D+ +g[y>>2]}if((c[b+240>>2]|0)==0){i=t;return}D=z*+g[b+132>>2]*+g[f>>2]*+g[b+116>>2];C=z*+g[b+136>>2]*+g[h>>2]*+g[b+120>>2];g[k>>2]=+g[b+112>>2]*z*+g[b+128>>2]*+g[j>>2]+ +g[k>>2];g[l>>2]=D+ +g[l>>2];g[m>>2]=C+ +g[m>>2];C=z*+g[b+100>>2]*+g[d+84>>2];D=z*+g[b+104>>2]*+g[d+88>>2];g[n>>2]=z*+g[b+96>>2]*+g[d+80>>2]+ +g[n>>2];g[o>>2]=C+ +g[o>>2];g[p>>2]=D+ +g[p>>2];i=t;return}function Nh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0;t=i;z=d+100|0;D=+g[z>>2];s=+g[d+16>>2];e=a+64|0;q=+g[d+20>>2];u=a+68|0;r=+g[d+24>>2];v=a+72|0;w=a+80|0;x=a+84|0;y=a+88|0;j=d+48|0;k=b+64|0;f=d+52|0;l=b+68|0;h=d+56|0;m=b+72|0;n=b+80|0;o=b+84|0;p=b+88|0;C=+g[d+108>>2];C=+g[d+112>>2]-D*+g[d+116>>2]-(s*+g[e>>2]+q*+g[u>>2]+r*+g[v>>2]+(+g[d>>2]*+g[w>>2]+ +g[d+4>>2]*+g[x>>2]+ +g[d+8>>2]*+g[y>>2]))*C-C*(+g[j>>2]*+g[k>>2]+ +g[f>>2]*+g[l>>2]+ +g[h>>2]*+g[m>>2]+(+g[d+32>>2]*+g[n>>2]+ +g[d+36>>2]*+g[o>>2]+ +g[d+40>>2]*+g[p>>2]));A=D+C;B=+g[d+120>>2];if(A<B){C=B-D;A=B}g[z>>2]=A;if((c[a+240>>2]|0)!=0){D=C*+g[a+132>>2]*q*+g[a+116>>2];B=C*+g[a+136>>2]*r*+g[a+120>>2];g[e>>2]=+g[a+112>>2]*C*+g[a+128>>2]*s+ +g[e>>2];g[u>>2]=D+ +g[u>>2];g[v>>2]=B+ +g[v>>2];B=C*+g[a+100>>2]*+g[d+68>>2];D=C*+g[a+104>>2]*+g[d+72>>2];g[w>>2]=C*+g[a+96>>2]*+g[d+64>>2]+ +g[w>>2];g[x>>2]=B+ +g[x>>2];g[y>>2]=D+ +g[y>>2]}if((c[b+240>>2]|0)==0){i=t;return}D=C*+g[b+132>>2]*+g[f>>2]*+g[b+116>>2];B=C*+g[b+136>>2]*+g[h>>2]*+g[b+120>>2];g[k>>2]=+g[b+112>>2]*C*+g[b+128>>2]*+g[j>>2]+ +g[k>>2];g[l>>2]=D+ +g[l>>2];g[m>>2]=B+ +g[m>>2];B=C*+g[b+100>>2]*+g[d+84>>2];D=C*+g[b+104>>2]*+g[d+88>>2];g[n>>2]=C*+g[b+96>>2]*+g[d+80>>2]+ +g[n>>2];g[o>>2]=B+ +g[o>>2];g[p>>2]=D+ +g[p>>2];i=t;return}function Oh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0;s=i;A=+g[d+128>>2];if(!(A!=0.0)){i=s;return}c[618]=(c[618]|0)+1;f=d+96|0;B=+g[f>>2];t=+g[d+16>>2];u=a+144|0;r=+g[d+20>>2];v=a+148|0;e=+g[d+24>>2];w=a+152|0;x=a+160|0;y=a+164|0;z=a+168|0;k=d+48|0;l=b+144|0;h=d+52|0;m=b+148|0;j=d+56|0;n=b+152|0;o=b+160|0;p=b+164|0;q=b+168|0;D=+g[d+108>>2];D=A-B*+g[d+116>>2]-(t*+g[u>>2]+r*+g[v>>2]+e*+g[w>>2]+(+g[d>>2]*+g[x>>2]+ +g[d+4>>2]*+g[y>>2]+ +g[d+8>>2]*+g[z>>2]))*D-D*(+g[k>>2]*+g[l>>2]+ +g[h>>2]*+g[m>>2]+ +g[j>>2]*+g[n>>2]+(+g[d+32>>2]*+g[o>>2]+ +g[d+36>>2]*+g[p>>2]+ +g[d+40>>2]*+g[q>>2]));C=B+D;A=+g[d+120>>2];if(C<A){D=A-B}else{A=C}g[f>>2]=A;if((c[a+240>>2]|0)!=0){C=D*+g[a+132>>2]*r*+g[a+116>>2];B=D*+g[a+136>>2]*e*+g[a+120>>2];g[u>>2]=+g[a+112>>2]*D*+g[a+128>>2]*t+ +g[u>>2];g[v>>2]=C+ +g[v>>2];g[w>>2]=B+ +g[w>>2];B=D*+g[a+100>>2]*+g[d+68>>2];C=D*+g[a+104>>2]*+g[d+72>>2];g[x>>2]=D*+g[a+96>>2]*+g[d+64>>2]+ +g[x>>2];g[y>>2]=B+ +g[y>>2];g[z>>2]=C+ +g[z>>2]}if((c[b+240>>2]|0)==0){i=s;return}C=D*+g[b+132>>2]*+g[h>>2]*+g[b+116>>2];B=D*+g[b+136>>2]*+g[j>>2]*+g[b+120>>2];g[l>>2]=+g[b+112>>2]*D*+g[b+128>>2]*+g[k>>2]+ +g[l>>2];g[m>>2]=C+ +g[m>>2];g[n>>2]=B+ +g[n>>2];B=D*+g[b+100>>2]*+g[d+84>>2];C=D*+g[b+104>>2]*+g[d+88>>2];g[o>>2]=D*+g[b+96>>2]*+g[d+80>>2]+ +g[o>>2];g[p>>2]=B+ +g[p>>2];g[q>>2]=C+ +g[q>>2];i=s;return}function Ph(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0;e=i;if(!((b|0)!=0?(c[b+236>>2]&2|0)!=0:0)){b=0}j=a+64|0;h=a+144|0;f=(b|0)==0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;c[j+24>>2]=0;c[j+28>>2]=0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;c[h+24>>2]=0;c[h+28>>2]=0;if(f){g[a>>2]=1.0;j=a+4|0;b=a+20|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;g[b>>2]=1.0;b=a+24|0;j=a+40|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;g[j>>2]=1.0;j=a+44|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;j=a+128|0;c[a+240>>2]=0;b=a+96|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;g[b>>2]=1.0;g[a+100>>2]=1.0;g[a+104>>2]=1.0;g[a+108>>2]=0.0;g[a+112>>2]=1.0;g[a+116>>2]=1.0;g[a+120>>2]=1.0;g[a+124>>2]=0.0;b=a+176|0;a=b+64|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));i=e;return}else{j=b+4|0;c[a+0>>2]=c[j+0>>2];c[a+4>>2]=c[j+4>>2];c[a+8>>2]=c[j+8>>2];c[a+12>>2]=c[j+12>>2];j=a+16|0;f=b+20|0;c[j+0>>2]=c[f+0>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];j=a+32|0;f=b+36|0;c[j+0>>2]=c[f+0>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];j=a+48|0;f=b+52|0;c[j+0>>2]=c[f+0>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];j=b+344|0;o=+g[j>>2];f=b+348|0;n=o*+g[b+352>>2];m=o*+g[b+356>>2];g[a+128>>2]=o*+g[f>>2];g[a+132>>2]=n;g[a+136>>2]=m;g[a+140>>2]=0.0;c[a+240>>2]=b;h=a+96|0;p=b+544|0;c[h+0>>2]=c[p+0>>2];c[h+4>>2]=c[p+4>>2];c[h+8>>2]=c[p+8>>2];c[h+12>>2]=c[p+12>>2];h=a+112|0;c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];h=a+176|0;f=b+312|0;c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];h=a+192|0;f=b+328|0;c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];m=+g[j>>2];n=m*+g[b+416>>2]*d;o=m*+g[b+420>>2]*d;g[a+208>>2]=m*+g[b+412>>2]*d;g[a+212>>2]=n;g[a+216>>2]=o;g[a+220>>2]=0.0;o=+g[b+428>>2];n=+g[b+432>>2];m=+g[b+436>>2];l=(o*+g[b+268>>2]+n*+g[b+284>>2]+m*+g[b+300>>2])*d;k=(o*+g[b+272>>2]+n*+g[b+288>>2]+m*+g[b+304>>2])*d;g[a+224>>2]=(+g[b+264>>2]*o+ +g[b+280>>2]*n+ +g[b+296>>2]*m)*d;g[a+228>>2]=l;g[a+232>>2]=k;g[a+236>>2]=0.0;i=e;return}}function Qh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;d=i;if((a|0)==0){i=d;return}if((c[a+180>>2]&1|0)==0){i=d;return}t=+g[a+4>>2];v=+g[b>>2];q=+g[a+20>>2];n=b+4|0;u=+g[n>>2];m=+g[a+36>>2];e=b+8|0;f=+g[e>>2];s=+g[a+8>>2];p=+g[a+24>>2];k=+g[a+40>>2];r=+g[a+12>>2];o=+g[a+28>>2];h=+g[a+44>>2];l=(t*v+q*u+m*f)*+g[a+164>>2];j=(v*s+u*p+f*k)*+g[a+168>>2];f=(v*r+u*o+f*h)*+g[a+172>>2];g[b>>2]=t*l+s*j+r*f;g[n>>2]=q*l+p*j+o*f;g[e>>2]=m*l+k*j+h*f;g[b+12>>2]=0.0;i=d;return}function Rh(b,d,e,f,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0.0,G=0.0,H=0,I=0,J=0.0,K=0.0,L=0.0;q=i;r=b+68|0;p=c[r>>2]|0;x=b+72|0;if((p|0)==(c[x>>2]|0)?(y=(p|0)==0?1:p<<1,(p|0)<(y|0)):0){if((y|0)==0){z=0;H=p}else{c[3580]=(c[3580]|0)+1;z=vr((y*152|3)+16|0)|0;if((z|0)==0){z=0}else{I=z+19&-16;c[I+ -4>>2]=z;z=I}H=c[r>>2]|0}E=b+76|0;if((H|0)>0){I=0;do{Fr(z+(I*152|0)|0,(c[E>>2]|0)+(I*152|0)|0,152)|0;I=I+1|0}while((I|0)!=(H|0))}I=c[E>>2]|0;H=b+80|0;if((I|0)!=0){if((a[H]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[I+ -4>>2]|0)}c[E>>2]=0}a[H]=1;c[E>>2]=z;c[x>>2]=y;x=c[r>>2]|0}else{x=p}c[r>>2]=x+1;r=c[b+76>>2]|0;E=r+(p*152|0)|0;c[r+(p*152|0)+140>>2]=h;b=c[b+16>>2]|0;z=c[b+(e*244|0)+240>>2]|0;y=c[b+(f*244|0)+240>>2]|0;c[r+(p*152|0)+144>>2]=e;c[r+(p*152|0)+148>>2]=f;s=+g[j+84>>2];g[r+(p*152|0)+104>>2]=s;c[r+(p*152|0)+132>>2]=0;g[r+(p*152|0)+100>>2]=0.0;g[r+(p*152|0)+96>>2]=0.0;x=(z|0)!=0;h=r+(p*152|0)+16|0;if(x){c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];F=+g[k+4>>2];C=+g[r+(p*152|0)+24>>2];A=+g[k+8>>2];B=+g[r+(p*152|0)+20>>2];w=F*C-A*B;D=+g[h>>2];G=+g[k>>2];C=A*D-C*G;D=B*G-F*D;g[E>>2]=w;g[r+(p*152|0)+4>>2]=C;g[r+(p*152|0)+8>>2]=D;g[r+(p*152|0)+12>>2]=0.0;F=(w*+g[z+280>>2]+C*+g[z+284>>2]+D*+g[z+288>>2])*+g[z+548>>2];G=(w*+g[z+296>>2]+C*+g[z+300>>2]+D*+g[z+304>>2])*+g[z+552>>2];g[r+(p*152|0)+64>>2]=(w*+g[z+264>>2]+ +g[z+268>>2]*C+D*+g[z+272>>2])*+g[z+544>>2];g[r+(p*152|0)+68>>2]=F;g[r+(p*152|0)+72>>2]=G;g[r+(p*152|0)+76>>2]=0.0}else{I=r+(p*152|0)+64|0;c[I+0>>2]=0;c[I+4>>2]=0;c[I+8>>2]=0;c[I+12>>2]=0;c[E+0>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;c[E+12>>2]=0;c[E+16>>2]=0;c[E+20>>2]=0;c[E+24>>2]=0;c[E+28>>2]=0;w=0.0}j=(y|0)!=0;if(j){u=-+g[d>>2];B=-+g[d+4>>2];t=-+g[d+8>>2];g[r+(p*152|0)+48>>2]=u;g[r+(p*152|0)+52>>2]=B;g[r+(p*152|0)+56>>2]=t;g[r+(p*152|0)+60>>2]=0.0;A=+g[l+4>>2];G=+g[l+8>>2];v=A*t-G*B;C=+g[l>>2];t=G*u-C*t;u=C*B-A*u;g[r+(p*152|0)+32>>2]=v;g[r+(p*152|0)+36>>2]=t;g[r+(p*152|0)+40>>2]=u;g[r+(p*152|0)+44>>2]=0.0;A=(v*+g[y+264>>2]+ +g[y+268>>2]*t+u*+g[y+272>>2])*+g[y+544>>2];B=(v*+g[y+280>>2]+t*+g[y+284>>2]+u*+g[y+288>>2])*+g[y+548>>2];C=(v*+g[y+296>>2]+t*+g[y+300>>2]+u*+g[y+304>>2])*+g[y+552>>2];g[r+(p*152|0)+80>>2]=A;g[r+(p*152|0)+84>>2]=B;g[r+(p*152|0)+88>>2]=C;g[r+(p*152|0)+92>>2]=0.0}else{I=r+(p*152|0)+32|0;H=r+(p*152|0)+80|0;c[H+0>>2]=0;c[H+4>>2]=0;c[H+8>>2]=0;c[H+12>>2]=0;c[I+0>>2]=0;c[I+4>>2]=0;c[I+8>>2]=0;c[I+12>>2]=0;c[I+16>>2]=0;c[I+20>>2]=0;c[I+24>>2]=0;c[I+28>>2]=0;A=0.0;B=0.0;C=0.0;v=0.0;t=0.0;u=0.0}if(x){G=+g[r+(p*152|0)+68>>2];K=+g[k+8>>2];L=+g[r+(p*152|0)+72>>2];J=+g[k+4>>2];D=+g[k>>2];F=+g[r+(p*152|0)+64>>2];D=+g[z+344>>2]+((G*K-L*J)*+g[d>>2]+(L*D-K*F)*+g[d+4>>2]+(J*F-G*D)*+g[d+8>>2])}else{D=0.0}if(j){K=-A;A=-B;F=-C;G=+g[l+8>>2];J=+g[l+4>>2];L=+g[l>>2];A=+g[y+344>>2]+((G*A-J*F)*+g[d>>2]+(L*F-G*K)*+g[d+4>>2]+(J*K-L*A)*+g[d+8>>2])}else{A=0.0}m=m/(D+A);g[r+(p*152|0)+108>>2]=m;if(x){A=+g[b+(e*244|0)+176>>2]+ +g[b+(e*244|0)+208>>2];B=+g[b+(e*244|0)+180>>2]+ +g[b+(e*244|0)+212>>2];C=+g[b+(e*244|0)+184>>2]+ +g[b+(e*244|0)+216>>2]}else{A=0.0;B=0.0;C=0.0}if(x){F=+g[b+(e*244|0)+192>>2];D=+g[b+(e*244|0)+196>>2];G=+g[b+(e*244|0)+200>>2]}else{F=0.0;D=0.0;G=0.0}w=A*+g[h>>2]+B*+g[r+(p*152|0)+20>>2]+C*+g[r+(p*152|0)+24>>2]+(F*w+D*+g[r+(p*152|0)+4>>2]+G*+g[r+(p*152|0)+8>>2]);if(j){A=+g[b+(f*244|0)+176>>2]+ +g[b+(f*244|0)+208>>2];C=+g[b+(f*244|0)+180>>2]+ +g[b+(f*244|0)+212>>2];B=+g[b+(f*244|0)+184>>2]+ +g[b+(f*244|0)+216>>2]}else{A=0.0;C=0.0;B=0.0}A=A*+g[r+(p*152|0)+48>>2]+C*+g[r+(p*152|0)+52>>2]+B*+g[r+(p*152|0)+56>>2];if(!j){J=0.0;K=0.0;L=0.0;J=J*v;K=K*t;K=J+K;L=L*u;L=K+L;L=A+L;L=w+L;L=n-L;L=m*L;I=r+(p*152|0)+112|0;g[I>>2]=L;I=r+(p*152|0)+116|0;g[I>>2]=o;L=-s;I=r+(p*152|0)+120|0;g[I>>2]=L;I=r+(p*152|0)+124|0;g[I>>2]=s;i=q;return}J=+g[b+(f*244|0)+192>>2];K=+g[b+(f*244|0)+196>>2];L=+g[b+(f*244|0)+200>>2];J=J*v;K=K*t;K=J+K;L=L*u;L=K+L;L=A+L;L=w+L;L=n-L;L=m*L;I=r+(p*152|0)+112|0;g[I>>2]=L;I=r+(p*152|0)+116|0;g[I>>2]=o;L=-s;I=r+(p*152|0)+120|0;g[I>>2]=L;I=r+(p*152|0)+124|0;g[I>>2]=s;i=q;return}function Sh(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0,D=0,E=0,F=0;l=i;m=b+88|0;k=c[m>>2]|0;A=b+92|0;if((k|0)==(c[A>>2]|0)?(u=(k|0)==0?1:k<<1,(k|0)<(u|0)):0){if((u|0)==0){C=0;F=k}else{c[3580]=(c[3580]|0)+1;C=vr((u*152|3)+16|0)|0;if((C|0)==0){C=0}else{F=C+19&-16;c[F+ -4>>2]=C;C=F}F=c[m>>2]|0}D=b+96|0;if((F|0)>0){E=0;do{Fr(C+(E*152|0)|0,(c[D>>2]|0)+(E*152|0)|0,152)|0;E=E+1|0}while((E|0)!=(F|0))}E=c[D>>2]|0;F=b+100|0;if((E|0)!=0){if((a[F]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[E+ -4>>2]|0)}c[D>>2]=0}a[F]=1;c[D>>2]=C;c[A>>2]=u;u=c[m>>2]|0}else{u=k}c[m>>2]=u+1;m=c[b+96>>2]|0;c[m+(k*152|0)+140>>2]=h;h=m+(k*152|0)+16|0;u=m+(k*152|0)+48|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[u>>2]=-0.0;g[m+(k*152|0)+52>>2]=-0.0;g[m+(k*152|0)+56>>2]=-0.0;g[m+(k*152|0)+60>>2]=0.0;b=c[b+16>>2]|0;u=c[b+(e*244|0)+240>>2]|0;h=c[b+(f*244|0)+240>>2]|0;c[m+(k*152|0)+144>>2]=e;c[m+(k*152|0)+148>>2]=f;n=+g[j+88>>2];g[m+(k*152|0)+104>>2]=n;c[m+(k*152|0)+132>>2]=0;g[m+(k*152|0)+100>>2]=0.0;g[m+(k*152|0)+96>>2]=0.0;p=-+g[d>>2];C=d+4|0;o=-+g[C>>2];A=d+8|0;q=-+g[A>>2];g[m+(k*152|0)>>2]=p;g[m+(k*152|0)+4>>2]=o;g[m+(k*152|0)+8>>2]=q;g[m+(k*152|0)+12>>2]=0.0;j=(u|0)!=0;if(j){s=(+g[u+264>>2]*p+ +g[u+268>>2]*o+ +g[u+272>>2]*q)*+g[u+544>>2];t=(+g[u+280>>2]*p+ +g[u+284>>2]*o+ +g[u+288>>2]*q)*+g[u+548>>2];r=(+g[u+296>>2]*p+ +g[u+300>>2]*o+ +g[u+304>>2]*q)*+g[u+552>>2]}else{s=0.0;t=0.0;r=0.0}g[m+(k*152|0)+64>>2]=s;g[m+(k*152|0)+68>>2]=t;g[m+(k*152|0)+72>>2]=r;g[m+(k*152|0)+76>>2]=0.0;r=+g[d>>2];s=+g[C>>2];t=+g[A>>2];B=+g[d+12>>2];g[m+(k*152|0)+32>>2]=r;g[m+(k*152|0)+36>>2]=s;g[m+(k*152|0)+40>>2]=t;g[m+(k*152|0)+44>>2]=B;d=(h|0)!=0;if(d){v=(r*+g[h+264>>2]+s*+g[h+268>>2]+t*+g[h+272>>2])*+g[h+544>>2];w=(r*+g[h+280>>2]+s*+g[h+284>>2]+t*+g[h+288>>2])*+g[h+548>>2];x=(r*+g[h+296>>2]+s*+g[h+300>>2]+t*+g[h+304>>2])*+g[h+552>>2]}else{v=0.0;w=0.0;x=0.0}g[m+(k*152|0)+80>>2]=v;g[m+(k*152|0)+84>>2]=w;g[m+(k*152|0)+88>>2]=x;g[m+(k*152|0)+92>>2]=0.0;if(j){v=+g[u+264>>2]*p+ +g[u+268>>2]*o+ +g[u+272>>2]*q;w=+g[u+280>>2]*p+ +g[u+284>>2]*o+ +g[u+288>>2]*q;y=+g[u+296>>2]*p+ +g[u+300>>2]*o+ +g[u+304>>2]*q}else{v=0.0;w=0.0;y=0.0}if(d){x=+g[h+264>>2]*r+ +g[h+268>>2]*s+ +g[h+272>>2]*t;z=r*+g[h+280>>2]+s*+g[h+284>>2]+t*+g[h+288>>2];B=r*+g[h+296>>2]+s*+g[h+300>>2]+t*+g[h+304>>2]}else{x=0.0;z=0.0;B=0.0}v=1.0/(v*p+w*o+y*q+0.0+(x*r+z*s+B*t));g[m+(k*152|0)+108>>2]=v;if(j){w=+g[b+(e*244|0)+192>>2];x=+g[b+(e*244|0)+196>>2];y=+g[b+(e*244|0)+200>>2];z=(+g[b+(e*244|0)+176>>2]+ +g[b+(e*244|0)+208>>2])*0.0+(+g[b+(e*244|0)+180>>2]+ +g[b+(e*244|0)+212>>2])*0.0+(+g[b+(e*244|0)+184>>2]+ +g[b+(e*244|0)+216>>2])*0.0}else{w=0.0;x=0.0;y=0.0;z=0.0}o=z+(w*p+x*o+y*q);if(!d){x=0.0;y=0.0;B=0.0;z=-0.0;x=x*r;y=y*s;y=x+y;B=B*t;B=y+B;B=z+B;B=o+B;B=0.0-B;B=v*B;F=m+(k*152|0)+112|0;g[F>>2]=B;F=m+(k*152|0)+116|0;g[F>>2]=0.0;B=-n;F=m+(k*152|0)+120|0;g[F>>2]=B;F=m+(k*152|0)+124|0;g[F>>2]=n;i=l;return}x=+g[b+(f*244|0)+192>>2];y=+g[b+(f*244|0)+196>>2];B=+g[b+(f*244|0)+200>>2];z=(+g[b+(f*244|0)+176>>2]+ +g[b+(f*244|0)+208>>2])*-0.0+(+g[b+(f*244|0)+180>>2]+ +g[b+(f*244|0)+212>>2])*-0.0+(+g[b+(f*244|0)+184>>2]+ +g[b+(f*244|0)+216>>2])*-0.0;x=x*r;y=y*s;y=x+y;B=B*t;B=y+B;B=z+B;B=o+B;B=0.0-B;B=v*B;F=m+(k*152|0)+112|0;g[F>>2]=B;F=m+(k*152|0)+116|0;g[F>>2]=0.0;B=-n;F=m+(k*152|0)+120|0;g[F>>2]=B;F=m+(k*152|0)+124|0;g[F>>2]=n;i=l;return}function Th(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0;e=i;i=i+496|0;j=e+244|0;f=e;k=b+212|0;h=c[k>>2]|0;if((h|0)>-1){b=h;i=e;return b|0}do{if((c[b+236>>2]&2|0)!=0){if(!(+g[b+344>>2]!=0.0)?(c[b+204>>2]&2|0)==0:0){break}h=c[a+8>>2]|0;Cr(j|0,0,244)|0;Ph(Uh(a+4|0,j)|0,b,d);c[k>>2]=h;b=h;i=e;return b|0}}while(0);j=a+188|0;h=c[j>>2]|0;if((h|0)>=0){b=h;i=e;return b|0}c[j>>2]=c[a+8>>2];Cr(f|0,0,244)|0;Ph(Uh(a+4|0,f)|0,0,d);b=c[j>>2]|0;i=e;return b|0}function Uh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;g=b+4|0;e=c[g>>2]|0;h=b+8|0;if((e|0)==(c[h>>2]|0)?(j=(e|0)==0?1:e<<1,(e|0)<(j|0)):0){if((j|0)==0){l=0;m=e}else{c[3580]=(c[3580]|0)+1;k=vr((j*244|3)+16|0)|0;if((k|0)==0){l=0}else{l=k+19&-16;c[l+ -4>>2]=k}m=c[g>>2]|0}k=b+12|0;if((m|0)>0){n=0;do{p=l+(n*244|0)|0;o=c[k>>2]|0;q=o+(n*244|0)|0;c[p+0>>2]=c[q+0>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];p=l+(n*244|0)+16|0;q=o+(n*244|0)+16|0;c[p+0>>2]=c[q+0>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];p=l+(n*244|0)+32|0;q=o+(n*244|0)+32|0;c[p+0>>2]=c[q+0>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];p=l+(n*244|0)+48|0;q=o+(n*244|0)+48|0;c[p+0>>2]=c[q+0>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];Fr(l+(n*244|0)+64|0,o+(n*244|0)+64|0,180)|0;n=n+1|0}while((n|0)!=(m|0))}n=c[k>>2]|0;m=b+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0)}c[k>>2]=0}a[m]=1;c[k>>2]=l;c[h>>2]=j;h=c[g>>2]|0}else{h=e}c[g>>2]=h+1;q=b+12|0;p=c[q>>2]|0;o=p+(e*244|0)|0;c[o+0>>2]=c[d+0>>2];c[o+4>>2]=c[d+4>>2];c[o+8>>2]=c[d+8>>2];c[o+12>>2]=c[d+12>>2];o=p+(e*244|0)+16|0;n=d+16|0;c[o+0>>2]=c[n+0>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];o=p+(e*244|0)+32|0;n=d+32|0;c[o+0>>2]=c[n+0>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];o=p+(e*244|0)+48|0;n=d+48|0;c[o+0>>2]=c[n+0>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];Fr(p+(e*244|0)+64|0,d+64|0,180)|0;i=f;return(c[q>>2]|0)+(e*244|0)|0}function Vh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0.0,Ab=0.0,Bb=0.0,Cb=0.0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0.0,Mb=0,Nb=0,Ob=0,Pb=0.0,Qb=0.0,Rb=0,Sb=0.0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0.0,cc=0.0,dc=0.0,ec=0.0,fc=0.0,gc=0.0,hc=0.0,ic=0.0,jc=0.0,kc=0.0,lc=0.0,mc=0.0,nc=0.0,oc=0.0,pc=0.0,qc=0.0,rc=0;h=i;i=i+80|0;l=h+64|0;m=h+48|0;y=h+32|0;k=h+16|0;j=h;if((e|0)<=0){i=h;return}S=f+12|0;B=b+16|0;ba=b+28|0;z=b+32|0;ca=b+36|0;T=b+40|0;X=l+4|0;Y=l+8|0;Z=l+12|0;_=m+4|0;$=m+8|0;aa=m+12|0;O=b+68|0;E=y+4|0;F=y+8|0;G=y+12|0;N=f+80|0;K=k+4|0;L=k+8|0;H=j+4|0;I=j+8|0;J=j+12|0;M=k+12|0;D=f+64|0;W=f+56|0;V=f+44|0;U=f+32|0;C=b+76|0;A=f+60|0;P=f+48|0;f=f+36|0;ia=0;do{da=c[d+(ia<<2)>>2]|0;ha=c[da+740>>2]|0;ga=c[da+744>>2]|0;ea=Th(b,ha,+g[S>>2])|0;fa=Th(b,ga,+g[S>>2])|0;sb=c[B>>2]|0;ja=sb+(fa*244|0)|0;do{if((sb+(ea*244|0)|0)!=0){if((+g[sb+(ea*244|0)+128>>2]==0.0?+g[sb+(ea*244|0)+132>>2]==0.0:0)?+g[sb+(ea*244|0)+136>>2]==0.0:0){if((ja|0)==0){break}if((+g[sb+(fa*244|0)+128>>2]==0.0?+g[sb+(fa*244|0)+132>>2]==0.0:0)?+g[sb+(fa*244|0)+136>>2]==0.0:0){break}}ka=da+748|0;vb=c[ka>>2]|0;if((vb|0)>0){ja=da+756|0;la=ha+236|0;xa=ga+236|0;lb=ha+52|0;mb=ha+56|0;nb=ha+60|0;ob=ga+52|0;pb=ga+56|0;qb=ga+60|0;eb=sb+(ea*244|0)+240|0;_a=sb+(fa*244|0)+240|0;Na=(ha|0)==0;za=(ga|0)==0;ya=ga+180|0;ma=ga+4|0;na=ga+20|0;oa=ga+36|0;pa=ga+8|0;qa=ga+24|0;ra=ga+40|0;sa=ga+12|0;ta=ga+28|0;ua=ga+44|0;va=ga+164|0;wa=ga+168|0;Wa=ga+172|0;Ma=ha+180|0;Aa=ha+4|0;Ba=ha+20|0;Ca=ha+36|0;Da=ha+8|0;Ea=ha+24|0;Fa=ha+40|0;Ga=ha+12|0;Ha=ha+28|0;Ia=ha+44|0;Ja=ha+164|0;Ka=ha+168|0;La=ha+172|0;Ua=sb+(fa*244|0)+176|0;Va=sb+(fa*244|0)+208|0;rb=sb+(fa*244|0)+180|0;Xa=sb+(fa*244|0)+212|0;Ya=sb+(fa*244|0)+184|0;Za=sb+(fa*244|0)+216|0;Oa=sb+(fa*244|0)+192|0;Pa=sb+(fa*244|0)+224|0;Qa=sb+(fa*244|0)+196|0;Ra=sb+(fa*244|0)+228|0;Sa=sb+(fa*244|0)+200|0;Ta=sb+(fa*244|0)+232|0;fb=sb+(ea*244|0)+176|0;gb=sb+(ea*244|0)+208|0;hb=sb+(ea*244|0)+180|0;ib=sb+(ea*244|0)+212|0;jb=sb+(ea*244|0)+184|0;kb=sb+(ea*244|0)+216|0;$a=sb+(ea*244|0)+192|0;ab=sb+(ea*244|0)+224|0;bb=sb+(ea*244|0)+196|0;cb=sb+(ea*244|0)+228|0;db=sb+(ea*244|0)+200|0;sb=sb+(ea*244|0)+232|0;tb=0;Db=1;do{ub=da+(tb*184|0)+4|0;Nb=da+(tb*184|0)+84|0;if(+g[Nb>>2]<=+g[ja>>2]){vb=c[ba>>2]|0;if((vb|0)==(c[z>>2]|0)?(t=(vb|0)==0?1:vb<<1,(vb|0)<(t|0)):0){if((t|0)==0){wb=0;yb=vb}else{c[3580]=(c[3580]|0)+1;wb=vr((t*152|3)+16|0)|0;if((wb|0)==0){wb=0}else{ac=wb+19&-16;c[ac+ -4>>2]=wb;wb=ac}yb=c[ba>>2]|0}if((yb|0)>0){xb=0;do{Fr(wb+(xb*152|0)|0,(c[ca>>2]|0)+(xb*152|0)|0,152)|0;xb=xb+1|0}while((xb|0)!=(yb|0))}xb=c[ca>>2]|0;if((xb|0)!=0){if((a[T]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[xb+ -4>>2]|0)}c[ca>>2]=0}a[T]=1;c[ca>>2]=wb;c[z>>2]=t;wb=c[ba>>2]|0}else{wb=vb}c[ba>>2]=wb+1;Gb=c[ca>>2]|0;Hb=Gb+(vb*152|0)|0;Fb=(c[la>>2]&2|0)==0?0:ha;Eb=(c[xa>>2]&2|0)==0?0:ga;c[Gb+(vb*152|0)+144>>2]=ea;c[Gb+(vb*152|0)+148>>2]=fa;c[Gb+(vb*152|0)+132>>2]=ub;bc=+g[da+(tb*184|0)+52>>2]- +g[lb>>2];cc=+g[da+(tb*184|0)+56>>2]- +g[mb>>2];dc=+g[da+(tb*184|0)+60>>2]- +g[nb>>2];g[l>>2]=bc;g[X>>2]=cc;g[Y>>2]=dc;g[Z>>2]=0.0;Pb=+g[da+(tb*184|0)+36>>2]- +g[ob>>2];Qb=+g[da+(tb*184|0)+40>>2]- +g[pb>>2];Sb=+g[da+(tb*184|0)+44>>2]- +g[qb>>2];g[m>>2]=Pb;g[_>>2]=Qb;g[$>>2]=Sb;g[aa>>2]=0.0;if((c[eb>>2]|0)==0){zb=0.0;Ab=0.0;Bb=0.0}else{oc=+g[$a>>2]+ +g[ab>>2];Bb=+g[bb>>2]+ +g[cb>>2];Ab=+g[db>>2]+ +g[sb>>2];zb=+g[fb>>2]+ +g[gb>>2]+(Bb*dc-Ab*cc);Ab=+g[hb>>2]+ +g[ib>>2]+(Ab*bc-oc*dc);Bb=+g[jb>>2]+ +g[kb>>2]+(oc*cc-Bb*bc)}if((c[_a>>2]|0)==0){ec=0.0;Lb=0.0;Cb=0.0}else{oc=+g[Oa>>2]+ +g[Pa>>2];Cb=+g[Qa>>2]+ +g[Ra>>2];Lb=+g[Sa>>2]+ +g[Ta>>2];ec=+g[Ua>>2]+ +g[Va>>2]+(Cb*Sb-Lb*Qb);Lb=+g[rb>>2]+ +g[Xa>>2]+(Lb*Pb-oc*Sb);Cb=+g[Ya>>2]+ +g[Za>>2]+(oc*Qb-Cb*Pb)}zb=zb-ec;Ab=Ab-Lb;Cb=Bb-Cb;xb=da+(tb*184|0)+68|0;ic=+g[xb>>2];yb=da+(tb*184|0)+72|0;oc=+g[yb>>2];wb=da+(tb*184|0)+76|0;hc=+g[wb>>2];Bb=ic*zb+Ab*oc+Cb*hc;Ib=c[B>>2]|0;Zb=Ib+(ea*244|0)+240|0;Xb=c[Zb>>2]|0;Kb=Ib+(fa*244|0)+240|0;Yb=c[Kb>>2]|0;gc=cc*hc-dc*oc;hc=dc*ic-hc*bc;ic=oc*bc-cc*ic;Rb=(Xb|0)!=0;if(Rb){mc=(gc*+g[Xb+264>>2]+hc*+g[Xb+268>>2]+ic*+g[Xb+272>>2])*+g[Xb+544>>2];nc=(gc*+g[Xb+280>>2]+hc*+g[Xb+284>>2]+ic*+g[Xb+288>>2])*+g[Xb+548>>2];oc=(gc*+g[Xb+296>>2]+hc*+g[Xb+300>>2]+ic*+g[Xb+304>>2])*+g[Xb+552>>2]}else{mc=0.0;nc=0.0;oc=0.0}Tb=Gb+(vb*152|0)+64|0;g[Tb>>2]=mc;Vb=Gb+(vb*152|0)+68|0;g[Vb>>2]=nc;Ub=Gb+(vb*152|0)+72|0;g[Ub>>2]=oc;g[Gb+(vb*152|0)+76>>2]=0.0;ec=+g[wb>>2];lc=+g[yb>>2];fc=Qb*ec-Sb*lc;Lb=+g[xb>>2];ec=Sb*Lb-ec*Pb;Lb=lc*Pb-Qb*Lb;Wb=(Yb|0)!=0;if(Wb){qc=-fc;pc=-ec;jc=-Lb;kc=(+g[Yb+264>>2]*qc+ +g[Yb+268>>2]*pc+ +g[Yb+272>>2]*jc)*+g[Yb+544>>2];lc=(+g[Yb+280>>2]*qc+ +g[Yb+284>>2]*pc+ +g[Yb+288>>2]*jc)*+g[Yb+548>>2];jc=(+g[Yb+296>>2]*qc+ +g[Yb+300>>2]*pc+ +g[Yb+304>>2]*jc)*+g[Yb+552>>2]}else{kc=0.0;lc=0.0;jc=0.0}_b=Gb+(vb*152|0)+80|0;g[_b>>2]=kc;$b=Gb+(vb*152|0)+84|0;g[$b>>2]=lc;ac=Gb+(vb*152|0)+88|0;g[ac>>2]=jc;g[Gb+(vb*152|0)+92>>2]=0.0;if(Rb){mc=+g[Xb+344>>2]+((nc*dc-oc*cc)*+g[xb>>2]+(oc*bc-dc*mc)*+g[yb>>2]+(cc*mc-nc*bc)*+g[wb>>2])}else{mc=0.0}if(Wb){pc=-kc;qc=-lc;jc=-jc;jc=+g[Yb+344>>2]+((Sb*qc-Qb*jc)*+g[xb>>2]+(Pb*jc-Sb*pc)*+g[yb>>2]+(Qb*pc-Pb*qc)*+g[wb>>2])}else{jc=0.0}Jb=Gb+(vb*152|0)+108|0;g[Jb>>2]=1.0/(mc+jc);Mb=Gb+(vb*152|0)+16|0;if(Rb){c[Mb+0>>2]=c[xb+0>>2];c[Mb+4>>2]=c[xb+4>>2];c[Mb+8>>2]=c[xb+8>>2];c[Mb+12>>2]=c[xb+12>>2];g[Hb>>2]=gc;g[Gb+(vb*152|0)+4>>2]=hc;g[Gb+(vb*152|0)+8>>2]=ic;g[Gb+(vb*152|0)+12>>2]=0.0}else{c[Hb+0>>2]=0;c[Hb+4>>2]=0;c[Hb+8>>2]=0;c[Hb+12>>2]=0;c[Hb+16>>2]=0;c[Hb+20>>2]=0;c[Hb+24>>2]=0;c[Hb+28>>2]=0}Ob=Gb+(vb*152|0)+48|0;if(Wb){pc=-+g[yb>>2];qc=-+g[wb>>2];g[Gb+(vb*152|0)+48>>2]=-+g[xb>>2];g[Gb+(vb*152|0)+52>>2]=pc;g[Gb+(vb*152|0)+56>>2]=qc;g[Gb+(vb*152|0)+60>>2]=0.0;g[Gb+(vb*152|0)+32>>2]=-fc;g[Gb+(vb*152|0)+36>>2]=-ec;g[Gb+(vb*152|0)+40>>2]=-Lb;g[Gb+(vb*152|0)+44>>2]=0.0}else{rc=Gb+(vb*152|0)+32|0;c[rc+0>>2]=0;c[rc+4>>2]=0;c[rc+8>>2]=0;c[rc+12>>2]=0;c[rc+16>>2]=0;c[rc+20>>2]=0;c[rc+24>>2]=0;c[rc+28>>2]=0}Lb=+g[Nb>>2]+ +g[W>>2];if(Rb){qc=+g[Xb+332>>2];oc=+g[Xb+336>>2];pc=+g[Xb+328>>2];ec=qc*dc-oc*cc+ +g[Xb+312>>2];dc=+g[Xb+316>>2]+(oc*bc-dc*pc);cc=cc*pc-qc*bc+ +g[Xb+320>>2]}else{ec=0.0;dc=0.0;cc=0.0}if(Wb){qc=+g[Yb+332>>2];oc=+g[Yb+336>>2];pc=+g[Yb+328>>2];bc=qc*Sb-oc*Qb+ +g[Yb+312>>2];Sb=+g[Yb+316>>2]+(oc*Pb-Sb*pc);Pb=Qb*pc-qc*Pb+ +g[Yb+320>>2]}else{bc=0.0;Sb=0.0;Pb=0.0}Pb=+g[xb>>2]*(ec-bc)+(dc-Sb)*+g[yb>>2]+(cc-Pb)*+g[wb>>2];g[Gb+(vb*152|0)+104>>2]=+g[da+(tb*184|0)+88>>2];Pb=Pb*+g[da+(tb*184|0)+96>>2];Pb=!(Pb>=-0.0)?-Pb:0.0;if((c[D>>2]&4|0)!=0){Qb=+g[da+(tb*184|0)+124>>2]*+g[A>>2];Nb=Gb+(vb*152|0)+100|0;g[Nb>>2]=Qb;if(Rb?(c[Zb>>2]|0)!=0:0){qc=Qb*+g[Ib+(ea*244|0)+132>>2]*+g[Gb+(vb*152|0)+20>>2]*+g[Xb+352>>2]*+g[Ib+(ea*244|0)+116>>2];pc=Qb*+g[Ib+(ea*244|0)+136>>2]*+g[Gb+(vb*152|0)+24>>2]*+g[Xb+356>>2]*+g[Ib+(ea*244|0)+120>>2];rc=Ib+(ea*244|0)+64|0;g[rc>>2]=+g[Ib+(ea*244|0)+112>>2]*Qb*+g[Ib+(ea*244|0)+128>>2]*+g[Mb>>2]*+g[Xb+348>>2]+ +g[rc>>2];rc=Ib+(ea*244|0)+68|0;g[rc>>2]=qc+ +g[rc>>2];rc=Ib+(ea*244|0)+72|0;g[rc>>2]=pc+ +g[rc>>2];pc=Qb*+g[Ib+(ea*244|0)+100>>2]*+g[Vb>>2];qc=Qb*+g[Ib+(ea*244|0)+104>>2]*+g[Ub>>2];rc=Ib+(ea*244|0)+80|0;g[rc>>2]=Qb*+g[Ib+(ea*244|0)+96>>2]*+g[Tb>>2]+ +g[rc>>2];rc=Ib+(ea*244|0)+84|0;g[rc>>2]=pc+ +g[rc>>2];rc=Ib+(ea*244|0)+88|0;g[rc>>2]=qc+ +g[rc>>2]}if(Wb?(n=+g[Nb>>2],o=-n,(c[Kb>>2]|0)!=0):0){qc=+g[ac>>2];pc=+g[$b>>2];oc=+g[_b>>2];mc=n*+g[Ib+(fa*244|0)+132>>2]*+g[Gb+(vb*152|0)+52>>2]*+g[Yb+352>>2]*+g[Ib+(fa*244|0)+116>>2];nc=n*+g[Ib+(fa*244|0)+136>>2]*+g[Gb+(vb*152|0)+56>>2]*+g[Yb+356>>2]*+g[Ib+(fa*244|0)+120>>2];rc=Ib+(fa*244|0)+64|0;g[rc>>2]=+g[Ib+(fa*244|0)+112>>2]*n*+g[Ib+(fa*244|0)+128>>2]*+g[Ob>>2]*+g[Yb+348>>2]+ +g[rc>>2];rc=Ib+(fa*244|0)+68|0;g[rc>>2]=mc+ +g[rc>>2];rc=Ib+(fa*244|0)+72|0;g[rc>>2]=nc+ +g[rc>>2];pc=pc*+g[Ib+(fa*244|0)+100>>2]*o;qc=qc*+g[Ib+(fa*244|0)+104>>2]*o;rc=Ib+(fa*244|0)+80|0;g[rc>>2]=+g[rc>>2]-oc*+g[Ib+(fa*244|0)+96>>2]*o;rc=Ib+(fa*244|0)+84|0;g[rc>>2]=+g[rc>>2]-pc;rc=Ib+(fa*244|0)+88|0;g[rc>>2]=+g[rc>>2]-qc}}else{g[Gb+(vb*152|0)+100>>2]=0.0}g[Gb+(vb*152|0)+96>>2]=0.0;if((c[Zb>>2]|0)==0){ec=0.0;dc=0.0;Sb=0.0;Qb=0.0;cc=0.0;bc=0.0}else{ec=+g[Ib+(ea*244|0)+208>>2];dc=+g[Ib+(ea*244|0)+212>>2];Sb=+g[Ib+(ea*244|0)+216>>2];Qb=+g[Ib+(ea*244|0)+224>>2];cc=+g[Ib+(ea*244|0)+228>>2];bc=+g[Ib+(ea*244|0)+232>>2]}if((c[Kb>>2]|0)==0){kc=0.0;fc=0.0;ic=0.0;hc=0.0;gc=0.0;jc=0.0}else{kc=+g[Ib+(fa*244|0)+208>>2];fc=+g[Ib+(fa*244|0)+212>>2];ic=+g[Ib+(fa*244|0)+216>>2];hc=+g[Ib+(fa*244|0)+224>>2];gc=+g[Ib+(fa*244|0)+228>>2];jc=+g[Ib+(fa*244|0)+232>>2]}Qb=Pb-((ec+ +g[Ib+(ea*244|0)+176>>2])*+g[Mb>>2]+(dc+ +g[Ib+(ea*244|0)+180>>2])*+g[Gb+(vb*152|0)+20>>2]+(Sb+ +g[Ib+(ea*244|0)+184>>2])*+g[Gb+(vb*152|0)+24>>2]+((Qb+ +g[Ib+(ea*244|0)+192>>2])*+g[Hb>>2]+(cc+ +g[Ib+(ea*244|0)+196>>2])*+g[Gb+(vb*152|0)+4>>2]+(bc+ +g[Ib+(ea*244|0)+200>>2])*+g[Gb+(vb*152|0)+8>>2])+((kc+ +g[Ib+(fa*244|0)+176>>2])*+g[Ob>>2]+(fc+ +g[Ib+(fa*244|0)+180>>2])*+g[Gb+(vb*152|0)+52>>2]+(ic+ +g[Ib+(fa*244|0)+184>>2])*+g[Gb+(vb*152|0)+56>>2]+((hc+ +g[Ib+(fa*244|0)+192>>2])*+g[Gb+(vb*152|0)+32>>2]+(gc+ +g[Ib+(fa*244|0)+196>>2])*+g[Gb+(vb*152|0)+36>>2]+(jc+ +g[Ib+(fa*244|0)+200>>2])*+g[Gb+(vb*152|0)+40>>2])));Hb=(c[V>>2]|0)==0;if(!Hb?!(Lb>+g[P>>2]):0){Ib=f}else{Ib=U}if(Lb>0.0){Pb=0.0;Qb=Qb-Lb/+g[S>>2]}else{Pb=-(Lb*+g[Ib>>2])/+g[S>>2]}qc=+g[Jb>>2];Pb=Pb*qc;Qb=Qb*qc;if(!Hb?!(Lb>+g[P>>2]):0){g[Gb+(vb*152|0)+112>>2]=Qb;g[Gb+(vb*152|0)+128>>2]=Pb}else{g[Gb+(vb*152|0)+112>>2]=Pb+Qb;g[Gb+(vb*152|0)+128>>2]=0.0}g[Gb+(vb*152|0)+116>>2]=0.0;g[Gb+(vb*152|0)+120>>2]=0.0;g[Gb+(vb*152|0)+124>>2]=1.0e10;Gb=Gb+(vb*152|0)+140|0;c[Gb>>2]=c[O>>2];if((Fb|0)==0){Lb=0.0;Pb=0.0;Qb=0.0}else{Lb=+g[Fb+328>>2];Pb=+g[Fb+332>>2];Qb=+g[Fb+336>>2]}if((Eb|0)==0){cc=0.0;bc=0.0;Sb=0.0}else{cc=+g[Eb+328>>2];bc=+g[Eb+332>>2];Sb=+g[Eb+336>>2]}Lb=cc-Lb;Pb=bc-Pb;Qb=Sb-Qb;g[y>>2]=Lb;g[E>>2]=Pb;g[F>>2]=Qb;g[G>>2]=0.0;do{if(+g[da+(tb*184|0)+92>>2]>0.0&(Db|0)>0){Db=Db+ -1|0;Sb=+R(+(Lb*Lb+Pb*Pb+Qb*Qb));if(Sb>+g[N>>2]){qc=1.0/Sb;Lb=Lb*qc;g[y>>2]=Lb;Sb=Pb*qc;g[E>>2]=Sb;Pb=Qb*qc;g[F>>2]=Pb;if(!Na?(c[Ma>>2]&2|0)!=0:0){hc=+g[Aa>>2];kc=+g[Ba>>2];mc=+g[Ca>>2];ic=+g[Da>>2];lc=+g[Ea>>2];oc=+g[Fa>>2];jc=+g[Ga>>2];Qb=+g[Ha>>2];qc=+g[Ia>>2];nc=(hc*Lb+kc*Sb+Pb*mc)*+g[Ja>>2];pc=(Lb*ic+Sb*lc+Pb*oc)*+g[Ka>>2];Pb=(Lb*jc+Sb*Qb+Pb*qc)*+g[La>>2];Lb=hc*nc+ic*pc+jc*Pb;Qb=kc*nc+lc*pc+Qb*Pb;Pb=mc*nc+oc*pc+qc*Pb;g[y>>2]=Lb;g[E>>2]=Qb;g[F>>2]=Pb;g[G>>2]=0.0}else{Qb=Sb}if(!za?(c[ya>>2]&2|0)!=0:0){gc=+g[ma>>2];jc=+g[na>>2];mc=+g[oa>>2];hc=+g[pa>>2];kc=+g[qa>>2];oc=+g[ra>>2];ic=+g[sa>>2];lc=+g[ta>>2];qc=+g[ua>>2];nc=(gc*Lb+jc*Qb+mc*Pb)*+g[va>>2];pc=(Lb*hc+Qb*kc+Pb*oc)*+g[wa>>2];Pb=(Lb*ic+Qb*lc+Pb*qc)*+g[Wa>>2];Lb=gc*nc+hc*pc+ic*Pb;Qb=jc*nc+kc*pc+lc*Pb;Pb=mc*nc+oc*pc+qc*Pb;g[y>>2]=Lb;g[E>>2]=Qb;g[F>>2]=Pb;g[G>>2]=0.0}if(!(+R(+(Lb*Lb+Qb*Qb+Pb*Pb))>.001)){break}Sh(b,y,ea,fa,vb,ub);break}Sh(b,xb,ea,fa,vb,ub);Lb=+g[wb>>2];if(+Q(+Lb)>.7071067690849304){cc=+g[yb>>2];qc=Lb*Lb+cc*cc;bc=1.0/+R(+qc);g[k>>2]=0.0;Pb=-(bc*Lb);g[K>>2]=Pb;cc=bc*cc;g[L>>2]=cc;bc=qc*bc;g[j>>2]=bc;qc=+g[xb>>2];Sb=-(qc*cc);g[H>>2]=Sb;Lb=0.0;Qb=Pb;Pb=qc*Pb}else{Qb=+g[xb>>2];cc=+g[yb>>2];qc=Qb*Qb+cc*cc;Pb=1.0/+R(+qc);cc=-(cc*Pb);g[k>>2]=cc;Qb=Pb*Qb;g[K>>2]=Qb;g[L>>2]=0.0;bc=-(Lb*Qb);g[j>>2]=bc;Sb=Lb*cc;g[H>>2]=Sb;Lb=cc;cc=0.0;Pb=qc*Pb}g[I>>2]=Pb;if(!Na?(c[Ma>>2]&2|0)!=0:0){gc=+g[Aa>>2];jc=+g[Ba>>2];mc=+g[Ca>>2];hc=+g[Da>>2];kc=+g[Ea>>2];oc=+g[Fa>>2];ic=+g[Ga>>2];lc=+g[Ha>>2];qc=+g[Ia>>2];nc=(gc*Lb+jc*Qb+mc*cc)*+g[Ja>>2];pc=(Lb*hc+Qb*kc+cc*oc)*+g[Ka>>2];cc=(Lb*ic+Qb*lc+cc*qc)*+g[La>>2];Lb=gc*nc+hc*pc+ic*cc;Qb=jc*nc+kc*pc+lc*cc;cc=mc*nc+oc*pc+qc*cc;g[k>>2]=Lb;g[K>>2]=Qb;g[L>>2]=cc;g[M>>2]=0.0}if(!za?(c[ya>>2]&2|0)!=0:0){gc=+g[ma>>2];jc=+g[na>>2];mc=+g[oa>>2];hc=+g[pa>>2];kc=+g[qa>>2];oc=+g[ra>>2];ic=+g[sa>>2];lc=+g[ta>>2];qc=+g[ua>>2];nc=(gc*Lb+jc*Qb+mc*cc)*+g[va>>2];pc=(Lb*hc+Qb*kc+cc*oc)*+g[wa>>2];cc=(Lb*ic+Qb*lc+cc*qc)*+g[Wa>>2];Lb=gc*nc+hc*pc+ic*cc;Qb=jc*nc+kc*pc+lc*cc;cc=mc*nc+oc*pc+qc*cc;g[k>>2]=Lb;g[K>>2]=Qb;g[L>>2]=cc;g[M>>2]=0.0}if(!Na?(c[Ma>>2]&2|0)!=0:0){gc=+g[Aa>>2];jc=+g[Ba>>2];mc=+g[Ca>>2];hc=+g[Da>>2];kc=+g[Ea>>2];oc=+g[Fa>>2];ic=+g[Ga>>2];lc=+g[Ha>>2];qc=+g[Ia>>2];nc=(gc*bc+jc*Sb+mc*Pb)*+g[Ja>>2];pc=(bc*hc+Sb*kc+Pb*oc)*+g[Ka>>2];Pb=(bc*ic+Sb*lc+Pb*qc)*+g[La>>2];bc=gc*nc+hc*pc+ic*Pb;Sb=jc*nc+kc*pc+lc*Pb;Pb=mc*nc+oc*pc+qc*Pb;g[j>>2]=bc;g[H>>2]=Sb;g[I>>2]=Pb;g[J>>2]=0.0}if(!za?(c[ya>>2]&2|0)!=0:0){gc=+g[ma>>2];jc=+g[na>>2];mc=+g[oa>>2];hc=+g[pa>>2];kc=+g[qa>>2];oc=+g[ra>>2];ic=+g[sa>>2];lc=+g[ta>>2];qc=+g[ua>>2];nc=(gc*bc+jc*Sb+mc*Pb)*+g[va>>2];pc=(bc*hc+Sb*kc+Pb*oc)*+g[wa>>2];Pb=(bc*ic+Sb*lc+Pb*qc)*+g[Wa>>2];bc=gc*nc+hc*pc+ic*Pb;Sb=jc*nc+kc*pc+lc*Pb;Pb=mc*nc+oc*pc+qc*Pb;g[j>>2]=bc;g[H>>2]=Sb;g[I>>2]=Pb;g[J>>2]=0.0}if(+R(+(Lb*Lb+Qb*Qb+cc*cc))>.001){Sh(b,k,ea,fa,vb,ub)}if(+R(+(bc*bc+Sb*Sb+Pb*Pb))>.001){Sh(b,j,ea,fa,vb,ub)}}}while(0);if((c[D>>2]&32|0)!=0?(a[da+(tb*184|0)+120|0]|0)!=0:0){Rh(b,da+(tb*184|0)+156|0,ea,fa,vb,ub,l,m,1.0,+g[da+(tb*184|0)+136>>2],+g[da+(tb*184|0)+144>>2]);if((c[D>>2]&16|0)!=0){Rh(b,da+(tb*184|0)+172|0,ea,fa,vb,ub,l,m,1.0,+g[da+(tb*184|0)+140>>2],+g[da+(tb*184|0)+148>>2])}}else{p=106}do{if((p|0)==106){p=0;Eb=da+(tb*184|0)+156|0;Qb=+g[xb>>2];Pb=+g[yb>>2];Lb=+g[wb>>2];zb=zb-Bb*Qb;Ab=Ab-Bb*Pb;Bb=Cb-Bb*Lb;g[da+(tb*184|0)+156>>2]=zb;Fb=da+(tb*184|0)+160|0;g[Fb>>2]=Ab;Hb=da+(tb*184|0)+164|0;g[Hb>>2]=Bb;g[da+(tb*184|0)+168>>2]=0.0;Cb=zb*zb+Ab*Ab+Bb*Bb;if((c[D>>2]&64|0)==0&Cb>1.1920928955078125e-7){qc=1.0/+R(+Cb);g[Eb>>2]=zb*qc;g[Fb>>2]=qc*Ab;g[Hb>>2]=qc*Bb;Qh(ha,Eb);Qh(ga,Eb);Rh(b,Eb,ea,fa,vb,ub,l,m,1.0,0.0,0.0);if((c[D>>2]&16|0)==0){break}rc=da+(tb*184|0)+172|0;qc=+g[Fb>>2];oc=+g[wb>>2];kc=+g[Hb>>2];lc=+g[yb>>2];nc=qc*oc-kc*lc;pc=+g[xb>>2];mc=+g[Eb>>2];oc=kc*pc-oc*mc;pc=lc*mc-qc*pc;g[da+(tb*184|0)+172>>2]=nc;g[da+(tb*184|0)+184>>2]=0.0;qc=1.0/+R(+(nc*nc+oc*oc+pc*pc));g[rc>>2]=nc*qc;g[da+(tb*184|0)+176>>2]=oc*qc;g[da+(tb*184|0)+180>>2]=pc*qc;Qh(ha,rc);Qh(ga,rc);Rh(b,rc,ea,fa,vb,ub,l,m,1.0,0.0,0.0);break}wb=da+(tb*184|0)+172|0;if(+Q(+Lb)>.7071067690849304){nc=Lb*Lb+Pb*Pb;oc=1.0/+R(+nc);g[Eb>>2]=0.0;qc=-(oc*Lb);g[Fb>>2]=qc;pc=oc*Pb;g[Hb>>2]=pc;g[wb>>2]=nc*oc;g[da+(tb*184|0)+176>>2]=-(Qb*pc);g[da+(tb*184|0)+180>>2]=Qb*qc}else{pc=Qb*Qb+Pb*Pb;qc=1.0/+R(+pc);oc=-(Pb*qc);g[Eb>>2]=oc;nc=qc*Qb;g[Fb>>2]=nc;g[Hb>>2]=0.0;g[wb>>2]=-(Lb*nc);g[da+(tb*184|0)+176>>2]=Lb*oc;g[da+(tb*184|0)+180>>2]=pc*qc}Qh(ha,Eb);Qh(ga,Eb);Rh(b,Eb,ea,fa,vb,ub,l,m,1.0,0.0,0.0);xb=c[D>>2]|0;if((xb&16|0)!=0){Qh(ha,wb);Qh(ga,wb);Rh(b,wb,ea,fa,vb,ub,l,m,1.0,0.0,0.0);xb=c[D>>2]|0}if((xb&80|0)==80){a[da+(tb*184|0)+120|0]=1}}}while(0);yb=c[B>>2]|0;ub=yb+(ea*244|0)+240|0;wb=c[ub>>2]|0;vb=yb+(fa*244|0)+240|0;xb=c[vb>>2]|0;Hb=c[Gb>>2]|0;Eb=c[C>>2]|0;Ib=c[D>>2]|0;Fb=(Ib&4|0)==0;if(!Fb){zb=+g[da+(tb*184|0)+128>>2]*+g[A>>2];Gb=Eb+(Hb*152|0)+100|0;g[Gb>>2]=zb;if((wb|0)!=0){oc=+g[wb+344>>2];qc=zb*oc*+g[Eb+(Hb*152|0)+20>>2]*+g[wb+352>>2]*+g[yb+(ea*244|0)+116>>2];pc=zb*oc*+g[Eb+(Hb*152|0)+24>>2]*+g[wb+356>>2]*+g[yb+(ea*244|0)+120>>2];rc=yb+(ea*244|0)+64|0;g[rc>>2]=+g[yb+(ea*244|0)+112>>2]*zb*oc*+g[Eb+(Hb*152|0)+16>>2]*+g[wb+348>>2]+ +g[rc>>2];rc=yb+(ea*244|0)+68|0;g[rc>>2]=qc+ +g[rc>>2];rc=yb+(ea*244|0)+72|0;g[rc>>2]=pc+ +g[rc>>2];pc=zb*+g[yb+(ea*244|0)+100>>2]*+g[Eb+(Hb*152|0)+68>>2];qc=zb*+g[yb+(ea*244|0)+104>>2]*+g[Eb+(Hb*152|0)+72>>2];rc=yb+(ea*244|0)+80|0;g[rc>>2]=zb*+g[yb+(ea*244|0)+96>>2]*+g[Eb+(Hb*152|0)+64>>2]+ +g[rc>>2];rc=yb+(ea*244|0)+84|0;g[rc>>2]=pc+ +g[rc>>2];rc=yb+(ea*244|0)+88|0;g[rc>>2]=qc+ +g[rc>>2]}if((xb|0)!=0?(r=+g[xb+344>>2],q=+g[Gb>>2],s=-q,(c[vb>>2]|0)!=0):0){qc=+g[Eb+(Hb*152|0)+88>>2];pc=+g[Eb+(Hb*152|0)+84>>2];oc=+g[Eb+(Hb*152|0)+80>>2];mc=q*r*+g[Eb+(Hb*152|0)+52>>2]*+g[xb+352>>2]*+g[yb+(fa*244|0)+116>>2];nc=q*r*+g[Eb+(Hb*152|0)+56>>2]*+g[xb+356>>2]*+g[yb+(fa*244|0)+120>>2];rc=yb+(fa*244|0)+64|0;g[rc>>2]=+g[yb+(fa*244|0)+112>>2]*q*r*+g[Eb+(Hb*152|0)+48>>2]*+g[xb+348>>2]+ +g[rc>>2];rc=yb+(fa*244|0)+68|0;g[rc>>2]=mc+ +g[rc>>2];rc=yb+(fa*244|0)+72|0;g[rc>>2]=nc+ +g[rc>>2];pc=pc*+g[yb+(fa*244|0)+100>>2]*s;qc=qc*+g[yb+(fa*244|0)+104>>2]*s;rc=yb+(fa*244|0)+80|0;g[rc>>2]=+g[rc>>2]-oc*+g[yb+(fa*244|0)+96>>2]*s;rc=yb+(fa*244|0)+84|0;g[rc>>2]=+g[rc>>2]-pc;rc=yb+(fa*244|0)+88|0;g[rc>>2]=+g[rc>>2]-qc}}else{g[Eb+(Hb*152|0)+100>>2]=0.0}do{if((Ib&16|0)!=0){Gb=Hb+1|0;if(Fb){g[Eb+(Gb*152|0)+100>>2]=0.0;break}zb=+g[da+(tb*184|0)+132>>2]*+g[A>>2];Fb=Eb+(Gb*152|0)+100|0;g[Fb>>2]=zb;if((wb|0)!=0?(u=+g[wb+344>>2],(c[ub>>2]|0)!=0):0){qc=zb*u*+g[Eb+(Gb*152|0)+20>>2]*+g[yb+(ea*244|0)+116>>2];pc=zb*u*+g[Eb+(Gb*152|0)+24>>2]*+g[yb+(ea*244|0)+120>>2];rc=yb+(ea*244|0)+64|0;g[rc>>2]=+g[yb+(ea*244|0)+112>>2]*zb*u*+g[Eb+(Gb*152|0)+16>>2]+ +g[rc>>2];rc=yb+(ea*244|0)+68|0;g[rc>>2]=qc+ +g[rc>>2];rc=yb+(ea*244|0)+72|0;g[rc>>2]=pc+ +g[rc>>2];pc=zb*+g[yb+(ea*244|0)+100>>2]*+g[Eb+(Gb*152|0)+68>>2];qc=zb*+g[yb+(ea*244|0)+104>>2]*+g[Eb+(Gb*152|0)+72>>2];rc=yb+(ea*244|0)+80|0;g[rc>>2]=zb*+g[yb+(ea*244|0)+96>>2]*+g[Eb+(Gb*152|0)+64>>2]+ +g[rc>>2];rc=yb+(ea*244|0)+84|0;g[rc>>2]=pc+ +g[rc>>2];rc=yb+(ea*244|0)+88|0;g[rc>>2]=qc+ +g[rc>>2]}if((xb|0)!=0?(w=+g[xb+344>>2],v=+g[Fb>>2],x=-v,(c[vb>>2]|0)!=0):0){qc=+g[Eb+(Gb*152|0)+88>>2];pc=+g[Eb+(Gb*152|0)+84>>2];oc=+g[Eb+(Gb*152|0)+80>>2];mc=v*w*+g[Eb+(Gb*152|0)+52>>2]*+g[yb+(fa*244|0)+116>>2];nc=v*w*+g[Eb+(Gb*152|0)+56>>2]*+g[yb+(fa*244|0)+120>>2];rc=yb+(fa*244|0)+64|0;g[rc>>2]=+g[yb+(fa*244|0)+112>>2]*v*w*+g[Eb+(Gb*152|0)+48>>2]+ +g[rc>>2];rc=yb+(fa*244|0)+68|0;g[rc>>2]=mc+ +g[rc>>2];rc=yb+(fa*244|0)+72|0;g[rc>>2]=nc+ +g[rc>>2];pc=pc*+g[yb+(fa*244|0)+100>>2]*x;qc=qc*+g[yb+(fa*244|0)+104>>2]*x;rc=yb+(fa*244|0)+80|0;g[rc>>2]=+g[rc>>2]-oc*+g[yb+(fa*244|0)+96>>2]*x;rc=yb+(fa*244|0)+84|0;g[rc>>2]=+g[rc>>2]-pc;rc=yb+(fa*244|0)+88|0;g[rc>>2]=+g[rc>>2]-qc}}}while(0);vb=c[ka>>2]|0}tb=tb+1|0}while((tb|0)<(vb|0))}}}while(0);ia=ia+1|0}while((ia|0)!=(e|0));i=h;return}function Wh(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0.0,Sa=0.0,Ta=0.0,Ua=0.0,Va=0.0,Wa=0.0,Xa=0.0,Ya=0.0,Za=0.0,_a=0.0,$a=0,ab=0.0,bb=0.0,cb=0.0,db=0.0,eb=0.0,fb=0.0,gb=0.0,hb=0.0,ib=0.0,jb=0.0,kb=0.0,lb=0.0,mb=0.0,nb=0.0,ob=0,pb=0,qb=0,rb=0,sb=0;m=i;i=i+320|0;n=m+304|0;y=m+56|0;t=m;c[b+188>>2]=-1;dr(2544);s=b+184|0;c[s>>2]=0;x=(e|0)>0;if(x){z=0;do{c[(c[d+(z<<2)>>2]|0)+212>>2]=-1;z=z+1|0}while((z|0)!=(e|0))}B=e+1|0;z=b+12|0;C=c[z>>2]|0;if((C|0)<(B|0)){if((B|0)!=0?(c[3580]=(c[3580]|0)+1,A=vr((B*244|3)+16|0)|0,(A|0)!=0):0){C=A+19&-16;c[C+ -4>>2]=A}else{C=0}A=b+8|0;E=c[A>>2]|0;D=b+16|0;if((E|0)>0){F=0;do{$a=C+(F*244|0)|0;ob=c[D>>2]|0;Qa=ob+(F*244|0)|0;c[$a+0>>2]=c[Qa+0>>2];c[$a+4>>2]=c[Qa+4>>2];c[$a+8>>2]=c[Qa+8>>2];c[$a+12>>2]=c[Qa+12>>2];$a=C+(F*244|0)+16|0;Qa=ob+(F*244|0)+16|0;c[$a+0>>2]=c[Qa+0>>2];c[$a+4>>2]=c[Qa+4>>2];c[$a+8>>2]=c[Qa+8>>2];c[$a+12>>2]=c[Qa+12>>2];$a=C+(F*244|0)+32|0;Qa=ob+(F*244|0)+32|0;c[$a+0>>2]=c[Qa+0>>2];c[$a+4>>2]=c[Qa+4>>2];c[$a+8>>2]=c[Qa+8>>2];c[$a+12>>2]=c[Qa+12>>2];$a=C+(F*244|0)+48|0;Qa=ob+(F*244|0)+48|0;c[$a+0>>2]=c[Qa+0>>2];c[$a+4>>2]=c[Qa+4>>2];c[$a+8>>2]=c[Qa+8>>2];c[$a+12>>2]=c[Qa+12>>2];Fr(C+(F*244|0)+64|0,ob+(F*244|0)+64|0,180)|0;F=F+1|0}while((F|0)!=(E|0))}F=c[D>>2]|0;E=b+20|0;if((F|0)!=0){if((a[E]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[F+ -4>>2]|0)}c[D>>2]=0}a[E]=1;c[D>>2]=C;c[z>>2]=B}else{A=b+8|0;B=C}Cr(y|0,0,244)|0;D=c[A>>2]|0;if((D|0)<0){C=b+16|0;if((B|0)<0){E=c[C>>2]|0;B=b+20|0;if((E|0)!=0){if((a[B]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[E+ -4>>2]|0)}c[C>>2]=0}a[B]=1;c[C>>2]=0;c[z>>2]=0}z=y+16|0;F=y+32|0;B=y+48|0;E=y+64|0;do{ob=c[C>>2]|0;$a=ob+(D*244|0)|0;c[$a+0>>2]=c[y+0>>2];c[$a+4>>2]=c[y+4>>2];c[$a+8>>2]=c[y+8>>2];c[$a+12>>2]=c[y+12>>2];$a=ob+(D*244|0)+16|0;c[$a+0>>2]=c[z+0>>2];c[$a+4>>2]=c[z+4>>2];c[$a+8>>2]=c[z+8>>2];c[$a+12>>2]=c[z+12>>2];$a=ob+(D*244|0)+32|0;c[$a+0>>2]=c[F+0>>2];c[$a+4>>2]=c[F+4>>2];c[$a+8>>2]=c[F+8>>2];c[$a+12>>2]=c[F+12>>2];$a=ob+(D*244|0)+48|0;c[$a+0>>2]=c[B+0>>2];c[$a+4>>2]=c[B+4>>2];c[$a+8>>2]=c[B+8>>2];c[$a+12>>2]=c[B+12>>2];Fr(ob+(D*244|0)+64|0,E|0,180)|0;D=D+1|0}while((D|0)!=0)}c[A>>2]=0;if(x){B=l+12|0;x=b+16|0;C=l+76|0;z=0;do{A=d+(z<<2)|0;y=Th(b,c[A>>2]|0,+g[B>>2])|0;A=c[A>>2]|0;if((!((c[A+236>>2]&2|0)==0|(A|0)==0)?+g[A+344>>2]!=0.0:0)?(w=c[x>>2]|0,(c[A+504>>2]&2|0)!=0):0){Va=+g[C>>2];ib=1.0/+g[A+396>>2];kb=1.0/+g[A+400>>2];Sa=1.0/+g[A+404>>2];eb=+g[A+4>>2];Ya=ib*eb;fb=+g[A+8>>2];Za=kb*fb;gb=+g[A+12>>2];Ra=Sa*gb;hb=+g[A+20>>2];_a=ib*hb;jb=+g[A+24>>2];ab=kb*jb;Ta=+g[A+28>>2];nb=Sa*Ta;bb=+g[A+36>>2];ib=ib*bb;cb=+g[A+40>>2];kb=kb*cb;db=+g[A+44>>2];Sa=Sa*db;mb=+g[A+328>>2];Ua=+g[A+332>>2];lb=+g[A+336>>2];Ra=(eb*Ya+fb*Za+gb*Ra)*mb+(Ya*hb+Za*jb+Ra*Ta)*Ua+(Ya*bb+Za*cb+Ra*db)*lb;nb=(eb*_a+fb*ab+gb*nb)*mb+(hb*_a+jb*ab+Ta*nb)*Ua+(_a*bb+ab*cb+nb*db)*lb;Sa=lb*(bb*ib+cb*kb+db*Sa)+(mb*(eb*ib+fb*kb+gb*Sa)+Ua*(hb*ib+jb*kb+Ta*Sa));Ta=Ua*Sa-lb*nb;Sa=lb*Ra-mb*Sa;Ra=mb*nb-Ua*Ra;Ua=Ta*Ta+Sa*Sa+Ra*Ra;if(Ua>Va*Va){nb=1.0/+R(+Ua)*Va;Ta=Ta*nb;Sa=nb*Sa;Ra=nb*Ra}lb=+g[B>>2];mb=(Ta*+g[A+268>>2]+Sa*+g[A+284>>2]+Ra*+g[A+300>>2])*lb;nb=lb*(Ta*+g[A+272>>2]+Sa*+g[A+288>>2]+Ra*+g[A+304>>2]);ob=w+(y*244|0)+224|0;g[ob>>2]=+g[ob>>2]-(Ta*+g[A+264>>2]+Sa*+g[A+280>>2]+Ra*+g[A+296>>2])*lb;ob=w+(y*244|0)+228|0;g[ob>>2]=+g[ob>>2]-mb;ob=w+(y*244|0)+232|0;g[ob>>2]=+g[ob>>2]-nb}z=z+1|0}while((z|0)<(e|0))}e=(k|0)>0;if(e){w=0;do{ob=c[j+(w<<2)>>2]|0;Fb[c[(c[ob>>2]|0)+8>>2]&255](ob);g[ob+36>>2]=0.0;w=w+1|0}while((w|0)<(k|0))}w=b+168|0;y=c[w>>2]|0;if((y|0)<(k|0)?(u=b+172|0,(c[u>>2]|0)<(k|0)):0){if((k|0)==0){d=0}else{c[3580]=(c[3580]|0)+1;d=vr((k<<3|3)+16|0)|0;if((d|0)==0){d=0}else{ob=d+19&-16;c[ob+ -4>>2]=d;d=ob}y=c[w>>2]|0}x=b+176|0;if((y|0)>0){A=0;do{z=d+(A<<3)|0;if((z|0)!=0){Qa=(c[x>>2]|0)+(A<<3)|0;$a=c[Qa+4>>2]|0;ob=z;c[ob>>2]=c[Qa>>2];c[ob+4>>2]=$a}A=A+1|0}while((A|0)!=(y|0))}z=c[x>>2]|0;y=b+180|0;if((z|0)!=0){if((a[y]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[z+ -4>>2]|0)}c[x>>2]=0}a[y]=1;c[x>>2]=d;c[u>>2]=k}c[w>>2]=k;if(e){u=b+176|0;w=0;d=0;do{x=c[u>>2]|0;y=x+(w<<3)|0;z=j+(w<<2)|0;A=c[z>>2]|0;B=c[A+44>>2]|0;if((B|0)!=0){B=B+0|0;A=B+64|0;do{c[B>>2]=0;B=B+4|0}while((B|0)<(A|0));A=c[z>>2]|0}if((a[A+20|0]|0)==0){c[y>>2]=0;c[x+(w<<3)+4>>2]=0;x=0}else{Hb[c[(c[A>>2]|0)+16>>2]&127](A,y);x=c[y>>2]|0}d=x+d|0;w=w+1|0}while((w|0)<(k|0))}else{d=0}u=b+48|0;y=c[u>>2]|0;if((y|0)<(d|0)?(v=b+52|0,(c[v>>2]|0)<(d|0)):0){if((d|0)==0){w=0}else{c[3580]=(c[3580]|0)+1;w=vr((d*152|3)+16|0)|0;if((w|0)==0){w=0}else{ob=w+19&-16;c[ob+ -4>>2]=w;w=ob}y=c[u>>2]|0}x=b+56|0;if((y|0)>0){z=0;do{Fr(w+(z*152|0)|0,(c[x>>2]|0)+(z*152|0)|0,152)|0;z=z+1|0}while((z|0)!=(y|0))}z=c[x>>2]|0;y=b+60|0;if((z|0)!=0){if((a[y]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[z+ -4>>2]|0)}c[x>>2]=0}a[y]=1;c[x>>2]=w;c[v>>2]=d}c[u>>2]=d;if(e){L=b+176|0;v=b+56|0;K=l+12|0;e=b+16|0;J=l+32|0;I=t+4|0;H=t+8|0;G=t+12|0;F=t+16|0;E=t+20|0;D=t+24|0;C=t+28|0;B=l+40|0;A=l+4|0;z=t+52|0;O=t+32|0;x=t+36|0;N=t+40|0;M=l+20|0;y=t+48|0;S=c[L>>2]|0;w=0;d=0;while(1){P=S+(d<<3)|0;if((c[P>>2]|0)==0){P=0}else{T=c[v>>2]|0;W=j+(d<<2)|0;S=c[W>>2]|0;U=S+28|0;wa=c[U>>2]|0;V=S+32|0;Ca=c[V>>2]|0;Oa=Th(b,wa,+g[K>>2])|0;Ia=Th(b,Ca,+g[K>>2])|0;Pa=c[e>>2]|0;X=c[S+24>>2]|0;if((X|0)<=0){X=c[M>>2]|0}if((X|0)>(c[s>>2]|0)){c[s>>2]=X}if((c[P>>2]|0)>0){Y=0;do{ob=Y+w|0;Cr(T+(ob*152|0)|0,0,152)|0;g[T+(ob*152|0)+120>>2]=-3.4028234663852886e+38;g[T+(ob*152|0)+124>>2]=3.4028234663852886e+38;g[T+(ob*152|0)+100>>2]=0.0;g[T+(ob*152|0)+96>>2]=0.0;c[T+(ob*152|0)+144>>2]=Oa;c[T+(ob*152|0)+148>>2]=Ia;c[T+(ob*152|0)+136>>2]=X;Y=Y+1|0}while((Y|0)<(c[P>>2]|0))}Qa=Pa+(Oa*244|0)+64|0;ob=Pa+(Oa*244|0)+144|0;$a=Pa+(Ia*244|0)+64|0;c[Qa+0>>2]=0;c[Qa+4>>2]=0;c[Qa+8>>2]=0;c[Qa+12>>2]=0;c[Qa+16>>2]=0;c[Qa+20>>2]=0;c[Qa+24>>2]=0;c[Qa+28>>2]=0;c[ob+0>>2]=0;c[ob+4>>2]=0;c[ob+8>>2]=0;c[ob+12>>2]=0;c[ob+16>>2]=0;c[ob+20>>2]=0;c[ob+24>>2]=0;c[ob+28>>2]=0;ob=Pa+(Ia*244|0)+144|0;c[$a+0>>2]=0;c[$a+4>>2]=0;c[$a+8>>2]=0;c[$a+12>>2]=0;c[$a+16>>2]=0;c[$a+20>>2]=0;c[$a+24>>2]=0;c[$a+28>>2]=0;c[ob+0>>2]=0;c[ob+4>>2]=0;c[ob+8>>2]=0;c[ob+12>>2]=0;c[ob+16>>2]=0;c[ob+20>>2]=0;c[ob+24>>2]=0;c[ob+28>>2]=0;g[t>>2]=1.0/+g[K>>2];g[I>>2]=+g[J>>2];c[H>>2]=T+(w*152|0)+16;c[G>>2]=T+(w*152|0);c[F>>2]=T+(w*152|0)+48;c[E>>2]=T+(w*152|0)+32;c[D>>2]=38;c[C>>2]=T+(w*152|0)+112;ob=T+(w*152|0)+116|0;g[ob>>2]=+g[B>>2];g[z>>2]=+g[A>>2];c[O>>2]=ob;c[x>>2]=T+(w*152|0)+120;c[N>>2]=T+(w*152|0)+124;c[y>>2]=c[M>>2];ob=c[W>>2]|0;Hb[c[(c[ob>>2]|0)+20>>2]&127](ob,t);if((c[P>>2]|0)>0){ma=wa+344|0;ga=wa+264|0;ja=wa+268|0;ia=wa+272|0;ha=wa+280|0;X=wa+284|0;fa=wa+288|0;ea=wa+296|0;da=wa+300|0;ca=wa+304|0;la=Ca+344|0;ba=Ca+264|0;aa=Ca+268|0;$=Ca+272|0;_=Ca+280|0;Z=Ca+284|0;Y=Ca+288|0;pa=Ca+296|0;oa=Ca+300|0;ka=Ca+304|0;na=Pa+(Oa*244|0)+240|0;ua=Pa+(Ia*244|0)+240|0;qa=wa+312|0;ra=wa+316|0;sa=wa+320|0;ta=wa+328|0;va=wa+332|0;xa=wa+336|0;ya=Ca+312|0;za=Ca+316|0;Aa=Ca+320|0;Ba=Ca+328|0;wa=Ca+332|0;Da=Ca+336|0;Ca=Pa+(Ia*244|0)+208|0;Ha=Pa+(Ia*244|0)+212|0;Ea=Pa+(Ia*244|0)+216|0;Fa=Pa+(Ia*244|0)+224|0;Ga=Pa+(Ia*244|0)+228|0;Ja=Pa+(Ia*244|0)+232|0;Ia=Pa+(Oa*244|0)+208|0;Na=Pa+(Oa*244|0)+212|0;Ka=Pa+(Oa*244|0)+216|0;La=Pa+(Oa*244|0)+224|0;Ma=Pa+(Oa*244|0)+228|0;Oa=Pa+(Oa*244|0)+232|0;Pa=0;do{Qa=Pa+w|0;ob=T+(Qa*152|0)+124|0;$a=(c[W>>2]|0)+16|0;Ra=+g[$a>>2];if(+g[ob>>2]>=Ra){g[ob>>2]=Ra;Ra=+g[$a>>2]}$a=T+(Qa*152|0)+120|0;Ra=-Ra;if(+g[$a>>2]<=Ra){g[$a>>2]=Ra}c[T+(Qa*152|0)+132>>2]=S;sb=c[U>>2]|0;rb=T+(Qa*152|0)|0;mb=+g[rb>>2];qb=T+(Qa*152|0)+4|0;Ra=+g[qb>>2];pb=T+(Qa*152|0)+8|0;bb=+g[pb>>2];_a=(mb*+g[sb+280>>2]+Ra*+g[sb+284>>2]+bb*+g[sb+288>>2])*+g[sb+548>>2];Xa=(mb*+g[sb+296>>2]+Ra*+g[sb+300>>2]+bb*+g[sb+304>>2])*+g[sb+552>>2];g[T+(Qa*152|0)+64>>2]=(+g[sb+264>>2]*mb+ +g[sb+268>>2]*Ra+ +g[sb+272>>2]*bb)*+g[sb+544>>2];g[T+(Qa*152|0)+68>>2]=_a;g[T+(Qa*152|0)+72>>2]=Xa;g[T+(Qa*152|0)+76>>2]=0.0;sb=c[V>>2]|0;ob=T+(Qa*152|0)+32|0;Xa=+g[ob>>2];_a=+g[T+(Qa*152|0)+36>>2];$a=T+(Qa*152|0)+40|0;bb=+g[$a>>2];Ra=(Xa*+g[sb+280>>2]+_a*+g[sb+284>>2]+bb*+g[sb+288>>2])*+g[sb+548>>2];mb=(Xa*+g[sb+296>>2]+_a*+g[sb+300>>2]+bb*+g[sb+304>>2])*+g[sb+552>>2];g[T+(Qa*152|0)+80>>2]=(+g[sb+264>>2]*Xa+ +g[sb+268>>2]*_a+ +g[sb+272>>2]*bb)*+g[sb+544>>2];g[T+(Qa*152|0)+84>>2]=Ra;g[T+(Qa*152|0)+88>>2]=mb;g[T+(Qa*152|0)+92>>2]=0.0;mb=+g[ma>>2];Ra=+g[T+(Qa*152|0)+16>>2];Xa=+g[T+(Qa*152|0)+20>>2];Sa=+g[T+(Qa*152|0)+24>>2];Ta=+g[rb>>2];Ua=+g[qb>>2];Va=+g[pb>>2];nb=+g[la>>2];Wa=+g[T+(Qa*152|0)+48>>2];ab=+g[T+(Qa*152|0)+52>>2];Ya=+g[T+(Qa*152|0)+56>>2];Za=+g[ob>>2];bb=Ra*mb*Ra+Xa*mb*Xa+Sa*mb*Sa+(Ta*(+g[ga>>2]*Ta+ +g[ja>>2]*Ua+ +g[ia>>2]*Va)+Ua*(Ta*+g[ha>>2]+Ua*+g[X>>2]+Va*+g[fa>>2])+Va*(Ta*+g[ea>>2]+Ua*+g[da>>2]+Va*+g[ca>>2]))+(Wa*nb*Wa+ab*nb*ab+Ya*nb*Ya)+(Za*(+g[ba>>2]*Za+ +g[aa>>2]*_a+ +g[$>>2]*bb)+_a*(Za*+g[_>>2]+_a*+g[Z>>2]+bb*+g[Y>>2])+bb*(Za*+g[pa>>2]+_a*+g[oa>>2]+bb*+g[ka>>2]));if(+Q(+bb)>1.1920928955078125e-7){ib=1.0/bb}else{ib=0.0}g[T+(Qa*152|0)+108>>2]=ib;if((c[na>>2]|0)==0){cb=0.0;db=0.0;eb=0.0;fb=0.0;gb=0.0;hb=0.0}else{cb=+g[Ia>>2];db=+g[Na>>2];eb=+g[Ka>>2];fb=+g[La>>2];gb=+g[Ma>>2];hb=+g[Oa>>2]}if((c[ua>>2]|0)==0){mb=0.0;nb=0.0;lb=0.0;kb=0.0;jb=0.0;bb=0.0}else{mb=+g[Ca>>2];nb=+g[Ha>>2];lb=+g[Ea>>2];kb=+g[Fa>>2];jb=+g[Ga>>2];bb=+g[Ja>>2]}sb=T+(Qa*152|0)+112|0;g[sb>>2]=+g[sb>>2]*ib+ib*(0.0- +g[z>>2]*((cb+ +g[qa>>2])*Ra+(db+ +g[ra>>2])*Xa+(eb+ +g[sa>>2])*Sa+((fb+ +g[ta>>2])*Ta+(gb+ +g[va>>2])*Ua+(hb+ +g[xa>>2])*Va)+((mb+ +g[ya>>2])*Wa+(nb+ +g[za>>2])*ab+(lb+ +g[Aa>>2])*Ya+((kb+ +g[Ba>>2])*Za+(jb+ +g[wa>>2])*_a+(bb+ +g[Da>>2])*+g[$a>>2]))));g[T+(Qa*152|0)+100>>2]=0.0;Pa=Pa+1|0}while((Pa|0)<(c[P>>2]|0))}P=c[L>>2]|0;S=P;P=c[P+(d<<3)>>2]|0}d=d+1|0;if((d|0)>=(k|0)){break}else{w=P+w|0}}}oc[c[(c[b>>2]|0)+28>>2]&63](b,f,h,l);j=c[u>>2]|0;h=c[b+28>>2]|0;f=c[b+68>>2]|0;k=b+128|0;e=c[k>>2]|0;if((e|0)<(j|0)?(r=b+132|0,(c[r>>2]|0)<(j|0)):0){if((j|0)==0){s=0}else{c[3580]=(c[3580]|0)+1;s=vr((j<<2|3)+16|0)|0;if((s|0)==0){s=0}else{sb=s+19&-16;c[sb+ -4>>2]=s;s=sb}e=c[k>>2]|0}t=b+136|0;if((e|0)>0){u=0;do{v=s+(u<<2)|0;if((v|0)!=0){c[v>>2]=c[(c[t>>2]|0)+(u<<2)>>2]}u=u+1|0}while((u|0)!=(e|0))}v=c[t>>2]|0;u=b+140|0;if((v|0)!=0){if((a[u]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[v+ -4>>2]|0)}c[t>>2]=0}a[u]=1;c[t>>2]=s;c[r>>2]=j}c[k>>2]=j;if((c[l+64>>2]&16|0)==0){p=b+108|0;k=c[p>>2]|0;if((k|0)<(h|0)?(q=b+112|0,(c[q>>2]|0)<(h|0)):0){if((h|0)==0){r=0}else{c[3580]=(c[3580]|0)+1;r=vr((h<<2|3)+16|0)|0;if((r|0)==0){r=0}else{sb=r+19&-16;c[sb+ -4>>2]=r;r=sb}k=c[p>>2]|0}l=b+116|0;if((k|0)>0){s=0;do{t=r+(s<<2)|0;if((t|0)!=0){c[t>>2]=c[(c[l>>2]|0)+(s<<2)>>2]}s=s+1|0}while((s|0)!=(k|0))}k=c[l>>2]|0;s=b+120|0;if((k|0)!=0){if((a[s]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0)}c[l>>2]=0}a[s]=1;c[l>>2]=r;c[q>>2]=h}c[p>>2]=h}else{r=h<<1;q=b+108|0;u=c[q>>2]|0;if((u|0)<(r|0)?(p=b+112|0,(c[p>>2]|0)<(r|0)):0){if((h|0)==0){l=0}else{c[3580]=(c[3580]|0)+1;l=vr((h<<3|3)+16|0)|0;if((l|0)==0){l=0}else{sb=l+19&-16;c[sb+ -4>>2]=l;l=sb}u=c[q>>2]|0}k=b+116|0;if((u|0)>0){t=0;do{s=l+(t<<2)|0;if((s|0)!=0){c[s>>2]=c[(c[k>>2]|0)+(t<<2)>>2]}t=t+1|0}while((t|0)!=(u|0))}s=c[k>>2]|0;t=b+120|0;if((s|0)!=0){if((a[t]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[s+ -4>>2]|0)}c[k>>2]=0}a[t]=1;c[k>>2]=l;c[p>>2]=r}c[q>>2]=r}p=b+148|0;k=c[p>>2]|0;if((k|0)<(f|0)?(o=b+152|0,(c[o>>2]|0)<(f|0)):0){if((f|0)==0){q=0}else{c[3580]=(c[3580]|0)+1;q=vr((f<<2|3)+16|0)|0;if((q|0)==0){q=0}else{sb=q+19&-16;c[sb+ -4>>2]=q;q=sb}k=c[p>>2]|0}r=b+156|0;if((k|0)>0){l=0;do{s=q+(l<<2)|0;if((s|0)!=0){c[s>>2]=c[(c[r>>2]|0)+(l<<2)>>2]}l=l+1|0}while((l|0)!=(k|0))}k=c[r>>2]|0;l=b+160|0;if((k|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0)}c[r>>2]=0}a[l]=1;c[r>>2]=q;c[o>>2]=f}c[p>>2]=f;if((j|0)>0){o=c[b+136>>2]|0;p=0;do{c[o+(p<<2)>>2]=p;p=p+1|0}while((p|0)!=(j|0))}if((h|0)>0){o=c[b+116>>2]|0;p=0;do{c[o+(p<<2)>>2]=p;p=p+1|0}while((p|0)!=(h|0))}if((f|0)>0){b=c[b+156>>2]|0;o=0;do{c[b+(o<<2)>>2]=o;o=o+1|0}while((o|0)!=(f|0))}b=c[3598]|0;o=b+16|0;sb=(c[o>>2]|0)+ -1|0;c[o>>2]=sb;if((sb|0)!=0){i=m;return 0.0}do{if((c[b+4>>2]|0)!=0){xb(n|0,0)|0;rb=c[3584]|0;sb=b+8|0;g[sb>>2]=+(((c[n+4>>2]|0)-(c[rb+4>>2]|0)+(((c[n>>2]|0)-(c[rb>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[sb>>2];if((c[o>>2]|0)==0){b=c[3598]|0;break}else{i=m;return 0.0}}}while(0);c[3598]=c[b+20>>2];i=m;return 0.0}function Xh(b,d,e,f,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0;f=i;h=b+48|0;w=c[h>>2]|0;n=b+28|0;r=c[n>>2]|0;j=b+68|0;q=c[j>>2]|0;e=m+64|0;if((c[e>>2]&1|0)!=0){if((w|0)>0){u=c[b+136>>2]|0;t=b+192|0;v=c[t>>2]|0;s=0;do{x=u+(s<<2)|0;y=c[x>>2]|0;s=s+1|0;v=(ba(v,1664525)|0)+1013904223|0;if(s>>>0<65537){z=v>>>16^v;if(s>>>0<257){z=z>>>8^z;if(s>>>0<17){z=z>>>4^z;if(s>>>0<5){z=z>>>2^z;if(s>>>0<3){z=z>>>1^z}}}}}else{z=v}z=u+(((z>>>0)%(s>>>0)|0)<<2)|0;c[x>>2]=c[z>>2];c[z>>2]=y}while((s|0)!=(w|0));c[t>>2]=v}if((c[m+20>>2]|0)>(d|0)){if((r|0)>0){w=c[b+116>>2]|0;v=b+192|0;x=c[v>>2]|0;u=0;do{t=w+(u<<2)|0;s=c[t>>2]|0;u=u+1|0;x=(ba(x,1664525)|0)+1013904223|0;if(u>>>0<65537){y=x>>>16^x;if(u>>>0<257){y=y>>>8^y;if(u>>>0<17){y=y>>>4^y;if(u>>>0<5){y=y>>>2^y;if(u>>>0<3){y=y>>>1^y}}}}}else{y=x}z=w+(((y>>>0)%(u>>>0)|0)<<2)|0;c[t>>2]=c[z>>2];c[z>>2]=s}while((u|0)!=(r|0));c[v>>2]=x}if((q|0)>0){w=c[b+156>>2]|0;r=b+192|0;v=c[r>>2]|0;u=0;do{t=w+(u<<2)|0;s=c[t>>2]|0;u=u+1|0;v=(ba(v,1664525)|0)+1013904223|0;if(u>>>0<65537){x=v>>>16^v;if(u>>>0<257){x=x>>>8^x;if(u>>>0<17){x=x>>>4^x;if(u>>>0<5){x=x>>>2^x;if(u>>>0<3){x=x>>>1^x}}}}}else{x=v}z=w+(((x>>>0)%(u>>>0)|0)<<2)|0;c[t>>2]=c[z>>2];c[z>>2]=s}while((u|0)!=(q|0));c[r>>2]=v}}}t=c[h>>2]|0;q=(t|0)>0;if((c[e>>2]&256|0)==0){if(q){o=b+136|0;p=b+56|0;e=b+16|0;q=0;do{s=c[(c[o>>2]|0)+(q<<2)>>2]|0;r=c[p>>2]|0;if((c[r+(s*152|0)+136>>2]|0)>(d|0)){t=c[e>>2]|0;Mh(t+((c[r+(s*152|0)+144>>2]|0)*244|0)|0,t+((c[r+(s*152|0)+148>>2]|0)*244|0)|0,r+(s*152|0)|0);t=c[h>>2]|0}q=q+1|0}while((q|0)<(t|0))}if((c[m+20>>2]|0)<=(d|0)){i=f;return 0.0}if((l|0)>0){e=m+12|0;m=b+16|0;d=0;do{o=k+(d<<2)|0;p=c[o>>2]|0;if((a[p+20|0]|0)!=0){x=Th(b,c[p+28>>2]|0,+g[e>>2])|0;z=Th(b,c[(c[o>>2]|0)+32>>2]|0,+g[e>>2])|0;y=c[m>>2]|0;w=c[o>>2]|0;jc[c[(c[w>>2]|0)+24>>2]&15](w,y+(x*244|0)|0,y+(z*244|0)|0,+g[e>>2])}d=d+1|0}while((d|0)!=(l|0))}l=c[n>>2]|0;if((l|0)>0){k=b+116|0;n=b+36|0;p=b+16|0;o=0;do{z=c[(c[k>>2]|0)+(o<<2)>>2]|0;y=c[n>>2]|0;x=c[p>>2]|0;Nh(x+((c[y+(z*152|0)+144>>2]|0)*244|0)|0,x+((c[y+(z*152|0)+148>>2]|0)*244|0)|0,y+(z*152|0)|0);o=o+1|0}while((o|0)!=(l|0))}j=c[j>>2]|0;if((j|0)>0){p=b+156|0;k=b+76|0;l=b+36|0;o=b+16|0;n=0;do{e=c[(c[p>>2]|0)+(n<<2)>>2]|0;d=c[k>>2]|0;A=+g[(c[l>>2]|0)+((c[d+(e*152|0)+140>>2]|0)*152|0)+100>>2];if(A>0.0){B=A*+g[d+(e*152|0)+104>>2];g[d+(e*152|0)+120>>2]=-B;g[d+(e*152|0)+124>>2]=B;z=c[o>>2]|0;Mh(z+((c[d+(e*152|0)+144>>2]|0)*244|0)|0,z+((c[d+(e*152|0)+148>>2]|0)*244|0)|0,d+(e*152|0)|0)}n=n+1|0}while((n|0)!=(j|0))}j=c[b+88>>2]|0;if((j|0)<=0){i=f;return 0.0}o=b+96|0;p=b+36|0;l=b+16|0;k=0;do{b=c[o>>2]|0;B=+g[(c[p>>2]|0)+((c[b+(k*152|0)+140>>2]|0)*152|0)+100>>2];if(B>0.0){A=+g[b+(k*152|0)+104>>2];B=B*A;B=B>A?A:B;g[b+(k*152|0)+120>>2]=-B;g[b+(k*152|0)+124>>2]=B;z=c[l>>2]|0;Mh(z+((c[b+(k*152|0)+144>>2]|0)*244|0)|0,z+((c[b+(k*152|0)+148>>2]|0)*244|0)|0,b+(k*152|0)|0)}k=k+1|0}while((k|0)!=(j|0));i=f;return 0.0}if(q){r=b+136|0;s=b+56|0;q=b+16|0;u=0;do{v=c[(c[r>>2]|0)+(u<<2)>>2]|0;w=c[s>>2]|0;if((c[w+(v*152|0)+136>>2]|0)>(d|0)){t=c[q>>2]|0;Mh(t+((c[w+(v*152|0)+144>>2]|0)*244|0)|0,t+((c[w+(v*152|0)+148>>2]|0)*244|0)|0,w+(v*152|0)|0);t=c[h>>2]|0}u=u+1|0}while((u|0)<(t|0))}if((c[m+20>>2]|0)<=(d|0)){i=f;return 0.0}if((l|0)>0){q=m+12|0;h=b+16|0;m=0;do{r=k+(m<<2)|0;d=c[r>>2]|0;if((a[d+20|0]|0)!=0){x=Th(b,c[d+28>>2]|0,+g[q>>2])|0;z=Th(b,c[(c[r>>2]|0)+32>>2]|0,+g[q>>2])|0;y=c[h>>2]|0;w=c[r>>2]|0;jc[c[(c[w>>2]|0)+24>>2]&15](w,y+(x*244|0)|0,y+(z*244|0)|0,+g[q>>2])}m=m+1|0}while((m|0)!=(l|0))}l=c[e>>2]|0;k=c[n>>2]|0;if((l&512|0)!=0){n=(l>>>4&1)+1|0;if((k|0)<=0){i=f;return 0.0}l=b+116|0;j=b+36|0;m=b+16|0;d=b+156|0;s=b+76|0;b=0;do{t=c[(c[l>>2]|0)+(b<<2)>>2]|0;h=c[j>>2]|0;q=c[m>>2]|0;Nh(q+((c[h+(t*152|0)+144>>2]|0)*244|0)|0,q+((c[h+(t*152|0)+148>>2]|0)*244|0)|0,h+(t*152|0)|0);A=+g[h+(t*152|0)+100>>2];t=ba(b,n)|0;h=c[(c[d>>2]|0)+(t<<2)>>2]|0;q=c[s>>2]|0;r=A>0.0;if(r){B=A*+g[q+(h*152|0)+104>>2];g[q+(h*152|0)+120>>2]=-B;g[q+(h*152|0)+124>>2]=B;z=c[m>>2]|0;Mh(z+((c[q+(h*152|0)+144>>2]|0)*244|0)|0,z+((c[q+(h*152|0)+148>>2]|0)*244|0)|0,q+(h*152|0)|0)}if((c[e>>2]&16|0)!=0?(o=c[(c[d>>2]|0)+(t+1<<2)>>2]|0,p=c[s>>2]|0,r):0){B=A*+g[p+(o*152|0)+104>>2];g[p+(o*152|0)+120>>2]=-B;g[p+(o*152|0)+124>>2]=B;z=c[m>>2]|0;Mh(z+((c[p+(o*152|0)+144>>2]|0)*244|0)|0,z+((c[p+(o*152|0)+148>>2]|0)*244|0)|0,p+(o*152|0)|0)}b=b+1|0}while((b|0)!=(k|0));i=f;return 0.0}if((k|0)>0){n=b+116|0;l=b+36|0;p=b+16|0;o=0;do{z=c[(c[n>>2]|0)+(o<<2)>>2]|0;y=c[l>>2]|0;x=c[p>>2]|0;Nh(x+((c[y+(z*152|0)+144>>2]|0)*244|0)|0,x+((c[y+(z*152|0)+148>>2]|0)*244|0)|0,y+(z*152|0)|0);o=o+1|0}while((o|0)!=(k|0))}d=c[j>>2]|0;if((d|0)>0){l=b+156|0;k=b+76|0;p=b+36|0;n=b+16|0;o=0;do{j=c[(c[l>>2]|0)+(o<<2)>>2]|0;e=c[k>>2]|0;A=+g[(c[p>>2]|0)+((c[e+(j*152|0)+140>>2]|0)*152|0)+100>>2];if(A>0.0){B=A*+g[e+(j*152|0)+104>>2];g[e+(j*152|0)+120>>2]=-B;g[e+(j*152|0)+124>>2]=B;z=c[n>>2]|0;Mh(z+((c[e+(j*152|0)+144>>2]|0)*244|0)|0,z+((c[e+(j*152|0)+148>>2]|0)*244|0)|0,e+(j*152|0)|0)}o=o+1|0}while((o|0)!=(d|0))}j=c[b+88>>2]|0;if((j|0)<=0){i=f;return 0.0}p=b+96|0;o=b+36|0;b=b+16|0;k=0;do{l=c[p>>2]|0;B=+g[(c[o>>2]|0)+((c[l+(k*152|0)+140>>2]|0)*152|0)+100>>2];if(B>0.0){A=+g[l+(k*152|0)+104>>2];B=B*A;B=B>A?A:B;g[l+(k*152|0)+120>>2]=-B;g[l+(k*152|0)+124>>2]=B;z=c[b>>2]|0;Mh(z+((c[l+(k*152|0)+144>>2]|0)*244|0)|0,z+((c[l+(k*152|0)+148>>2]|0)*244|0)|0,l+(k*152|0)|0)}k=k+1|0}while((k|0)!=(j|0));i=f;return 0.0}function Yh(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;k=i;if((c[j+44>>2]|0)==0){i=k;return}g=j+20|0;h=c[g>>2]|0;e=(h|0)>0;if((c[j+64>>2]&256|0)==0){if(!e){i=k;return}d=a+28|0;j=a+116|0;e=a+36|0;a=a+16|0;b=1;while(1){f=c[d>>2]|0;if((f|0)>0){h=0;do{l=c[(c[j>>2]|0)+(h<<2)>>2]|0;m=c[e>>2]|0;n=c[a>>2]|0;Oh(n+((c[m+(l*152|0)+144>>2]|0)*244|0)|0,n+((c[m+(l*152|0)+148>>2]|0)*244|0)|0,m+(l*152|0)|0);h=h+1|0}while((h|0)!=(f|0));h=c[g>>2]|0}if((b|0)>=(h|0)){break}b=b+1|0}i=k;return}else{if(!e){i=k;return}e=a+28|0;j=a+116|0;d=a+36|0;a=a+16|0;b=1;while(1){f=c[e>>2]|0;if((f|0)>0){h=0;do{n=c[(c[j>>2]|0)+(h<<2)>>2]|0;m=c[d>>2]|0;l=c[a>>2]|0;Oh(l+((c[m+(n*152|0)+144>>2]|0)*244|0)|0,l+((c[m+(n*152|0)+148>>2]|0)*244|0)|0,m+(n*152|0)|0);h=h+1|0}while((h|0)!=(f|0));h=c[g>>2]|0}if((b|0)>=(h|0)){break}b=b+1|0}i=k;return}}function Zh(a,b,d,e,f,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;m=i;i=i+16|0;n=m;dr(2576);Zb[c[(c[a>>2]|0)+32>>2]&1](a,b,d,e,f,h,j,k,l);p=c[a+184>>2]|0;o=c[k+20>>2]|0;o=(p|0)>(o|0)?p:o;if((o|0)>0){p=0;do{+bc[c[(c[a>>2]|0)+40>>2]&3](a,p,b,d,e,f,h,j,k,l);p=p+1|0}while((p|0)<(o|0))}h=c[3598]|0;l=h+16|0;p=(c[l>>2]|0)+ -1|0;c[l>>2]=p;if((p|0)!=0){i=m;return 0.0}do{if((c[h+4>>2]|0)!=0){xb(n|0,0)|0;o=c[3584]|0;p=h+8|0;g[p>>2]=+(((c[n+4>>2]|0)-(c[o+4>>2]|0)+(((c[n>>2]|0)-(c[o>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[p>>2];if((c[l>>2]|0)==0){h=c[3598]|0;break}else{i=m;return 0.0}}}while(0);c[3598]=c[h+20>>2];i=m;return 0.0}function _h(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0,I=0.0;e=i;i=i+80|0;p=e+16|0;o=e;m=b+28|0;d=c[m>>2]|0;s=c[f+64>>2]|0;if((s&4|0)!=0&(d|0)>0){q=c[b+36>>2]|0;r=c[b+76>>2]|0;if((s&16|0)==0){s=0;do{H=c[q+(s*152|0)+132>>2]|0;g[H+120>>2]=+g[q+(s*152|0)+100>>2];g[H+124>>2]=+g[r+((c[q+(s*152|0)+140>>2]|0)*152|0)+100>>2];s=s+1|0}while((s|0)!=(d|0))}else{s=0;do{H=c[q+(s*152|0)+132>>2]|0;g[H+120>>2]=+g[q+(s*152|0)+100>>2];D=c[q+(s*152|0)+140>>2]|0;g[H+124>>2]=+g[r+(D*152|0)+100>>2];g[H+128>>2]=+g[r+((D+1|0)*152|0)+100>>2];s=s+1|0}while((s|0)!=(d|0))}}q=b+48|0;u=c[q>>2]|0;if((u|0)>0){t=b+56|0;s=f+12|0;x=0;do{r=c[t>>2]|0;v=c[r+(x*152|0)+132>>2]|0;d=c[v+44>>2]|0;w=r+(x*152|0)+100|0;if((d|0)!=0){G=+g[w>>2];C=v+28|0;D=c[C>>2]|0;F=1.0/+g[s>>2];E=G*+g[r+(x*152|0)+20>>2]*+g[D+352>>2]*F;I=G*+g[r+(x*152|0)+24>>2]*+g[D+356>>2]*F;g[d>>2]=+g[r+(x*152|0)+16>>2]*G*+g[D+348>>2]*F+ +g[d>>2];D=d+4|0;g[D>>2]=E+ +g[D>>2];D=d+8|0;g[D>>2]=I+ +g[D>>2];I=+g[w>>2];D=v+32|0;B=c[D>>2]|0;E=1.0/+g[s>>2];F=I*+g[r+(x*152|0)+52>>2]*+g[B+352>>2]*E;G=I*+g[r+(x*152|0)+56>>2]*+g[B+356>>2]*E;H=d+32|0;g[H>>2]=+g[r+(x*152|0)+48>>2]*I*+g[B+348>>2]*E+ +g[H>>2];H=d+36|0;g[H>>2]=F+ +g[H>>2];H=d+40|0;g[H>>2]=G+ +g[H>>2];C=c[C>>2]|0;G=+g[w>>2];F=1.0/+g[s>>2];E=+g[r+(x*152|0)+4>>2]*+g[C+548>>2]*G*F;I=G*+g[r+(x*152|0)+8>>2]*+g[C+552>>2]*F;H=d+16|0;g[H>>2]=+g[r+(x*152|0)>>2]*+g[C+544>>2]*G*F+ +g[H>>2];H=d+20|0;g[H>>2]=E+ +g[H>>2];H=d+24|0;g[H>>2]=I+ +g[H>>2];D=c[D>>2]|0;I=+g[w>>2];E=1.0/+g[s>>2];F=+g[r+(x*152|0)+36>>2]*+g[D+548>>2]*I*E;G=I*+g[r+(x*152|0)+40>>2]*+g[D+552>>2]*E;H=d+48|0;g[H>>2]=+g[r+(x*152|0)+32>>2]*+g[D+544>>2]*I*E+ +g[H>>2];H=d+52|0;g[H>>2]=F+ +g[H>>2];H=d+56|0;g[H>>2]=G+ +g[H>>2]}g[v+36>>2]=+g[w>>2];I=+Q(+(+g[w>>2]));if(I>=+g[v+16>>2]){a[v+20|0]=0}x=x+1|0}while((x|0)!=(u|0))}d=b+8|0;H=c[d>>2]|0;if((H|0)>0){t=b+16|0;s=f+44|0;r=f+12|0;u=f+52|0;f=o+4|0;z=o+8|0;y=o+12|0;v=p+16|0;w=p+32|0;x=p+48|0;B=c[t>>2]|0;A=0;do{C=B+(A*244|0)|0;D=c[B+(A*244|0)+240>>2]|0;if((D|0)!=0){if((c[s>>2]|0)==0){H=B+(A*244|0)+176|0;G=+g[B+(A*244|0)+64>>2]+ +g[H>>2];g[H>>2]=G;H=B+(A*244|0)+180|0;E=+g[B+(A*244|0)+68>>2]+ +g[H>>2];g[H>>2]=E;H=B+(A*244|0)+184|0;F=+g[B+(A*244|0)+72>>2]+ +g[H>>2];g[H>>2]=F;H=B+(A*244|0)+192|0;g[H>>2]=+g[B+(A*244|0)+80>>2]+ +g[H>>2];H=B+(A*244|0)+196|0;g[H>>2]=+g[B+(A*244|0)+84>>2]+ +g[H>>2];H=B+(A*244|0)+200|0;g[H>>2]=+g[B+(A*244|0)+88>>2]+ +g[H>>2]}else{F=+g[r>>2];E=+g[u>>2];D=B+(A*244|0)+176|0;g[D>>2]=+g[B+(A*244|0)+64>>2]+ +g[D>>2];D=B+(A*244|0)+180|0;g[D>>2]=+g[B+(A*244|0)+68>>2]+ +g[D>>2];D=B+(A*244|0)+184|0;g[D>>2]=+g[B+(A*244|0)+72>>2]+ +g[D>>2];D=B+(A*244|0)+192|0;g[D>>2]=+g[B+(A*244|0)+80>>2]+ +g[D>>2];D=B+(A*244|0)+196|0;g[D>>2]=+g[B+(A*244|0)+84>>2]+ +g[D>>2];D=B+(A*244|0)+200|0;g[D>>2]=+g[B+(A*244|0)+88>>2]+ +g[D>>2];D=B+(A*244|0)+144|0;H=B+(A*244|0)+148|0;if(((((!(+g[D>>2]!=0.0)?!(+g[H>>2]!=0.0):0)?!(+g[B+(A*244|0)+152>>2]!=0.0):0)?!(+g[B+(A*244|0)+160>>2]!=0.0):0)?!(+g[B+(A*244|0)+164>>2]!=0.0):0)?!(+g[B+(A*244|0)+168>>2]!=0.0):0){C=B}else{n=22}if((n|0)==22){n=0;G=+g[B+(A*244|0)+164>>2]*E;I=+g[B+(A*244|0)+168>>2]*E;g[o>>2]=+g[B+(A*244|0)+160>>2]*E;g[f>>2]=G;g[z>>2]=I;g[y>>2]=0.0;Wf(C,+g[D>>2],+g[H>>2],+g[B+(A*244|0)+152>>2],o,F,p);c[C+0>>2]=c[p+0>>2];c[C+4>>2]=c[p+4>>2];c[C+8>>2]=c[p+8>>2];c[C+12>>2]=c[p+12>>2];C=B+(A*244|0)+16|0;c[C+0>>2]=c[v+0>>2];c[C+4>>2]=c[v+4>>2];c[C+8>>2]=c[v+8>>2];c[C+12>>2]=c[v+12>>2];C=B+(A*244|0)+32|0;c[C+0>>2]=c[w+0>>2];c[C+4>>2]=c[w+4>>2];c[C+8>>2]=c[w+8>>2];c[C+12>>2]=c[w+12>>2];C=B+(A*244|0)+48|0;c[C+0>>2]=c[x+0>>2];c[C+4>>2]=c[x+4>>2];c[C+8>>2]=c[x+8>>2];c[C+12>>2]=c[x+12>>2];C=c[t>>2]|0}B=C;G=+g[C+(A*244|0)+176>>2];E=+g[C+(A*244|0)+180>>2];F=+g[C+(A*244|0)+184>>2];D=c[C+(A*244|0)+240>>2]|0}I=G+ +g[B+(A*244|0)+208>>2];G=E+ +g[B+(A*244|0)+212>>2];F=F+ +g[B+(A*244|0)+216>>2];H=D+260|0;c[H>>2]=(c[H>>2]|0)+1;g[D+312>>2]=I;g[D+316>>2]=G;g[D+320>>2]=F;g[D+324>>2]=0.0;D=c[t>>2]|0;H=c[D+(A*244|0)+240>>2]|0;F=+g[D+(A*244|0)+192>>2]+ +g[D+(A*244|0)+224>>2];G=+g[D+(A*244|0)+196>>2]+ +g[D+(A*244|0)+228>>2];I=+g[D+(A*244|0)+200>>2]+ +g[D+(A*244|0)+232>>2];D=H+260|0;c[D>>2]=(c[D>>2]|0)+1;g[H+328>>2]=F;g[H+332>>2]=G;g[H+336>>2]=I;g[H+340>>2]=0.0;if((c[s>>2]|0)!=0){D=c[t>>2]|0;H=c[D+(A*244|0)+240>>2]|0;B=D+(A*244|0)|0;C=H+260|0;c[C>>2]=(c[C>>2]|0)+1;C=H+4|0;c[C+0>>2]=c[B+0>>2];c[C+4>>2]=c[B+4>>2];c[C+8>>2]=c[B+8>>2];c[C+12>>2]=c[B+12>>2];C=H+20|0;B=D+(A*244|0)+16|0;c[C+0>>2]=c[B+0>>2];c[C+4>>2]=c[B+4>>2];c[C+8>>2]=c[B+8>>2];c[C+12>>2]=c[B+12>>2];C=H+36|0;B=D+(A*244|0)+32|0;c[C+0>>2]=c[B+0>>2];c[C+4>>2]=c[B+4>>2];c[C+8>>2]=c[B+8>>2];c[C+12>>2]=c[B+12>>2];H=H+52|0;D=D+(A*244|0)+48|0;c[H+0>>2]=c[D+0>>2];c[H+4>>2]=c[D+4>>2];c[H+8>>2]=c[D+8>>2];c[H+12>>2]=c[D+12>>2]}B=c[t>>2]|0;c[(c[B+(A*244|0)+240>>2]|0)+212>>2]=-1;H=c[d>>2]|0}A=A+1|0}while((A|0)<(H|0))}if((c[m>>2]|0)<0?(l=b+32|0,(c[l>>2]|0)<0):0){o=b+36|0;p=c[o>>2]|0;n=b+40|0;if((p|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[p+ -4>>2]|0)}c[o>>2]=0}a[n]=1;c[o>>2]=0;c[l>>2]=0}c[m>>2]=0;if((c[q>>2]|0)<0?(k=b+52|0,(c[k>>2]|0)<0):0){l=b+56|0;m=c[l>>2]|0;n=b+60|0;if((m|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[l>>2]=0}a[n]=1;c[l>>2]=0;c[k>>2]=0}c[q>>2]=0;k=b+68|0;if((c[k>>2]|0)<0?(j=b+72|0,(c[j>>2]|0)<0):0){m=b+76|0;n=c[m>>2]|0;l=b+80|0;if((n|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0)}c[m>>2]=0}a[l]=1;c[m>>2]=0;c[j>>2]=0}c[k>>2]=0;j=b+88|0;if((c[j>>2]|0)<0?(h=b+92|0,(c[h>>2]|0)<0):0){l=b+96|0;m=c[l>>2]|0;k=b+100|0;if((m|0)!=0){if((a[k]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[l>>2]=0}a[k]=1;c[l>>2]=0;c[h>>2]=0}c[j>>2]=0;if((c[d>>2]|0)>=0){c[d>>2]=0;i=e;return 0.0}h=b+12|0;if((c[h>>2]|0)>=0){c[d>>2]=0;i=e;return 0.0}j=b+16|0;k=c[j>>2]|0;b=b+20|0;if((k|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0)}c[j>>2]=0}a[b]=1;c[j>>2]=0;c[h>>2]=0;c[d>>2]=0;i=e;return 0.0}function $h(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0;m=i;i=i+16|0;n=m;dr(2616);+dc[c[(c[a>>2]|0)+44>>2]&3](a,b,d,e,f,h,j,k,l);+dc[c[(c[a>>2]|0)+48>>2]&3](a,b,d,e,f,h,j,k,l);+hc[c[(c[a>>2]|0)+36>>2]&1](a,b,d,k);j=c[3598]|0;d=j+16|0;e=(c[d>>2]|0)+ -1|0;c[d>>2]=e;if((e|0)!=0){i=m;return 0.0}do{if((c[j+4>>2]|0)!=0){xb(n|0,0)|0;f=c[3584]|0;e=j+8|0;g[e>>2]=+(((c[n+4>>2]|0)-(c[f+4>>2]|0)+(((c[n>>2]|0)-(c[f>>2]|0)|0)*1e6|0)-(c[j+12>>2]|0)|0)>>>0)/1.0e3+ +g[e>>2];if((c[d>>2]|0)==0){j=c[3598]|0;break}else{i=m;return 0.0}}}while(0);c[3598]=c[j+20>>2];i=m;return 0.0}function ai(a){a=a|0;c[a+192>>2]=0;return}function bi(a,b,c){a=a|0;b=b|0;c=c|0;return}function ci(a,b,c){a=a|0;b=b|0;c=c|0;return}function di(a){a=a|0;return 1}function ei(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0;f=i;i=i+160|0;j=f+16|0;h=f;c[b+4>>2]=d;c[b>>2]=64;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3.4028234663852886e+38;a[b+20|0]=1;a[b+21|0]=0;c[b+24>>2]=-1;c[b+28>>2]=e;e=b+32|0;if((a[3368]|0)==0?(Ya(3368)|0)!=0:0){c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[2916>>2]=1.0;g[2920>>2]=1.0;g[2924>>2]=1.0;g[2928>>2]=0.0;c[2932>>2]=0;g[2936>>2]=999999984306749400.0;c[2940>>2]=0;c[2944>>2]=0;c[2948>>2]=0;c[2952>>2]=0;c[2956>>2]=1;c[2960>>2]=-1;c[2964>>2]=-1;c[2968>>2]=1;g[2972>>2]=0.0;g[2976>>2]=.5;g[2980>>2]=0.0;g[2984>>2]=0.0;c[2988>>2]=1;c[2992>>2]=0;g[2996>>2]=1.0;c[3e3>>2]=0;c[3004>>2]=0;c[3008>>2]=0;c[3012>>2]=0;g[2756>>2]=1.0;c[2760>>2]=0;c[2764>>2]=0;c[2768>>2]=0;c[2772>>2]=0;g[2776>>2]=1.0;c[2780>>2]=0;c[2784>>2]=0;c[2788>>2]=0;c[2792>>2]=0;g[2796>>2]=1.0;c[2800>>2]=0;c[2804>>2]=0;c[2808>>2]=0;c[2812>>2]=0;c[2816>>2]=0;c[688]=2376;a[3252|0]=1;c[3248>>2]=0;c[3240>>2]=0;c[3244>>2]=0;g[j>>2]=0.0;c[j+4>>2]=0;c[j+72>>2]=0;d=j+76|0;c[d+0>>2]=c[h+0>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];g[j+92>>2]=0.0;g[j+96>>2]=0.0;g[j+100>>2]=.5;g[j+104>>2]=0.0;g[j+108>>2]=0.0;g[j+112>>2]=.800000011920929;g[j+116>>2]=1.0;a[j+120|0]=0;g[j+124>>2]=.004999999888241291;g[j+128>>2]=.009999999776482582;g[j+132>>2]=.009999999776482582;g[j+136>>2]=.009999999776482582;g[j+8>>2]=1.0;d=j+12|0;h=j+28|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[h>>2]=1.0;h=j+32|0;d=j+48|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[d>>2]=1.0;d=j+52|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;Ah(2752,j);yb(32,2752,p|0)|0;bb(3368)}c[2956>>2]=c[2956>>2]|1;g[3096>>2]=0.0;k=+g[3136>>2]*0.0;l=+g[3140>>2]*0.0;g[3116>>2]=+g[3132>>2]*0.0;g[3120>>2]=k;g[3124>>2]=l;g[3128>>2]=0.0;g[3148>>2]=0.0;g[3152>>2]=0.0;g[3156>>2]=0.0;g[3160>>2]=0.0;l=+g[3104>>2]*0.0;k=+g[3108>>2]*0.0;g[3312>>2]=+g[3100>>2]*0.0;g[3316>>2]=l;g[3320>>2]=k;g[3324>>2]=0.0;c[e>>2]=2752;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;i=f;return}function fi(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,h=0,j=0,k=0,l=0;f=i;j=a+28|0;c[b>>2]=$b[c[(c[e>>2]|0)+28>>2]&31](e,c[j>>2]|0)|0;h=a+32|0;c[b+4>>2]=$b[c[(c[e>>2]|0)+28>>2]&31](e,c[h>>2]|0)|0;k=$b[c[(c[e>>2]|0)+40>>2]&31](e,a)|0;l=$b[c[(c[e>>2]|0)+28>>2]&31](e,k)|0;c[b+8>>2]=l;if((l|0)!=0){Hb[c[(c[e>>2]|0)+48>>2]&127](e,k)}c[b+12>>2]=c[a+4>>2];c[b+24>>2]=d[a+21|0]|0;c[b+40>>2]=c[a+24>>2];g[b+44>>2]=+g[a+16>>2];c[b+48>>2]=d[a+20|0]|0;c[b+20>>2]=c[a+12>>2];c[b+16>>2]=c[a+8>>2];g[b+28>>2]=+g[a+36>>2];g[b+32>>2]=+g[a+40>>2];b=b+36|0;c[b>>2]=0;k=c[j>>2]|0;if((c[k+488>>2]|0)>0){e=0;do{if((c[(c[k+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b>>2]=1;k=c[j>>2]|0}e=e+1|0}while((e|0)<(c[k+488>>2]|0))}e=c[h>>2]|0;if((c[e+488>>2]|0)>0){j=0}else{i=f;return 2720}do{if((c[(c[e+496>>2]|0)+(j<<2)>>2]|0)==(a|0)){c[b>>2]=1;e=c[h>>2]|0}j=j+1|0}while((j|0)<(c[e+488>>2]|0));i=f;return 2720}function gi(d,f,h,j,k,l){d=d|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0;n=i;c[d>>2]=3560;b[d+4>>1]=-2;m=d+6|0;b[m>>1]=-1;p=d+8|0;q=d+24|0;w=d+92|0;c[w>>2]=k;c[d+96>>2]=0;v=d+100|0;a[v]=0;c[d+104>>2]=0;o=d+108|0;c[o>>2]=0;r=(j&65535)+1|0;j=r&65535;if((k|0)==0){c[3580]=(c[3580]|0)+1;k=vr(95)|0;if((k|0)!=0?(x=k+19&-16,c[x+ -4>>2]=k,(x|0)!=0):0){tn(x)}else{x=0}c[w>>2]=x;a[v]=1}if(!l){c[3580]=(c[3580]|0)+1;l=vr(43)|0;if((l|0)!=0?(t=l+19&-16,u=t,c[u+ -4>>2]=l,(t|0)!=0):0){k=t;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;c[u+20>>2]=0;c[t>>2]=3624;a[u+20|0]=1;c[u+16>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;t=k}else{t=0}u=d+112|0;c[u>>2]=t;c[3580]=(c[3580]|0)+1;t=vr(215)|0;if((t|0)!=0?(s=t+19&-16,c[s+ -4>>2]=t,(s|0)!=0):0){Nl(s,c[u>>2]|0)}else{s=0}c[o>>2]=s;a[s+193|0]=1}c[p+0>>2]=c[f+0>>2];c[p+4>>2]=c[f+4>>2];c[p+8>>2]=c[f+8>>2];c[p+12>>2]=c[f+12>>2];c[q+0>>2]=c[h+0>>2];c[q+4>>2]=c[h+4>>2];c[q+8>>2]=c[h+8>>2];c[q+12>>2]=c[h+12>>2];A=+(e[m>>1]|0);z=A/(+g[d+28>>2]- +g[d+12>>2]);y=A/(+g[d+32>>2]- +g[d+16>>2]);g[d+40>>2]=A/(+g[q>>2]- +g[p>>2]);g[d+44>>2]=z;g[d+48>>2]=y;g[d+52>>2]=0.0;p=r&65535;c[3580]=(c[3580]|0)+1;o=vr(p<<6|19)|0;if((o|0)==0){f=0}else{f=o+19&-16;c[f+ -4>>2]=o}if((p|0)!=0){o=f+(p<<6)|0;h=f;do{c[h>>2]=0;c[h+8>>2]=0;h=h+64|0}while((h|0)!=(o|0))}o=d+60|0;c[o>>2]=f;b[d+58>>1]=j;b[d+56>>1]=0;b[d+64>>1]=1;if(p>>>0>1){j=1;h=1;do{b[f+(j<<6)+48>>1]=j+1;h=h+1<<16>>16;j=h&65535}while(j>>>0<p>>>0)}b[f+(p+ -1<<6)+48>>1]=0;c[3580]=(c[3580]|0)+1;p=(p<<3|3)+16|0;j=vr(p)|0;if((j|0)!=0){f=j+19&-16;k=f;c[k+ -4>>2]=j;c[d+80>>2]=k;if((f|0)==0){f=0}}else{c[d+80>>2]=0;f=0}j=d+68|0;c[j>>2]=f;c[3580]=(c[3580]|0)+1;f=vr(p)|0;if((f|0)!=0){h=f+19&-16;k=h;c[k+ -4>>2]=f;c[d+84>>2]=k;if((h|0)==0){h=0}}else{c[d+84>>2]=0;h=0}f=d+72|0;c[f>>2]=h;c[3580]=(c[3580]|0)+1;p=vr(p)|0;if((p|0)!=0){h=p+19&-16;k=h;c[k+ -4>>2]=p;c[d+88>>2]=k;if((h|0)==0){h=0}}else{c[d+88>>2]=0;h=0}k=d+76|0;c[k>>2]=h;c[c[o>>2]>>2]=0;x=c[o>>2]|0;b[x+48>>1]=0;b[x+54>>1]=1;w=c[j>>2]|0;b[w>>1]=0;b[w+2>>1]=0;b[w+4>>1]=b[m>>1]|0;b[w+6>>1]=0;b[x+50>>1]=0;b[x+56>>1]=1;w=c[f>>2]|0;b[w>>1]=0;b[w+2>>1]=0;b[w+4>>1]=b[m>>1]|0;b[w+6>>1]=0;b[x+52>>1]=0;b[x+58>>1]=1;k=c[k>>2]|0;b[k>>1]=0;b[k+2>>1]=0;b[k+4>>1]=b[m>>1]|0;b[k+6>>1]=0;c[d>>2]=3384;i=n;return}function hi(a){a=a|0;var b=0;b=i;Ai(a);i=b;return}function ii(a){a=a|0;var b=0;b=i;Ai(a);if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function ji(a,d,f,h,j,k,l,m,n){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;p=i;i=i+16|0;E=p+6|0;y=p;xi(a,E,+g[d>>2],+g[d+4>>2],+g[d+8>>2],0);xi(a,y,+g[f>>2],+g[f+4>>2],+g[f+8>>2],1);r=a+64|0;A=b[r>>1]|0;q=a+60|0;B=c[q>>2]|0;o=A&65535;C=B+(o<<6)+48|0;b[r>>1]=b[C>>1]|0;r=a+56|0;b[r>>1]=(b[r>>1]|0)+1<<16>>16;c[B+(o<<6)+12>>2]=o;c[B+(o<<6)>>2]=j;b[B+(o<<6)+4>>1]=k;b[B+(o<<6)+6>>1]=l;c[B+(o<<6)+8>>2]=n;r=(e[r>>1]|0)<<1;x=r&65535;r=r&65534;F=r|1;D=r+ -1|0;n=D&65535;w=(c[q>>2]|0)+54|0;b[w>>1]=(e[w>>1]|0)+2;w=a+68|0;t=c[w>>2]|0;v=t+(F<<2)|0;t=t+(D<<2)|0;t=e[t>>1]|e[t+2>>1]<<16;b[v>>1]=t;b[v+2>>1]=t>>>16;v=c[w>>2]|0;b[v+(D<<2)>>1]=b[E>>1]|0;b[v+(D<<2)+2>>1]=A;b[v+(r<<2)>>1]=b[y>>1]|0;b[v+(r<<2)+2>>1]=A;b[C>>1]=n;v=B+(o<<6)+54|0;b[v>>1]=x;t=(c[q>>2]|0)+56|0;b[t>>1]=(e[t>>1]|0)+2;t=a+72|0;s=c[t>>2]|0;u=s+(F<<2)|0;s=s+(D<<2)|0;s=e[s>>1]|e[s+2>>1]<<16;b[u>>1]=s;b[u+2>>1]=s>>>16;u=c[t>>2]|0;b[u+(D<<2)>>1]=b[E+2>>1]|0;b[u+(D<<2)+2>>1]=A;b[u+(r<<2)>>1]=b[y+2>>1]|0;b[u+(r<<2)+2>>1]=A;u=B+(o<<6)+50|0;b[u>>1]=n;s=B+(o<<6)+56|0;b[s>>1]=x;z=(c[q>>2]|0)+58|0;b[z>>1]=(e[z>>1]|0)+2;z=a+76|0;G=c[z>>2]|0;F=G+(F<<2)|0;G=G+(D<<2)|0;G=e[G>>1]|e[G+2>>1]<<16;b[F>>1]=G;b[F+2>>1]=G>>>16;z=c[z>>2]|0;b[z+(D<<2)>>1]=b[E+4>>1]|0;b[z+(D<<2)+2>>1]=A;b[z+(r<<2)>>1]=b[y+4>>1]|0;b[z+(r<<2)+2>>1]=A;r=B+(o<<6)+52|0;b[r>>1]=n;n=B+(o<<6)+58|0;b[n>>1]=x;x=c[w>>2]|0;C=e[C>>1]|0;B=x+(C<<2)|0;z=x+(C+ -1<<2)|0;A=c[q>>2]|0;y=b[z>>1]|0;if((e[B>>1]|0)<(y&65535)){x=A+((e[x+(C<<2)+2>>1]|0)<<6)+48|0;while(1){C=e[z+2>>1]|0;if((y&1)==0){G=A+(C<<6)+48|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}else{G=A+(C<<6)+54|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}b[x>>1]=(b[x>>1]|0)+ -1<<16>>16;y=e[B>>1]|e[B+2>>1]<<16;G=e[z>>1]|e[z+2>>1]<<16;b[B>>1]=G;b[B+2>>1]=G>>>16;b[z>>1]=y;b[z+2>>1]=y>>>16;B=B+ -4|0;z=z+ -4|0;y=b[z>>1]|0;if(!((e[B>>1]|0)<(y&65535))){break}A=c[q>>2]|0}x=c[w>>2]|0}v=e[v>>1]|0;z=x+(v<<2)|0;y=x+(v+ -1<<2)|0;w=b[y>>1]|0;a:do{if((e[z>>1]|0)<(w&65535)){G=c[q>>2]|0;v=G+((e[x+(v<<2)+2>>1]|0)<<6)+54|0;x=G;while(1){A=e[y+2>>1]|0;if((w&1)==0){G=x+(A<<6)+48|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}else{G=x+(A<<6)+54|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}b[v>>1]=(b[v>>1]|0)+ -1<<16>>16;w=e[z>>1]|e[z+2>>1]<<16;G=e[y>>1]|e[y+2>>1]<<16;b[z>>1]=G;b[z+2>>1]=G>>>16;b[y>>1]=w;b[y+2>>1]=w>>>16;z=z+ -4|0;y=y+ -4|0;w=b[y>>1]|0;if(!((e[z>>1]|0)<(w&65535))){break a}x=c[q>>2]|0}}}while(0);z=c[t>>2]|0;u=e[u>>1]|0;y=z+(u<<2)|0;w=z+(u+ -1<<2)|0;x=c[q>>2]|0;v=b[w>>1]|0;if((e[y>>1]|0)<(v&65535)){u=x+((e[z+(u<<2)+2>>1]|0)<<6)+50|0;while(1){z=e[w+2>>1]|0;if((v&1)==0){G=x+(z<<6)+50|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}else{G=x+(z<<6)+56|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}b[u>>1]=(b[u>>1]|0)+ -1<<16>>16;v=e[y>>1]|e[y+2>>1]<<16;G=e[w>>1]|e[w+2>>1]<<16;b[y>>1]=G;b[y+2>>1]=G>>>16;b[w>>1]=v;b[w+2>>1]=v>>>16;y=y+ -4|0;w=w+ -4|0;v=b[w>>1]|0;if(!((e[y>>1]|0)<(v&65535))){break}x=c[q>>2]|0}z=c[t>>2]|0}s=e[s>>1]|0;w=z+(s<<2)|0;v=z+(s+ -1<<2)|0;u=b[v>>1]|0;b:do{if((e[w>>1]|0)<(u&65535)){t=c[q>>2]|0;s=t+((e[z+(s<<2)+2>>1]|0)<<6)+56|0;while(1){x=e[v+2>>1]|0;if((u&1)==0){G=t+(x<<6)+50|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}else{G=t+(x<<6)+56|0;b[G>>1]=(b[G>>1]|0)+1<<16>>16}b[s>>1]=(b[s>>1]|0)+ -1<<16>>16;u=e[w>>1]|e[w+2>>1]<<16;G=e[v>>1]|e[v+2>>1]<<16;b[w>>1]=G;b[w+2>>1]=G>>>16;b[v>>1]=u;b[v+2>>1]=u>>>16;w=w+ -4|0;v=v+ -4|0;u=b[v>>1]|0;if(!((e[w>>1]|0)<(u&65535))){break b}t=c[q>>2]|0}}}while(0);yi(a,2,b[r>>1]|0);zi(a,2,b[n>>1]|0,m);q=c[q>>2]|0;a=c[a+108>>2]|0;if((a|0)==0){G=q+(o<<6)|0;i=p;return G|0}c[q+(o<<6)+60>>2]=ic[c[(c[a>>2]|0)+8>>2]&3](a,d,f,h,j,k,l,m,0)|0;G=q+(o<<6)|0;i=p;return G|0}function ki(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;h=c[a+108>>2]|0;if((h|0)!=0){kc[c[(c[h>>2]|0)+12>>2]&63](h,c[d+60>>2]|0,f)}h=c[d+12>>2]|0;j=h&65535;d=a+60|0;k=c[d>>2]|0;h=h&65535;l=a+92|0;v=c[l>>2]|0;if(!(Jb[c[(c[v>>2]|0)+56>>2]&63](v)|0)){v=c[l>>2]|0;kc[c[(c[v>>2]|0)+16>>2]&63](v,k+(h<<6)|0,f)}f=a+56|0;l=e[f>>1]|0;m=c[d>>2]|0;n=m+54|0;b[n>>1]=(e[n>>1]|0)+65534;n=m+56|0;b[n>>1]=(e[n>>1]|0)+65534;m=m+58|0;b[m>>1]=(e[m>>1]|0)+65534;m=a+6|0;l=(l<<1)+ -1|0;n=0;do{p=a+(n<<2)+68|0;o=c[p>>2]|0;r=e[k+(h<<6)+(n<<1)+54>>1]|0;b[o+(r<<2)>>1]=b[m>>1]|0;t=r+1|0;s=b[o+(t<<2)+2>>1]|0;if(s<<16>>16==0){t=o}else{q=(c[d>>2]|0)+((e[o+(r<<2)+2>>1]|0)<<6)+(n<<1)+54|0;r=o+(r<<2)|0;t=o+(t<<2)|0;while(1){v=b[t>>1]|0;if((e[r>>1]|0)<(v&65535)){break}u=c[d>>2]|0;s=s&65535;if((v&1)==0){v=u+(s<<6)+(n<<1)+48|0;b[v>>1]=(b[v>>1]|0)+ -1<<16>>16}else{v=u+(s<<6)+(n<<1)+54|0;b[v>>1]=(b[v>>1]|0)+ -1<<16>>16}b[q>>1]=(b[q>>1]|0)+1<<16>>16;s=e[r>>1]|e[r+2>>1]<<16;v=e[t>>1]|e[t+2>>1]<<16;b[r>>1]=v;b[r+2>>1]=v>>>16;b[t>>1]=s;b[t+2>>1]=s>>>16;s=b[t+6>>1]|0;if(s<<16>>16==0){break}else{r=r+4|0;t=t+4|0}}t=c[p>>2]|0}r=e[k+(h<<6)+(n<<1)+48>>1]|0;b[o+(r<<2)>>1]=b[m>>1]|0;s=r+1|0;q=b[t+(s<<2)+2>>1]|0;a:do{if(!(q<<16>>16==0)){p=(c[d>>2]|0)+((e[t+(r<<2)+2>>1]|0)<<6)+(n<<1)+48|0;r=t+(r<<2)|0;s=t+(s<<2)|0;while(1){t=b[s>>1]|0;if((e[r>>1]|0)<(t&65535)){break a}u=c[d>>2]|0;q=q&65535;if((t&1)==0){v=u+(q<<6)+(n<<1)+48|0;b[v>>1]=(b[v>>1]|0)+ -1<<16>>16}else{v=u+(q<<6)+(n<<1)+54|0;b[v>>1]=(b[v>>1]|0)+ -1<<16>>16}b[p>>1]=(b[p>>1]|0)+1<<16>>16;q=e[r>>1]|e[r+2>>1]<<16;v=e[s>>1]|e[s+2>>1]<<16;b[r>>1]=v;b[r+2>>1]=v>>>16;b[s>>1]=q;b[s+2>>1]=q>>>16;q=b[s+6>>1]|0;if(q<<16>>16==0){break}else{r=r+4|0;s=s+4|0}}}}while(0);b[o+(l<<2)+2>>1]=0;b[o+(l<<2)>>1]=b[m>>1]|0;n=n+1|0}while((n|0)!=3);v=a+64|0;b[(c[d>>2]|0)+(h<<6)+48>>1]=b[v>>1]|0;b[v>>1]=j;b[f>>1]=(b[f>>1]|0)+ -1<<16>>16;i=g;return}function li(a,d,f,h,j){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;k=i;i=i+16|0;m=k+6|0;n=k;z=d+16|0;c[z+0>>2]=c[f+0>>2];c[z+4>>2]=c[f+4>>2];c[z+8>>2]=c[f+8>>2];c[z+12>>2]=c[f+12>>2];z=d+32|0;c[z+0>>2]=c[h+0>>2];c[z+4>>2]=c[h+4>>2];c[z+8>>2]=c[h+8>>2];c[z+12>>2]=c[h+12>>2];z=a+60|0;A=c[z>>2]|0;B=c[d+12>>2]&65535;xi(a,m,+g[f>>2],+g[f+4>>2],+g[f+8>>2],0);xi(a,n,+g[h>>2],+g[h+4>>2],+g[h+8>>2],1);I=a+92|0;p=a+96|0;o=0;do{M=b[A+(B<<6)+(o<<1)+48>>1]|0;H=b[A+(B<<6)+(o<<1)+54>>1]|0;U=b[m+(o<<1)>>1]|0;J=M&65535;L=a+(o<<2)+68|0;X=c[L>>2]|0;V=X+(J<<2)|0;K=(U&65535)-(e[V>>1]|0)|0;W=b[n+(o<<1)>>1]|0;T=H&65535;X=X+(T<<2)|0;l=(W&65535)-(e[X>>1]|0)|0;b[V>>1]=U;b[X>>1]=W;if((K|0)<0){yi(a,o,M)}a:do{if((l|0)>0?(F=c[L>>2]|0,G=T+1|0,C=c[z>>2]|0,D=e[F+(T<<2)+2>>1]|0,E=b[F+(G<<2)+2>>1]|0,!(E<<16>>16==0)):0){P=1<<o&3;M=1<<P&3;R=C+(D<<6)+(P<<1)+54|0;Q=C+(D<<6)+(P<<1)+48|0;O=C+(D<<6)+(M<<1)+54|0;N=C+(D<<6)+(M<<1)+48|0;S=C+(D<<6)+(o<<1)+54|0;X=E;W=F+(T<<2)|0;T=F+(G<<2)|0;while(1){V=b[T>>1]|0;if((e[W>>1]|0)<(V&65535)){break a}U=c[z>>2]|0;X=X&65535;if((V&1)==0){if(((((e[R>>1]|0)>=(e[U+(X<<6)+(P<<1)+48>>1]|0)?(e[U+(X<<6)+(P<<1)+54>>1]|0)>=(e[Q>>1]|0):0)?(e[O>>1]|0)>=(e[U+(X<<6)+(M<<1)+48>>1]|0):0)?(e[U+(X<<6)+(M<<1)+54>>1]|0)>=(e[N>>1]|0):0)?(t=c[I>>2]|0,u=U+((e[W+2>>1]|0)<<6)|0,v=U+(X<<6)|0,Sb[c[(c[t>>2]|0)+8>>2]&31](t,u,v)|0,t=c[p>>2]|0,(t|0)!=0):0){Sb[c[(c[t>>2]|0)+8>>2]&31](t,u,v)|0}X=U+(X<<6)+(o<<1)+48|0;b[X>>1]=(b[X>>1]|0)+ -1<<16>>16}else{X=U+(X<<6)+(o<<1)+54|0;b[X>>1]=(b[X>>1]|0)+ -1<<16>>16}b[S>>1]=(b[S>>1]|0)+1<<16>>16;X=e[W>>1]|e[W+2>>1]<<16;V=e[T>>1]|e[T+2>>1]<<16;b[W>>1]=V;b[W+2>>1]=V>>>16;b[T>>1]=X;b[T+2>>1]=X>>>16;X=b[T+6>>1]|0;if(X<<16>>16==0){break}else{W=W+4|0;T=T+4|0}}}}while(0);b:do{if((K|0)>0?(w=c[L>>2]|0,y=J+1|0,x=b[w+(y<<2)+2>>1]|0,!(x<<16>>16==0)):0){L=(c[z>>2]|0)+((e[w+(J<<2)+2>>1]|0)<<6)+(o<<1)+48|0;K=1<<o&3;M=1<<K&3;P=x;J=w+(J<<2)|0;O=w+(y<<2)|0;while(1){Q=b[O>>1]|0;if((e[J>>1]|0)<(Q&65535)){break b}N=c[z>>2]|0;P=P&65535;if((Q&1)==0){X=N+(P<<6)+(o<<1)+48|0;b[X>>1]=(b[X>>1]|0)+ -1<<16>>16}else{Q=e[J+2>>1]|0;if(((((e[N+(Q<<6)+(K<<1)+54>>1]|0)>=(e[N+(P<<6)+(K<<1)+48>>1]|0)?(e[N+(P<<6)+(K<<1)+54>>1]|0)>=(e[N+(Q<<6)+(K<<1)+48>>1]|0):0)?(e[N+(Q<<6)+(M<<1)+54>>1]|0)>=(e[N+(P<<6)+(M<<1)+48>>1]|0):0)?(e[N+(P<<6)+(M<<1)+54>>1]|0)>=(e[N+(Q<<6)+(M<<1)+48>>1]|0):0)?(q=c[I>>2]|0,r=N+(Q<<6)|0,s=N+(P<<6)|0,Nb[c[(c[q>>2]|0)+12>>2]&15](q,r,s,j)|0,q=c[p>>2]|0,(q|0)!=0):0){Nb[c[(c[q>>2]|0)+12>>2]&15](q,r,s,j)|0}X=N+(P<<6)+(o<<1)+54|0;b[X>>1]=(b[X>>1]|0)+ -1<<16>>16}b[L>>1]=(b[L>>1]|0)+1<<16>>16;P=e[J>>1]|e[J+2>>1]<<16;X=e[O>>1]|e[O+2>>1]<<16;b[J>>1]=X;b[J+2>>1]=X>>>16;b[O>>1]=P;b[O+2>>1]=P>>>16;P=b[O+6>>1]|0;if(P<<16>>16==0){break}else{J=J+4|0;O=O+4|0}}}}while(0);if((l|0)<0){zi(a,o,H,j)}o=o+1|0}while((o|0)!=3);l=c[a+108>>2]|0;if((l|0)==0){i=k;return}Db[c[(c[l>>2]|0)+16>>2]&31](l,c[d+60>>2]|0,f,h,j);i=k;return}function mi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;a=i;f=b+16|0;c[d+0>>2]=c[f+0>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];d=b+32|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];i=a;return}function ni(a,d,f,g,h,j){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;k=i;l=c[a+108>>2]|0;if((l|0)!=0){Tb[c[(c[l>>2]|0)+24>>2]&7](l,d,f,g,h,j);i=k;return}f=a+56|0;j=b[f>>1]|0;if(!((j&65535)<<1>>>0>1)){i=k;return}l=a+68|0;a=a+60|0;h=1;d=2;while(1){m=c[l>>2]|0;if(!((b[m+(h<<2)>>1]&1)==0)){$b[c[(c[g>>2]|0)+8>>2]&31](g,(c[a>>2]|0)+((e[m+(h<<2)+2>>1]|0)<<6)|0)|0;j=b[f>>1]|0}h=d&65535;if(!(h>>>0<((j&65535)<<1|1)>>>0)){break}d=d+1<<16>>16}i=k;return}function oi(a,d,f,h){a=a|0;d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;k=c[a+108>>2]|0;if((k|0)!=0){oc[c[(c[k>>2]|0)+28>>2]&63](k,d,f,h);i=j;return}l=a+56|0;r=b[l>>1]|0;if(!((r&65535)<<1>>>0>1)){i=j;return}k=a+68|0;a=a+60|0;m=d+8|0;o=d+4|0;n=f+4|0;p=f+8|0;t=1;q=2;while(1){u=c[k>>2]|0;if(!((b[u+(t<<2)>>1]&1)==0)){s=c[a>>2]|0;t=e[u+(t<<2)+2>>1]|0;if(!(+g[d>>2]>+g[s+(t<<6)+32>>2])?!(+g[f>>2]<+g[s+(t<<6)+16>>2]):0){u=1}else{u=0}if(!(!(+g[m>>2]>+g[s+(t<<6)+40>>2])?!(+g[p>>2]<+g[s+(t<<6)+24>>2]):0)){u=0}if(!(+g[o>>2]>+g[s+(t<<6)+36>>2])?!(+g[n>>2]<+g[s+(t<<6)+20>>2]|u^1):0){$b[c[(c[h>>2]|0)+8>>2]&31](h,s+(t<<6)|0)|0;r=b[l>>1]|0}}t=q&65535;if(!(t>>>0<((r&65535)<<1|1)>>>0)){break}q=q+1<<16>>16}i=j;return}function pi(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+32|0;k=g+16|0;f=g;j=a+92|0;y=c[j>>2]|0;if(!(Jb[c[(c[y>>2]|0)+56>>2]&63](y)|0)){i=g;return}d=c[j>>2]|0;d=Jb[c[(c[d>>2]|0)+28>>2]&63](d)|0;h=d+4|0;l=c[h>>2]|0;if((l|0)>1){wi(d,0,l+ -1|0);l=c[h>>2]|0}a=a+104|0;s=l-(c[a>>2]|0)|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;vi(d,s,k);c[a>>2]=0;s=c[h>>2]|0;if((s|0)>0){k=d+12|0;m=0;t=0;n=0;l=0;while(1){p=c[k>>2]|0;o=p+(l<<4)|0;r=c[o>>2]|0;p=p+(l<<4)+4|0;q=c[p>>2]|0;if((r|0)==(m|0)){if((q|0)==(t|0)){q=t;r=m;m=12}else{r=m;m=8}}else{m=8}a:do{if((m|0)==8){m=0;y=r+54|0;v=q+54|0;u=q+48|0;t=r+48|0;x=0;while(1){if((e[y+(x<<1)>>1]|0)<(e[u+(x<<1)>>1]|0)){m=12;break a}w=x+1|0;if((e[v+(x<<1)>>1]|0)<(e[t+(x<<1)>>1]|0)){m=12;break a}if((w|0)<3){x=w}else{break}}}}while(0);if((m|0)==12){n=c[j>>2]|0;kc[c[(c[n>>2]|0)+32>>2]&63](n,o,b);c[o>>2]=0;c[p>>2]=0;n=(c[a>>2]|0)+1|0;c[a>>2]=n;c[2630]=(c[2630]|0)+ -1;s=c[h>>2]|0}l=l+1|0;if((l|0)>=(s|0)){break}else{m=r;t=q}}if((s|0)>1){wi(d,0,s+ -1|0);n=c[a>>2]|0;s=c[h>>2]|0}}else{n=0}y=s-n|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;vi(d,y,f);c[a>>2]=0;i=g;return}function qi(a){a=a|0;return c[a+92>>2]|0}function ri(a){a=a|0;return c[a+92>>2]|0}function si(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=a+8|0;c[b+0>>2]=c[f+0>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];b=a+24|0;c[d+0>>2]=c[b+0>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];i=e;return}function ti(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;d=i;if((b[a+56>>1]|0)!=0){i=d;return}b[a+64>>1]=1;e=a+58|0;f=b[e>>1]|0;a=c[a+60>>2]|0;if((f&65535)>1){g=1;f=1;while(1){b[a+(g<<6)+48>>1]=g+1;f=f+1<<16>>16;g=b[e>>1]|0;if((f&65535)<(g&65535)){g=f&65535}else{f=g;break}}}b[a+((f&65535)+ -1<<6)+48>>1]=0;i=d;return}function ui(a){a=a|0;return}



function nm(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;e=i;c[b>>2]=7600;c[3580]=(c[3580]|0)+1;L=vr(379)|0;if((L|0)==0){M=0}else{M=L+19&-16;c[M+ -4>>2]=L}g[M+308>>2]=9999999747378752.0e-20;L=M+332|0;a[L]=a[L]&-16;L=b+24|0;c[L>>2]=M;M=(c[d+20>>2]|0)==0;c[3580]=(c[3580]|0)+1;N=vr(23)|0;if((N|0)==0){N=0}else{O=N+19&-16;c[O+ -4>>2]=N;N=O}O=(N|0)==0;if(M){if(O){N=0}else{c[N>>2]=10224}c[b+28>>2]=N}else{if(O){N=0}else{c[N>>2]=8896}c[b+28>>2]=N}c[3580]=(c[3580]|0)+1;M=vr(43)|0;if((M|0)!=0?(K=M+19&-16,J=K,c[J+ -4>>2]=M,(K|0)!=0):0){N=c[L>>2]|0;O=c[b+28>>2]|0;a[J+4|0]=0;c[K>>2]=13416;c[J+16>>2]=0;c[J+20>>2]=3;c[J+12>>2]=N;c[J+8>>2]=O}else{K=0}c[b+32>>2]=K;c[3580]=(c[3580]|0)+1;J=vr(27)|0;if((J|0)!=0?(H=J+19&-16,I=H,c[I+ -4>>2]=J,(H|0)!=0):0){a[I+4|0]=0;c[H>>2]=8608}else{H=0}c[b+36>>2]=H;c[3580]=(c[3580]|0)+1;H=vr(27)|0;if((H|0)!=0?(G=H+19&-16,F=G,c[F+ -4>>2]=H,(G|0)!=0):0){a[F+4|0]=0;c[G>>2]=8504}else{G=0}c[b+40>>2]=G;c[3580]=(c[3580]|0)+1;F=vr(27)|0;if((F|0)!=0?(E=F+19&-16,D=E,c[D+ -4>>2]=F,(E|0)!=0):0){a[D+4|0]=0;c[E>>2]=8416}else{E=0}c[b+44>>2]=E;c[3580]=(c[3580]|0)+1;D=vr(27)|0;if((D|0)!=0?(C=D+19&-16,B=C,c[B+ -4>>2]=D,(C|0)!=0):0){a[B+4|0]=0;c[C>>2]=8320}else{C=0}c[b+48>>2]=C;c[3580]=(c[3580]|0)+1;B=vr(27)|0;if((B|0)!=0?(A=B+19&-16,z=A,c[z+ -4>>2]=B,(A|0)!=0):0){a[z+4|0]=0;c[A>>2]=8224}else{A=0}c[b+52>>2]=A;c[3580]=(c[3580]|0)+1;z=vr(27)|0;if((z|0)!=0?(x=z+19&-16,y=x,c[y+ -4>>2]=z,(x|0)!=0):0){a[y+4|0]=0;c[x>>2]=8144}else{x=0}c[b+56>>2]=x;c[3580]=(c[3580]|0)+1;x=vr(27)|0;if((x|0)!=0?(v=x+19&-16,w=v,c[w+ -4>>2]=x,(v|0)!=0):0){a[w+4|0]=0;c[v>>2]=8048}else{v=0}c[b+60>>2]=v;c[3580]=(c[3580]|0)+1;v=vr(27)|0;if((v|0)!=0?(t=v+19&-16,u=t,c[u+ -4>>2]=v,(t|0)!=0):0){a[u+4|0]=0;c[t>>2]=7952}else{t=0}c[b+76>>2]=t;c[3580]=(c[3580]|0)+1;t=vr(27)|0;if((t|0)!=0?(s=t+19&-16,r=s,c[r+ -4>>2]=t,(s|0)!=0):0){a[r+4|0]=0;c[s>>2]=7952}else{s=0}c[b+80>>2]=s;a[s+4|0]=1;c[3580]=(c[3580]|0)+1;r=vr(27)|0;if((r|0)!=0?(q=r+19&-16,p=q,c[p+ -4>>2]=r,(q|0)!=0):0){a[p+4|0]=0;c[q>>2]=7864}else{q=0}c[b+72>>2]=q;c[3580]=(c[3580]|0)+1;p=vr(35)|0;if((p|0)!=0?(n=p+19&-16,o=n,c[o+ -4>>2]=p,(n|0)!=0):0){a[o+4|0]=0;c[n>>2]=7728;c[o+8>>2]=1;c[o+12>>2]=0}else{n=0}c[b+88>>2]=n;c[3580]=(c[3580]|0)+1;n=vr(35)|0;if((n|0)!=0?(l=n+19&-16,m=l,c[m+ -4>>2]=n,(l|0)!=0):0){a[m+4|0]=0;c[l>>2]=7728;c[m+8>>2]=1;c[m+12>>2]=0}else{l=0}c[b+84>>2]=l;a[l+4|0]=1;l=c[d+16>>2]|0;l=(l|0)<36?36:l;l=(l|0)>80?l:80;l=(l|0)>44?l:44;n=c[d>>2]|0;m=b+12|0;if((n|0)==0){a[m]=1;c[3580]=(c[3580]|0)+1;m=vr(39)|0;if((m|0)!=0?(k=m+19&-16,j=k,c[j+ -4>>2]=m,(k|0)!=0):0){m=k;O=c[d+8>>2]|0;n=k;c[n>>2]=772;o=j+4|0;c[o>>2]=O;c[3580]=(c[3580]|0)+1;k=vr((O*772|3)+16|0)|0;if((k|0)==0){k=0}else{O=k+19&-16;c[O+ -4>>2]=k;k=O}c[j+16>>2]=k;c[j+12>>2]=k;O=c[o>>2]|0;c[j+8>>2]=O;j=O+ -1|0;if((j|0)!=0){n=c[n>>2]|0;o=j;p=k;do{O=p;p=p+n|0;c[O>>2]=p;o=o+ -1|0}while((o|0)!=0);k=k+(ba(n,j)|0)|0}c[k>>2]=0}else{m=0}c[b+8>>2]=m}else{a[m]=0;c[b+8>>2]=n}j=c[d+4>>2]|0;k=b+20|0;if((j|0)!=0){a[k]=0;c[b+16>>2]=j;i=e;return}a[k]=1;c[3580]=(c[3580]|0)+1;j=vr(39)|0;if((j|0)!=0?(h=j+19&-16,f=h,c[f+ -4>>2]=j,(h|0)!=0):0){j=h;d=c[d+12>>2]|0;c[h>>2]=l;k=f+4|0;c[k>>2]=d;d=ba(d,l)|0;c[3580]=(c[3580]|0)+1;d=vr(d+19|0)|0;if((d|0)==0){d=0}else{O=d+19&-16;c[O+ -4>>2]=d;d=O}c[f+16>>2]=d;c[f+12>>2]=d;O=c[k>>2]|0;c[f+8>>2]=O;f=O+ -1|0;if((f|0)!=0){k=c[h>>2]|0;l=f;h=d;do{O=h;h=h+k|0;c[O>>2]=h;l=l+ -1|0}while((l|0)!=0);d=d+(ba(k,f)|0)|0}c[d>>2]=0}else{j=0}c[b+16>>2]=j;i=e;return}function om(a){a=a|0;var b=0;b=i;pm(a);if((a|0)!=0){wr(a)}i=b;return}function pm(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;c[b>>2]=7600;if((a[b+20|0]|0)!=0){f=b+16|0;e=c[f>>2]|0;g=c[e+16>>2]|0;if((g|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0);e=c[f>>2]|0}if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}}if((a[b+12|0]|0)!=0){f=b+8|0;e=c[f>>2]|0;g=c[e+16>>2]|0;if((g|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0);e=c[f>>2]|0}if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}}e=b+32|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+36|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+40|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+44|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+48|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+52|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+56|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+60|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+76|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+80|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+72|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+88|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+84|0;g=c[e>>2]|0;Fb[c[c[g>>2]>>2]&255](g);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=c[b+24>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}b=b+28|0;g=c[b>>2]|0;Fb[c[c[g>>2]>>2]&255](g);b=c[b>>2]|0;if((b|0)==0){i=d;return}c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0);i=d;return}function qm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;g=(b|0)==8;f=(d|0)==8;do{if(!(g&f)){if(g&(d|0)==1){a=a+76|0;break}if((b|0)==1&f){a=a+80|0;break}if((d|b|0)==0){a=a+72|0;break}f=(b|0)<20;if(f&(d|0)==28){a=a+88|0;break}g=(d|0)<20;if(g&(b|0)==28){a=a+84|0;break}if(f){if(g){a=a+32|0;break}if((d+ -21|0)>>>0<9){a=a+36|0;break}}else{if(g?(b+ -21|0)>>>0<9:0){a=a+40|0;break}}d=(d|0)==31;if((b|0)==31){if(d){a=a+48|0;break}else{a=a+44|0;break}}else{if(d){a=a+52|0;break}else{a=a+56|0;break}}}else{a=a+60|0}}while(0);i=e;return c[a>>2]|0}function rm(a){a=a|0;return c[a+8>>2]|0}function sm(a){a=a|0;return c[a+16>>2]|0}function tm(a){a=a|0;return c[a+24>>2]|0}function um(a){a=a|0;return}function vm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function wm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;h=i;g=c[d>>2]|0;g=$b[c[(c[g>>2]|0)+56>>2]&31](g,28)|0;j=(g|0)==0;if((a[b+4|0]|0)==0){if(j){b=0;i=h;return b|0}m=c[b+8>>2]|0;l=c[b+12>>2]|0;k=c[d>>2]|0;d=g+4|0;c[d>>2]=k;c[g>>2]=14032;b=g+8|0;a[b]=0;j=g+12|0;c[j>>2]=0;a[g+16|0]=0;c[g+20>>2]=m;c[g+24>>2]=l;e=e+8|0;f=f+8|0;if(!(Sb[c[(c[k>>2]|0)+24>>2]&31](k,c[e>>2]|0,c[f>>2]|0)|0)){m=g;i=h;return m|0}m=c[d>>2]|0;c[j>>2]=Sb[c[(c[m>>2]|0)+12>>2]&31](m,c[e>>2]|0,c[f>>2]|0)|0;a[b]=1;m=g;i=h;return m|0}else{if(j){m=0;i=h;return m|0}k=c[b+8>>2]|0;l=c[b+12>>2]|0;m=c[d>>2]|0;b=g+4|0;c[b>>2]=m;c[g>>2]=14032;d=g+8|0;a[d]=0;j=g+12|0;c[j>>2]=0;a[g+16|0]=1;c[g+20>>2]=k;c[g+24>>2]=l;f=f+8|0;e=e+8|0;if(!(Sb[c[(c[m>>2]|0)+24>>2]&31](m,c[f>>2]|0,c[e>>2]|0)|0)){m=g;i=h;return m|0}m=c[b>>2]|0;c[j>>2]=Sb[c[(c[m>>2]|0)+12>>2]&31](m,c[f>>2]|0,c[e>>2]|0)|0;a[d]=1;m=g;i=h;return m|0}return 0}function xm(a){a=a|0;return}function ym(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function zm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;b=c[d>>2]|0;b=$b[c[(c[b>>2]|0)+56>>2]&31](b,16)|0;if((b|0)==0){j=0;i=g;return j|0}k=c[d>>2]|0;h=b+4|0;c[h>>2]=k;c[b>>2]=12224;d=b+8|0;a[d]=0;j=b+12|0;c[j>>2]=0;e=e+8|0;f=f+8|0;if(!(Sb[c[(c[k>>2]|0)+24>>2]&31](k,c[e>>2]|0,c[f>>2]|0)|0)){k=b;i=g;return k|0}k=c[h>>2]|0;c[j>>2]=Sb[c[(c[k>>2]|0)+12>>2]&31](k,c[e>>2]|0,c[f>>2]|0)|0;a[d]=1;k=b;i=g;return k|0}function Am(a){a=a|0;return}function Bm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Cm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=c[d>>2]|0;h=$b[c[(c[h>>2]|0)+56>>2]&31](h,20)|0;if((h|0)==0){j=0;i=g;return j|0}k=c[d+4>>2]|0;l=a[b+4|0]|0;d=c[d>>2]|0;c[h+4>>2]=d;c[h>>2]=11856;j=h+8|0;a[j]=0;b=h+12|0;c[b>>2]=k;a[h+16|0]=l;if((k|0)!=0){l=h;i=g;return l|0}c[b>>2]=Sb[c[(c[d>>2]|0)+12>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[j]=1;l=h;i=g;return l|0}function Dm(a){a=a|0;return}function Em(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Fm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;g=c[d>>2]|0;g=$b[c[(c[g>>2]|0)+56>>2]&31](g,16)|0;if((g|0)==0){g=0;i=b;return g|0}j=c[d>>2]|0;c[g+4>>2]=j;c[g>>2]=11768;d=g+8|0;a[d]=0;h=g+12|0;c[h>>2]=0;c[h>>2]=Sb[c[(c[j>>2]|0)+12>>2]&31](j,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[d]=1;i=b;return g|0}function Gm(a){a=a|0;return}function Hm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Im(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=i;d=c[b>>2]|0;d=$b[c[(c[d>>2]|0)+56>>2]&31](d,8)|0;if((d|0)==0){e=0;i=a;return e|0}c[d+4>>2]=c[b>>2];c[d>>2]=8728;e=d;i=a;return e|0}function Jm(a){a=a|0;return}function Km(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Lm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=$b[c[(c[g>>2]|0)+56>>2]&31](g,44)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=12704;a[g+24|0]=1;c[g+20>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;a[g+28|0]=1;c[g+32>>2]=c[d+4>>2];a[g+36|0]=0;c[g+40>>2]=c[(c[f+4>>2]|0)+68>>2];pp(g,e,f);i=b;return g|0}function Mm(a){a=a|0;return}function Nm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Om(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;b=c[d>>2]|0;b=$b[c[(c[b>>2]|0)+56>>2]&31](b,48)|0;if((b|0)==0){o=0;i=g;return o|0}c[b+4>>2]=c[d>>2];c[b>>2]=12872;a[b+28|0]=1;c[b+24>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+32>>2]=c[d+4>>2];a[b+36|0]=0;c[3580]=(c[3580]|0)+1;d=vr(87)|0;if((d|0)!=0?(h=d+19&-16,l=h,c[l+ -4>>2]=d,(h|0)!=0):0){d=h;c[h>>2]=14224;k=l+20|0;a[k]=1;j=l+16|0;c[j>>2]=0;m=l+8|0;c[m>>2]=0;h=l+12|0;c[h>>2]=0;a[l+24|0]=0;a[l+44|0]=1;c[l+40>>2]=0;c[l+32>>2]=0;c[l+36>>2]=0;a[l+64|0]=1;c[l+60>>2]=0;c[l+52>>2]=0;c[l+56>>2]=0;c[3580]=(c[3580]|0)+1;l=vr(43)|0;if((l|0)==0){l=0}else{o=l+19&-16;c[o+ -4>>2]=l;l=o}o=c[m>>2]|0;if((o|0)>0){n=0;do{m=l+(n*12|0)|0;if((m|0)!=0){p=(c[j>>2]|0)+(n*12|0)|0;c[m+0>>2]=c[p+0>>2];c[m+4>>2]=c[p+4>>2];c[m+8>>2]=c[p+8>>2]}n=n+1|0}while((n|0)!=(o|0))}m=c[j>>2]|0;if((m|0)!=0){if((a[k]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[j>>2]=0}a[k]=1;c[j>>2]=l;c[h>>2]=2;Iq(d)}else{d=0}c[b+8>>2]=d;c[b+40>>2]=c[(c[e+4>>2]|0)+68>>2];c[b+44>>2]=c[(c[f+4>>2]|0)+68>>2];p=b;i=g;return p|0}function Pm(a){a=a|0;return}function Qm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Rm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=$b[c[(c[g>>2]|0)+56>>2]&31](g,44)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=12704;a[g+24|0]=1;c[g+20>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;a[g+28|0]=0;c[g+32>>2]=c[d+4>>2];a[g+36|0]=0;c[g+40>>2]=c[(c[e+4>>2]|0)+68>>2];pp(g,e,f);i=b;return g|0}function Sm(a){a=a|0;return}function Tm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Um(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=i;g=c[d>>2]|0;g=$b[c[(c[g>>2]|0)+56>>2]&31](g,80)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=13056;a[g+8|0]=1;h=c[d>>2]|0;c[g+12>>2]=13088;d=g+60|0;c[d>>2]=h;c[g+64>>2]=0;c[g+16>>2]=f;c[g+20>>2]=e;e=Sb[c[(c[h>>2]|0)+12>>2]&31](h,c[f+8>>2]|0,c[e+8>>2]|0)|0;c[g+76>>2]=e;f=c[d>>2]|0;Hb[c[(c[f>>2]|0)+20>>2]&127](f,e);i=b;return g|0}function Vm(a){a=a|0;return}function Wm(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Xm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=i;g=c[d>>2]|0;g=$b[c[(c[g>>2]|0)+56>>2]&31](g,80)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=13056;a[g+8|0]=0;h=c[d>>2]|0;c[g+12>>2]=13088;d=g+60|0;c[d>>2]=h;c[g+64>>2]=0;c[g+16>>2]=e;c[g+20>>2]=f;f=Sb[c[(c[h>>2]|0)+12>>2]&31](h,c[e+8>>2]|0,c[f+8>>2]|0)|0;c[g+76>>2]=f;e=c[d>>2]|0;Hb[c[(c[e>>2]|0)+20>>2]&127](e,f);i=b;return g|0}function Ym(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return}function Zm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function _m(a){a=a|0;return}function $m(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function an(a,b){a=a|0;b=b|0;return}function bn(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0,Q=0.0,R=0.0,S=0.0;k=i;i=i+288|0;l=k+264|0;v=k+216|0;t=k+136|0;u=k;M=b+4|0;p=c[M>>2]|0;a[p+312|0]=0;c[p>>2]=0;a[p+356|0]=1;g[p+292>>2]=999999984306749400.0;g[p+296>>2]=999999984306749400.0;g[p+300>>2]=999999984306749400.0;g[p+304>>2]=0.0;s=p+336|0;p=p+332|0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;a[s+16|0]=0;a[p]=a[p]&-16;p=d+48|0;s=e+48|0;r=e+52|0;q=d+52|0;w=e+56|0;e=d+56|0;x=f+48|0;y=h+48|0;A=h+52|0;z=f+52|0;B=h+56|0;D=f+56|0;m=+g[s>>2]- +g[p>>2]-(+g[y>>2]- +g[x>>2]);n=+g[r>>2]- +g[q>>2]-(+g[A>>2]- +g[z>>2]);o=+g[w>>2]- +g[e>>2]-(+g[B>>2]- +g[D>>2]);c[v>>2]=7032;C=v+36|0;g[C>>2]=999999984306749400.0;h=v+40|0;a[h]=0;P=c[b+8>>2]|0;I=c[b+12>>2]|0;b=c[M>>2]|0;c[t>>2]=9040;g[t+4>>2]=0.0;g[t+8>>2]=1.0;g[t+12>>2]=0.0;g[t+16>>2]=0.0;c[t+20>>2]=0;c[t+24>>2]=b;c[t+28>>2]=P;c[t+32>>2]=I;c[t+36>>2]=c[P+4>>2];c[t+40>>2]=c[I+4>>2];g[t+44>>2]=+Vb[c[(c[P>>2]|0)+48>>2]&3](P);g[t+48>>2]=+Vb[c[(c[I>>2]|0)+48>>2]&3](I);a[t+52|0]=0;c[t+60>>2]=-1;c[t+72>>2]=1;c[t+76>>2]=1;g[u+128>>2]=999999984306749400.0;c[u+0>>2]=c[d+0>>2];c[u+4>>2]=c[d+4>>2];c[u+8>>2]=c[d+8>>2];c[u+12>>2]=c[d+12>>2];I=u+16|0;P=d+16|0;c[I+0>>2]=c[P+0>>2];c[I+4>>2]=c[P+4>>2];c[I+8>>2]=c[P+8>>2];c[I+12>>2]=c[P+12>>2];I=u+32|0;d=d+32|0;c[I+0>>2]=c[d+0>>2];c[I+4>>2]=c[d+4>>2];c[I+8>>2]=c[d+8>>2];c[I+12>>2]=c[d+12>>2];d=u+48|0;c[d+0>>2]=c[p+0>>2];c[d+4>>2]=c[p+4>>2];c[d+8>>2]=c[p+8>>2];c[d+12>>2]=c[p+12>>2];I=u+64|0;c[I+0>>2]=c[f+0>>2];c[I+4>>2]=c[f+4>>2];c[I+8>>2]=c[f+8>>2];c[I+12>>2]=c[f+12>>2];I=u+80|0;P=f+16|0;c[I+0>>2]=c[P+0>>2];c[I+4>>2]=c[P+4>>2];c[I+8>>2]=c[P+8>>2];c[I+12>>2]=c[P+12>>2];I=u+96|0;P=f+32|0;c[I+0>>2]=c[P+0>>2];c[I+4>>2]=c[P+4>>2];c[I+8>>2]=c[P+8>>2];c[I+12>>2]=c[P+12>>2];I=u+112|0;c[I+0>>2]=c[x+0>>2];c[I+4>>2]=c[x+4>>2];c[I+8>>2]=c[x+8>>2];c[I+12>>2]=c[x+12>>2];fn(t,u,v,0,0);P=(a[h]|0)==0;b=v+20|0;c[l+0>>2]=c[b+0>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];c[l+12>>2]=c[b+12>>2];if(P){P=0;i=k;return P|0}R=+g[C>>2];G=v+4|0;N=+g[G>>2];f=v+8|0;O=+g[f>>2];F=v+12|0;Q=+g[F>>2];E=v+16|0;H=+g[E>>2];do{if(R>.0010000000474974513){J=u+52|0;M=u+56|0;L=u+116|0;K=u+120|0;S=0.0;P=1;while(1){if((P|0)>32){j=0;p=13;break}H=S-R/(o*Q+(n*O+m*N));if(!(!(H<0.0)&!(H>1.0)&!(H<=S))){j=0;p=13;break}Eb[c[c[j>>2]>>2]&15](j,H);S=1.0-H;g[d>>2]=S*+g[p>>2]+H*+g[s>>2];g[J>>2]=S*+g[q>>2]+H*+g[r>>2];g[M>>2]=S*+g[e>>2]+H*+g[w>>2];g[I>>2]=S*+g[x>>2]+H*+g[y>>2];g[L>>2]=S*+g[z>>2]+H*+g[A>>2];g[K>>2]=S*+g[D>>2]+H*+g[B>>2];fn(t,u,v,0,0);if((a[h]|0)==0){j=0;p=13;break}R=+g[C>>2];if(R<0.0){p=8;break}c[l+0>>2]=c[b+0>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];c[l+12>>2]=c[b+12>>2];N=+g[G>>2];O=+g[f>>2];Q=+g[F>>2];if(R>.0010000000474974513){S=H;P=P+1|0}else{p=10;break}}if((p|0)==8){g[j+164>>2]=H;Q=+g[f>>2];R=+g[F>>2];S=+g[E>>2];g[j+132>>2]=+g[G>>2];g[j+136>>2]=Q;g[j+140>>2]=R;g[j+144>>2]=S;P=j+148|0;c[P+0>>2]=c[b+0>>2];c[P+4>>2]=c[b+4>>2];c[P+8>>2]=c[b+8>>2];c[P+12>>2]=c[b+12>>2];P=1;i=k;return P|0}else if((p|0)==10){R=+g[E>>2];break}else if((p|0)==13){i=k;return j|0}}else{R=H;H=0.0}}while(0);if(o*Q+(n*O+m*N)>=-+g[j+172>>2]){P=0;i=k;return P|0}g[j+164>>2]=H;g[j+132>>2]=N;g[j+136>>2]=O;g[j+140>>2]=Q;g[j+144>>2]=R;P=j+148|0;c[P+0>>2]=c[l+0>>2];c[P+4>>2]=c[l+4>>2];c[P+8>>2]=c[l+8>>2];c[P+12>>2]=c[l+12>>2];P=1;i=k;return P|0}function cn(a){a=a|0;return}function dn(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function en(b,e,f,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0.0,ha=0,ia=0.0,ja=0,ka=0,la=0.0,ma=0.0,na=0.0,oa=0,pa=0.0,qa=0.0,ra=0.0,sa=0,ta=0,ua=0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0,Ia=0.0;o=i;i=i+10400|0;z=o+10384|0;A=o+10256|0;y=o+10128|0;D=o+9744|0;B=o+9728|0;Y=o+9344|0;ua=o+9328|0;Q=o+32|0;U=o+16|0;C=o;G=k+48|0;p=j+48|0;F=k+52|0;b=j+52|0;na=+g[F>>2]- +g[b>>2];E=k+56|0;e=j+56|0;Da=+g[E>>2]- +g[e>>2];g[C>>2]=+g[G>>2]- +g[p>>2];sa=C+4|0;g[sa>>2]=na;ta=C+8|0;g[ta>>2]=Da;g[C+12>>2]=0.0;c[A>>2]=f;c[A+4>>2]=h;Da=+g[k>>2];na=+g[j>>2];J=k+16|0;Ca=+g[J>>2];v=j+16|0;Aa=+g[v>>2];K=k+32|0;Ba=+g[K>>2];s=j+32|0;ma=+g[s>>2];x=j+4|0;za=+g[x>>2];u=j+20|0;la=+g[u>>2];r=j+36|0;ya=+g[r>>2];w=j+8|0;fa=+g[w>>2];t=j+24|0;Ga=+g[t>>2];q=j+40|0;Ea=+g[q>>2];L=k+4|0;pa=+g[L>>2];M=k+20|0;qa=+g[M>>2];N=k+36|0;ra=+g[N>>2];O=k+8|0;va=+g[O>>2];H=k+24|0;wa=+g[H>>2];I=k+40|0;xa=+g[I>>2];g[A+8>>2]=Da*na+Ca*Aa+Ba*ma;g[A+12>>2]=Da*za+Ca*la+Ba*ya;g[A+16>>2]=Da*fa+Ca*Ga+Ba*Ea;g[A+20>>2]=0.0;g[A+24>>2]=na*pa+Aa*qa+ma*ra;g[A+28>>2]=za*pa+la*qa+ya*ra;g[A+32>>2]=fa*pa+Ga*qa+Ea*ra;g[A+36>>2]=0.0;g[A+40>>2]=na*va+Aa*wa+ma*xa;g[A+44>>2]=za*va+la*wa+ya*xa;g[A+48>>2]=fa*va+Ga*wa+Ea*xa;g[A+52>>2]=0.0;Ea=+g[G>>2]- +g[p>>2];Ga=+g[F>>2]- +g[b>>2];fa=+g[E>>2]- +g[e>>2];ya=+g[j>>2];la=+g[k>>2];za=+g[v>>2];ma=+g[J>>2];Aa=+g[s>>2];na=+g[K>>2];Ba=+g[x>>2];Ca=+g[u>>2];Da=+g[r>>2];Fa=+g[w>>2];ga=+g[t>>2];ea=+g[q>>2];g[A+56>>2]=ya*la+za*ma+Aa*na;g[A+60>>2]=ya*pa+za*qa+Aa*ra;g[A+64>>2]=ya*va+za*wa+Aa*xa;g[A+68>>2]=0.0;g[A+72>>2]=la*Ba+ma*Ca+na*Da;g[A+76>>2]=pa*Ba+qa*Ca+ra*Da;g[A+80>>2]=va*Ba+wa*Ca+xa*Da;g[A+84>>2]=0.0;g[A+88>>2]=la*Fa+ma*ga+na*ea;g[A+92>>2]=pa*Fa+qa*ga+ra*ea;g[A+96>>2]=va*Fa+wa*ga+xa*ea;g[A+100>>2]=0.0;g[A+104>>2]=Ea*ya+Ga*za+fa*Aa;g[A+108>>2]=Ea*Ba+Ga*Ca+fa*Da;g[A+112>>2]=Ea*Fa+Ga*ga+fa*ea;g[A+116>>2]=0.0;T=A+120|0;c[T>>2]=52;S=A+124|0;c[S>>2]=0;ka=Y+128|0;c[Y+364>>2]=0;oa=Y+376|0;c[ka+0>>2]=0;c[ka+4>>2]=0;c[ka+8>>2]=0;c[ka+12>>2]=0;c[oa>>2]=2;c[Y+368>>2]=0;g[Y+144>>2]=0.0;ea=+g[C>>2];fa=+g[sa>>2];ga=+g[ta>>2];g[ua>>2]=-ea;g[ua+4>>2]=-fa;g[ua+8>>2]=-ga;g[ua+12>>2]=0.0;do{if((Aq(Y,A,ua)|0)==1){X=Q+9280|0;Z=Q+9288|0;_=Q+9292|0;c[X+0>>2]=0;c[X+4>>2]=0;c[X+8>>2]=0;c[X+12>>2]=0;c[Q>>2]=9;P=Q+40|0;W=Q+9276|0;c[W>>2]=0;c[P+0>>2]=0;c[P+4>>2]=0;c[P+8>>2]=0;c[P+12>>2]=0;c[P+16>>2]=0;ba=0;do{ua=128-ba+ -1|0;aa=Q+(ua*56|0)+2108|0;c[Q+(ua*56|0)+2152>>2]=0;$=c[Z>>2]|0;c[Q+(ua*56|0)+2156>>2]=$;if(($|0)!=0){c[$+44>>2]=aa}c[Z>>2]=aa;c[_>>2]=(c[_>>2]|0)+1;ba=ba+1|0}while((ba|0)!=128);aa=c[Y+372>>2]|0;if((c[aa+32>>2]|0)>>>0>1?Bq(Y)|0:0){ca=c[X>>2]|0;if((ca|0)!=0){$=Q+9284|0;ba=c[$>>2]|0;da=c[_>>2]|0;do{ha=ca+48|0;ka=c[ha>>2]|0;ja=ca+44|0;if((ka|0)!=0){c[ka+44>>2]=c[ja>>2]}ka=c[ja>>2]|0;if((ka|0)!=0){c[ka+48>>2]=c[ha>>2]}if((c[X>>2]|0)==(ca|0)){c[X>>2]=c[ha>>2]}ba=ba+ -1|0;c[ja>>2]=0;c[ha>>2]=c[Z>>2];ha=c[Z>>2]|0;if((ha|0)!=0){c[ha+44>>2]=ca}c[Z>>2]=ca;da=da+1|0;ca=c[X>>2]|0}while((ca|0)!=0);c[$>>2]=ba;c[_>>2]=da}c[Q>>2]=0;c[W>>2]=0;ja=c[aa>>2]|0;$=aa+12|0;da=c[$>>2]|0;Ga=+g[da+16>>2];ya=+g[ja+16>>2]-Ga;Aa=+g[da+20>>2];Ba=+g[ja+20>>2]-Aa;Da=+g[da+24>>2];Ea=+g[ja+24>>2]-Da;da=aa+4|0;ka=c[da>>2]|0;Ca=+g[ka+16>>2]-Ga;Fa=+g[ka+20>>2]-Aa;za=+g[ka+24>>2]-Da;ha=aa+8|0;ca=c[ha>>2]|0;Ga=+g[ca+16>>2]-Ga;Aa=+g[ca+20>>2]-Aa;Da=+g[ca+24>>2]-Da;if(ya*Fa*Da+(Ba*za*Ga+Ea*Ca*Aa-ya*za*Aa-Ba*Ca*Da)-Ea*Fa*Ga<0.0){c[aa>>2]=ka;c[da>>2]=ja;ua=aa+16|0;ba=aa+20|0;Ga=+g[ua>>2];g[ua>>2]=+g[ba>>2];g[ba>>2]=Ga;ba=ka}else{ba=ja;ja=ka}ca=Cq(Q,ba,ja,ca,1)|0;ba=Cq(Q,c[da>>2]|0,c[aa>>2]|0,c[$>>2]|0,1)|0;da=Cq(Q,c[ha>>2]|0,c[da>>2]|0,c[$>>2]|0,1)|0;ha=Cq(Q,c[aa>>2]|0,c[ha>>2]|0,c[$>>2]|0,1)|0;$=Q+9284|0;if((c[$>>2]|0)==4){oa=c[X>>2]|0;la=+g[oa+16>>2];aa=c[oa+48>>2]|0;if((aa|0)!=0){ea=la*la;while(1){fa=+g[aa+16>>2];fa=fa*fa;ja=fa<ea;oa=ja?aa:oa;aa=c[aa+48>>2]|0;if((aa|0)==0){break}else{ea=ja?fa:ea}}la=+g[oa+16>>2]}ia=+g[oa>>2];ga=+g[oa+4>>2];fa=+g[oa+8>>2];ea=+g[oa+12>>2];ja=c[oa+20>>2]|0;ka=c[oa+24>>2]|0;ua=c[oa+28>>2]|0;a[ca+52|0]=0;c[ca+32>>2]=ba;a[ba+52|0]=0;c[ba+32>>2]=ca;a[ca+53|0]=0;c[ca+36>>2]=da;a[da+52|0]=1;c[da+32>>2]=ca;a[ca+54|0]=0;c[ca+40>>2]=ha;a[ha+52|0]=2;c[ha+32>>2]=ca;a[ba+53|0]=2;c[ba+36>>2]=ha;a[ha+54|0]=1;c[ha+40>>2]=ba;a[ba+54|0]=1;c[ba+40>>2]=da;a[da+53|0]=2;c[da+36>>2]=ba;a[da+54|0]=1;c[da+40>>2]=ha;a[ha+53|0]=2;c[ha+36>>2]=da;c[Q>>2]=0;ba=z+4|0;aa=z+8|0;ha=ua;da=0;ca=1;while(1){ta=c[W>>2]|0;if(!(ta>>>0<64)){V=48;break}c[z>>2]=0;c[ba>>2]=0;c[aa>>2]=0;c[W>>2]=ta+1;sa=Q+(ta<<5)+60|0;a[oa+55|0]=ca;Ha=oa+4|0;ua=oa+8|0;Dq(Y,+g[oa>>2],+g[Ha>>2],+g[ua>>2],sa);if(+g[oa>>2]*+g[Q+(ta<<5)+76>>2]+ +g[Ha>>2]*+g[Q+(ta<<5)+80>>2]+ +g[ua>>2]*+g[Q+(ta<<5)+84>>2]- +g[oa+16>>2]>9999999747378752.0e-20){ta=0;ua=1}else{V=47;break}do{ua=ua&(Eq(Q,ca,sa,c[oa+(ta<<2)+32>>2]|0,d[oa+ta+52|0]|0,z)|0);ta=ta+1|0}while(!(ta>>>0>2|ua^1));if(!ua){V=46;break}if(!((c[aa>>2]|0)>>>0>2)){V=46;break}ka=c[z>>2]|0;ja=c[ba>>2]|0;a[ka+53|0]=2;c[ka+36>>2]=ja;a[ja+54|0]=1;c[ja+40>>2]=ka;ja=oa+48|0;ka=c[ja>>2]|0;ha=oa+44|0;if((ka|0)!=0){c[ka+44>>2]=c[ha>>2]}ka=c[ha>>2]|0;if((ka|0)!=0){c[ka+48>>2]=c[ja>>2]}if((c[X>>2]|0)==(oa|0)){c[X>>2]=c[ja>>2]}c[$>>2]=(c[$>>2]|0)+ -1;c[ha>>2]=0;c[ja>>2]=c[Z>>2];ha=c[Z>>2]|0;if((ha|0)!=0){c[ha+44>>2]=oa}c[Z>>2]=oa;c[_>>2]=(c[_>>2]|0)+1;oa=c[X>>2]|0;la=+g[oa+16>>2];ha=c[oa+48>>2]|0;if((ha|0)!=0){ea=la*la;while(1){fa=+g[ha+16>>2];fa=fa*fa;ja=fa<ea;oa=ja?ha:oa;ha=c[ha+48>>2]|0;if((ha|0)==0){break}else{ea=ja?fa:ea}}la=+g[oa+16>>2]}ia=+g[oa>>2];ga=+g[oa+4>>2];fa=+g[oa+8>>2];ea=+g[oa+12>>2];ja=c[oa+20>>2]|0;ka=c[oa+24>>2]|0;ha=c[oa+28>>2]|0;da=da+1|0;if(da>>>0<255){ca=ca+1|0}else{break}}if((V|0)==46){c[Q>>2]=4}else if((V|0)==47){c[Q>>2]=7}else if((V|0)==48){c[Q>>2]=6}Ca=la*ia;Aa=la*ga;Fa=la*fa;g[P>>2]=ia;g[Q+44>>2]=ga;g[Q+48>>2]=fa;g[Q+52>>2]=ea;g[Q+56>>2]=la;W=Q+36|0;c[W>>2]=3;c[Q+4>>2]=ja;c[Q+8>>2]=ka;c[Q+12>>2]=ha;oa=ka+16|0;Ga=+g[oa>>2]-Ca;sa=ka+20|0;wa=+g[sa>>2]-Aa;ta=ka+24|0;Ea=+g[ta>>2]-Fa;Ha=ha+16|0;ya=+g[Ha>>2]-Ca;ka=ha+20|0;Ba=+g[ka>>2]-Aa;da=ha+24|0;Da=+g[da>>2]-Fa;xa=wa*Da-Ea*Ba;Da=Ea*ya-Ga*Da;ya=Ga*Ba-wa*ya;Da=+R(+(ya*ya+(xa*xa+Da*Da)));ua=Q+20|0;g[ua>>2]=Da;xa=+g[Ha>>2]-Ca;ya=+g[ka>>2]-Aa;wa=+g[da>>2]-Fa;da=ja+16|0;Ba=+g[da>>2]-Ca;ha=ja+20|0;Ga=+g[ha>>2]-Aa;ka=ja+24|0;Ea=+g[ka>>2]-Fa;za=ya*Ea-wa*Ga;Ea=wa*Ba-xa*Ea;Ba=xa*Ga-ya*Ba;Ea=+R(+(Ba*Ba+(za*za+Ea*Ea)));Ha=Q+24|0;g[Ha>>2]=Ea;za=+g[da>>2]-Ca;Ba=+g[ha>>2]-Aa;ya=+g[ka>>2]-Fa;Ca=+g[oa>>2]-Ca;Aa=+g[sa>>2]-Aa;Fa=+g[ta>>2]-Fa;Ga=Ba*Fa-ya*Aa;Fa=ya*Ca-za*Fa;Ca=za*Aa-Ba*Ca;Fa=+R(+(Ca*Ca+(Ga*Ga+Fa*Fa)));Ga=Fa+(Da+Ea);g[ua>>2]=Da/Ga;g[Ha>>2]=Ea/Ga;g[Q+28>>2]=Fa/Ga;if((c[Q>>2]|0)==9){P=0;ia=0.0;la=0.0;ea=0.0;na=0.0;ma=0.0;ga=0.0;qa=0.0;pa=0.0;fa=0.0;break}if((c[W>>2]|0)==0){ea=0.0;ga=0.0;fa=0.0}else{W=Q+36|0;V=54}}else{V=49}}else{V=49}if((V|0)==49){c[Q>>2]=8;g[P>>2]=ea;V=Q+44|0;g[V>>2]=fa;W=Q+48|0;g[W>>2]=ga;X=Q+52|0;g[X>>2]=0.0;ia=+R(+(ea*ea+fa*fa+ga*ga));if(ia>0.0){Ga=1.0/ia;ga=Ga*ga;fa=Ga*fa;ea=Ga*ea}else{ga=0.0;fa=0.0;ea=1.0}g[P>>2]=ea;g[V>>2]=fa;g[W>>2]=ga;g[X>>2]=0.0;g[Q+56>>2]=0.0;c[Q+36>>2]=1;c[Q+4>>2]=c[aa>>2];g[Q+20>>2]=1.0;W=Q+36|0;V=54}if((V|0)==54){X=U+4|0;V=U+8|0;fa=0.0;ga=0.0;ea=0.0;Y=0;do{_=c[T>>2]|0;Ha=c[S>>2]|0;Z=(c[A>>2]|0)+(Ha>>1)|0;if((Ha&1|0)!=0){_=c[(c[Z>>2]|0)+_>>2]|0}kc[_&63](U,Z,c[Q+(Y<<2)+4>>2]|0);Ga=+g[Q+(Y<<2)+20>>2];fa=fa+ +g[U>>2]*Ga;ga=ga+Ga*+g[X>>2];ea=ea+Ga*+g[V>>2];Y=Y+1|0}while(Y>>>0<(c[W>>2]|0)>>>0)}Ia=+g[j>>2];ra=+g[x>>2];va=+g[w>>2];wa=+g[v>>2];xa=+g[u>>2];ya=+g[t>>2];Aa=+g[s>>2];Ca=+g[r>>2];Ea=+g[q>>2];na=+g[p>>2];ma=+g[b>>2];Fa=+g[e>>2];qa=+g[P>>2];Da=+g[Q+56>>2];pa=+g[Q+44>>2];Ga=+g[Q+48>>2];za=fa-qa*Da;Ba=ga-Da*pa;Da=ea-Da*Ga;P=1;ia=fa*Ia+ga*ra+ea*va+na;la=fa*wa+ga*xa+ea*ya+ma;ea=fa*Aa+ga*Ca+ea*Ea+Fa;na=za*Ia+Ba*ra+Da*va+na;ma=za*wa+Ba*xa+Da*ya+ma;ga=za*Aa+Ba*Ca+Da*Ea+Fa;qa=-qa;pa=-pa;fa=-Ga}else{P=0;ia=0.0;la=0.0;ea=0.0;na=0.0;ma=0.0;ga=0.0;qa=0.0;pa=0.0;fa=0.0}}while(0);if(P){g[m>>2]=ia;g[m+4>>2]=la;g[m+8>>2]=ea;g[m+12>>2]=0.0;g[n>>2]=na;g[n+4>>2]=ma;g[n+8>>2]=ga;g[n+12>>2]=0.0;g[l>>2]=qa;g[l+4>>2]=pa;g[l+8>>2]=fa;g[l+12>>2]=0.0;Ha=1;i=o;return Ha|0}c[y>>2]=f;f=y+4|0;c[f>>2]=h;Ea=+g[k>>2];wa=+g[j>>2];Ca=+g[J>>2];xa=+g[v>>2];qa=+g[K>>2];ya=+g[s>>2];ga=Ea*wa+Ca*xa+qa*ya;za=+g[x>>2];Aa=+g[u>>2];Ba=+g[r>>2];ma=Ea*za+Ca*Aa+qa*Ba;Da=+g[w>>2];Fa=+g[t>>2];Ia=+g[q>>2];qa=Ea*Da+Ca*Fa+qa*Ia;Ca=+g[L>>2];Ea=+g[M>>2];ra=+g[N>>2];ia=wa*Ca+xa*Ea+ya*ra;na=za*Ca+Aa*Ea+Ba*ra;ra=Da*Ca+Fa*Ea+Ia*ra;Ea=+g[O>>2];Ca=+g[H>>2];va=+g[I>>2];la=wa*Ea+xa*Ca+ya*va;pa=za*Ea+Aa*Ca+Ba*va;va=Da*Ea+Fa*Ca+Ia*va;k=y+8|0;g[k>>2]=ga;H=y+12|0;g[H>>2]=ma;N=y+16|0;g[N>>2]=qa;g[y+20>>2]=0.0;h=y+24|0;g[h>>2]=ia;I=y+28|0;g[I>>2]=na;M=y+32|0;g[M>>2]=ra;g[y+36>>2]=0.0;L=y+40|0;g[L>>2]=la;K=y+44|0;g[K>>2]=pa;J=y+48|0;g[J>>2]=va;g[y+52>>2]=0.0;Ca=+g[G>>2]- +g[p>>2];Ea=+g[F>>2]- +g[b>>2];Ga=+g[E>>2]- +g[e>>2];S=y+56|0;g[S>>2]=ga;T=y+60|0;g[T>>2]=ia;V=y+64|0;g[V>>2]=la;g[y+68>>2]=0.0;E=y+72|0;g[E>>2]=ma;F=y+76|0;g[F>>2]=na;G=y+80|0;g[G>>2]=pa;g[y+84>>2]=0.0;P=y+88|0;g[P>>2]=qa;U=y+92|0;g[U>>2]=ra;Q=y+96|0;g[Q>>2]=va;g[y+100>>2]=0.0;Z=y+104|0;g[Z>>2]=Ca*wa+Ea*xa+Ga*ya;O=y+108|0;g[O>>2]=Ca*za+Ea*Aa+Ga*Ba;Y=y+112|0;g[Y>>2]=Ca*Da+Ea*Fa+Ga*Ia;g[y+116>>2]=0.0;X=y+120|0;c[X>>2]=53;W=y+124|0;c[W>>2]=0;ua=D+128|0;c[D+364>>2]=0;Ha=D+376|0;c[ua+0>>2]=0;c[ua+4>>2]=0;c[ua+8>>2]=0;c[ua+12>>2]=0;c[Ha>>2]=2;c[D+368>>2]=0;g[D+144>>2]=0.0;if((Aq(D,y,C)|0)!=0){Ha=0;i=o;return Ha|0}C=D+372|0;ja=c[C>>2]|0;if((c[ja+32>>2]|0)==0){na=0.0;la=0.0;ia=0.0;ea=0.0;fa=0.0;ga=0.0}else{ba=B+4|0;ca=B+8|0;da=A+4|0;D=A+8|0;_=A+12|0;$=z+4|0;aa=z+8|0;ia=0.0;la=0.0;na=0.0;ga=0.0;fa=0.0;ea=0.0;ha=0;do{ma=+g[ja+(ha<<2)+16>>2];oa=c[X>>2]|0;Ha=c[W>>2]|0;ka=(c[y>>2]|0)+(Ha>>1)|0;if((Ha&1|0)!=0){oa=c[(c[ka>>2]|0)+oa>>2]|0}kc[oa&63](B,ka,c[ja+(ha<<2)>>2]|0);ia=ia+ma*+g[B>>2];la=la+ma*+g[ba>>2];na=na+ma*+g[ca>>2];ka=c[(c[C>>2]|0)+(ha<<2)>>2]|0;pa=-+g[ka>>2];qa=-+g[ka+4>>2];ra=-+g[ka+8>>2];ka=c[X>>2]|0;Ha=c[W>>2]|0;ja=(c[f>>2]|0)+(Ha>>1)|0;if((Ha&1|0)!=0){ka=c[(c[ja>>2]|0)+ka>>2]|0}Ga=+g[h>>2]*pa+ +g[I>>2]*qa+ +g[M>>2]*ra;Fa=+g[L>>2]*pa+ +g[K>>2]*qa+ +g[J>>2]*ra;g[A>>2]=+g[k>>2]*pa+ +g[H>>2]*qa+ +g[N>>2]*ra;g[da>>2]=Ga;g[D>>2]=Fa;g[_>>2]=0.0;kc[ka&63](z,ja,A);Fa=+g[z>>2];Ga=+g[$>>2];Ia=+g[aa>>2];ga=ga+ma*(Fa*+g[S>>2]+Ga*+g[T>>2]+Ia*+g[V>>2]+ +g[Z>>2]);fa=fa+ma*(Fa*+g[E>>2]+Ga*+g[F>>2]+Ia*+g[G>>2]+ +g[O>>2]);ea=ea+ma*(Fa*+g[P>>2]+Ga*+g[U>>2]+Ia*+g[Q>>2]+ +g[Y>>2]);ha=ha+1|0;ja=c[C>>2]|0}while(ha>>>0<(c[ja+32>>2]|0)>>>0)}ma=+g[j>>2];pa=+g[x>>2];qa=+g[w>>2];ra=+g[v>>2];va=+g[u>>2];wa=+g[t>>2];xa=+g[s>>2];ya=+g[r>>2];za=+g[q>>2];Aa=+g[p>>2];Ba=+g[b>>2];Ea=+g[e>>2];Ca=ia-ga;Da=la-fa;Ga=na-ea;Fa=+R(+(Ca*Ca+Da*Da+Ga*Ga));Ia=1.0/(Fa>9999999747378752.0e-20?Fa:1.0);g[m>>2]=ia*ma+la*pa+na*qa+Aa;g[m+4>>2]=ia*ra+la*va+na*wa+Ba;g[m+8>>2]=ia*xa+la*ya+na*za+Ea;g[m+12>>2]=0.0;g[n>>2]=ga*ma+fa*pa+ea*qa+Aa;g[n+4>>2]=ga*ra+fa*va+ea*wa+Ba;g[n+8>>2]=ga*xa+fa*ya+ea*za+Ea;g[n+12>>2]=0.0;g[l>>2]=Ia*Ca;g[l+4>>2]=Ia*Da;g[l+8>>2]=Ia*Ga;g[l+12>>2]=0.0;Ha=0;i=o;return Ha|0}function fn(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0.0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0.0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0.0,Ta=0.0,Ua=0.0,Va=0.0,Wa=0.0,Xa=0.0,Ya=0.0,Za=0.0,_a=0.0,$a=0,ab=0,bb=0.0,cb=0.0,db=0,eb=0,fb=0,gb=0.0,hb=0.0,ib=0.0;r=i;i=i+288|0;u=r+272|0;h=r+208|0;q=r+144|0;W=r+128|0;U=r+112|0;T=r+96|0;S=r+80|0;F=r+64|0;I=r+48|0;n=r+32|0;o=r+16|0;y=r;A=b+56|0;g[A>>2]=0.0;x=u+4|0;s=u+8|0;E=u+12|0;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];p=h+16|0;V=d+16|0;c[p+0>>2]=c[V+0>>2];c[p+4>>2]=c[V+4>>2];c[p+8>>2]=c[V+8>>2];c[p+12>>2]=c[V+12>>2];p=h+32|0;V=d+32|0;c[p+0>>2]=c[V+0>>2];c[p+4>>2]=c[V+4>>2];c[p+8>>2]=c[V+8>>2];c[p+12>>2]=c[V+12>>2];p=h+48|0;V=d+48|0;c[p+0>>2]=c[V+0>>2];c[p+4>>2]=c[V+4>>2];c[p+8>>2]=c[V+8>>2];c[p+12>>2]=c[V+12>>2];V=d+64|0;c[q+0>>2]=c[V+0>>2];c[q+4>>2]=c[V+4>>2];c[q+8>>2]=c[V+8>>2];c[q+12>>2]=c[V+12>>2];t=q+16|0;Q=d+80|0;c[t+0>>2]=c[Q+0>>2];c[t+4>>2]=c[Q+4>>2];c[t+8>>2]=c[Q+8>>2];c[t+12>>2]=c[Q+12>>2];t=q+32|0;Q=d+96|0;c[t+0>>2]=c[Q+0>>2];c[t+4>>2]=c[Q+4>>2];c[t+8>>2]=c[Q+8>>2];c[t+12>>2]=c[Q+12>>2];t=q+48|0;Q=d+112|0;c[t+0>>2]=c[Q+0>>2];c[t+4>>2]=c[Q+4>>2];c[t+8>>2]=c[Q+8>>2];c[t+12>>2]=c[Q+12>>2];Ya=+g[p>>2];bb=+g[t>>2];Q=h+52|0;Za=+g[Q>>2];P=q+52|0;cb=+g[P>>2];Ja=h+56|0;_a=+g[Ja>>2];Ka=q+56|0;gb=+g[Ka>>2];z=(Ya+bb)*.5;w=(Za+cb)*.5;v=(_a+gb)*.5;g[p>>2]=Ya-z;g[Q>>2]=Za-w;g[Ja>>2]=_a-v;g[t>>2]=bb-z;g[P>>2]=cb-w;g[Ka>>2]=gb-v;t=b+28|0;p=b+32|0;if(((c[(c[t>>2]|0)+4>>2]|0)+ -17|0)>>>0<2){$a=((c[(c[p>>2]|0)+4>>2]|0)+ -17|0)>>>0<2}else{$a=0}L=+g[b+44>>2];K=+g[b+48>>2];c[2256]=(c[2256]|0)+1;C=(a[b+52|0]|0)==0;K=C?K:0.0;X=b+64|0;c[X>>2]=0;B=b+4|0;g[B>>2]=0.0;J=b+8|0;g[J>>2]=1.0;H=b+12|0;g[H>>2]=0.0;G=b+16|0;g[G>>2]=0.0;N=b+68|0;c[N>>2]=0;D=b+60|0;c[D>>2]=-1;L=(C?L:0.0)+K;O=b+24|0;ia=c[O>>2]|0;a[ia+312|0]=0;c[ia>>2]=0;a[ia+356|0]=1;g[ia+292>>2]=999999984306749400.0;g[ia+296>>2]=999999984306749400.0;g[ia+300>>2]=999999984306749400.0;g[ia+304>>2]=0.0;ja=ia+336|0;ia=ia+332|0;c[ja+0>>2]=0;c[ja+4>>2]=0;c[ja+8>>2]=0;c[ja+12>>2]=0;a[ja+16|0]=0;a[ia]=a[ia]&-16;ia=d+16|0;ja=d+32|0;ca=d+4|0;da=d+20|0;ea=d+36|0;fa=d+8|0;ga=d+24|0;ha=d+40|0;ka=W+4|0;la=W+8|0;Y=W+12|0;ta=d+80|0;ua=d+96|0;na=d+68|0;_=d+84|0;pa=d+100|0;qa=d+72|0;ra=d+88|0;sa=d+104|0;va=U+4|0;wa=U+8|0;xa=U+12|0;ya=T+4|0;Aa=h+4|0;za=T+8|0;Ba=h+8|0;Da=h+16|0;Ea=h+20|0;Fa=h+24|0;Ra=h+32|0;Qa=h+36|0;Pa=h+40|0;Ca=h+48|0;Ga=S+4|0;aa=q+4|0;Ha=S+8|0;$=q+8|0;oa=q+16|0;Z=q+20|0;ma=q+24|0;Na=q+32|0;Oa=q+36|0;Ma=q+40|0;Ia=q+48|0;C=d+128|0;ba=b+4|0;Ta=+g[B>>2];Wa=+g[J>>2];Sa=+g[H>>2];a:do{if($a){La=999999984306749400.0;while(1){gb=-Ta;Ya=-Wa;Xa=-Sa;Ua=+g[ca>>2]*gb+ +g[da>>2]*Ya+ +g[ea>>2]*Xa;Va=+g[fa>>2]*gb+ +g[ga>>2]*Ya+ +g[ha>>2]*Xa;g[W>>2]=+g[d>>2]*gb+ +g[ia>>2]*Ya+ +g[ja>>2]*Xa;g[ka>>2]=Ua;g[la>>2]=Va;g[Y>>2]=0.0;Va=Ta*+g[na>>2]+Wa*+g[_>>2]+Sa*+g[pa>>2];Ua=Ta*+g[qa>>2]+Wa*+g[ra>>2]+Sa*+g[sa>>2];g[U>>2]=+g[V>>2]*Ta+ +g[ta>>2]*Wa+ +g[ua>>2]*Sa;g[va>>2]=Va;g[wa>>2]=Ua;g[xa>>2]=0.0;Ll(T,c[t>>2]|0,W);Ll(S,c[p>>2]|0,U);Sa=+g[T>>2];Ta=+g[ya>>2];Ua=+g[za>>2];Va=Sa*+g[h>>2]+Ta*+g[Aa>>2]+Ua*+g[Ba>>2]+ +g[Ca>>2];Ua=Sa*+g[Da>>2]+Ta*+g[Ea>>2]+Ua*+g[Fa>>2]+ +g[Q>>2];Ta=+g[S>>2];Sa=+g[Ga>>2];Wa=+g[Ha>>2];Xa=Ta*+g[q>>2]+Sa*+g[aa>>2]+Wa*+g[$>>2]+ +g[Ia>>2];Wa=Ta*+g[oa>>2]+Sa*+g[Z>>2]+Wa*+g[ma>>2]+ +g[P>>2];Sa=Va-Xa;Ta=Ua-Wa;Ya=+g[B>>2]*Sa+ +g[J>>2]*Ta+ +g[H>>2]*0.0;if(Ya>0.0?Ya*Ya>La*+g[C>>2]:0){m=22;break a}Ja=c[O>>2]|0;Ka=c[Ja>>2]|0;if((Ka|0)>0){Za=+g[Ja+308>>2];Ma=0;Na=0;do{bb=Sa- +g[Ja+(Na<<4)+4>>2];cb=Ta- +g[Ja+(Na<<4)+8>>2];gb=0.0- +g[Ja+(Na<<4)+12>>2];Ma=Ma|bb*bb+cb*cb+gb*gb<=Za;Na=Na+1|0}while((Na|0)!=(Ka|0))}else{Ma=0}Na=Ja+304|0;if((+g[Na>>2]==0.0?+g[Ja+300>>2]==0.0:0)?Ta==+g[Ja+296>>2]:0){Oa=Sa==+g[Ja+292>>2]}else{Oa=0}if(Oa|Ma){m=31;break a}bb=La-Ya;if(bb<=La*9.999999974752427e-7){m=33;break a}g[Ja+292>>2]=Sa;g[Ja+296>>2]=Ta;g[Ja+300>>2]=0.0;g[Na>>2]=0.0;a[Ja+356|0]=1;g[Ja+(Ka<<4)+4>>2]=Sa;g[Ja+(Ka<<4)+8>>2]=Ta;g[Ja+(Ka<<4)+12>>2]=0.0;g[Ja+(Ka<<4)+16>>2]=0.0;eb=c[Ja>>2]|0;g[Ja+(eb<<4)+84>>2]=Va;g[Ja+(eb<<4)+88>>2]=Ua;g[Ja+(eb<<4)+92>>2]=0.0;g[Ja+(eb<<4)+96>>2]=0.0;eb=c[Ja>>2]|0;g[Ja+(eb<<4)+164>>2]=Xa;g[Ja+(eb<<4)+168>>2]=Wa;g[Ja+(eb<<4)+172>>2]=0.0;g[Ja+(eb<<4)+176>>2]=0.0;c[Ja>>2]=(c[Ja>>2]|0)+1;eb=c[O>>2]|0;fb=Yo(eb)|0;Ta=+g[eb+276>>2];Wa=+g[eb+280>>2];Sa=+g[eb+284>>2];Va=+g[eb+288>>2];if(!fb){m=35;break a}Ua=Ta*Ta+Wa*Wa+Sa*Sa;if(Ua<9.999999974752427e-7){m=37;break a}if(La-Ua<=La*1.1920928955078125e-7){La=Ua;m=39;break a}g[ba>>2]=Ta;g[J>>2]=Wa;g[H>>2]=Sa;g[G>>2]=Va;fb=c[X>>2]|0;c[X>>2]=fb+1;if((fb|0)>1e3){La=0.0;d=0;Sa=0.0;Ta=0.0;Ua=0.0;break a}if((c[c[O>>2]>>2]|0)==4){m=42;break}else{La=Ua}}}else{La=999999984306749400.0;while(1){Za=-Ta;Ya=-Wa;_a=-Sa;Ua=+g[ca>>2]*Za+ +g[da>>2]*Ya+ +g[ea>>2]*_a;Xa=+g[fa>>2]*Za+ +g[ga>>2]*Ya+ +g[ha>>2]*_a;g[W>>2]=+g[d>>2]*Za+ +g[ia>>2]*Ya+ +g[ja>>2]*_a;g[ka>>2]=Ua;g[la>>2]=Xa;g[Y>>2]=0.0;Xa=Ta*+g[na>>2]+Wa*+g[_>>2]+Sa*+g[pa>>2];Ua=Ta*+g[qa>>2]+Wa*+g[ra>>2]+Sa*+g[sa>>2];g[U>>2]=+g[V>>2]*Ta+ +g[ta>>2]*Wa+ +g[ua>>2]*Sa;g[va>>2]=Xa;g[wa>>2]=Ua;g[xa>>2]=0.0;Ll(T,c[t>>2]|0,W);Ll(S,c[p>>2]|0,U);Ta=+g[T>>2];Ua=+g[ya>>2];Sa=+g[za>>2];Wa=Ta*+g[h>>2]+Ua*+g[Aa>>2]+Sa*+g[Ba>>2]+ +g[Ca>>2];Xa=Ta*+g[Da>>2]+Ua*+g[Ea>>2]+Sa*+g[Fa>>2]+ +g[Q>>2];Sa=Ta*+g[Ra>>2]+Ua*+g[Qa>>2]+Sa*+g[Pa>>2]+ +g[Ja>>2];Ua=+g[S>>2];Ta=+g[Ga>>2];_a=+g[Ha>>2];Ya=Ua*+g[q>>2]+Ta*+g[aa>>2]+_a*+g[$>>2]+ +g[Ia>>2];Za=Ua*+g[oa>>2]+Ta*+g[Z>>2]+_a*+g[ma>>2]+ +g[P>>2];_a=Ua*+g[Na>>2]+Ta*+g[Oa>>2]+_a*+g[Ma>>2]+ +g[Ka>>2];Ta=Wa-Ya;Ua=Xa-Za;Va=Sa-_a;bb=+g[B>>2]*Ta+ +g[J>>2]*Ua+ +g[H>>2]*Va;if(bb>0.0?bb*bb>La*+g[C>>2]:0){m=22;break a}$a=c[O>>2]|0;ab=c[$a>>2]|0;if((ab|0)>0){cb=+g[$a+308>>2];db=0;eb=0;do{ib=Ta- +g[$a+(eb<<4)+4>>2];hb=Ua- +g[$a+(eb<<4)+8>>2];gb=Va- +g[$a+(eb<<4)+12>>2];db=db|ib*ib+hb*hb+gb*gb<=cb;eb=eb+1|0}while((eb|0)!=(ab|0))}else{db=0}eb=$a+304|0;if((+g[eb>>2]==0.0?Va==+g[$a+300>>2]:0)?Ua==+g[$a+296>>2]:0){fb=Ta==+g[$a+292>>2]}else{fb=0}if(fb|db){m=31;break a}bb=La-bb;if(bb<=La*9.999999974752427e-7){m=33;break a}g[$a+292>>2]=Ta;g[$a+296>>2]=Ua;g[$a+300>>2]=Va;g[eb>>2]=0.0;a[$a+356|0]=1;g[$a+(ab<<4)+4>>2]=Ta;g[$a+(ab<<4)+8>>2]=Ua;g[$a+(ab<<4)+12>>2]=Va;g[$a+(ab<<4)+16>>2]=0.0;eb=c[$a>>2]|0;g[$a+(eb<<4)+84>>2]=Wa;g[$a+(eb<<4)+88>>2]=Xa;g[$a+(eb<<4)+92>>2]=Sa;g[$a+(eb<<4)+96>>2]=0.0;eb=c[$a>>2]|0;g[$a+(eb<<4)+164>>2]=Ya;g[$a+(eb<<4)+168>>2]=Za;g[$a+(eb<<4)+172>>2]=_a;g[$a+(eb<<4)+176>>2]=0.0;c[$a>>2]=(c[$a>>2]|0)+1;eb=c[O>>2]|0;fb=Yo(eb)|0;Ta=+g[eb+276>>2];Wa=+g[eb+280>>2];Sa=+g[eb+284>>2];Va=+g[eb+288>>2];if(!fb){m=35;break a}Ua=Ta*Ta+Wa*Wa+Sa*Sa;if(Ua<9.999999974752427e-7){m=37;break a}if(La-Ua<=La*1.1920928955078125e-7){La=Ua;m=39;break a}g[ba>>2]=Ta;g[J>>2]=Wa;g[H>>2]=Sa;g[G>>2]=Va;fb=c[X>>2]|0;c[X>>2]=fb+1;if((fb|0)>1e3){La=0.0;d=0;Sa=0.0;Ta=0.0;Ua=0.0;break a}if((c[c[O>>2]>>2]|0)==4){m=42;break}else{La=Ua}}}}while(0);if((m|0)==22){c[N>>2]=10;m=43}else if((m|0)==31){c[N>>2]=1;m=43}else if((m|0)==33){c[N>>2]=!(bb<=0.0)?11:2;m=43}else if((m|0)==35){c[N>>2]=3;m=43}else if((m|0)==37){g[b+4>>2]=Ta;g[J>>2]=Wa;g[H>>2]=Sa;g[G>>2]=Va;c[N>>2]=6;m=43}else if((m|0)==39){c[N>>2]=12;m=43}else if((m|0)==42){c[N>>2]=13;La=0.0;d=0;Sa=0.0;Ta=0.0;Ua=0.0}do{if((m|0)==43){fb=c[O>>2]|0;Yo(fb)|0;Sa=+g[fb+260>>2];Ta=+g[fb+264>>2];Ua=+g[fb+268>>2];c[u+0>>2]=c[B+0>>2];c[u+4>>2]=c[B+4>>2];c[u+8>>2]=c[B+8>>2];c[u+12>>2]=c[B+12>>2];Xa=+g[B>>2];Wa=+g[J>>2];Va=+g[H>>2];Ya=Xa*Xa+Wa*Wa+Va*Va;if(Ya<1.0e-4){c[N>>2]=5}if(Ya>1.4210854715202004e-14){hb=1.0/+R(+Ya);g[u>>2]=hb*+g[u>>2];g[x>>2]=hb*+g[x>>2];g[s>>2]=hb*+g[s>>2];ib=K/+R(+La);c[D>>2]=1;La=1.0/hb-L;d=1;Sa=ib*Xa+Sa;Ta=ib*Wa+Ta;Ua=ib*Va+Ua;break}else{c[D>>2]=2;La=0.0;d=0;break}}}while(0);if(((c[b+72>>2]|0)!=0?(c[b+20>>2]|0)!=0:0)?(c[N>>2]|0)!=0:0){P=L+La<.01}else{P=0}N=d^1;do{if(P|N?(M=c[b+20>>2]|0,(M|0)!=0):0){c[2254]=(c[2254]|0)+1;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[B+12>>2]=0;if(!(Ib[c[(c[M>>2]|0)+8>>2]&3](M,c[O>>2]|0,c[t>>2]|0,c[p>>2]|0,h,q,B,F,I,f)|0)){Va=+g[B>>2];Wa=+g[J>>2];Xa=+g[H>>2];if(!(Va*Va+Wa*Wa+Xa*Xa>0.0)){m=66;break}Ya=+g[I>>2];gb=+g[F>>2]-Ya;Za=+g[I+4>>2];hb=+g[F+4>>2]-Za;_a=+g[I+8>>2];ib=+g[F+8>>2]-_a;L=+R(+(gb*gb+hb*hb+ib*ib))-L;if(L<La|N){Sa=K*Va+Ya;Ta=K*Wa+Za;Ua=K*Xa+_a;c[u+0>>2]=c[B+0>>2];c[u+4>>2]=c[B+4>>2];c[u+8>>2]=c[B+8>>2];c[u+12>>2]=c[B+12>>2];gb=+g[u>>2];hb=+g[x>>2];ib=+g[s>>2];La=1.0/+R(+(gb*gb+hb*hb+ib*ib));g[u>>2]=gb*La;g[x>>2]=hb*La;g[s>>2]=ib*La;c[D>>2]=6;La=L;break}c[D>>2]=5;if(d){break}i=r;return}Va=+g[I>>2];Wa=+g[F>>2];bb=Va-Wa;K=+g[I+4>>2];Xa=+g[F+4>>2];cb=K-Xa;L=+g[I+8>>2];Ya=+g[F+8>>2];Za=L-Ya;_a=bb*bb+cb*cb+Za*Za;if(!(_a<=1.4210854715202004e-14)){gb=0.0}else{hb=+g[b+4>>2];ib=+g[J>>2];_a=+g[H>>2];Za=_a;cb=ib;bb=hb;gb=+g[G>>2];_a=hb*hb+ib*ib+_a*_a}if(!(_a>1.4210854715202004e-14)){c[D>>2]=9;if(d){break}i=r;return}_a=1.0/+R(+_a);hb=Wa-Va;ib=Xa-K;Wa=Ya-L;Wa=-+R(+(hb*hb+ib*ib+Wa*Wa));if(La>Wa|N){g[u>>2]=bb*_a;g[x>>2]=cb*_a;g[s>>2]=Za*_a;g[E>>2]=gb;c[D>>2]=3;La=Wa;Sa=Va;Ta=K;Ua=L;break}c[D>>2]=8;if(!d){i=r;return}}else{m=66}}while(0);if((m|0)==66){if(!d){i=r;return}}if(!(La<0.0)?!(La*La<+g[C>>2]):0){i=r;return}if((c[b+76>>2]|0)!=0?(db=c[t>>2]|0,oc[c[(c[db>>2]|0)+8>>2]&63](db,h,n,o),db=o+4|0,ab=n+4|0,fb=o+8|0,eb=n+8|0,gb=(+g[o>>2]+ +g[n>>2])*.5,hb=(+g[db>>2]+ +g[ab>>2])*.5,ib=(+g[fb>>2]+ +g[eb>>2])*.5,$a=c[p>>2]|0,oc[c[(c[$a>>2]|0)+8>>2]&63]($a,q,n,o),l=+g[u>>2],k=+g[x>>2],j=+g[s>>2],(gb-(+g[n>>2]+ +g[o>>2])*.5)*l+(hb-(+g[ab>>2]+ +g[db>>2])*.5)*k+(ib-(+g[eb>>2]+ +g[fb>>2])*.5)*j<0.0):0){g[u>>2]=l*-1.0;g[x>>2]=k*-1.0;g[s>>2]=j*-1.0}c[B+0>>2]=c[u+0>>2];c[B+4>>2]=c[u+4>>2];c[B+8>>2]=c[u+8>>2];c[B+12>>2]=c[u+12>>2];g[A>>2]=La;fb=c[(c[e>>2]|0)+16>>2]|0;g[y>>2]=z+Sa;g[y+4>>2]=w+Ta;g[y+8>>2]=v+Ua;g[y+12>>2]=0.0;jc[fb&15](e,u,y,La);i=r;return}function gn(a){a=a|0;return}function hn(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function jn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0,r=0.0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;j=i;i=i+192|0;k=j;h=c[b+4>>2]|0;u=h+752|0;if(+g[u>>2]<f){i=j;return}q=c[h+740>>2]|0;n=(c[b+8>>2]|0)+8|0;m=c[n>>2]|0;l=(q|0)!=(m|0);r=+g[e>>2];x=+g[d>>2]*f+r;p=+g[e+4>>2];w=+g[d+4>>2]*f+p;o=+g[e+8>>2];v=+g[d+8>>2]*f+o;if(l){q=c[b+12>>2]|0;z=c[q+8>>2]|0;F=x- +g[z+52>>2];A=w- +g[z+56>>2];B=v- +g[z+60>>2];E=r- +g[m+52>>2];D=p- +g[m+56>>2];C=o- +g[m+60>>2];o=F*+g[z+4>>2]+A*+g[z+20>>2]+B*+g[z+36>>2];p=F*+g[z+8>>2]+A*+g[z+24>>2]+B*+g[z+40>>2];r=F*+g[z+12>>2]+A*+g[z+28>>2]+B*+g[z+44>>2];B=E*+g[m+4>>2]+D*+g[m+20>>2]+C*+g[m+36>>2];A=E*+g[m+8>>2]+D*+g[m+24>>2]+C*+g[m+40>>2];C=E*+g[m+12>>2]+D*+g[m+28>>2]+C*+g[m+44>>2]}else{D=x- +g[q+52>>2];A=w- +g[q+56>>2];B=v- +g[q+60>>2];z=c[b+12>>2]|0;y=c[z+8>>2]|0;E=r- +g[y+52>>2];F=p- +g[y+56>>2];C=o- +g[y+60>>2];o=D*+g[q+4>>2]+A*+g[q+20>>2]+B*+g[q+36>>2];p=D*+g[q+8>>2]+A*+g[q+24>>2]+B*+g[q+40>>2];r=D*+g[q+12>>2]+A*+g[q+28>>2]+B*+g[q+44>>2];B=E*+g[y+4>>2]+F*+g[y+20>>2]+C*+g[y+36>>2];A=E*+g[y+8>>2]+F*+g[y+24>>2]+C*+g[y+40>>2];C=E*+g[y+12>>2]+F*+g[y+28>>2]+C*+g[y+44>>2];q=z}g[k>>2]=o;g[k+4>>2]=p;g[k+8>>2]=r;g[k+12>>2]=0.0;g[k+16>>2]=B;g[k+20>>2]=A;g[k+24>>2]=C;g[k+28>>2]=0.0;m=k+64|0;c[m+0>>2]=c[d+0>>2];c[m+4>>2]=c[d+4>>2];c[m+8>>2]=c[d+8>>2];c[m+12>>2]=c[d+12>>2];g[k+80>>2]=f;t=k+84|0;g[t>>2]=0.0;d=k+88|0;g[d>>2]=0.0;s=k+92|0;g[s>>2]=0.0;c[k+112>>2]=0;a[k+116|0]=0;z=k+120|0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;c[z+12>>2]=0;c[z+16>>2]=0;c[z+20>>2]=0;c[z+24>>2]=0;c[z+28>>2]=0;g[k+48>>2]=x;g[k+52>>2]=w;g[k+56>>2]=v;g[k+60>>2]=0.0;z=k+32|0;c[z+0>>2]=c[e+0>>2];c[z+4>>2]=c[e+4>>2];c[z+8>>2]=c[e+8>>2];c[z+12>>2]=c[e+12>>2];v=+g[u>>2];u=c[h+748>>2]|0;if((u|0)>0){e=0;z=-1;v=v*v;while(1){E=+g[h+(e*184|0)+4>>2]-o;F=+g[h+(e*184|0)+8>>2]-p;w=+g[h+(e*184|0)+12>>2]-r;w=E*E+F*F+w*w;y=w<v;z=y?e:z;e=e+1|0;if((e|0)==(u|0)){break}else{v=y?w:v}}}else{z=-1}n=c[n>>2]|0;q=c[q+8>>2]|0;o=+g[n+224>>2]*+g[q+224>>2];o=o<-10.0?-10.0:o;g[t>>2]=o>10.0?10.0:o;g[s>>2]=+g[n+228>>2]*+g[q+228>>2];o=+g[n+232>>2]*+g[q+232>>2];o=o<-10.0?-10.0:o;g[d>>2]=o>10.0?10.0:o;d=k+152|0;n=k+168|0;o=+g[k+72>>2];if(+Q(+o)>.7071067690849304){D=+g[k+68>>2];C=o*o+D*D;E=1.0/+R(+C);g[d>>2]=0.0;F=-(E*o);g[k+156>>2]=F;D=E*D;g[k+160>>2]=D;g[n>>2]=C*E;E=+g[m>>2];g[k+172>>2]=-(E*D);g[k+176>>2]=E*F}else{C=+g[m>>2];D=+g[k+68>>2];E=C*C+D*D;F=1.0/+R(+E);D=-(D*F);g[d>>2]=D;C=F*C;g[k+156>>2]=C;g[k+160>>2]=0.0;g[n>>2]=-(o*C);g[k+172>>2]=o*D;g[k+176>>2]=E*F}if(l){c[k+96>>2]=c[b+20>>2];c[k+100>>2]=c[b+16>>2];c[k+104>>2]=c[b+28>>2];c[k+108>>2]=c[b+24>>2]}else{c[k+96>>2]=c[b+16>>2];c[k+100>>2]=c[b+20>>2];c[k+104>>2]=c[b+24>>2];c[k+108>>2]=c[b+28>>2]}if((z|0)>-1){y=h+(z*184|0)+152|0;e=c[y>>2]|0;s=h+(z*184|0)+124|0;D=+g[s>>2];t=h+(z*184|0)+128|0;E=+g[t>>2];u=h+(z*184|0)+132|0;F=+g[u>>2];q=h+(z*184|0)+116|0;d=c[q>>2]|0;Fr(h+(z*184|0)+4|0,k|0,184)|0;c[q>>2]=d;g[s>>2]=D;g[t>>2]=E;g[u>>2]=F;c[y>>2]=e;i=j;return}else{Tn(h,k)|0;i=j;return}}function kn(b,d,e,f,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0;o=i;i=i+4256|0;w=o+3264|0;y=o+2272|0;O=o+1280|0;N=o+288|0;M=o+272|0;P=o+256|0;q=o+176|0;p=o+44|0;b=o;r=e+4|0;if(((c[r>>2]|0)+ -17|0)>>>0<2){R=((c[f+4>>2]|0)+ -17|0)>>>0<2}else{R=0}v=h+16|0;I=h+32|0;D=h+4|0;x=h+20|0;H=h+36|0;A=h+8|0;u=h+24|0;G=h+40|0;z=j+16|0;F=j+32|0;B=j+4|0;t=j+20|0;J=j+36|0;C=j+8|0;s=j+24|0;K=j+40|0;Q=0;do{ln();X=+g[9216+(Q<<4)>>2];Y=+g[9220+(Q<<4)>>2];Z=+g[9224+(Q<<4)>>2];U=-X;V=-Y;W=-Z;$=+g[D>>2]*U+ +g[x>>2]*V+ +g[H>>2]*W;_=+g[A>>2]*U+ +g[u>>2]*V+ +g[G>>2]*W;g[O+(Q<<4)>>2]=+g[h>>2]*U+ +g[v>>2]*V+ +g[I>>2]*W;g[O+(Q<<4)+4>>2]=$;g[O+(Q<<4)+8>>2]=_;g[O+(Q<<4)+12>>2]=0.0;_=X*+g[B>>2]+Y*+g[t>>2]+Z*+g[J>>2];$=X*+g[C>>2]+Y*+g[s>>2]+Z*+g[K>>2];g[N+(Q<<4)>>2]=X*+g[j>>2]+Y*+g[z>>2]+Z*+g[F>>2];g[N+(Q<<4)+4>>2]=_;g[N+(Q<<4)+8>>2]=$;g[N+(Q<<4)+12>>2]=0.0;Q=Q+1|0}while((Q|0)!=42);Q=Jb[c[(c[e>>2]|0)+84>>2]&63](e)|0;if((Q|0)>0){S=M+4|0;T=M+8|0;aa=M+12|0;ca=0;ba=42;while(1){kc[c[(c[e>>2]|0)+88>>2]&63](e,ca,M);Z=+g[M>>2];V=+g[S>>2];Y=+g[T>>2];U=Z*+g[v>>2]+V*+g[x>>2]+Y*+g[u>>2];X=Z*+g[I>>2]+V*+g[H>>2]+Y*+g[G>>2];g[M>>2]=+g[h>>2]*Z+ +g[D>>2]*V+ +g[A>>2]*Y;g[S>>2]=U;g[T>>2]=X;g[aa>>2]=0.0;ln();da=9216+(ba<<4)|0;c[da+0>>2]=c[M+0>>2];c[da+4>>2]=c[M+4>>2];c[da+8>>2]=c[M+8>>2];c[da+12>>2]=c[M+12>>2];X=+g[M>>2];U=-X;Y=+g[S>>2];V=-Y;Z=+g[T>>2];W=-Z;$=+g[D>>2]*U+ +g[x>>2]*V+ +g[H>>2]*W;_=+g[A>>2]*U+ +g[u>>2]*V+ +g[G>>2]*W;g[O+(ba<<4)>>2]=+g[h>>2]*U+ +g[v>>2]*V+ +g[I>>2]*W;g[O+(ba<<4)+4>>2]=$;g[O+(ba<<4)+8>>2]=_;g[O+(ba<<4)+12>>2]=0.0;_=X*+g[B>>2]+Y*+g[t>>2]+Z*+g[J>>2];$=X*+g[C>>2]+Y*+g[s>>2]+Z*+g[K>>2];g[N+(ba<<4)>>2]=+g[j>>2]*X+ +g[z>>2]*Y+ +g[F>>2]*Z;g[N+(ba<<4)+4>>2]=_;g[N+(ba<<4)+8>>2]=$;g[N+(ba<<4)+12>>2]=0.0;ca=ca+1|0;if((ca|0)==(Q|0)){break}else{ba=ba+1|0}}M=Q+42|0}else{M=42}ca=Jb[c[(c[f>>2]|0)+84>>2]&63](f)|0;if((ca|0)>0){Q=P+4|0;S=P+8|0;T=P+12|0;ba=0;aa=M;while(1){kc[c[(c[f>>2]|0)+88>>2]&63](f,ba,P);Z=+g[P>>2];V=+g[Q>>2];Y=+g[S>>2];U=Z*+g[z>>2]+V*+g[t>>2]+Y*+g[s>>2];X=Z*+g[F>>2]+V*+g[J>>2]+Y*+g[K>>2];g[P>>2]=+g[j>>2]*Z+ +g[B>>2]*V+ +g[C>>2]*Y;g[Q>>2]=U;g[S>>2]=X;g[T>>2]=0.0;ln();da=9216+(aa<<4)|0;c[da+0>>2]=c[P+0>>2];c[da+4>>2]=c[P+4>>2];c[da+8>>2]=c[P+8>>2];c[da+12>>2]=c[P+12>>2];X=+g[P>>2];U=-X;Y=+g[Q>>2];V=-Y;Z=+g[S>>2];W=-Z;$=+g[D>>2]*U+ +g[x>>2]*V+ +g[H>>2]*W;_=+g[A>>2]*U+ +g[u>>2]*V+ +g[G>>2]*W;g[O+(aa<<4)>>2]=+g[h>>2]*U+ +g[v>>2]*V+ +g[I>>2]*W;g[O+(aa<<4)+4>>2]=$;g[O+(aa<<4)+8>>2]=_;g[O+(aa<<4)+12>>2]=0.0;_=X*+g[B>>2]+Y*+g[t>>2]+Z*+g[J>>2];$=X*+g[C>>2]+Y*+g[s>>2]+Z*+g[K>>2];g[N+(aa<<4)>>2]=+g[j>>2]*X+ +g[z>>2]*Y+ +g[F>>2]*Z;g[N+(aa<<4)+4>>2]=_;g[N+(aa<<4)+8>>2]=$;g[N+(aa<<4)+12>>2]=0.0;ba=ba+1|0;if((ba|0)==(ca|0)){break}else{aa=aa+1|0}}M=ca+M|0}oc[c[(c[e>>2]|0)+76>>2]&63](e,O,w,M);oc[c[(c[f>>2]|0)+76>>2]&63](f,N,y,M);if((M|0)>0){O=h+48|0;P=h+52|0;T=h+56|0;N=j+48|0;Q=j+52|0;S=j+56|0;if(R){E=0.0;X=0.0;Z=0.0;F=0;U=999999984306749400.0;while(1){ln();Y=+g[9216+(F<<4)>>2];V=+g[9220+(F<<4)>>2];W=+g[9228+(F<<4)>>2];if(Y*Y+V*V+0.0>.01?(_=+g[w+(F<<4)>>2],$=+g[w+(F<<4)+4>>2],L=+g[w+(F<<4)+8>>2],ga=+g[y+(F<<4)>>2],fa=+g[y+(F<<4)+4>>2],ea=+g[y+(F<<4)+8>>2],L=Y*(ga*+g[j>>2]+fa*+g[B>>2]+ea*+g[C>>2]+ +g[N>>2]-(_*+g[h>>2]+$*+g[D>>2]+L*+g[A>>2]+ +g[O>>2]))+V*(ga*+g[z>>2]+fa*+g[t>>2]+ea*+g[s>>2]+ +g[Q>>2]-(_*+g[v>>2]+$*+g[x>>2]+L*+g[u>>2]+ +g[P>>2]))+0.0,L<U):0){E=Y;U=L}else{W=Z;V=X}F=F+1|0;if((F|0)==(M|0)){Y=0.0;L=E;break}else{X=V;Z=W}}}else{L=0.0;V=0.0;Y=0.0;_=0.0;R=0;U=999999984306749400.0;while(1){ln();X=+g[9216+(R<<4)>>2];Z=+g[9220+(R<<4)>>2];$=+g[9224+(R<<4)>>2];W=+g[9228+(R<<4)>>2];if(X*X+Z*Z+$*$>.01?(fa=+g[w+(R<<4)>>2],ga=+g[w+(R<<4)+4>>2],E=+g[w+(R<<4)+8>>2],ia=+g[y+(R<<4)>>2],ha=+g[y+(R<<4)+4>>2],ea=+g[y+(R<<4)+8>>2],E=X*(ia*+g[j>>2]+ha*+g[B>>2]+ea*+g[C>>2]+ +g[N>>2]-(fa*+g[h>>2]+ga*+g[D>>2]+E*+g[A>>2]+ +g[O>>2]))+Z*(ia*+g[z>>2]+ha*+g[t>>2]+ea*+g[s>>2]+ +g[Q>>2]-(fa*+g[v>>2]+ga*+g[x>>2]+E*+g[u>>2]+ +g[P>>2]))+$*(ia*+g[F>>2]+ha*+g[J>>2]+ea*+g[K>>2]+ +g[S>>2]-(fa*+g[I>>2]+ga*+g[H>>2]+E*+g[G>>2]+ +g[T>>2])),E<U):0){Y=$;V=Z;L=X;U=E}else{W=_}R=R+1|0;if((R|0)==(M|0)){break}else{_=W}}}}else{W=0.0;Y=0.0;V=0.0;L=0.0;U=999999984306749400.0}switch(c[r>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:{break};default:{+Vb[c[(c[e>>2]|0)+48>>2]&3](e)}}s=f+4|0;switch(c[s>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:{break};default:{+Vb[c[(c[f>>2]|0)+48>>2]&3](f)}}if(U<0.0){da=0;i=o;return da|0}switch(c[r>>2]|0){case 13:{E=+g[e+44>>2];break};case 11:{E=+g[e+44>>2];break};case 10:{E=+g[e+44>>2];break};case 4:case 5:{E=+g[e+44>>2];break};case 8:{E=+g[e+28>>2]*+g[e+12>>2];break};case 0:{E=+g[e+44>>2];break};case 1:{E=+g[e+44>>2];break};default:{E=+Vb[c[(c[e>>2]|0)+48>>2]&3](e)}}t=c[s>>2]|0;switch(t|0){case 0:{X=+g[f+44>>2];t=0;break};case 1:{X=+g[f+44>>2];t=1;break};case 13:{X=+g[f+44>>2];t=13;break};case 11:{X=+g[f+44>>2];t=11;break};case 10:{X=+g[f+44>>2];t=10;break};case 4:case 5:{X=+g[f+44>>2];break};case 8:{X=+g[f+28>>2]*+g[f+12>>2];t=8;break};default:{X=+Vb[c[(c[f>>2]|0)+48>>2]&3](f);t=c[s>>2]|0}}E=U+(E+X+.5);c[q>>2]=9040;aa=q+4|0;g[aa>>2]=0.0;ba=q+8|0;g[ba>>2]=1.0;ca=q+12|0;g[ca>>2]=0.0;da=q+16|0;g[da>>2]=0.0;c[q+20>>2]=0;c[q+24>>2]=d;c[q+28>>2]=e;c[q+32>>2]=f;c[q+36>>2]=c[r>>2];c[q+40>>2]=t;g[q+44>>2]=+Vb[c[(c[e>>2]|0)+48>>2]&3](e);g[q+48>>2]=+Vb[c[(c[f>>2]|0)+48>>2]&3](f);a[q+52|0]=0;c[q+60>>2]=-1;c[q+72>>2]=1;c[q+76>>2]=1;f=p+128|0;ga=+g[h+48>>2]+L*E;ha=V*E+ +g[h+52>>2];ia=Y*E+ +g[h+56>>2];R=h+16|0;S=h+32|0;c[p+0>>2]=c[h+0>>2];c[p+4>>2]=c[h+4>>2];c[p+8>>2]=c[h+8>>2];c[p+12>>2]=c[h+12>>2];T=p+16|0;c[T+0>>2]=c[R+0>>2];c[T+4>>2]=c[R+4>>2];c[T+8>>2]=c[R+8>>2];c[T+12>>2]=c[R+12>>2];T=p+32|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];g[p+48>>2]=ga;g[p+52>>2]=ha;g[p+56>>2]=ia;g[p+60>>2]=0.0;T=p+64|0;c[T+0>>2]=c[j+0>>2];c[T+4>>2]=c[j+4>>2];c[T+8>>2]=c[j+8>>2];c[T+12>>2]=c[j+12>>2];T=p+80|0;S=j+16|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];T=p+96|0;S=j+32|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];T=p+112|0;S=j+48|0;c[T+0>>2]=c[S+0>>2];c[T+4>>2]=c[S+4>>2];c[T+8>>2]=c[S+8>>2];c[T+12>>2]=c[S+12>>2];g[f>>2]=999999984306749400.0;c[b>>2]=10304;f=b+40|0;a[f]=0;g[aa>>2]=-L;g[ba>>2]=-V;g[ca>>2]=-Y;g[da>>2]=0.0;fn(q,p,b,n,0);E=E- +g[b+36>>2];f=a[f]|0;if(!(f<<24>>24==0)){da=b+20|0;ha=+g[b+24>>2]-V*E;ia=+g[b+28>>2]-Y*E;g[l>>2]=+g[da>>2]-L*E;g[l+4>>2]=ha;g[l+8>>2]=ia;g[l+12>>2]=0.0;c[m+0>>2]=c[da+0>>2];c[m+4>>2]=c[da+4>>2];c[m+8>>2]=c[da+8>>2];c[m+12>>2]=c[da+12>>2];g[k>>2]=L;g[k+4>>2]=V;g[k+8>>2]=Y;g[k+12>>2]=W}da=f<<24>>24!=0;i=o;return da|0}function ln(){var b=0;b=i;if((a[10208]|0)!=0){i=b;return}if((Ya(10208)|0)==0){i=b;return}g[2304]=0.0;g[9220>>2]=-0.0;g[9224>>2]=-1.0;g[9228>>2]=0.0;g[9232>>2]=.7236080169677734;g[9236>>2]=-.5257250070571899;g[9240>>2]=-.44721901416778564;g[9244>>2]=0.0;g[9248>>2]=-.2763879895210266;g[9252>>2]=-.8506489992141724;g[9256>>2]=-.44721901416778564;g[9260>>2]=0.0;g[9264>>2]=-.8944259881973267;g[9268>>2]=-0.0;g[9272>>2]=-.4472160041332245;g[9276>>2]=0.0;g[9280>>2]=-.2763879895210266;g[9284>>2]=.8506489992141724;g[9288>>2]=-.44721999764442444;g[9292>>2]=0.0;g[9296>>2]=.7236080169677734;g[9300>>2]=.5257250070571899;g[9304>>2]=-.44721901416778564;g[9308>>2]=0.0;g[9312>>2]=.2763879895210266;g[9316>>2]=-.8506489992141724;g[9320>>2]=.44721999764442444;g[9324>>2]=0.0;g[9328>>2]=-.7236080169677734;g[9332>>2]=-.5257250070571899;g[9336>>2]=.44721901416778564;g[9340>>2]=0.0;g[9344>>2]=-.7236080169677734;g[9348>>2]=.5257250070571899;g[9352>>2]=.44721901416778564;g[9356>>2]=0.0;g[9360>>2]=.2763879895210266;g[9364>>2]=.8506489992141724;g[9368>>2]=.44721901416778564;g[9372>>2]=0.0;g[9376>>2]=.8944259881973267;g[9380>>2]=0.0;g[9384>>2]=.4472160041332245;g[9388>>2]=0.0;g[9392>>2]=-0.0;g[9396>>2]=0.0;g[9400>>2]=1.0;g[9404>>2]=0.0;g[9408>>2]=.4253230094909668;g[9412>>2]=-.3090110123157501;g[9416>>2]=-.8506540060043335;g[9420>>2]=0.0;g[9424>>2]=-.16245600581169128;g[9428>>2]=-.49999499320983887;g[9432>>2]=-.8506540060043335;g[9436>>2]=0.0;g[9440>>2]=.2628690004348755;g[9444>>2]=-.8090119957923889;g[9448>>2]=-.525738000869751;g[9452>>2]=0.0;g[9456>>2]=.4253230094909668;g[9460>>2]=.3090110123157501;g[9464>>2]=-.8506540060043335;g[9468>>2]=0.0;g[9472>>2]=.8506479859352112;g[9476>>2]=-0.0;g[9480>>2]=-.5257359743118286;g[9484>>2]=0.0;g[9488>>2]=-.5257300138473511;g[9492>>2]=-0.0;g[9496>>2]=-.8506519794464111;g[9500>>2]=0.0;g[9504>>2]=-.6881899833679199;g[9508>>2]=-.49999698996543884;g[9512>>2]=-.5257359743118286;g[9516>>2]=0.0;g[9520>>2]=-.16245600581169128;g[9524>>2]=.49999499320983887;g[9528>>2]=-.8506540060043335;g[9532>>2]=0.0;g[9536>>2]=-.6881899833679199;g[9540>>2]=.49999698996543884;g[9544>>2]=-.5257359743118286;g[9548>>2]=0.0;g[9552>>2]=.2628690004348755;g[9556>>2]=.8090119957923889;g[9560>>2]=-.525738000869751;g[9564>>2]=0.0;g[9568>>2]=.9510579705238342;g[9572>>2]=.3090130090713501;g[9576>>2]=0.0;g[9580>>2]=0.0;g[9584>>2]=.9510579705238342;g[9588>>2]=-.3090130090713501;g[9592>>2]=0.0;g[9596>>2]=0.0;g[9600>>2]=.5877860188484192;g[9604>>2]=-.80901700258255;g[9608>>2]=0.0;g[9612>>2]=0.0;g[9616>>2]=0.0;g[9620>>2]=-1.0;g[9624>>2]=0.0;g[9628>>2]=0.0;g[9632>>2]=-.5877860188484192;g[9636>>2]=-.80901700258255;g[9640>>2]=0.0;g[9644>>2]=0.0;g[9648>>2]=-.9510579705238342;g[9652>>2]=-.3090130090713501;g[9656>>2]=-0.0;g[9660>>2]=0.0;g[9664>>2]=-.9510579705238342;g[9668>>2]=.3090130090713501;g[9672>>2]=-0.0;g[9676>>2]=0.0;g[9680>>2]=-.5877860188484192;g[9684>>2]=.80901700258255;g[9688>>2]=-0.0;g[9692>>2]=0.0;g[9696>>2]=-0.0;g[9700>>2]=1.0;g[9704>>2]=-0.0;g[9708>>2]=0.0;g[9712>>2]=.5877860188484192;g[9716>>2]=.80901700258255;g[9720>>2]=-0.0;g[9724>>2]=0.0;g[9728>>2]=.6881899833679199;g[9732>>2]=-.49999698996543884;g[9736>>2]=.5257359743118286;g[9740>>2]=0.0;g[9744>>2]=-.2628690004348755;g[9748>>2]=-.8090119957923889;g[9752>>2]=.525738000869751;g[9756>>2]=0.0;g[9760>>2]=-.8506479859352112;g[9764>>2]=0.0;g[9768>>2]=.5257359743118286;g[9772>>2]=0.0;g[9776>>2]=-.2628690004348755;g[9780>>2]=.8090119957923889;g[9784>>2]=.525738000869751;g[9788>>2]=0.0;g[9792>>2]=.6881899833679199;g[9796>>2]=.49999698996543884;g[9800>>2]=.5257359743118286;g[9804>>2]=0.0;g[9808>>2]=.5257300138473511;g[9812>>2]=0.0;g[9816>>2]=.8506519794464111;g[9820>>2]=0.0;g[9824>>2]=.16245600581169128;g[9828>>2]=-.49999499320983887;g[9832>>2]=.8506540060043335;g[9836>>2]=0.0;g[9840>>2]=-.4253230094909668;g[9844>>2]=-.3090110123157501;g[9848>>2]=.8506540060043335;g[9852>>2]=0.0;g[9856>>2]=-.4253230094909668;g[9860>>2]=.3090110123157501;g[9864>>2]=.8506540060043335;g[9868>>2]=0.0;g[9872>>2]=.16245600581169128;g[9876>>2]=.49999499320983887;g[9880>>2]=.8506540060043335;g[9884>>2]=0.0;bb(10208);i=b;return}function mn(a){a=a|0;return}function nn(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function on(a){a=a|0;return}function pn(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function qn(a,b,c){a=a|0;b=b|0;c=c|0;return}function rn(a,b,c){a=a|0;b=b|0;c=c|0;return}function sn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0;h=i;j=b+4|0;c[j+0>>2]=c[d+0>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];d=b+20|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];g[b+36>>2]=f;a[b+40|0]=1;i=h;return}function tn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;f=i;c[b>>2]=10560;d=b+20|0;a[d]=1;g=b+16|0;c[g>>2]=0;j=b+8|0;c[j>>2]=0;e=b+12|0;c[e>>2]=0;c[b+24>>2]=0;a[b+28|0]=0;a[b+48|0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;a[b+68|0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;c[b+72>>2]=0;c[3580]=(c[3580]|0)+1;h=vr(51)|0;if((h|0)==0){h=0}else{k=h+19&-16;c[k+ -4>>2]=h;h=k}k=c[j>>2]|0;if((k|0)>0){j=0;do{l=c[g>>2]|0;c[h+(j<<4)>>2]=c[l+(j<<4)>>2];c[h+(j<<4)+4>>2]=c[l+(j<<4)+4>>2];c[h+(j<<4)+8>>2]=c[l+(j<<4)+8>>2];c[h+(j<<4)+12>>2]=c[l+(j<<4)+12>>2];j=j+1|0}while((j|0)!=(k|0))}j=c[g>>2]|0;if((j|0)==0){a[d]=1;c[g>>2]=h;c[e>>2]=2;un(b);i=f;return}if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0)}c[g>>2]=0;a[d]=1;c[g>>2]=h;c[e>>2]=2;un(b);i=f;return}function un(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;d=b+12|0;g=c[d>>2]|0;h=b+36|0;f=c[h>>2]|0;if((f|0)>=(g|0)){i=e;return}if((f|0)<=(g|0)){j=b+40|0;if((c[j>>2]|0)<(g|0)){if((g|0)==0){k=0;m=f}else{c[3580]=(c[3580]|0)+1;k=vr((g<<2|3)+16|0)|0;if((k|0)==0){k=0}else{p=k+19&-16;c[p+ -4>>2]=k;k=p}m=c[h>>2]|0}l=b+44|0;if((m|0)>0){o=0;do{n=k+(o<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(o<<2)>>2]}o=o+1|0}while((o|0)!=(m|0))}m=c[l>>2]|0;n=b+48|0;if((m|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[l>>2]=0}a[n]=1;c[l>>2]=k;c[j>>2]=g}else{k=c[b+44>>2]|0}l=f;do{j=k+(l<<2)|0;if((j|0)!=0){c[j>>2]=0}l=l+1|0}while((l|0)!=(g|0))}c[h>>2]=g;h=b+56|0;j=c[h>>2]|0;if((j|0)<(g|0)){k=b+60|0;if((c[k>>2]|0)<(g|0)){if((g|0)==0){m=0;o=j}else{c[3580]=(c[3580]|0)+1;l=vr((g<<2|3)+16|0)|0;if((l|0)==0){m=0}else{m=l+19&-16;c[m+ -4>>2]=l}o=c[h>>2]|0}l=b+64|0;if((o|0)>0){n=0;do{p=m+(n<<2)|0;if((p|0)!=0){c[p>>2]=c[(c[l>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(o|0))}o=c[l>>2]|0;n=b+68|0;if((o|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[o+ -4>>2]|0)}c[l>>2]=0}a[n]=1;c[l>>2]=m;c[k>>2]=g}else{m=c[b+64>>2]|0}do{k=m+(j<<2)|0;if((k|0)!=0){c[k>>2]=0}j=j+1|0}while((j|0)!=(g|0))}c[h>>2]=g;if((g|0)>0){p=g<<2;Cr(c[b+44>>2]|0,-1,p|0)|0;Cr(c[b+64>>2]|0,-1,p|0)|0}if((f|0)<=0){i=e;return}g=c[b+16>>2]|0;h=c[b+44>>2]|0;b=c[b+64>>2]|0;j=0;do{p=c[(c[g+(j<<4)+4>>2]|0)+12>>2]<<16|c[(c[g+(j<<4)>>2]|0)+12>>2];p=p+~(p<<15)|0;p=(p>>10^p)*9|0;p=p>>6^p;p=p+~(p<<11)|0;p=h+(((p>>16^p)&(c[d>>2]|0)+ -1)<<2)|0;c[b+(j<<2)>>2]=c[p>>2];c[p>>2]=j;j=j+1|0}while((j|0)!=(f|0));i=e;return}function vn(a){a=a|0;var b=0;b=i;wn(a);if((a|0)!=0){wr(a)}i=b;return}function wn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=10560;g=b+56|0;f=b+64|0;h=c[f>>2]|0;e=b+68|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+60>>2]=0;f=b+36|0;h=b+44|0;g=c[h>>2]|0;e=b+48|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[f>>2]=0;c[b+40>>2]=0;f=b+8|0;g=b+16|0;e=c[g>>2]|0;h=b+20|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+12|0;c[h>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+12|0;c[h>>2]=0;i=d;return}function xn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=i;e=b+8|0;b=c[e>>2]|0;if((b|0)==0|(d|0)==0){i=a;return}Fb[c[c[b>>2]>>2]&255](b);Hb[c[(c[d>>2]|0)+60>>2]&127](d,c[e>>2]|0);c[e>>2]=0;i=a;return}function yn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=10864;c[f+4>>2]=b;c[f+8>>2]=a;c[f+12>>2]=d;kc[c[(c[a>>2]|0)+48>>2]&63](a,f,d);i=e;return}function zn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=10688;c[f+4>>2]=b;kc[c[(c[a>>2]|0)+48>>2]&63](a,f,d);i=e;return}function An(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;f=i;c[2636]=(c[2636]|0)+1;h=(c[b+12>>2]|0)>(c[d+12>>2]|0);g=c[(h?d:b)+12>>2]|0;d=c[(h?b:d)+12>>2]|0;b=d<<16|g;b=b+~(b<<15)|0;b=(b>>10^b)*9|0;b=b>>6^b;b=b+~(b<<11)|0;b=(b>>16^b)&(c[a+12>>2]|0)+ -1;if((b|0)>=(c[a+36>>2]|0)){h=0;i=f;return h|0}h=c[(c[a+44>>2]|0)+(b<<2)>>2]|0;if((h|0)==-1){h=0;i=f;return h|0}b=c[a+16>>2]|0;a=a+64|0;while(1){if((c[(c[b+(h<<4)>>2]|0)+12>>2]|0)==(g|0)?(c[(c[b+(h<<4)+4>>2]|0)+12>>2]|0)==(d|0):0){break}h=c[(c[a>>2]|0)+(h<<2)>>2]|0;if((h|0)==-1){g=0;e=8;break}}if((e|0)==8){i=f;return g|0}h=b+(h<<4)|0;i=f;return h|0}function Bn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;h=i;d=b+4|0;g=c[d>>2]|0;e=b+8|0;if((g|0)!=(c[e>>2]|0)){n=g;n=n+1|0;c[d>>2]=n;n=b+12|0;n=c[n>>2]|0;n=n+(g<<4)|0;i=h;return n|0}f=(g|0)==0?1:g<<1;if((g|0)>=(f|0)){n=g;n=n+1|0;c[d>>2]=n;n=b+12|0;n=c[n>>2]|0;n=n+(g<<4)|0;i=h;return n|0}if((f|0)==0){k=0;m=g}else{c[3580]=(c[3580]|0)+1;j=vr((f<<4|3)+16|0)|0;if((j|0)==0){k=0}else{k=j+19&-16;c[k+ -4>>2]=j}m=c[d>>2]|0}j=b+12|0;if((m|0)>0){l=0;do{n=c[j>>2]|0;c[k+(l<<4)>>2]=c[n+(l<<4)>>2];c[k+(l<<4)+4>>2]=c[n+(l<<4)+4>>2];c[k+(l<<4)+8>>2]=c[n+(l<<4)+8>>2];c[k+(l<<4)+12>>2]=c[n+(l<<4)+12>>2];l=l+1|0}while((l|0)!=(m|0))}n=c[j>>2]|0;l=b+16|0;if((n|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);m=c[d>>2]|0}c[j>>2]=0}a[l]=1;c[j>>2]=k;c[e>>2]=f;n=m;n=n+1|0;c[d>>2]=n;n=b+12|0;n=c[n>>2]|0;n=n+(g<<4)|0;i=h;return n|0}function Cn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;c[2632]=(c[2632]|0)+1;h=(c[b+12>>2]|0)>(c[d+12>>2]|0);k=h?d:b;n=h?b:d;p=c[k+12>>2]|0;j=c[n+12>>2]|0;o=j<<16|p;o=o+~(o<<15)|0;o=(o>>10^o)*9|0;o=o>>6^o;o=o+~(o<<11)|0;l=a+12|0;o=(o>>16^o)&(c[l>>2]|0)+ -1;d=a+44|0;q=c[(c[d>>2]|0)+(o<<2)>>2]|0;if((q|0)==-1){s=0;i=g;return s|0}m=a+16|0;h=c[m>>2]|0;b=a+64|0;while(1){if((c[(c[h+(q<<4)>>2]|0)+12>>2]|0)==(p|0)?(c[(c[h+(q<<4)+4>>2]|0)+12>>2]|0)==(j|0):0){break}q=c[(c[b>>2]|0)+(q<<2)>>2]|0;if((q|0)==-1){b=0;f=24;break}}if((f|0)==24){i=g;return b|0}j=h+(q<<4)|0;if((j|0)==0){s=0;i=g;return s|0}kc[c[(c[a>>2]|0)+32>>2]&63](a,j,e);h=c[h+(q<<4)+12>>2]|0;j=j-(c[m>>2]|0)>>4;o=(c[d>>2]|0)+(o<<2)|0;p=c[o>>2]|0;r=c[b>>2]|0;if((p|0)!=(j|0)){while(1){q=r+(p<<2)|0;s=c[q>>2]|0;if((s|0)==(j|0)){break}else{p=s}}r=c[r+(j<<2)>>2]|0;if((p|0)==-1){f=12}else{c[q>>2]=r}}else{r=c[r+(j<<2)>>2]|0;f=12}if((f|0)==12){c[o>>2]=r}p=a+8|0;o=(c[p>>2]|0)+ -1|0;a=c[a+72>>2]|0;if((a|0)!=0){Nb[c[(c[a>>2]|0)+12>>2]&15](a,k,n,e)|0}if((o|0)==(j|0)){c[p>>2]=(c[p>>2]|0)+ -1;s=h;i=g;return s|0}e=c[m>>2]|0;a=c[(c[e+(o<<4)+4>>2]|0)+12>>2]<<16|c[(c[e+(o<<4)>>2]|0)+12>>2];a=a+~(a<<15)|0;a=(a>>10^a)*9|0;a=a>>6^a;a=a+~(a<<11)|0;a=(a>>16^a)&(c[l>>2]|0)+ -1;k=(c[d>>2]|0)+(a<<2)|0;l=c[k>>2]|0;m=c[b>>2]|0;if((l|0)!=(o|0)){while(1){n=m+(l<<2)|0;q=c[n>>2]|0;if((q|0)==(o|0)){break}else{l=q}}m=c[m+(o<<2)>>2]|0;if((l|0)==-1){f=22}else{c[n>>2]=m}}else{m=c[m+(o<<2)>>2]|0;f=22}if((f|0)==22){c[k>>2]=m}s=e+(j<<4)|0;r=e+(o<<4)|0;c[s+0>>2]=c[r+0>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];s=(c[d>>2]|0)+(a<<2)|0;c[(c[b>>2]|0)+(j<<2)>>2]=c[s>>2];c[s>>2]=j;c[p>>2]=(c[p>>2]|0)+ -1;s=h;i=g;return s|0}function Dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;g=a+8|0;if((c[g>>2]|0)<=0){i=e;return}f=a+16|0;h=0;a:while(1){while(1){k=c[f>>2]|0;j=k+(h<<4)|0;if(!($b[c[(c[b>>2]|0)+8>>2]&31](b,j)|0)){break}Nb[c[(c[a>>2]|0)+12>>2]&15](a,c[j>>2]|0,c[k+(h<<4)+4>>2]|0,d)|0;c[2630]=(c[2630]|0)+ -1;if((h|0)>=(c[g>>2]|0)){f=7;break a}}h=h+1|0;if((h|0)>=(c[g>>2]|0)){f=7;break}}if((f|0)==7){i=e;return}}function En(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+32|0;h=e;g=h+16|0;a[g]=1;f=h+12|0;c[f>>2]=0;j=h+4|0;c[j>>2]=0;l=h+8|0;c[l>>2]=0;k=b+8|0;t=c[k>>2]|0;if((t|0)>0){m=b+16|0;r=0;n=0;s=0;p=0;while(1){o=c[m>>2]|0;if((n|0)==(s|0)){q=(s|0)==0?1:s<<1;if((s|0)<(q|0)){if((q|0)!=0){c[3580]=(c[3580]|0)+1;r=vr((q<<4|3)+16|0)|0;if((r|0)==0){r=0;s=n}else{s=r+19&-16;c[s+ -4>>2]=r;r=s;s=n}}else{r=0}if((s|0)>0){t=0;do{u=c[f>>2]|0;c[r+(t<<4)>>2]=c[u+(t<<4)>>2];c[r+(t<<4)+4>>2]=c[u+(t<<4)+4>>2];c[r+(t<<4)+8>>2]=c[u+(t<<4)+8>>2];c[r+(t<<4)+12>>2]=c[u+(t<<4)+12>>2];t=t+1|0}while((t|0)!=(s|0))}t=c[f>>2]|0;if((t|0)==0){n=s}else{c[3582]=(c[3582]|0)+1;wr(c[t+ -4>>2]|0);c[f>>2]=0}a[g]=1;c[f>>2]=r;c[l>>2]=q;t=c[k>>2]|0;s=n}else{q=s}}else{q=s;s=n}c[r+(s<<4)>>2]=c[o+(p<<4)>>2];c[r+(s<<4)+4>>2]=c[o+(p<<4)+4>>2];c[r+(s<<4)+8>>2]=c[o+(p<<4)+8>>2];c[r+(s<<4)+12>>2]=c[o+(p<<4)+12>>2];n=s+1|0;p=p+1|0;if((p|0)>=(t|0)){break}else{s=q}}c[j>>2]=n;if((s|0)>-1){k=0;do{Nb[c[(c[b>>2]|0)+12>>2]&15](b,c[r+(k<<4)>>2]|0,c[r+(k<<4)+4>>2]|0,d)|0;k=k+1|0}while((k|0)<(n|0))}}else{n=0}d=b+56|0;if((c[d>>2]|0)>0){k=c[b+64>>2]|0;l=0;do{c[k+(l<<2)>>2]=-1;l=l+1|0}while((l|0)<(c[d>>2]|0))}if((n|0)>1){wi(h,0,n+ -1|0);n=c[j>>2]|0}if((n|0)>0){h=c[f>>2]|0;j=0;do{Sb[c[(c[b>>2]|0)+8>>2]&31](b,c[h+(j<<4)>>2]|0,c[h+(j<<4)+4>>2]|0)|0;j=j+1|0}while((j|0)<(n|0))}else{h=c[f>>2]|0}if((h|0)==0){i=e;return}if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0;i=e;return}function Fn(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;c[2634]=(c[2634]|0)+1;g=c[a+24>>2]|0;if((g|0)==0){if((b[e+6>>1]&b[d+4>>1])<<16>>16==0){t=0;i=f;return t|0}if((b[d+6>>1]&b[e+4>>1])<<16>>16==0){t=0;i=f;return t|0}}else{if(!(Sb[c[(c[g>>2]|0)+8>>2]&31](g,d,e)|0)){t=0;i=f;return t|0}}h=(c[d+12>>2]|0)>(c[e+12>>2]|0);g=h?e:d;d=h?d:e;h=g+12|0;r=c[h>>2]|0;j=d+12|0;q=c[j>>2]|0;k=q<<16|r;k=k+~(k<<15)|0;k=(k>>10^k)*9|0;k=k>>6^k;k=k+~(k<<11)|0;k=k>>16^k;o=a+4|0;n=a+12|0;m=c[n>>2]|0;l=k&m+ -1;e=a+44|0;t=c[(c[e>>2]|0)+(l<<2)>>2]|0;a:do{if(!((t|0)==-1)){p=c[a+16>>2]|0;s=a+64|0;while(1){if((c[(c[p+(t<<4)>>2]|0)+12>>2]|0)==(r|0)?(c[(c[p+(t<<4)+4>>2]|0)+12>>2]|0)==(q|0):0){break}t=c[(c[s>>2]|0)+(t<<2)>>2]|0;if((t|0)==-1){break a}}p=p+(t<<4)|0;if((p|0)!=0){t=p;i=f;return t|0}}}while(0);p=c[a+8>>2]|0;o=Bn(o)|0;q=c[a+72>>2]|0;if((q|0)!=0){Sb[c[(c[q>>2]|0)+8>>2]&31](q,g,d)|0}if((m|0)<(c[n>>2]|0)){un(a);l=(c[n>>2]|0)+ -1&k}if((c[h>>2]|0)<(c[j>>2]|0)){c[o>>2]=g;c[o+4>>2]=d}else{c[o>>2]=d;c[o+4>>2]=g}t=o+8|0;c[t>>2]=0;c[t+4>>2]=0;t=(c[e>>2]|0)+(l<<2)|0;c[(c[a+64>>2]|0)+(p<<2)>>2]=c[t>>2];c[t>>2]=p;t=o;i=f;return t|0}function Gn(a){a=a|0;return c[a+16>>2]|0}function Hn(a){a=a|0;return c[a+16>>2]|0}function In(a){a=a|0;return a+4|0}function Jn(a){a=a|0;return c[a+8>>2]|0}function Kn(a,b){a=a|0;b=b|0;c[a+24>>2]=b;return}function Ln(a){a=a|0;return 0}function Mn(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function Nn(a){a=a|0;return}function On(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Pn(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+4>>2]|0;if((c[b>>2]|0)==(a|0)){a=1;i=d;return a|0}a=(c[b+4>>2]|0)==(a|0);i=d;return a|0}function Qn(a){a=a|0;return}function Rn(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Sn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a+4>>2]|0;if((c[b>>2]|0)!=(e|0)?(c[b+4>>2]|0)!=(e|0):0){i=d;return 0}e=c[a+8>>2]|0;kc[c[(c[e>>2]|0)+32>>2]&63](e,b,c[a+12>>2]|0);i=d;return 0}function Tn(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;d=i;f=a+748|0;h=c[f>>2]|0;if((h|0)!=4){c[f>>2]=h+1;A=(h|0)<0;A=A?0:h;y=a+(A*184|0)+4|0;Fr(y|0,b|0,184)|0;i=d;return A|0}e=+g[b+80>>2];j=+g[a+84>>2];h=j<e;j=h?j:e;e=+g[a+268>>2];y=e<j;e=y?e:j;j=+g[a+452>>2];A=j<e;f=+g[a+636>>2]<(A?j:e);y=f?3:A?2:y?1:(h^1)<<31>>31;e=+g[b>>2];if((y|0)!=0){m=+g[a+188>>2];B=e-m;p=+g[b+4>>2];n=+g[a+192>>2];t=p-n;l=+g[b+8>>2];o=+g[a+196>>2];C=l-o;u=+g[a+556>>2];r=+g[a+372>>2];x=u-r;w=+g[a+560>>2];v=+g[a+376>>2];j=w-v;q=+g[a+564>>2];s=+g[a+380>>2];k=q-s;z=t*k-C*j;k=C*x-B*k;x=B*j-t*x;k=x*x+(z*z+k*k);if((y|0)==1){j=+g[a+12>>2];z=q;q=0.0;t=+g[a+4>>2];x=+g[a+8>>2];h=7}else{z=q;h=6}}else{m=+g[a+188>>2];n=+g[a+192>>2];o=+g[a+196>>2];k=0.0;p=+g[b+4>>2];l=+g[b+8>>2];r=+g[a+372>>2];u=+g[a+556>>2];v=+g[a+376>>2];w=+g[a+560>>2];s=+g[a+380>>2];z=+g[a+564>>2];h=6}if((h|0)==6){t=+g[a+4>>2];F=e-t;x=+g[a+8>>2];D=p-x;j=+g[a+12>>2];G=l-j;B=u-r;E=w-v;q=z-s;C=D*q-G*E;q=G*B-F*q;B=F*E-D*B;q=B*B+(C*C+q*q);if((y|0)==2){u=x;w=0.0;h=8}else{h=7}}if((h|0)==7){C=e-t;E=p-x;B=l-j;F=u-m;D=w-n;w=z-o;G=E*w-B*D;w=B*F-C*w;F=C*D-E*F;w=F*F+(G*G+w*w);if(f){j=0.0}else{u=x;h=8}}if((h|0)==8){C=e-t;E=p-u;B=l-j;F=r-m;D=v-n;j=s-o;G=E*j-B*D;j=B*F-C*j;F=C*D-E*F;j=F*F+(G*G+j*j)}l=+Q(+k);k=+Q(+q);e=+Q(+w);j=+Q(+j);f=l>-999999984306749400.0;l=f?l:-999999984306749400.0;h=k>l;k=h?k:l;y=e>k;h=j>(y?e:k)?3:y?2:h?1:(f^1)<<31>>31;A=(h|0)<0;A=A?0:h;y=a+(A*184|0)+4|0;Fr(y|0,b|0,184)|0;i=d;return A|0}function Un(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0;h=i;f=b+748|0;F=c[f>>2]|0;if((F|0)<=0){i=h;return}k=d+4|0;l=d+8|0;n=d+16|0;o=d+20|0;p=d+24|0;r=d+32|0;s=d+36|0;t=d+40|0;m=d+48|0;q=d+52|0;u=d+56|0;v=e+4|0;w=e+8|0;y=e+16|0;z=e+20|0;A=e+24|0;C=e+32|0;D=e+36|0;E=e+40|0;x=e+48|0;B=e+52|0;j=e+56|0;do{F=F+ -1|0;N=+g[b+(F*184|0)+4>>2];O=+g[b+(F*184|0)+8>>2];G=+g[b+(F*184|0)+12>>2];M=N*+g[d>>2]+O*+g[k>>2]+G*+g[l>>2]+ +g[m>>2];K=N*+g[n>>2]+O*+g[o>>2]+G*+g[p>>2]+ +g[q>>2];G=N*+g[r>>2]+O*+g[s>>2]+G*+g[t>>2]+ +g[u>>2];g[b+(F*184|0)+52>>2]=M;g[b+(F*184|0)+56>>2]=K;g[b+(F*184|0)+60>>2]=G;g[b+(F*184|0)+64>>2]=0.0;O=+g[b+(F*184|0)+20>>2];N=+g[b+(F*184|0)+24>>2];H=+g[b+(F*184|0)+28>>2];L=O*+g[e>>2]+N*+g[v>>2]+H*+g[w>>2]+ +g[x>>2];J=O*+g[y>>2]+N*+g[z>>2]+H*+g[A>>2]+ +g[B>>2];H=O*+g[C>>2]+N*+g[D>>2]+H*+g[E>>2]+ +g[j>>2];g[b+(F*184|0)+36>>2]=L;g[b+(F*184|0)+40>>2]=J;g[b+(F*184|0)+44>>2]=H;g[b+(F*184|0)+48>>2]=0.0;g[b+(F*184|0)+84>>2]=(M-L)*+g[b+(F*184|0)+68>>2]+(K-J)*+g[b+(F*184|0)+72>>2]+(G-H)*+g[b+(F*184|0)+76>>2];I=b+(F*184|0)+152|0;c[I>>2]=(c[I>>2]|0)+1}while((F|0)>0);d=c[f>>2]|0;if((d|0)<=0){i=h;return}j=b+752|0;e=d;do{d=d+ -1|0;k=b+(d*184|0)+4|0;G=+g[b+(d*184|0)+84>>2];H=+g[j>>2];if(G<=H){M=+g[b+(d*184|0)+36>>2]-(+g[b+(d*184|0)+52>>2]- +g[b+(d*184|0)+68>>2]*G);N=+g[b+(d*184|0)+40>>2]-(+g[b+(d*184|0)+56>>2]-G*+g[b+(d*184|0)+72>>2]);O=+g[b+(d*184|0)+44>>2]-(+g[b+(d*184|0)+60>>2]-G*+g[b+(d*184|0)+76>>2]);if(M*M+N*N+O*O>H*H){l=e+ -1|0;if((l|0)!=(d|0)){Fr(k|0,b+(l*184|0)+4|0,184)|0;c[b+(l*184|0)+116>>2]=0;g[b+(l*184|0)+124>>2]=0.0;a[b+(l*184|0)+120|0]=0;g[b+(l*184|0)+128>>2]=0.0;g[b+(l*184|0)+132>>2]=0.0;c[b+(l*184|0)+152>>2]=0;e=c[f>>2]|0}e=e+ -1|0;c[f>>2]=e}}else{l=e+ -1|0;if((l|0)!=(d|0)){Fr(k|0,b+(l*184|0)+4|0,184)|0;c[b+(l*184|0)+116>>2]=0;g[b+(l*184|0)+124>>2]=0.0;a[b+(l*184|0)+120|0]=0;g[b+(l*184|0)+128>>2]=0.0;g[b+(l*184|0)+132>>2]=0.0;c[b+(l*184|0)+152>>2]=0;e=c[f>>2]|0}e=e+ -1|0;c[f>>2]=e}}while((d|0)>0);i=h;return}function Vn(a){a=a|0;var b=0,d=0,e=0;b=i;c[a>>2]=11024;d=a+52|0;e=c[d>>2]|0;if((e|0)!=0){Fb[c[c[e>>2]>>2]&255](e);d=c[d>>2]|0;if((d|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0)}if((a|0)==0){i=b;return}}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Wn(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=11024;d=a+52|0;a=c[d>>2]|0;if((a|0)==0){i=b;return}Fb[c[c[a>>2]>>2]&255](a);a=c[d>>2]|0;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function Xn(d,f){d=d|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0.0,ia=0,ja=0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0,pa=0,qa=0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0,xa=0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0;j=i;i=i+320|0;E=j+288|0;M=j+272|0;h=j+212|0;w=j+200|0;t=j+184|0;L=j+164|0;S=j+128|0;P=j+112|0;A=j+64|0;H=j+40|0;F=j+24|0;D=j;y=d+52|0;k=c[y>>2]|0;if((k|0)!=0?(Fb[c[c[k>>2]>>2]&255](k),N=c[y>>2]|0,(N|0)!=0):0){c[3582]=(c[3582]|0)+1;wr(c[N+ -4>>2]|0)}c[3580]=(c[3580]|0)+1;k=vr(151)|0;if((k|0)==0){k=0}else{qa=k+19&-16;c[qa+ -4>>2]=k;k=qa}c[k>>2]=14120;a[k+20|0]=1;c[k+16>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;a[k+40|0]=1;c[k+36>>2]=0;c[k+28>>2]=0;c[k+32>>2]=0;a[k+60|0]=1;c[k+56>>2]=0;c[k+48>>2]=0;c[k+52>>2]=0;c[y>>2]=k;N=0;V=0;O=0;k=0;while(1){if((N|0)>=(Jb[c[(c[d>>2]|0)+96>>2]&63](d)|0)){break}if((V|0)==(O|0)){X=(O|0)==0?1:O<<1;if((O|0)<(X|0)){if((X|0)!=0?(c[3580]=(c[3580]|0)+1,u=vr((X<<4|3)+16|0)|0,(u|0)!=0):0){T=u+19&-16;c[T+ -4>>2]=u}else{T=0}if((O|0)>0){W=0;do{qa=T+(W<<4)|0;pa=k+(W<<4)|0;c[qa+0>>2]=c[pa+0>>2];c[qa+4>>2]=c[pa+4>>2];c[qa+8>>2]=c[pa+8>>2];c[qa+12>>2]=c[pa+12>>2];W=W+1|0}while((W|0)!=(O|0))}if((k|0)==0){W=O;O=X;k=T}else{c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0);W=O;O=X;k=T}}else{W=O}}else{W=V}qa=k+(V<<4)|0;c[qa+0>>2]=c[M+0>>2];c[qa+4>>2]=c[M+4>>2];c[qa+8>>2]=c[M+8>>2];c[qa+12>>2]=c[M+12>>2];kc[c[(c[d>>2]|0)+108>>2]&63](d,N,qa);N=N+1|0;V=W+1|0}a[h+16|0]=1;O=h+12|0;c[O>>2]=0;T=h+4|0;c[T>>2]=0;c[h+8>>2]=0;a[h+36|0]=1;N=h+32|0;c[N>>2]=0;c[h+24>>2]=0;c[h+28>>2]=0;a[h+56|0]=1;M=h+52|0;c[M>>2]=0;u=h+44|0;c[u>>2]=0;c[h+48>>2]=0;if((f|0)!=0){if((V|0)>0){Y=0;fa=0;ia=0;ja=0;while(1){f=Y+1|0;if((f|0)<(V|0)){X=k+(Y<<4)|0;W=k+(Y<<4)+4|0;Y=k+(Y<<4)+8|0;da=f;while(1){Z=da+1|0;if((Z|0)<(V|0)){ca=k+(da<<4)|0;_=k+(da<<4)+4|0;da=k+(da<<4)+8|0;ea=Z;do{ha=+g[X>>2];ua=+g[ca>>2]-ha;va=+g[W>>2];ka=+g[_>>2]-va;aa=+g[Y>>2];ta=+g[da>>2]-aa;ha=+g[k+(ea<<4)>>2]-ha;va=+g[k+(ea<<4)+4>>2]-va;aa=+g[k+(ea<<4)+8>>2]-aa;ba=ka*aa-ta*va;aa=ta*ha-ua*aa;ha=ua*va-ka*ha;ka=1.0;ga=0;while(1){na=ba*ka;la=aa*ka;ma=ha*ka;ka=ma*ma+(na*na+la*la);a:do{if(ka>9999999747378752.0e-20){va=1.0/+R(+ka);ka=na*va;la=la*va;ma=ma*va;if((fa|0)>0){oa=0;do{qa=oa;oa=oa+1|0;if(ka*+g[ja+(qa<<4)>>2]+la*+g[ja+(qa<<4)+4>>2]+ma*+g[ja+(qa<<4)+8>>2]>.9990000128746033){break a}}while((oa|0)<(fa|0))}ra=ka*+g[X>>2]+la*+g[W>>2]+ma*+g[Y>>2];na=-ra;oa=0;do{qa=oa;oa=oa+1|0;if(ka*+g[k+(qa<<4)>>2]+la*+g[k+(qa<<4)+4>>2]+ma*+g[k+(qa<<4)+8>>2]-ra+-.009999999776482582>0.0){break a}}while((oa|0)<(V|0));if((fa|0)==(ia|0)){qa=(ia|0)==0?1:ia<<1;if((ia|0)<(qa|0)){if((qa|0)!=0?(c[3580]=(c[3580]|0)+1,U=vr((qa<<4|3)+16|0)|0,(U|0)!=0):0){oa=U+19&-16;c[oa+ -4>>2]=U}else{oa=0}if((ia|0)>0){pa=0;do{wa=oa+(pa<<4)|0;xa=ja+(pa<<4)|0;c[wa+0>>2]=c[xa+0>>2];c[wa+4>>2]=c[xa+4>>2];c[wa+8>>2]=c[xa+8>>2];c[wa+12>>2]=c[xa+12>>2];pa=pa+1|0}while((pa|0)!=(ia|0))}if((ja|0)==0){pa=ia;ia=qa;ja=oa}else{c[3582]=(c[3582]|0)+1;wr(c[ja+ -4>>2]|0);pa=ia;ia=qa;ja=oa}}else{pa=ia}}else{pa=fa}g[ja+(pa<<4)>>2]=ka;g[ja+(pa<<4)+4>>2]=la;g[ja+(pa<<4)+8>>2]=ma;g[ja+(pa<<4)+12>>2]=na;fa=fa+1|0}}while(0);ga=ga+1|0;if((ga|0)==2){break}else{ka=-1.0}}ea=ea+1|0}while((ea|0)!=(V|0))}if((Z|0)==(V|0)){break}else{da=Z}}}if((f|0)==(V|0)){break}else{Y=f}}if((fa|0)>0){U=0;V=0;W=0;f=0;while(1){xa=ja+(U<<4)|0;c[w+0>>2]=c[xa+0>>2];c[w+4>>2]=c[xa+4>>2];c[w+8>>2]=c[xa+8>>2];aa=+g[ja+(U<<4)+12>>2];aa=aa- +Vb[c[(c[d>>2]|0)+48>>2]&3](d);if((V|0)==(W|0)){Z=(W|0)==0?1:W<<1;if((W|0)<(Z|0)){if((Z|0)!=0?(c[3580]=(c[3580]|0)+1,v=vr((Z<<4|3)+16|0)|0,(v|0)!=0):0){Y=v+19&-16;c[Y+ -4>>2]=v}else{Y=0}if((W|0)>0){X=0;do{xa=Y+(X<<4)|0;wa=f+(X<<4)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];X=X+1|0}while((X|0)!=(W|0))}if((f|0)==0){X=W;W=Z;f=Y}else{c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0);X=W;W=Z;f=Y}}else{X=W}}else{X=V}xa=f+(X<<4)|0;c[xa+0>>2]=c[w+0>>2];c[xa+4>>2]=c[w+4>>2];c[xa+8>>2]=c[w+8>>2];g[f+(X<<4)+12>>2]=aa;V=V+1|0;U=U+1|0;if((U|0)>=(fa|0)){v=ja;d=V;w=f;break}}if((d|0)>0){X=0;fa=0;ia=0;ga=0;while(1){U=X+1|0;if((U|0)<(d|0)){W=w+(X<<4)+8|0;f=w+(X<<4)+4|0;V=w+(X<<4)|0;X=w+(X<<4)+12|0;da=U;while(1){Y=da+1|0;if((Y|0)<(d|0)){Z=w+(da<<4)+4|0;_=w+(da<<4)+8|0;ca=w+(da<<4)|0;da=w+(da<<4)+12|0;ea=Y;do{ya=+g[Z>>2];na=+g[w+(ea<<4)+8>>2];la=+g[_>>2];ba=+g[w+(ea<<4)+4>>2];sa=ya*na-la*ba;aa=+g[w+(ea<<4)>>2];ha=+g[ca>>2];ma=la*aa-na*ha;ka=ba*ha-ya*aa;va=+g[W>>2];ua=+g[f>>2];ra=ba*va-na*ua;ta=+g[V>>2];na=na*ta-aa*va;ba=aa*ua-ba*ta;aa=la*ua-ya*va;la=ha*va-la*ta;ha=ya*ta-ha*ua;b:do{if(((ka*ka+(sa*sa+ma*ma)>9999999747378752.0e-20?ba*ba+(ra*ra+na*na)>9999999747378752.0e-20:0)?ha*ha+(aa*aa+la*la)>9999999747378752.0e-20:0)?($=va*ka+(ua*ma+sa*ta),+Q(+$)>9.999999974752427e-7):0){ta=-1.0/$;va=+g[X>>2];ya=+g[da>>2];ua=+g[w+(ea<<4)+12>>2];aa=ta*(aa*ua+(sa*va+ra*ya));la=ta*(la*ua+(ma*va+na*ya));ba=ta*(ha*ua+(ka*va+ba*ya));ja=0;do{xa=ja;ja=ja+1|0;if(+g[w+(xa<<4)+12>>2]+(aa*+g[w+(xa<<4)>>2]+la*+g[w+(xa<<4)+4>>2]+ba*+g[w+(xa<<4)+8>>2])+-.009999999776482582>0.0){break b}}while((ja|0)<(d|0));if((fa|0)==(ia|0)){pa=(ia|0)==0?1:ia<<1;if((ia|0)<(pa|0)){if((pa|0)!=0?(c[3580]=(c[3580]|0)+1,s=vr((pa<<4|3)+16|0)|0,(s|0)!=0):0){oa=s+19&-16;c[oa+ -4>>2]=s}else{oa=0}if((ia|0)>0){ja=0;do{xa=oa+(ja<<4)|0;wa=ga+(ja<<4)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];ja=ja+1|0}while((ja|0)!=(ia|0))}if((ga|0)==0){ja=ia;ia=pa;ga=oa}else{c[3582]=(c[3582]|0)+1;wr(c[ga+ -4>>2]|0);ja=ia;ia=pa;ga=oa}}else{ja=ia}}else{ja=fa}g[ga+(ja<<4)>>2]=aa;g[ga+(ja<<4)+4>>2]=la;g[ga+(ja<<4)+8>>2]=ba;g[ga+(ja<<4)+12>>2]=0.0;fa=fa+1|0}}while(0);ea=ea+1|0}while((ea|0)!=(d|0))}if((Y|0)==(d|0)){break}else{da=Y}}}if((U|0)==(d|0)){break}else{X=U}}}else{fa=0;ga=0}}else{v=ja;w=0;fa=0;ga=0}}else{v=0;w=0;fa=0;ga=0}Zq(h,ga,fa);if((ga|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ga+ -4>>2]|0)}if((w|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[w+ -4>>2]|0)}if((v|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[v+ -4>>2]|0)}}else{Zq(h,k,V)}d=c[u>>2]|0;V=(d|0)<0;U=(d|0)>0;if(U&(V^1)){c[3580]=(c[3580]|0)+1;s=vr((d<<4|3)+16|0)|0;if((s|0)==0){s=0}else{xa=s+19&-16;c[xa+ -4>>2]=s;s=xa}u=0;do{xa=s+(u<<4)|0;c[xa+0>>2]=c[t+0>>2];c[xa+4>>2]=c[t+4>>2];c[xa+8>>2]=c[t+8>>2];c[xa+12>>2]=c[t+12>>2];u=u+1|0}while((u|0)!=(d|0))}else{s=0}u=L+16|0;a[u]=1;v=L+12|0;c[v>>2]=0;t=L+4|0;c[t>>2]=0;w=L+8|0;c[w>>2]=0;f=S+0|0;W=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(W|0));W=S+16|0;a[W]=1;X=S+12|0;c[X>>2]=0;f=S+4|0;c[f>>2]=0;Y=S+8|0;c[Y>>2]=0;if(V){zb()}if(U){$n(L,d);_=S+20|0;L=c[v>>2]|0;V=0;do{Z=L+(V*36|0)|0;if((Z|0)!=0){bo(Z,S);xa=Z+20|0;c[xa+0>>2]=c[_+0>>2];c[xa+4>>2]=c[_+4>>2];c[xa+8>>2]=c[_+8>>2];c[xa+12>>2]=c[_+12>>2]}V=V+1|0}while((V|0)!=(d|0));S=c[X>>2]|0;c[t>>2]=d;if((S|0)!=0){if((a[W]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[S+ -4>>2]|0)}c[X>>2]=0}}else{c[t>>2]=d;L=0}a[W]=1;c[X>>2]=0;c[f>>2]=0;c[Y>>2]=0;S=c[T>>2]|0;W=c[y>>2]|0;T=W+8|0;V=c[T>>2]|0;if((V|0)<(S|0)){f=W+12|0;if((c[f>>2]|0)<(S|0)){if((S|0)==0){Y=0;_=V}else{c[3580]=(c[3580]|0)+1;X=vr((S<<4|3)+16|0)|0;if((X|0)==0){Y=0}else{Y=X+19&-16;c[Y+ -4>>2]=X}_=c[T>>2]|0}X=W+16|0;if((_|0)>0){Z=0;do{xa=Y+(Z<<4)|0;wa=(c[X>>2]|0)+(Z<<4)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];Z=Z+1|0}while((Z|0)!=(_|0))}Z=c[X>>2]|0;W=W+20|0;if((Z|0)!=0){if((a[W]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[Z+ -4>>2]|0)}c[X>>2]=0}a[W]=1;c[X>>2]=Y;c[f>>2]=S}else{X=W+16|0}do{xa=(c[X>>2]|0)+(V<<4)|0;c[xa+0>>2]=c[P+0>>2];c[xa+4>>2]=c[P+4>>2];c[xa+8>>2]=c[P+8>>2];c[xa+12>>2]=c[P+12>>2];V=V+1|0}while((V|0)!=(S|0))}c[T>>2]=S;if((S|0)>0){T=c[O>>2]|0;P=0;do{xa=(c[(c[y>>2]|0)+16>>2]|0)+(P<<4)|0;wa=T+(P<<4)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];P=P+1|0}while((P|0)!=(S|0))}if(U){U=A+4|0;T=A+24|0;S=A+8|0;P=A+20|0;V=A+16|0;f=0;do{W=(c[N>>2]|0)+((c[(c[M>>2]|0)+(f<<2)>>2]|0)*12|0)|0;X=L+(f*36|0)+4|0;Z=L+(f*36|0)+8|0;Y=L+(f*36|0)+12|0;L=L+(f*36|0)+16|0;_=W;da=0;do{ca=_+4|0;ea=c[_+((c[ca>>2]|0)*12|0)+8>>2]|0;ja=c[X>>2]|0;if((ja|0)==(c[Z>>2]|0)?(K=(ja|0)==0?1:ja<<1,(ja|0)<(K|0)):0){if((K|0)==0){fa=0}else{c[3580]=(c[3580]|0)+1;fa=vr((K<<2|3)+16|0)|0;if((fa|0)==0){fa=0}else{xa=fa+19&-16;c[xa+ -4>>2]=fa;fa=xa}ja=c[X>>2]|0}if((ja|0)>0){ia=0;do{ga=fa+(ia<<2)|0;if((ga|0)!=0){c[ga>>2]=c[(c[Y>>2]|0)+(ia<<2)>>2]}ia=ia+1|0}while((ia|0)!=(ja|0))}ga=c[Y>>2]|0;if((ga|0)!=0){if((a[L]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ga+ -4>>2]|0)}c[Y>>2]=0}a[L]=1;c[Y>>2]=fa;c[Z>>2]=K;ja=c[X>>2]|0}fa=(c[Y>>2]|0)+(ja<<2)|0;if((fa|0)!=0){c[fa>>2]=ea;ja=c[X>>2]|0}c[X>>2]=ja+1;wa=c[_+8>>2]|0;xa=c[O>>2]|0;$=+g[xa+(wa<<4)>>2]- +g[xa+(ea<<4)>>2];aa=+g[xa+(wa<<4)+4>>2]- +g[xa+(ea<<4)+4>>2];ha=+g[xa+(wa<<4)+8>>2]- +g[xa+(ea<<4)+8>>2];ba=1.0/+R(+($*$+aa*aa+ha*ha));if((da|0)<2){g[A+(da<<4)>>2]=$*ba;g[A+(da<<4)+4>>2]=aa*ba;g[A+(da<<4)+8>>2]=ha*ba;g[A+(da<<4)+12>>2]=0.0;da=da+1|0}xa=c[ca>>2]|0;_=_+(((c[_+(xa*12|0)>>2]|0)+xa|0)*12|0)|0}while((_|0)!=(W|0));Y=s+(f<<4)|0;if((da|0)==2){va=+g[U>>2];ta=+g[T>>2];na=+g[S>>2];ra=+g[P>>2];ya=va*ta-na*ra;ua=+g[V>>2];sa=+g[A>>2];ta=na*ua-ta*sa;ua=ra*sa-va*ua;wa=s+(f<<4)+4|0;xa=s+(f<<4)+8|0;g[s+(f<<4)+12>>2]=0.0;va=1.0/+R(+(ya*ya+ta*ta+ua*ua));ya=ya*va;g[Y>>2]=ya;g[wa>>2]=ta*va;g[xa>>2]=ua*va;L=c[v>>2]|0;g[L+(f*36|0)+20>>2]=ya;g[L+(f*36|0)+24>>2]=+g[wa>>2];g[L+(f*36|0)+28>>2]=+g[xa>>2];g[L+(f*36|0)+32>>2]=1.0000000150474662e+30}else{c[Y+0>>2]=0;c[Y+4>>2]=0;c[Y+8>>2]=0;c[Y+12>>2]=0;L=c[v>>2]|0}X=c[L+(f*36|0)+4>>2]|0;if((X|0)>0){W=c[(c[y>>2]|0)+16>>2]|0;$=+g[Y>>2];aa=+g[s+(f<<4)+4>>2];ba=+g[s+(f<<4)+8>>2];Y=c[L+(f*36|0)+12>>2]|0;ha=1.0000000150474662e+30;Z=0;do{xa=c[Y+(Z<<2)>>2]|0;ka=+g[W+(xa<<4)>>2]*$+ +g[W+(xa<<4)+4>>2]*aa+ +g[W+(xa<<4)+8>>2]*ba;ha=ha>ka?ka:ha;Z=Z+1|0}while((Z|0)<(X|0))}else{ha=1.0000000150474662e+30}g[L+(f*36|0)+32>>2]=-ha;f=f+1|0}while((f|0)<(d|0));M=c[t>>2]|0;if((M|0)>0){N=0;K=0;Y=0;do{if((Y|0)==(N|0)){N=(Y|0)==0?1:Y<<1;if((Y|0)<(N|0)){if((N|0)!=0?(c[3580]=(c[3580]|0)+1,J=vr((N<<2|3)+16|0)|0,(J|0)!=0):0){O=J+19&-16;c[O+ -4>>2]=J}else{O=0}if((Y|0)>0){S=0;do{P=O+(S<<2)|0;if((P|0)!=0){c[P>>2]=c[K+(S<<2)>>2]}S=S+1|0}while((S|0)!=(Y|0))}if((K|0)==0){K=O}else{c[3582]=(c[3582]|0)+1;wr(c[K+ -4>>2]|0);K=O}}else{N=Y}}O=K+(Y<<2)|0;if((O|0)!=0){c[O>>2]=Y;M=c[t>>2]|0}Y=Y+1|0}while((Y|0)<(M|0));if((Y|0)==0){z=K}else{V=H+16|0;J=H+12|0;f=H+4|0;U=H+8|0;O=A+16|0;P=A+12|0;S=A+4|0;T=A+8|0;d=A+20|0;M=A+20|0;X=A+12|0;N=A+16|0;W=A+20|0;ba=0.0;aa=0.0;$=0.0;while(1){ca=Y+ -1|0;Y=c[K+(ca<<2)>>2]|0;c[3580]=(c[3580]|0)+1;Z=vr(23)|0;if((Z|0)!=0){xa=Z+19&-16;c[xa+ -4>>2]=Z;Z=xa;if((xa|0)!=0){c[Z>>2]=Y}}else{Z=0}ha=+g[L+(Y*36|0)+20>>2];ka=+g[L+(Y*36|0)+24>>2];la=+g[L+(Y*36|0)+28>>2];Y=ca;fa=1;_=1;da=ca;c:while(1){ca=(Y|0)>0;d:while(1){do{xa=da;da=da+ -1|0;if((xa|0)<=0){break c}ea=c[K+(da<<2)>>2]|0}while(!(ha*+g[L+(ea*36|0)+20>>2]+ka*+g[L+(ea*36|0)+24>>2]+la*+g[L+(ea*36|0)+28>>2]>.9990000128746033));if((_|0)==(fa|0)?(G=(fa|0)==0?1:fa<<1,(fa|0)<(G|0)):0){if((G|0)!=0?(c[3580]=(c[3580]|0)+1,I=vr((G<<2|3)+16|0)|0,(I|0)!=0):0){ga=I+19&-16;c[ga+ -4>>2]=I}else{ga=0}if((fa|0)>0){ia=0;do{ja=ga+(ia<<2)|0;if((ja|0)!=0){c[ja>>2]=c[Z+(ia<<2)>>2]}ia=ia+1|0}while((ia|0)!=(fa|0))}if((Z|0)==0){fa=G;Z=ga}else{c[3582]=(c[3582]|0)+1;wr(c[Z+ -4>>2]|0);fa=G;Z=ga}}ga=Z+(_<<2)|0;if((ga|0)!=0){c[ga>>2]=ea}_=_+1|0;if(ca){ia=0}else{continue}while(1){ga=K+(ia<<2)|0;ja=ia+1|0;if((c[ga>>2]|0)==(ea|0)){break}if((ja|0)<(Y|0)){ia=ja}else{continue d}}if((ia|0)<(Y|0)){break}}xa=Y+ -1|0;wa=K+(xa<<2)|0;c[ga>>2]=c[wa>>2];c[wa>>2]=ea;Y=xa}if((_|0)>1){a[V]=1;c[J>>2]=0;c[f>>2]=0;c[U>>2]=0;ga=0;ba=0.0;aa=0.0;$=0.0;ca=0;do{ea=c[Z+(ca<<2)>>2]|0;ba=+g[L+(ea*36|0)+20>>2]+ba;aa=+g[L+(ea*36|0)+24>>2]+aa;$=+g[L+(ea*36|0)+28>>2]+$;da=L+(ea*36|0)+4|0;ia=c[da>>2]|0;if((ia|0)>0){ea=L+(ea*36|0)+12|0;ja=ga;fa=0;while(1){ga=c[(c[ea>>2]|0)+(fa<<2)>>2]|0;xa=(c[(c[y>>2]|0)+16>>2]|0)+(ga<<4)|0;c[F+0>>2]=c[xa+0>>2];c[F+4>>2]=c[xa+4>>2];c[F+8>>2]=c[xa+8>>2];c[F+12>>2]=c[xa+12>>2];e:do{if((ja|0)>0){oa=c[J>>2]|0;pa=0;while(1){qa=pa+1|0;if((c[oa+(pa*24|0)+20>>2]|0)==(ga|0)){ga=ja;break e}if((qa|0)<(ja|0)){pa=qa}else{x=207;break}}}else{x=207}}while(0);if((x|0)==207){x=0;c[D+0>>2]=c[F+0>>2];c[D+4>>2]=c[F+4>>2];c[D+8>>2]=c[F+8>>2];c[D+12>>2]=c[F+12>>2];if((ja|0)==(c[U>>2]|0)?(z=(ja|0)==0?1:ja<<1,(ja|0)<(z|0)):0){if((z|0)==0){ia=0}else{c[3580]=(c[3580]|0)+1;ia=vr((z*24|3)+16|0)|0;if((ia|0)==0){ia=0}else{xa=ia+19&-16;c[xa+ -4>>2]=ia;ia=xa}ja=c[f>>2]|0}oa=c[J>>2]|0;if((ja|0)<=0){if((oa|0)!=0){x=216}}else{x=0;while(1){xa=ia+(x*24|0)|0;wa=oa+(x*24|0)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];c[xa+16>>2]=c[wa+16>>2];c[xa+20>>2]=c[wa+20>>2];x=x+1|0;if((x|0)==(ja|0)){x=216;break}}}if((x|0)==216){x=0;if(!((a[V]|0)==0|(oa|0)==0)){c[3582]=(c[3582]|0)+1;wr(c[oa+ -4>>2]|0);ja=c[f>>2]|0}c[J>>2]=0}a[V]=1;c[J>>2]=ia;c[U>>2]=z}ia=c[J>>2]|0;xa=ia+(ja*24|0)|0;c[xa+0>>2]=c[D+0>>2];c[xa+4>>2]=c[D+4>>2];c[xa+8>>2]=c[D+8>>2];c[xa+12>>2]=c[D+12>>2];c[xa+16>>2]=c[D+16>>2];c[ia+(ja*24|0)+20>>2]=ga;ga=(c[f>>2]|0)+1|0;c[f>>2]=ga;ia=c[da>>2]|0}fa=fa+1|0;if((fa|0)<(ia|0)){ja=ga}else{break}}}ca=ca+1|0}while((ca|0)<(_|0));a[O]=1;c[P>>2]=0;c[S>>2]=0;c[T>>2]=0;xa=L+((c[Z>>2]|0)*9<<2)+20|0;c[W+0>>2]=c[xa+0>>2];c[W+4>>2]=c[xa+4>>2];c[W+8>>2]=c[xa+8>>2];c[W+12>>2]=c[xa+12>>2];ya=1.0/+R(+(ba*ba+aa*aa+$*$));ba=ba*ya;aa=aa*ya;$=$*ya;if(+Q(+$)>.7071067690849304){la=1.0/+R(+($*$+aa*aa));ha=0.0;ka=-($*la);la=aa*la}else{ka=1.0/+R(+(ba*ba+aa*aa));ha=-(aa*ka);ka=ba*ka;la=0.0}f:do{if((ga|0)<2){if((ga|0)>0){da=0;oa=0;ca=0;x=1;while(1){ea=c[J>>2]|0;if((da|0)==(oa|0)){fa=(oa|0)==0?1:oa<<1;if((oa|0)<(fa|0)){if((fa|0)!=0){c[3580]=(c[3580]|0)+1;ga=vr((fa*24|3)+16|0)|0;if((ga|0)==0){ja=0;oa=da}else{ja=ga+19&-16;c[ja+ -4>>2]=ga;oa=da}}else{ja=0}if((oa|0)>0){ga=0;do{xa=ja+(ga*24|0)|0;wa=ca+(ga*24|0)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];c[xa+16>>2]=c[wa+16>>2];c[xa+20>>2]=c[wa+20>>2];ga=ga+1|0}while((ga|0)!=(oa|0))}if((ca|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0)}ia=da;ga=c[f>>2]|0;ca=ja}else{ia=oa;fa=oa}}else{ia=da;fa=oa}xa=ca+(ia*24|0)|0;c[xa+0>>2]=c[ea+0>>2];c[xa+4>>2]=c[ea+4>>2];c[xa+8>>2]=c[ea+8>>2];c[xa+12>>2]=c[ea+12>>2];c[xa+16>>2]=c[ea+16>>2];c[xa+20>>2]=c[ea+20>>2];da=da+1|0;if((x|0)>=(ga|0)){x=272;break f}oa=fa;x=x+1|0}}else{ca=0;x=307}}else{x=c[J>>2]|0;ca=ga;da=0;do{if(ha*+g[x+(da*24|0)>>2]+ka*+g[x+(da*24|0)+4>>2]+la*+g[x+(da*24|0)+8>>2]<ha*+g[x>>2]+ka*+g[x+4>>2]+la*+g[x+8>>2]){c[E+0>>2]=c[x+0>>2];c[E+4>>2]=c[x+4>>2];c[E+8>>2]=c[x+8>>2];c[E+12>>2]=c[x+12>>2];c[E+16>>2]=c[x+16>>2];c[E+20>>2]=c[x+20>>2];ca=x+(da*24|0)|0;c[x+0>>2]=c[ca+0>>2];c[x+4>>2]=c[ca+4>>2];c[x+8>>2]=c[ca+8>>2];c[x+12>>2]=c[ca+12>>2];c[x+16>>2]=c[ca+16>>2];c[x+20>>2]=c[ca+20>>2];ca=x+(da*24|0)|0;c[ca+0>>2]=c[E+0>>2];c[ca+4>>2]=c[E+4>>2];c[ca+8>>2]=c[E+8>>2];c[ca+12>>2]=c[E+12>>2];c[ca+16>>2]=c[E+16>>2];c[ca+20>>2]=c[E+20>>2];ca=ga}da=da+1|0}while((da|0)<(ca|0));g[x+16>>2]=-1.0000000150474662e+30;if((ca|0)>1){ma=+g[x+4>>2];ea=x+8|0;da=1;do{ua=+g[x+(da*24|0)>>2]- +g[x>>2];va=+g[x+(da*24|0)+4>>2]-ma;ya=+g[x+(da*24|0)+8>>2]- +g[ea>>2];g[x+(da*24|0)+16>>2]=((ha*va-ka*ua)*$+(ba*(ka*ya-la*va)+aa*(la*ua-ha*ya)))/+R(+(ua*ua+va*va+ya*ya));da=da+1|0}while((da|0)<(ca|0))}c[E+0>>2]=c[x+0>>2];c[E+4>>2]=c[x+4>>2];c[E+8>>2]=c[x+8>>2];c[E+12>>2]=c[x+12>>2];co(H,E,1,ca+ -1|0);ca=c[J>>2]|0;c[3580]=(c[3580]|0)+1;x=vr(43)|0;if((x|0)==0){x=0}else{xa=x+19&-16;c[xa+ -4>>2]=x;x=xa}da=c[J>>2]|0;c[x+0>>2]=c[ca+0>>2];c[x+4>>2]=c[ca+4>>2];c[x+8>>2]=c[ca+8>>2];c[x+12>>2]=c[ca+12>>2];c[x+16>>2]=c[ca+16>>2];c[x+20>>2]=c[ca+20>>2];da=da+24|0;c[3580]=(c[3580]|0)+1;ca=vr(67)|0;if((ca|0)==0){ca=0}else{xa=ca+19&-16;c[xa+ -4>>2]=ca;ca=xa}ea=0;while(1){xa=ca+(ea*24|0)|0;wa=x+(ea*24|0)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];c[xa+16>>2]=c[wa+16>>2];c[xa+20>>2]=c[wa+20>>2];if((ea|0)==0){break}else{ea=ea+1|0}}if((x|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[x+ -4>>2]|0)}ga=ca+24|0;c[ga+0>>2]=c[da+0>>2];c[ga+4>>2]=c[da+4>>2];c[ga+8>>2]=c[da+8>>2];c[ga+12>>2]=c[da+12>>2];c[ga+16>>2]=c[da+16>>2];c[ga+20>>2]=c[da+20>>2];ga=c[f>>2]|0;if((ga|0)==2){da=2;x=273}else{ia=2;da=2;ea=2;x=2;while(1){g:do{if((ia|0)>1){xa=c[J>>2]|0;fa=xa+(x*24|0)|0;ha=+g[fa>>2];ka=+g[xa+(x*24|0)+4>>2];la=+g[xa+(x*24|0)+8>>2];while(1){xa=ia+ -2|0;ja=ia+ -1|0;ua=+g[ca+(xa*24|0)>>2];va=ua- +g[ca+(ja*24|0)>>2];sa=+g[ca+(xa*24|0)+4>>2];ra=sa- +g[ca+(ja*24|0)+4>>2];ya=+g[ca+(xa*24|0)+8>>2];ta=ya- +g[ca+(ja*24|0)+8>>2];ua=ua-ha;sa=sa-ka;ya=ya-la;if((va*sa-ra*ua)*$+(ba*(ra*ya-ta*sa)+aa*(ta*ua-va*ya))>0.0){break}if((ja|0)>1){ia=ja;da=ja}else{ia=ja;da=ja;break g}}if((ia|0)==(ea|0)){ja=(ea|0)==0?1:ea<<1;if((ea|0)<(ja|0)){if((ja|0)!=0){c[3580]=(c[3580]|0)+1;ea=vr((ja*24|3)+16|0)|0;if((ea|0)==0){oa=0;ea=da}else{oa=ea+19&-16;c[oa+ -4>>2]=ea;ea=da}}else{oa=0}if((ea|0)>0){ga=0;do{xa=oa+(ga*24|0)|0;wa=ca+(ga*24|0)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];c[xa+16>>2]=c[wa+16>>2];c[xa+20>>2]=c[wa+20>>2];ga=ga+1|0}while((ga|0)!=(ea|0))}if((ca|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0)}ga=c[f>>2]|0;ia=da;ea=ja;ca=oa}else{ia=ea}}ia=ca+(ia*24|0)|0;c[ia+0>>2]=c[fa+0>>2];c[ia+4>>2]=c[fa+4>>2];c[ia+8>>2]=c[fa+8>>2];c[ia+12>>2]=c[fa+12>>2];c[ia+16>>2]=c[fa+16>>2];c[ia+20>>2]=c[fa+20>>2];da=da+1|0;ia=da}}while(0);x=x+1|0;if((x|0)==(ga|0)){x=272;break}}}}}while(0);if((x|0)==272){if((da|0)>0){x=273}else{x=295}}if((x|0)==273){ia=0;ga=0;fa=0;x=0;do{ea=ca+(x*24|0)+20|0;if((ia|0)==(ga|0)){ja=(ga|0)==0?1:ga<<1;if((ga|0)<(ja|0)){if((ja|0)!=0?(c[3580]=(c[3580]|0)+1,C=vr((ja<<2|3)+16|0)|0,(C|0)!=0):0){ia=C+19&-16;c[ia+ -4>>2]=C}else{ia=0}if((ga|0)>0){oa=0;do{pa=ia+(oa<<2)|0;if((pa|0)!=0){c[pa>>2]=c[fa+(oa<<2)>>2]}oa=oa+1|0}while((oa|0)!=(ga|0))}if((fa|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[fa+ -4>>2]|0);c[P>>2]=0}a[O]=1;c[P>>2]=ia;c[T>>2]=ja;fa=ia;ia=ga;ga=ja}else{ia=ga}}ja=fa+(ia<<2)|0;if((ja|0)!=0){c[ja>>2]=c[ea>>2];ia=c[S>>2]|0}ia=ia+1|0;c[S>>2]=ia;ja=c[f>>2]|0;h:do{if((ja|0)>0){oa=c[J>>2]|0;pa=c[ea>>2]|0;ea=0;while(1){qa=oa+(ea*24|0)+20|0;ea=ea+1|0;if((c[qa>>2]|0)==(pa|0)){break}if((ea|0)>=(ja|0)){break h}}c[qa>>2]=-1}}while(0);x=x+1|0}while((x|0)<(da|0));ga=c[f>>2]|0;x=295}i:do{if((x|0)==295){x=0;if((ga|0)>0){fa=c[J>>2]|0;da=c[t>>2]|0;ea=(da|0)<1;oa=0;while(1){ja=c[fa+(oa*24|0)+20>>2]|0;if(!((ja|0)==-1|ea)){ia=0;do{pa=0;while(1){qa=pa+1|0;if((c[Z+(pa<<2)>>2]|0)==(ia|0)){break}if((qa|0)<(_|0)){pa=qa}else{x=303;break}}if((x|0)==303?(x=0,B=c[L+(ia*36|0)+4>>2]|0,(B|0)>0):0){qa=c[L+(ia*36|0)+12>>2]|0;pa=0;do{xa=pa;pa=pa+1|0;if((c[qa+(xa<<2)>>2]|0)==(ja|0)){da=1;break i}}while((pa|0)<(B|0))}ia=ia+1|0}while((ia|0)<(da|0))}oa=oa+1|0;if((oa|0)>=(ga|0)){x=307;break}}}else{x=307}}}while(0);if((x|0)==307){x=0;ea=c[y>>2]|0;da=ea+28|0;fa=c[da>>2]|0;if((fa|0)==(c[ea+32>>2]|0)){$n(ea+24|0,(fa|0)==0?1:fa<<1);fa=c[da>>2]|0}ea=(c[ea+36>>2]|0)+(fa*36|0)|0;if((ea|0)!=0){bo(ea,A);fa=ea+20|0;c[fa+0>>2]=c[d+0>>2];c[fa+4>>2]=c[d+4>>2];c[fa+8>>2]=c[d+8>>2];c[fa+12>>2]=c[d+12>>2];fa=c[da>>2]|0}c[da>>2]=fa+1;da=0}if((ca|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0)}ca=c[P>>2]|0;if((ca|0)!=0){if((a[O]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0)}c[P>>2]=0}ca=c[J>>2]|0;if((ca|0)!=0){if((a[V]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0)}c[J>>2]=0}a[V]=1;c[J>>2]=0;c[f>>2]=0;c[U>>2]=0;if(da&(_|0)>0){x=324}}else{if((_|0)>0){x=324}}if((x|0)==324){x=0;ca=0;do{fa=c[Z+(ca<<2)>>2]|0;bo(A,L+(fa*36|0)|0);fa=L+(fa*36|0)+20|0;c[M+0>>2]=c[fa+0>>2];c[M+4>>2]=c[fa+4>>2];c[M+8>>2]=c[fa+8>>2];c[M+12>>2]=c[fa+12>>2];fa=c[y>>2]|0;da=fa+28|0;ea=c[da>>2]|0;if((ea|0)==(c[fa+32>>2]|0)){$n(fa+24|0,(ea|0)==0?1:ea<<1);ea=c[da>>2]|0}fa=(c[fa+36>>2]|0)+(ea*36|0)|0;if((fa|0)!=0){bo(fa,A);ea=fa+20|0;c[ea+0>>2]=c[M+0>>2];c[ea+4>>2]=c[M+4>>2];c[ea+8>>2]=c[M+8>>2];c[ea+12>>2]=c[M+12>>2];ea=c[da>>2]|0}c[da>>2]=ea+1;da=c[X>>2]|0;if((da|0)!=0){if((a[N]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[da+ -4>>2]|0)}c[X>>2]=0}ca=ca+1|0}while((ca|0)<(_|0))}if((Z|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[Z+ -4>>2]|0)}if((Y|0)==0){z=K;break}}}}else{z=0}}else{z=0}y=c[y>>2]|0;C=y+64|0;B=y+68|0;A=y+72|0;H=y+28|0;c[C+0>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[C+12>>2]=0;M=c[H>>2]|0;if((M|0)>0){I=y+36|0;D=y+16|0;E=y+48|0;F=y+52|0;G=y+56|0;J=y+60|0;N=M;T=0;P=0;W=0;ca=0;Y=0;_=0;Z=0;X=0;f=0;U=0;V=0;d=0;K=0;while(1){da=c[I>>2]|0;M=c[da+(K*36|0)+4>>2]|0;if((M|0)>0){O=K&65535;N=K|-65536;ea=0;while(1){S=ea+1|0;xa=c[da+(K*36|0)+12>>2]|0;ja=c[xa+(ea<<2)>>2]&65535;da=c[xa+(((S|0)==(M|0)?0:S)<<2)>>2]&65535;ga=ja<<16>>16<da<<16>>16;ea=ga?ja:da;fa=ga?da:ja;ia=ga?ja:da;da=ga?da:ja;ja=da<<16>>16;ga=W+ -1|0;oa=((ia&65535)<<16)+ja&ga;j:do{if(oa>>>0<T>>>0?(r=c[f+(oa<<2)>>2]|0,!((r|0)==-1)):0){oa=r;while(1){if(da<<16>>16==(b[Z+(oa<<2)>>1]|0)?ia<<16>>16==(b[Z+(oa<<2)+2>>1]|0):0){break}oa=c[d+(oa<<2)>>2]|0;if((oa|0)==-1){da=0;break j}}if(!((oa|0)==-1)){da=ca+(oa<<2)|0}else{da=0}}else{da=0}}while(0);xa=ia<<16>>16;ia=c[D>>2]|0;ba=+g[ia+(xa<<4)>>2]- +g[ia+(ja<<4)>>2];$=+g[ia+(xa<<4)+4>>2]- +g[ia+(ja<<4)+4>>2];ya=+g[ia+(xa<<4)+8>>2]- +g[ia+(ja<<4)+8>>2];aa=1.0/+R(+(ba*ba+$*$+ya*ya));ba=ba*aa;$=$*aa;aa=ya*aa;ia=c[E>>2]|0;k:do{if((ia|0)>0){ja=c[G>>2]|0;oa=0;while(1){ha=+g[ja+(oa<<4)>>2];la=+g[ja+(oa<<4)+8>>2];ka=la-aa;if((!(+Q(+(ha-ba))>1.0e-6)?!(+Q(+(+g[ja+(oa<<4)+4>>2]-$))>1.0e-6):0)?!(+Q(+ka)>1.0e-6):0){break k}ka=aa+la;if((!(+Q(+(ba+ha))>1.0e-6)?!(+Q(+($+ +g[ja+(oa<<4)+4>>2]))>1.0e-6):0)?!(+Q(+ka)>1.0e-6):0){break k}oa=oa+1|0;if((oa|0)>=(ia|0)){x=359;break}}}else{x=359}}while(0);if((x|0)==359){x=0;if((ia|0)==(c[F>>2]|0)?(l=(ia|0)==0?1:ia<<1,(ia|0)<(l|0)):0){if((l|0)==0){ja=0}else{c[3580]=(c[3580]|0)+1;ia=vr((l<<4|3)+16|0)|0;if((ia|0)==0){ja=0}else{ja=ia+19&-16;c[ja+ -4>>2]=ia}ia=c[E>>2]|0}if((ia|0)>0){oa=0;do{xa=ja+(oa<<4)|0;wa=(c[G>>2]|0)+(oa<<4)|0;c[xa+0>>2]=c[wa+0>>2];c[xa+4>>2]=c[wa+4>>2];c[xa+8>>2]=c[wa+8>>2];c[xa+12>>2]=c[wa+12>>2];oa=oa+1|0}while((oa|0)!=(ia|0))}ia=c[G>>2]|0;if((ia|0)!=0){if((a[J]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ia+ -4>>2]|0)}c[G>>2]=0}a[J]=1;c[G>>2]=ja;c[F>>2]=l;ia=c[E>>2]|0}xa=c[G>>2]|0;g[xa+(ia<<4)>>2]=ba;g[xa+(ia<<4)+4>>2]=$;g[xa+(ia<<4)+8>>2]=aa;g[xa+(ia<<4)+12>>2]=0.0;c[E>>2]=(c[E>>2]|0)+1}l:do{if((da|0)==0){ja=(ea&65535)<<16;da=ja+(fa<<16>>16)|0;ia=da&ga;m:do{if(ia>>>0<T>>>0?(q=c[f+(ia<<2)>>2]|0,!((q|0)==-1)):0){ga=q;while(1){if(fa<<16>>16==(b[Z+(ga<<2)>>1]|0)?ea<<16>>16==(b[Z+(ga<<2)+2>>1]|0):0){break}ga=c[d+(ga<<2)>>2]|0;if((ga|0)==-1){break m}}if(!((ga|0)==-1)){xa=ca+(ga<<2)|0;b[xa>>1]=N;b[xa+2>>1]=N>>>16;break l}}}while(0);if((P|0)==(W|0)){ea=(W|0)==0?1:W<<1;if((W|0)<(ea|0)){if((ea|0)!=0?(c[3580]=(c[3580]|0)+1,p=vr((ea<<2|3)+16|0)|0,(p|0)!=0):0){ga=p+19&-16;c[ga+ -4>>2]=p}else{ga=0}if((W|0)>0){oa=0;do{pa=ga+(oa<<2)|0;if((pa|0)!=0){xa=ca+(oa<<2)|0;xa=e[xa>>1]|e[xa+2>>1]<<16;b[pa>>1]=xa;b[pa+2>>1]=xa>>>16}oa=oa+1|0}while((oa|0)!=(W|0))}if((ca|0)==0){oa=W;ca=ga}else{c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0);oa=W;ca=ga}}else{oa=W;ea=W}}else{oa=P;ea=W}ga=ca+(oa<<2)|0;if((ga|0)!=0){b[ga>>1]=N;b[ga+2>>1]=N>>>16;oa=P}ga=oa+1|0;if((Y|0)==(_|0)){_=(Y|0)==0?1:Y<<1;if((Y|0)<(_|0)){if((_|0)!=0?(c[3580]=(c[3580]|0)+1,o=vr((_<<2|3)+16|0)|0,(o|0)!=0):0){oa=o+19&-16;c[oa+ -4>>2]=o}else{oa=0}if((Y|0)>0){pa=0;do{qa=oa+(pa<<2)|0;if((qa|0)!=0){xa=Z+(pa<<2)|0;xa=e[xa>>1]|e[xa+2>>1]<<16;b[qa>>1]=xa;b[qa+2>>1]=xa>>>16}pa=pa+1|0}while((pa|0)!=(Y|0))}if((Z|0)==0){Z=oa}else{c[3582]=(c[3582]|0)+1;wr(c[Z+ -4>>2]|0);Z=oa}}else{_=Y}}oa=Z+(Y<<2)|0;if((oa|0)!=0){xa=ja|fa&65535;b[oa>>1]=xa;b[oa+2>>1]=xa>>>16}Y=Y+1|0;if((W|0)<(ea|0)){if((T|0)<(ea|0)){if((T|0)<=(ea|0)){if((X|0)<(ea|0)){if((ea|0)!=0?(c[3580]=(c[3580]|0)+1,n=vr((ea<<2|3)+16|0)|0,(n|0)!=0):0){W=n+19&-16;c[W+ -4>>2]=n}else{W=0}if((T|0)>0){fa=0;do{X=W+(fa<<2)|0;if((X|0)!=0){c[X>>2]=c[f+(fa<<2)>>2]}fa=fa+1|0}while((fa|0)!=(T|0))}if((f|0)==0){X=ea;f=W}else{c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0);X=ea;f=W}}fa=T;do{W=f+(fa<<2)|0;if((W|0)!=0){c[W>>2]=0}fa=fa+1|0}while((fa|0)!=(ea|0))}if((U|0)<(ea|0)){if((V|0)<(ea|0)){if((ea|0)!=0?(c[3580]=(c[3580]|0)+1,m=vr((ea<<2|3)+16|0)|0,(m|0)!=0):0){W=m+19&-16;c[W+ -4>>2]=m}else{W=0}if((U|0)>0){fa=0;do{V=W+(fa<<2)|0;if((V|0)!=0){c[V>>2]=c[d+(fa<<2)>>2]}fa=fa+1|0}while((fa|0)!=(U|0))}if((d|0)==0){V=ea;d=W}else{c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0);V=ea;d=W}}do{W=d+(U<<2)|0;if((W|0)!=0){c[W>>2]=0}U=U+1|0}while((U|0)!=(ea|0))}if((ea|0)>0){xa=ea<<2;Cr(f|0,-1,xa|0)|0;Cr(d|0,-1,xa|0)|0}if((T|0)>0){U=ea+ -1|0;W=0;while(1){xa=f+(((e[Z+(W<<2)+2>>1]<<16)+(b[Z+(W<<2)>>1]|0)&U)<<2)|0;c[d+(W<<2)>>2]=c[xa>>2];c[xa>>2]=W;W=W+1|0;if((W|0)==(T|0)){T=ea;U=ea;break}}}else{T=ea;U=ea}}ia=da&ea+ -1}W=f+(ia<<2)|0;c[d+(P<<2)>>2]=c[W>>2];c[W>>2]=P;P=ga;W=ea}else{b[da+2>>1]=O}}while(0);if((S|0)>=(M|0)){break}da=c[I>>2]|0;ea=S}M=c[H>>2]|0}else{M=N}K=K+1|0;if((K|0)>=(M|0)){break}else{N=M}}if((M|0)>0){l=c[I>>2]|0;m=c[D>>2]|0;ha=0.0;n=0;do{q=c[l+(n*36|0)+4>>2]|0;p=c[l+(n*36|0)+12>>2]|0;x=c[p>>2]|0;if((q+ -2|0)>=1){r=m+(x<<4)|0;o=m+(x<<4)+4|0;x=m+(x<<4)+8|0;D=q+ -1|0;$=+g[C>>2];aa=+g[B>>2];ba=+g[A>>2];F=1;while(1){E=F+1|0;wa=c[p+(F<<2)>>2]|0;xa=c[p+(((E|0)%(q|0)|0)<<2)>>2]|0;ka=+g[r>>2];la=+g[m+(wa<<4)>>2];Da=ka-la;na=+g[o>>2];ra=+g[m+(wa<<4)+4>>2];Ba=na-ra;ta=+g[x>>2];ua=+g[m+(wa<<4)+8>>2];Ea=ta-ua;ma=+g[m+(xa<<4)>>2];Aa=ka-ma;sa=+g[m+(xa<<4)+4>>2];Ca=na-sa;va=+g[m+(xa<<4)+8>>2];ya=ta-va;za=Ba*ya-Ea*Ca;ya=Ea*Aa-Da*ya;Aa=Da*Ca-Ba*Aa;ya=+R(+(Aa*Aa+(za*za+ya*ya)))*.5;$=$+(ka+la+ma)*.3333333432674408*ya;g[C>>2]=$;aa=(na+ra+sa)*.3333333432674408*ya+aa;g[B>>2]=aa;ba=ya*(ta+ua+va)*.3333333432674408+ba;g[A>>2]=ba;ha=ha+ya;if((E|0)==(D|0)){break}else{F=E}}}n=n+1|0}while((n|0)<(M|0))}else{ha=0.0}}else{ha=0.0;ca=0;Z=0;f=0;d=0}ha=1.0/ha;aa=ha*+g[C>>2];g[C>>2]=aa;ba=ha*+g[B>>2];g[B>>2]=ba;ha=ha*+g[A>>2];g[A>>2]=ha;l=y+96|0;g[l>>2]=3.4028234663852886e+38;if((M|0)>0){m=c[y+36>>2]|0;ka=3.4028234663852886e+38;n=0;while(1){$=+Q(+(+g[m+(n*36|0)+32>>2]+(+g[m+(n*36|0)+20>>2]*aa+ +g[m+(n*36|0)+24>>2]*ba+ +g[m+(n*36|0)+28>>2]*ha)));if($<ka){g[l>>2]=$}else{$=ka}n=n+1|0;if((n|0)<(M|0)){ka=$}else{break}}}else{$=3.4028234663852886e+38}m=c[y+8>>2]|0;if((m|0)>0){n=c[y+16>>2]|0;ma=-3.4028234663852886e+38;la=-3.4028234663852886e+38;ka=-3.4028234663852886e+38;ha=3.4028234663852886e+38;aa=3.4028234663852886e+38;ba=3.4028234663852886e+38;o=0;do{na=+g[n+(o<<4)>>2];ha=na<ha?na:ha;ma=na>ma?na:ma;na=+g[n+(o<<4)+4>>2];aa=na<aa?na:aa;la=na>la?na:la;na=+g[n+(o<<4)+8>>2];ba=na<ba?na:ba;ka=na>ka?na:ka;o=o+1|0}while((o|0)<(m|0))}else{ma=-3.4028234663852886e+38;la=-3.4028234663852886e+38;ka=-3.4028234663852886e+38;ha=3.4028234663852886e+38;aa=3.4028234663852886e+38;ba=3.4028234663852886e+38}g[y+100>>2]=ma+ha;g[y+104>>2]=la+aa;g[y+108>>2]=ba+ka;g[y+112>>2]=0.0;ha=ma-ha;aa=la-aa;ba=ka-ba;g[y+116>>2]=ha;g[y+120>>2]=aa;g[y+124>>2]=ba;g[y+128>>2]=0.0;$=$/1.7320507764816284;if(ha<aa){m=aa<ba?2:1}else{m=ha<ba?2:0}q=y+(m<<2)+116|0;aa=(+g[q>>2]*.5-$)*.0009765625;n=y+80|0;p=y+88|0;g[p>>2]=$;o=y+84|0;g[o>>2]=$;g[n>>2]=$;ba=+g[q>>2]*.5;q=y+(m<<2)+80|0;g[q>>2]=ba;r=0;while(1){if(tq(y)|0){x=470;break}ba=ba-aa;g[q>>2]=ba;r=r+1|0;if((r|0)>=1024){x=469;break}}n:do{if((x|0)==469){g[p>>2]=$;g[o>>2]=$;g[n>>2]=$}else if((x|0)==470){$=(+g[l>>2]-$)*.0009765625;n=1<<m&3;m=y+(n<<2)+80|0;n=y+((1<<n&3)<<2)+80|0;ba=+g[n>>2];l=0;while(1){ha=+g[m>>2];g[m>>2]=$+ha;aa=$+ +g[n>>2];g[n>>2]=aa;l=l+1|0;if(!(tq(y)|0)){break}if((l|0)>=1024){break n}else{ba=aa}}g[m>>2]=ha;g[n>>2]=ba}}while(0);if((Z|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[Z+ -4>>2]|0)}if((ca|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ca+ -4>>2]|0)}if((d|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0)}if((f|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0)}if((z|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[z+ -4>>2]|0)}l=c[t>>2]|0;if((l|0)>0){m=0;do{p=L+(m*36|0)+4|0;o=L+(m*36|0)+12|0;q=c[o>>2]|0;n=L+(m*36|0)+16|0;if((q|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0)}c[o>>2]=0}a[n]=1;c[o>>2]=0;c[p>>2]=0;c[L+(m*36|0)+8>>2]=0;m=m+1|0}while((m|0)!=(l|0));L=c[v>>2]|0}if((L|0)!=0){if((a[u]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[L+ -4>>2]|0)}c[v>>2]=0}a[u]=1;c[v>>2]=0;c[t>>2]=0;c[w>>2]=0;if((s|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[s+ -4>>2]|0)}ao(h);if((k|0)==0){i=j;return 1}c[3582]=(c[3582]|0)+1;wr(c[k+ -4>>2]|0);i=j;return 1}function Yn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0.0,s=0.0;e=i;i=i+2048|0;f=e;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;j=+g[d>>2];k=+g[d+4>>2];l=+g[d+8>>2];m=j*j+k*k+l*l;if(m<9999999747378752.0e-20){j=1.0;k=0.0;l=0.0}else{s=1.0/+R(+m);j=j*s;k=k*s;l=l*s}if((Jb[c[(c[b>>2]|0)+96>>2]&63](b)|0)<=0){i=e;return}d=0;m=-999999984306749400.0;do{if(((Jb[c[(c[b>>2]|0)+96>>2]&63](b)|0)-d|0)<128){n=(Jb[c[(c[b>>2]|0)+96>>2]&63](b)|0)-d|0;if((n|0)>0){h=7}else{r=-3.4028234663852886e+38;o=-1}}else{n=128;h=7}if((h|0)==7){h=0;o=0;while(1){kc[c[(c[b>>2]|0)+108>>2]&63](b,o,f+(o<<4)|0);o=o+1|0;if((o|0)==(n|0)){p=0;r=-3.4028234663852886e+38;o=-1;break}}do{s=j*+g[f+(p<<4)>>2]+k*+g[f+(p<<4)+4>>2]+l*+g[f+(p<<4)+8>>2];q=s>r;o=q?p:o;r=q?s:r;p=p+1|0}while((p|0)!=(n|0))}if(r>m){q=f+(o<<4)|0;c[a+0>>2]=c[q+0>>2];c[a+4>>2]=c[q+4>>2];c[a+8>>2]=c[q+8>>2];c[a+12>>2]=c[q+12>>2];m=r}d=d+128|0}while((d|0)<(Jb[c[(c[b>>2]|0)+96>>2]&63](b)|0));i=e;return}function Zn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0,y=0.0,z=0.0;j=i;i=i+2048|0;h=j;if((e|0)>0){k=0}else{i=j;return}do{g[d+(k<<4)+12>>2]=-999999984306749400.0;k=k+1|0}while((k|0)!=(e|0));k=0;do{if((Jb[c[(c[a>>2]|0)+96>>2]&63](a)|0)>0){o=b+(k<<4)|0;p=b+(k<<4)+4|0;q=b+(k<<4)+8|0;m=d+(k<<4)+12|0;l=d+(k<<4)|0;n=0;do{if(((Jb[c[(c[a>>2]|0)+96>>2]&63](a)|0)-n|0)<128){r=(Jb[c[(c[a>>2]|0)+96>>2]&63](a)|0)-n|0;if((r|0)>0){f=8}else{z=-3.4028234663852886e+38;t=-1}}else{r=128;f=8}if((f|0)==8){f=0;t=0;do{kc[c[(c[a>>2]|0)+108>>2]&63](a,t,h+(t<<4)|0);t=t+1|0}while((t|0)!=(r|0));s=+g[o>>2];u=+g[p>>2];v=+g[q>>2];w=0;z=-3.4028234663852886e+38;t=-1;do{y=s*+g[h+(w<<4)>>2]+u*+g[h+(w<<4)+4>>2]+v*+g[h+(w<<4)+8>>2];x=y>z;t=x?w:t;z=x?y:z;w=w+1|0}while((w|0)!=(r|0))}if(z>+g[m>>2]){x=h+(t<<4)|0;c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[l+12>>2]=c[x+12>>2];g[m>>2]=z}n=n+128|0}while((n|0)<(Jb[c[(c[a>>2]|0)+96>>2]&63](a)|0))}k=k+1|0}while((k|0)!=(e|0));i=j;return}function _n(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+96|0;m=e+32|0;k=e+16|0;l=e;j=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);g[m>>2]=1.0;n=m+4|0;o=m+20|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[o>>2]=1.0;o=m+24|0;n=m+40|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;g[n>>2]=1.0;n=m+44|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;oc[c[(c[a>>2]|0)+8>>2]&63](a,m,k,l);h=(j+(+g[l>>2]- +g[k>>2])*.5)*2.0;f=(j+(+g[l+4>>2]- +g[k+4>>2])*.5)*2.0;j=(j+(+g[l+8>>2]- +g[k+8>>2])*.5)*2.0;h=h*h;f=f*f;j=j*j;b=b*.0833333283662796;g[d>>2]=b*(f+j);g[d+4>>2]=b*(h+j);g[d+8>>2]=b*(h+f);g[d+12>>2]=0.0;i=e;return}function $n(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;e=b+8|0;if((c[e>>2]|0)>=(d|0)){i=f;return}if((d|0)!=0?(c[3580]=(c[3580]|0)+1,g=vr((d*36|3)+16|0)|0,(g|0)!=0):0){p=g+19&-16;c[p+ -4>>2]=g;g=p}else{g=0}l=b+4|0;k=c[l>>2]|0;h=b+12|0;if((k|0)>0){m=0;do{j=g+(m*36|0)|0;if((j|0)!=0){o=c[h>>2]|0;bo(j,o+(m*36|0)|0);p=j+20|0;o=o+(m*36|0)+20|0;c[p+0>>2]=c[o+0>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2]}m=m+1|0}while((m|0)!=(k|0));j=c[l>>2]|0;if((j|0)>0){p=0;do{l=c[h>>2]|0;o=l+(p*36|0)+4|0;k=l+(p*36|0)+12|0;m=c[k>>2]|0;n=l+(p*36|0)+16|0;if((m|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[k>>2]=0}a[n]=1;c[k>>2]=0;c[o>>2]=0;c[l+(p*36|0)+8>>2]=0;p=p+1|0}while((p|0)!=(j|0))}}j=c[h>>2]|0;b=b+16|0;if((j|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0)}c[h>>2]=0}a[b]=1;c[h>>2]=g;c[e>>2]=d;i=f;return}function ao(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;g=b+44|0;f=b+52|0;h=c[f>>2]|0;e=b+56|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+48>>2]=0;f=b+24|0;h=b+32|0;g=c[h>>2]|0;e=b+36|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[f>>2]=0;c[b+28>>2]=0;f=b+4|0;g=b+12|0;e=c[g>>2]|0;h=b+16|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+8|0;c[h>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+8|0;c[h>>2]=0;i=d;return}function bo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;j=b+16|0;a[j]=1;h=b+12|0;c[h>>2]=0;g=b+4|0;c[g>>2]=0;k=b+8|0;c[k>>2]=0;b=c[d+4>>2]|0;if((b|0)<=0){c[g>>2]=b;i=e;return}c[3580]=(c[3580]|0)+1;f=vr((b<<2|3)+16|0)|0;if((f|0)==0){f=0}else{n=f+19&-16;c[n+ -4>>2]=f;f=n}m=c[g>>2]|0;if((m|0)>0){n=0;do{l=f+(n<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[h>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(m|0))}l=c[h>>2]|0;if((l|0)!=0){if((a[j]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[l+ -4>>2]|0)}c[h>>2]=0}a[j]=1;c[h>>2]=f;c[k>>2]=b;h=0;do{j=f+(h<<2)|0;if((j|0)!=0){c[j>>2]=0}h=h+1|0}while((h|0)!=(b|0));c[g>>2]=b;d=d+12|0;g=0;do{h=f+(g<<2)|0;if((h|0)!=0){c[h>>2]=c[(c[d>>2]|0)+(g<<2)>>2]}g=g+1|0}while((g|0)!=(b|0));i=e;return}function co(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0,l=0.0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0;q=i;i=i+32|0;n=q;m=(e+d|0)/2|0;o=a+12|0;f=c[o>>2]|0;p=+g[f+(m*24|0)>>2];j=+g[f+(m*24|0)+4>>2];l=+g[f+(m*24|0)+8>>2];r=+g[f+(m*24|0)+16>>2];m=c[f+(m*24|0)+20>>2]|0;h=b+4|0;k=b+8|0;s=d;t=e;while(1){a:while(1){u=+g[f+(s*24|0)+16>>2];do{if(u!=r){if(!(u<r)){break a}}else{x=+g[b>>2];z=+g[f+(s*24|0)>>2]-x;w=+g[h>>2];y=+g[f+(s*24|0)+4>>2]-w;v=+g[k>>2];u=+g[f+(s*24|0)+8>>2]-v;u=z*z+y*y+u*u;x=p-x;w=j-w;v=l-v;v=x*x+w*w+v*v;if(u!=v){if(u<v){break}else{break a}}else{if((c[f+(s*24|0)+20>>2]|0)<(m|0)){break}else{break a}}}}while(0);s=s+1|0}b:while(1){u=+g[f+(t*24|0)+16>>2];do{if(r!=u){if(!(r<u)){break b}}else{y=+g[b>>2];w=p-y;z=+g[h>>2];x=j-z;u=+g[k>>2];v=l-u;v=w*w+x*x+v*v;y=+g[f+(t*24|0)>>2]-y;z=+g[f+(t*24|0)+4>>2]-z;u=+g[f+(t*24|0)+8>>2]-u;u=y*y+z*z+u*u;if(v!=u){if(v<u){break}else{break b}}else{if((m|0)<(c[f+(t*24|0)+20>>2]|0)){break}else{break b}}}}while(0);t=t+ -1|0}if((s|0)<=(t|0)){A=f+(s*24|0)|0;c[n+0>>2]=c[A+0>>2];c[n+4>>2]=c[A+4>>2];c[n+8>>2]=c[A+8>>2];c[n+12>>2]=c[A+12>>2];c[n+16>>2]=c[A+16>>2];c[n+20>>2]=c[A+20>>2];f=f+(t*24|0)|0;c[A+0>>2]=c[f+0>>2];c[A+4>>2]=c[f+4>>2];c[A+8>>2]=c[f+8>>2];c[A+12>>2]=c[f+12>>2];c[A+16>>2]=c[f+16>>2];c[A+20>>2]=c[f+20>>2];f=(c[o>>2]|0)+(t*24|0)|0;c[f+0>>2]=c[n+0>>2];c[f+4>>2]=c[n+4>>2];c[f+8>>2]=c[n+8>>2];c[f+12>>2]=c[n+12>>2];c[f+16>>2]=c[n+16>>2];c[f+20>>2]=c[n+20>>2];s=s+1|0;t=t+ -1|0}if((s|0)>(t|0)){break}f=c[o>>2]|0}if((t|0)>(d|0)){co(a,b,d,t)}if((s|0)>=(e|0)){i=q;return}co(a,b,s,e);i=q;return}function eo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;h=i;i=i+32|0;j=h+16|0;f=h;z=+g[b+16>>2];D=+g[b>>2];E=z-D;y=+g[b+20>>2];C=+g[b+4>>2];u=y-C;x=+g[b+24>>2];A=+g[b+8>>2];G=x-A;v=+g[b+32>>2];o=v-D;s=+g[b+36>>2];I=s-C;t=+g[b+40>>2];q=t-A;r=u*q-G*I;q=G*o-E*q;o=E*I-u*o;g[j>>2]=r;p=j+4|0;g[p>>2]=q;l=j+8|0;g[l>>2]=o;g[j+12>>2]=0.0;u=D*r+C*q+A*o;I=+g[a+4>>2];E=+g[a+8>>2];G=+g[a+12>>2];n=r*I+q*E+o*G-u;B=+g[a+20>>2];H=+g[a+24>>2];F=+g[a+28>>2];u=r*B+q*H+o*F-u;if(n*u>=0.0){i=h;return}k=c[a+36>>2]|0;b=!(n<=0.0);if(!((k&1|0)==0|b)){i=h;return}n=n/(n-u);m=a+40|0;if(!(n<+g[m>>2])){i=h;return}u=r*r+q*q+o*o;w=u*-9999999747378752.0e-20;J=1.0-n;B=B*n+I*J;E=H*n+E*J;F=F*n+G*J;D=D-B;C=C-E;A=A-F;z=z-B;y=y-E;x=x-F;if(!(o*(D*y-C*z)+(r*(C*x-A*y)+q*(A*z-D*x))>=w)){i=h;return}v=v-B;s=s-E;t=t-F;if(!(o*(z*s-y*v)+(r*(y*t-x*s)+q*(x*v-z*t))>=w)){i=h;return}if(!(o*(C*v-D*s)+(r*(A*s-C*t)+q*(D*t-A*v))>=w)){i=h;return}J=1.0/+R(+u);r=r*J;g[j>>2]=r;q=q*J;g[p>>2]=q;o=o*J;g[l>>2]=o;l=c[(c[a>>2]|0)+12>>2]|0;if((k&2|0)!=0|b){g[m>>2]=+gc[l&3](a,j,n,d,e);i=h;return}else{g[f>>2]=-r;g[f+4>>2]=-q;g[f+8>>2]=-o;g[f+12>>2]=0.0;g[m>>2]=+gc[l&3](a,f,n,d,e);i=h;return}}function fo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0,m=0,n=0.0,o=0,p=0.0,q=0,r=0.0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+672|0;o=h+568|0;w=h+208|0;u=h+200|0;v=h+176|0;l=h;z=d+16|0;y=d+32|0;c[o+8>>2]=0;g[o+12>>2]=1.0;g[o+16>>2]=1.0;g[o+20>>2]=1.0;g[o+24>>2]=0.0;x=o+44|0;j=o+52|0;c[j>>2]=0;c[o>>2]=11328;A=o+56|0;c[o+4>>2]=1;c[A+0>>2]=c[d+0>>2];c[A+4>>2]=c[d+4>>2];c[A+8>>2]=c[d+8>>2];c[A+12>>2]=c[d+12>>2];d=o+72|0;c[d+0>>2]=c[z+0>>2];c[d+4>>2]=c[z+4>>2];c[d+8>>2]=c[z+8>>2];c[d+12>>2]=c[z+12>>2];d=o+88|0;c[d+0>>2]=c[y+0>>2];c[d+4>>2]=c[y+4>>2];c[d+8>>2]=c[y+8>>2];c[d+12>>2]=c[y+12>>2];g[x>>2]=+g[b+204>>2];g[w+308>>2]=9999999747378752.0e-20;a[w+332|0]=0;c[u>>2]=8896;d=c[b+4>>2]|0;c[v>>2]=6960;c[v+4>>2]=w;c[v+8>>2]=u;c[v+12>>2]=d;c[v+16>>2]=o;c[v+20>>2]=0;c[l>>2]=6728;d=l+164|0;c[l+168>>2]=0;g[d>>2]=1.0;g[l+172>>2]=+g[b+208>>2];u=b+136|0;if((zl(v,b+8|0,b+72|0,u,u,l)|0?(q=l+132|0,p=+g[q>>2],s=l+136|0,r=+g[s>>2],m=l+140|0,t=+g[m>>2],k=p*p+r*r+t*t,k>9999999747378752.0e-20):0)?(n=+g[d>>2],n<+g[b+200>>2]):0){k=1.0/+R(+k);g[q>>2]=p*k;g[s>>2]=r*k;g[m>>2]=t*k;+Xb[c[(c[b>>2]|0)+12>>2]&3](b,q,l+148|0,n,e,f)}c[o>>2]=11024;b=c[j>>2]|0;if((b|0)==0){i=h;return}Fb[c[c[b>>2]>>2]&255](b);j=c[j>>2]|0;if((j|0)==0){i=h;return}c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0);i=h;return}function go(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=11024;d=a+52|0;a=c[d>>2]|0;if((a|0)==0){i=b;return}Fb[c[c[a>>2]>>2]&255](a);a=c[d>>2]|0;if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function ho(a){a=a|0;return}function io(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function jo(a){a=a|0;var b=0,d=0,e=0;b=i;c[a>>2]=11024;d=a+52|0;e=c[d>>2]|0;if((e|0)!=0){Fb[c[c[e>>2]>>2]&255](e);d=c[d>>2]|0;if((d|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0)}if((a|0)==0){i=b;return}}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function ko(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;oc[c[(c[a>>2]|0)+80>>2]&63](a,b,d,e);i=f;return}function lo(a,b,d){a=a|0;b=+b;d=d|0;a=i;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;i=a;return}function mo(a){a=a|0;return 11496}function no(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;l=+g[d>>2];k=+g[d+4>>2];f=+g[d+8>>2];j=l*+g[b+56>>2]+k*+g[b+60>>2]+f*+g[b+64>>2];h=l*+g[b+72>>2]+k*+g[b+76>>2]+f*+g[b+80>>2];f=l*+g[b+88>>2]+k*+g[b+92>>2]+f*+g[b+96>>2];if(j<h){d=h<f?2:1}else{d=j<f?2:0}d=b+(d<<4)+56|0;c[a+0>>2]=c[d+0>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];i=e;return}function oo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0;n=i;if((e|0)<=0){i=n;return}h=a+56|0;j=a+60|0;k=a+64|0;l=a+72|0;m=a+76|0;f=a+80|0;o=a+88|0;p=a+92|0;q=a+96|0;r=0;do{y=+g[b+(r<<4)>>2];x=+g[b+(r<<4)+4>>2];t=+g[b+(r<<4)+8>>2];v=y*+g[h>>2]+x*+g[j>>2]+t*+g[k>>2];u=y*+g[l>>2]+x*+g[m>>2]+t*+g[f>>2];t=y*+g[o>>2]+x*+g[p>>2]+t*+g[q>>2];s=d+(r<<4)|0;if(v<u){w=u<t?2:1}else{w=v<t?2:0}w=a+(w<<4)+56|0;c[s+0>>2]=c[w+0>>2];c[s+4>>2]=c[w+4>>2];c[s+8>>2]=c[w+8>>2];c[s+12>>2]=c[w+12>>2];r=r+1|0}while((r|0)!=(e|0));i=n;return}function po(a){a=a|0;return 2}function qo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0;d=i;k=+g[a+56>>2];m=+g[a+72>>2]-k;l=+g[a+60>>2];h=+g[a+76>>2]-l;f=+g[a+64>>2];n=+g[a+80>>2]-f;k=+g[a+88>>2]-k;l=+g[a+92>>2]-l;f=+g[a+96>>2]-f;e=h*f-n*l;f=n*k-m*f;k=m*l-h*k;a=c+4|0;j=c+8|0;g[c+12>>2]=0.0;h=1.0/+R(+(k*k+(e*e+f*f)));e=h*e;g[c>>2]=e;f=h*f;g[a>>2]=f;h=k*h;g[j>>2]=h;if((b|0)==0){i=d;return}g[c>>2]=e*-1.0;g[a>>2]=f*-1.0;g[j>>2]=h*-1.0;i=d;return}function ro(a){a=a|0;return 3}function so(a){a=a|0;return 3}function to(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;kc[c[(c[a>>2]|0)+108>>2]&63](a,b,d);kc[c[(c[a>>2]|0)+108>>2]&63](a,(b+1|0)%3|0,e);i=f;return}function uo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;a=a+(b<<4)+56|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];i=e;return}function vo(a){a=a|0;return 1}function wo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;oc[c[(c[a>>2]|0)+124>>2]&63](a,e,b,d);i=f;return}function xo(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;e=i;i=i+32|0;f=e+16|0;h=e;v=+g[a+56>>2];y=+g[a+72>>2]-v;o=+g[a+60>>2];j=+g[a+76>>2]-o;u=+g[a+64>>2];z=+g[a+80>>2]-u;w=+g[a+88>>2]-v;x=+g[a+92>>2]-o;k=+g[a+96>>2]-u;l=j*k-z*x;k=z*w-y*k;w=y*x-j*w;j=1.0/+R(+(w*w+(l*l+k*k)));l=j*l;k=j*k;j=w*j;m=b+4|0;n=b+8|0;u=+g[b>>2]*l+ +g[m>>2]*k+j*+g[n>>2]-(l*v+k*o+j*u);o=-d;if(!(u>=o)|!(u<=d)){t=0;i=e;return t|0}q=h+4|0;p=f+4|0;s=h+8|0;r=f+8|0;t=0;while(1){oc[c[(c[a>>2]|0)+104>>2]&63](a,t,f,h);w=+g[f>>2];v=+g[h>>2]-w;y=+g[p>>2];d=+g[q>>2]-y;u=+g[r>>2];z=+g[s>>2]-u;x=j*d-k*z;z=l*z-j*v;d=k*v-l*d;v=1.0/+R(+(d*d+(x*x+z*z)));x=v*x;z=v*z;v=d*v;t=t+1|0;if(+g[b>>2]*x+ +g[m>>2]*z+v*+g[n>>2]-(u*v+(w*x+y*z))<o){f=0;b=5;break}if((t|0)>=3){f=1;b=5;break}}if((b|0)==5){i=e;return f|0}return 0}function yo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;b=i;h=+g[a+56>>2];m=+g[a+72>>2]-h;l=+g[a+60>>2];f=+g[a+76>>2]-l;j=+g[a+64>>2];n=+g[a+80>>2]-j;h=+g[a+88>>2]-h;l=+g[a+92>>2]-l;j=+g[a+96>>2]-j;k=f*j-n*l;j=n*h-m*j;h=m*l-f*h;g[d+12>>2]=0.0;f=1.0/+R(+(h*h+(k*k+j*j)));g[d>>2]=f*k;g[d+4>>2]=f*j;g[d+8>>2]=h*f;d=a+56|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];i=b;return}function zo(a){a=a|0;var b=0;b=i;Ao(a);if((a|0)!=0){wr(a)}i=b;return}function Ao(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=11520;g=b+48|0;f=b+56|0;h=c[f>>2]|0;e=b+60|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+52>>2]=0;f=b+28|0;h=b+36|0;g=c[h>>2]|0;e=b+40|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[f>>2]=0;c[b+32>>2]=0;f=b+8|0;g=b+16|0;e=c[g>>2]|0;h=b+20|0;if((e|0)==0){e=b+12|0;a[h]=1;c[g>>2]=0;c[f>>2]=0;c[e>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;e=b+12|0;a[h]=1;c[g>>2]=0;c[f>>2]=0;c[e>>2]=0;i=d;return}



function Xp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0,La=0.0,Ma=0,Na=0.0,Oa=0.0,Pa=0.0,Qa=0.0,Ra=0.0,Sa=0.0,Ta=0.0,Ua=0.0,Va=0.0,Wa=0.0,Xa=0,Ya=0.0,Za=0.0,_a=0.0,$a=0.0,ab=0.0,bb=0.0,cb=0.0,db=0.0,eb=0.0,fb=0.0,gb=0;j=i;i=i+848|0;o=j+824|0;n=j+800|0;H=j+796|0;J=j+792|0;y=j+788|0;G=j+784|0;w=j+768|0;x=j+752|0;z=j+736|0;A=j+720|0;ea=j+704|0;da=j+688|0;B=j+672|0;u=j+656|0;t=j+640|0;m=j+624|0;l=j+608|0;M=j+472|0;L=j+392|0;ca=j+384|0;la=j+344|0;aa=j+320|0;ba=j+304|0;N=j+240|0;O=j;ga=b+20|0;q=c[ga>>2]|0;if((q|0)==0){q=c[b+4>>2]|0;q=Sb[c[(c[q>>2]|0)+12>>2]&31](q,c[d+8>>2]|0,c[e+8>>2]|0)|0;c[ga>>2]=q;a[b+16|0]=1}k=h+4|0;c[k>>2]=q;_=c[d+4>>2]|0;Z=c[e+4>>2]|0;K=_+4|0;P=c[K>>2]|0;ma=Z+4|0;if((P|0)==10?(c[ma>>2]|0)==10:0){r=+g[(c[ga>>2]|0)+752>>2];n=c[_+52>>2]|0;xa=+g[_+(n<<2)+28>>2];D=+g[_+(((n+2|0)%3|0)<<2)+28>>2];o=c[Z+52>>2]|0;za=+g[Z+(o<<2)+28>>2];C=+g[Z+(((o+2|0)%3|0)<<2)+28>>2];Xa=c[d+12>>2]|0;b=c[e+12>>2]|0;I=+g[Xa+(n<<2)>>2];E=+g[Xa+(n<<2)+16>>2];F=+g[Xa+(n<<2)+32>>2];Aa=+g[b+(o<<2)>>2];ya=+g[b+(o<<2)+16>>2];wa=+g[b+(o<<2)+32>>2];o=b+48|0;n=b+52|0;b=b+56|0;va=+g[o>>2]- +g[Xa+48>>2];ua=+g[n>>2]- +g[Xa+52>>2];ta=+g[b>>2]- +g[Xa+56>>2];Ba=I*Aa+E*ya+F*wa;Ca=I*va+E*ua+F*ta;Da=Aa*va+ya*ua+wa*ta;Fa=1.0-Ba*Ba;if(!(Fa==0.0)){Fa=(Ca-Ba*Da)/Fa;Ga=-xa;if(!(Fa<Ga)){if(Fa>xa){Ga=xa}else{Ga=Fa}}}else{Ga=0.0}Fa=Ba*Ga-Da;Da=-za;if(Fa<Da){za=Ba*Da+Ca;Ba=-xa;if(!(za<Ba)){if(za>xa){za=Da}else{xa=za;za=Da}}else{xa=Ba;za=Da}}else{if(Fa>za){Ba=za*Ba+Ca;Ca=-xa;if(!(Ba<Ca)){if(!(Ba>xa)){xa=Ba}}else{xa=Ca}}else{xa=Ga;za=Fa}}Aa=Aa*za;ya=ya*za;wa=wa*za;va=Aa+(va-I*xa);ua=ya+(ua-E*xa);xa=wa+(ta-F*xa);za=xa*xa+(va*va+ua*ua);ta=+R(+za);D=ta-D-C;if(!(D>r)){do{if(za<=1.4210854715202004e-14){if(+Q(+F)>.7071067690849304){I=1.0/+R(+(E*E+F*F));g[m>>2]=0.0;fb=-(F*I);g[m+4>>2]=fb;I=E*I;g[m+8>>2]=I;F=0.0;E=fb;break}else{fb=1.0/+R(+(I*I+E*E));F=-(E*fb);g[m>>2]=F;E=I*fb;g[m+4>>2]=E;g[m+8>>2]=0.0;I=0.0;break}}else{I=-(1.0/ta);F=va*I;E=ua*I;I=xa*I;g[m>>2]=F;g[m+4>>2]=E;g[m+8>>2]=I;g[m+12>>2]=0.0}}while(0);eb=C*E+(ya+ +g[n>>2]);fb=C*I+(wa+ +g[b>>2]);g[l>>2]=C*F+(Aa+ +g[o>>2]);g[l+4>>2]=eb;g[l+8>>2]=fb;g[l+12>>2]=0.0}if(D<r){jc[c[(c[h>>2]|0)+16>>2]&15](h,m,l,D);q=c[k>>2]|0}if((c[q+748>>2]|0)==0){i=j;return}b=c[q+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(k|0)){Un(q,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Un(q,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,k+4|0);i=j;return}}l=M+128|0;g[l>>2]=999999984306749400.0;S=c[b+8>>2]|0;V=c[b+12>>2]|0;c[L>>2]=9040;ia=L+4|0;g[ia>>2]=0.0;ha=L+8|0;g[ha>>2]=1.0;fa=L+12|0;g[fa>>2]=0.0;g[L+16>>2]=0.0;c[L+20>>2]=V;c[L+24>>2]=S;S=L+28|0;c[S>>2]=_;V=L+32|0;c[V>>2]=Z;c[L+36>>2]=P;c[L+40>>2]=c[ma>>2];g[L+44>>2]=+Vb[c[(c[_>>2]|0)+48>>2]&3](_);g[L+48>>2]=+Vb[c[(c[Z>>2]|0)+48>>2]&3](Z);a[L+52|0]=0;c[L+60>>2]=-1;c[L+72>>2]=1;c[L+76>>2]=1;c[S>>2]=_;c[V>>2]=Z;eb=+Vb[c[(c[_>>2]|0)+48>>2]&3](_);fb=+Vb[c[(c[Z>>2]|0)+48>>2]&3](Z);fb=eb+fb+ +g[(c[ga>>2]|0)+752>>2];g[l>>2]=fb*fb;l=d+12|0;V=c[l>>2]|0;c[M+0>>2]=c[V+0>>2];c[M+4>>2]=c[V+4>>2];c[M+8>>2]=c[V+8>>2];c[M+12>>2]=c[V+12>>2];d=M+16|0;P=V+16|0;c[d+0>>2]=c[P+0>>2];c[d+4>>2]=c[P+4>>2];c[d+8>>2]=c[P+8>>2];c[d+12>>2]=c[P+12>>2];P=M+32|0;S=V+32|0;c[P+0>>2]=c[S+0>>2];c[P+4>>2]=c[S+4>>2];c[P+8>>2]=c[S+8>>2];c[P+12>>2]=c[S+12>>2];S=M+48|0;V=V+48|0;c[S+0>>2]=c[V+0>>2];c[S+4>>2]=c[V+4>>2];c[S+8>>2]=c[V+8>>2];c[S+12>>2]=c[V+12>>2];V=M+64|0;m=e+12|0;q=c[m>>2]|0;c[V+0>>2]=c[q+0>>2];c[V+4>>2]=c[q+4>>2];c[V+8>>2]=c[q+8>>2];c[V+12>>2]=c[q+12>>2];W=M+80|0;X=q+16|0;c[W+0>>2]=c[X+0>>2];c[W+4>>2]=c[X+4>>2];c[W+8>>2]=c[X+8>>2];c[W+12>>2]=c[X+12>>2];X=M+96|0;Y=q+32|0;c[X+0>>2]=c[Y+0>>2];c[X+4>>2]=c[Y+4>>2];c[X+8>>2]=c[Y+8>>2];c[X+12>>2]=c[Y+12>>2];Y=M+112|0;q=q+48|0;c[Y+0>>2]=c[q+0>>2];c[Y+4>>2]=c[q+4>>2];c[Y+8>>2]=c[q+8>>2];c[Y+12>>2]=c[q+12>>2];q=c[K>>2]|0;do{if((q|0)<7?(v=c[ma>>2]|0,(v|0)<7):0){c[ca>>2]=13848;if((q|0)==0){xa=0.0}else{xa=+Vb[c[(c[_>>2]|0)+48>>2]&3](_);v=c[ma>>2]|0}if((v|0)==0){ya=0.0}else{ya=+Vb[c[(c[Z>>2]|0)+48>>2]&3](Z)}c[la>>2]=13656;c[la+4>>2]=h;g[la+24>>2]=xa;g[la+28>>2]=ya;na=la+36|0;a[na]=0;q=_+52|0;e=c[q>>2]|0;if((e|0)!=0){v=Z+52|0;K=c[v>>2]|0;if((K|0)==0){if((c[ma>>2]|0)!=1){break}o=aa+16|0;a[o]=1;p=aa+12|0;c[p>>2]=0;s=aa+4|0;c[s>>2]=0;n=aa+8|0;c[n>>2]=0;u=c[m>>2]|0;t=Z+56|0;eb=+g[t>>2];fb=+g[t+4>>2];r=+g[t+8>>2];C=eb*+g[u>>2]+fb*+g[u+4>>2]+r*+g[u+8>>2]+ +g[u+48>>2];D=eb*+g[u+16>>2]+fb*+g[u+20>>2]+r*+g[u+24>>2]+ +g[u+52>>2];r=eb*+g[u+32>>2]+fb*+g[u+36>>2]+r*+g[u+40>>2]+ +g[u+56>>2];c[3580]=(c[3580]|0)+1;u=vr(35)|0;if((u|0)==0){v=0}else{v=u+19&-16;c[v+ -4>>2]=u}u=c[p>>2]|0;if((u|0)!=0){if((a[o]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[u+ -4>>2]|0)}c[p>>2]=0}a[o]=1;c[p>>2]=v;c[n>>2]=1;w=c[s>>2]|0;g[v+(w<<4)>>2]=C;g[v+(w<<4)+4>>2]=D;g[v+(w<<4)+8>>2]=r;g[v+(w<<4)+12>>2]=0.0;w=c[s>>2]|0;v=w+1|0;c[s>>2]=v;u=c[m>>2]|0;eb=+g[t+16>>2];fb=+g[t+20>>2];r=+g[t+24>>2];D=eb*+g[u>>2]+fb*+g[u+4>>2]+r*+g[u+8>>2]+ +g[u+48>>2];C=eb*+g[u+16>>2]+fb*+g[u+20>>2]+r*+g[u+24>>2]+ +g[u+52>>2];r=eb*+g[u+32>>2]+fb*+g[u+36>>2]+r*+g[u+40>>2]+ +g[u+56>>2];u=c[n>>2]|0;if((v|0)==(u|0)){u=(v|0)==0?1:v<<1;if((v|0)<(u|0)){if((u|0)!=0?(c[3580]=(c[3580]|0)+1,ka=vr((u<<4|3)+16|0)|0,(ka|0)!=0):0){x=ka+19&-16;c[x+ -4>>2]=ka}else{x=0}if((w|0)>-1){w=0;do{Xa=x+(w<<4)|0;Ma=(c[p>>2]|0)+(w<<4)|0;c[Xa+0>>2]=c[Ma+0>>2];c[Xa+4>>2]=c[Ma+4>>2];c[Xa+8>>2]=c[Ma+8>>2];c[Xa+12>>2]=c[Ma+12>>2];w=w+1|0}while((w|0)!=(v|0))}v=c[p>>2]|0;if((v|0)!=0){if((a[o]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[v+ -4>>2]|0)}c[p>>2]=0}a[o]=1;c[p>>2]=x;c[n>>2]=u;w=c[s>>2]|0}else{w=v;u=v}}else{w=v}v=c[p>>2]|0;g[v+(w<<4)>>2]=D;g[v+(w<<4)+4>>2]=C;g[v+(w<<4)+8>>2]=r;g[v+(w<<4)+12>>2]=0.0;w=w+1|0;c[s>>2]=w;Xa=c[m>>2]|0;eb=+g[t+32>>2];fb=+g[t+36>>2];D=+g[t+40>>2];C=eb*+g[Xa>>2]+fb*+g[Xa+4>>2]+D*+g[Xa+8>>2]+ +g[Xa+48>>2];r=eb*+g[Xa+16>>2]+fb*+g[Xa+20>>2]+D*+g[Xa+24>>2]+ +g[Xa+52>>2];D=eb*+g[Xa+32>>2]+fb*+g[Xa+36>>2]+D*+g[Xa+40>>2]+ +g[Xa+56>>2];if((w|0)==(u|0)){m=(u|0)==0?1:u<<1;if((u|0)<(m|0)){if((m|0)!=0?(c[3580]=(c[3580]|0)+1,ja=vr((m<<4|3)+16|0)|0,(ja|0)!=0):0){v=ja+19&-16;c[v+ -4>>2]=ja}else{v=0}if((u|0)>0){t=0;do{Xa=v+(t<<4)|0;Ma=(c[p>>2]|0)+(t<<4)|0;c[Xa+0>>2]=c[Ma+0>>2];c[Xa+4>>2]=c[Ma+4>>2];c[Xa+8>>2]=c[Ma+8>>2];c[Xa+12>>2]=c[Ma+12>>2];t=t+1|0}while((t|0)!=(u|0))}t=c[p>>2]|0;if((t|0)!=0){if((a[o]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[t+ -4>>2]|0)}c[p>>2]=0}a[o]=1;c[p>>2]=v;c[n>>2]=m;u=c[s>>2]|0}}else{u=w}g[v+(u<<4)>>2]=C;g[v+(u<<4)+4>>2]=r;g[v+(u<<4)+8>>2]=D;g[v+(u<<4)+12>>2]=0.0;c[s>>2]=(c[s>>2]|0)+1;r=+g[(c[ga>>2]|0)+752>>2];fn(L,M,ca,c[f+20>>2]|0,0);C=+g[ia>>2];D=+g[ha>>2];F=+g[fa>>2];E=C*C+D*D+F*F;if(E>1.1920928955078125e-7){eb=1.0/E;g[ba>>2]=C*eb;g[ba+4>>2]=D*eb;g[ba+8>>2]=F*eb;g[ba+12>>2]=0.0;eb=+g[L+56>>2];fb=+Vb[c[(c[_>>2]|0)+48>>2]&3](_);fb=eb-fb- +Vb[c[(c[Z>>2]|0)+48>>2]&3](Z);Qq(ba,c[q>>2]|0,c[l>>2]|0,aa,fb-r,r,h)}do{if((a[b+16|0]|0)!=0?($=c[k>>2]|0,(c[$+748>>2]|0)!=0):0){b=c[$+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(k|0)){Un($,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);break}else{Un($,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,k+4|0);break}}}while(0);h=c[p>>2]|0;if((h|0)!=0){if((a[o]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[p>>2]=0}a[o]=1;c[p>>2]=0;c[s>>2]=0;c[n>>2]=0;i=j;return}r=+g[(c[ga>>2]|0)+752>>2];if((a[f+24|0]|0)==0){fn(L,M,la,c[f+20>>2]|0,0);C=+g[la+32>>2];if((a[na]|0)!=0&C<0.0){La=+g[la+8>>2];Na=+g[la+12>>2];Ja=+g[la+16>>2];Ia=+g[la+20>>2];s=105}}else{L=c[l>>2]|0;aa=c[m>>2]|0;c[3576]=(c[3576]|0)+1;bb=+g[e+64>>2];cb=+g[e+68>>2];O=L+4|0;ya=+g[O>>2];db=+g[e+72>>2];d=L+8|0;Aa=+g[d>>2];W=L+16|0;za=+g[W>>2];X=L+20|0;Ba=+g[X>>2];ca=L+24|0;Ca=+g[ca>>2];Y=L+32|0;Da=+g[Y>>2];M=L+36|0;Fa=+g[M>>2];N=L+40|0;Ga=+g[N>>2];eb=+g[K+64>>2];fb=+g[K+68>>2];f=aa+4|0;F=+g[K+72>>2];ba=aa+8|0;$=aa+16|0;_=aa+20|0;Z=aa+24|0;V=aa+32|0;S=aa+36|0;P=aa+40|0;D=bb*+g[L>>2]+cb*ya+db*Aa+ +g[L+48>>2]-(eb*+g[aa>>2]+fb*+g[f>>2]+F*+g[ba>>2]+ +g[aa+48>>2]);C=bb*za+cb*Ba+db*Ca+ +g[L+52>>2]-(eb*+g[$>>2]+fb*+g[_>>2]+F*+g[Z>>2]+ +g[aa+52>>2]);F=bb*Da+cb*Fa+db*Ga+ +g[L+56>>2]-(eb*+g[V>>2]+fb*+g[S>>2]+F*+g[P>>2]+ +g[aa+56>>2]);fa=c[e+28>>2]|0;a:do{if((fa|0)>0){ga=e+36|0;ja=ea+4|0;ia=ea+8|0;ha=ea+12|0;xa=0.0;Ha=3.4028234663852886e+38;ka=0;La=0.0;Na=0.0;Ja=0.0;Ia=0.0;while(1){Xa=c[ga>>2]|0;db=+g[Xa+(ka*36|0)+20>>2];eb=+g[Xa+(ka*36|0)+24>>2];fb=+g[Xa+(ka*36|0)+28>>2];ya=db*+g[L>>2]+eb*ya+fb*Aa;za=db*za+eb*Ba+fb*Ca;Aa=db*Da+eb*Fa+fb*Ga;g[ea>>2]=ya;g[ja>>2]=za;g[ia>>2]=Aa;g[ha>>2]=0.0;if(D*ya+C*za+F*Aa<0.0){ya=ya*-1.0;g[ea>>2]=ya;za=za*-1.0;g[ja>>2]=za;Aa=Aa*-1.0;g[ia>>2]=Aa}c[3572]=(c[3572]|0)+1;if(Pq(L,aa,D,C,F,ya,za,Aa,e,K,Ha)|0){c[3574]=(c[3574]|0)+1;uq(e,L,ea,H,J,w,x);uq(K,aa,ea,y,G,z,A);ya=+g[J>>2];za=+g[y>>2];if(!(ya<za)?(wa=+g[G>>2],va=+g[H>>2],!(wa<va)):0){xa=ya-za;ya=wa-va;la=1;ya=xa<ya?xa:ya}else{la=0;ya=xa}if(!la){t=0;break a}if(ya<Ha){xa=ya;Ha=ya;La=+g[ea>>2];Na=+g[ja>>2];Ja=+g[ia>>2];Ia=+g[ha>>2]}else{xa=ya}}ka=ka+1|0;if((ka|0)>=(fa|0)){s=52;break a}ya=+g[O>>2];Aa=+g[d>>2];za=+g[W>>2];Ba=+g[X>>2];Ca=+g[ca>>2];Da=+g[Y>>2];Fa=+g[M>>2];Ga=+g[N>>2]}}else{Ha=3.4028234663852886e+38;La=0.0;Na=0.0;Ja=0.0;Ia=0.0;s=52}}while(0);b:do{if((s|0)==52){ea=c[K+28>>2]|0;if((ea|0)>0){fa=K+36|0;ha=da+4|0;ga=da+8|0;ia=da+12|0;va=0.0;ja=0;do{Xa=c[fa>>2]|0;eb=+g[Xa+(ja*36|0)+20>>2];fb=+g[Xa+(ja*36|0)+24>>2];xa=+g[Xa+(ja*36|0)+28>>2];wa=eb*+g[aa>>2]+fb*+g[f>>2]+xa*+g[ba>>2];ya=eb*+g[$>>2]+fb*+g[_>>2]+xa*+g[Z>>2];xa=eb*+g[V>>2]+fb*+g[S>>2]+xa*+g[P>>2];g[da>>2]=wa;g[ha>>2]=ya;g[ga>>2]=xa;g[ia>>2]=0.0;if(D*wa+C*ya+F*xa<0.0){wa=wa*-1.0;g[da>>2]=wa;ya=ya*-1.0;g[ha>>2]=ya;xa=xa*-1.0;g[ga>>2]=xa}c[3572]=(c[3572]|0)+1;if(Pq(L,aa,D,C,F,wa,ya,xa,e,K,Ha)|0){c[3574]=(c[3574]|0)+1;uq(e,L,da,H,J,w,x);uq(K,aa,da,y,G,z,A);xa=+g[J>>2];wa=+g[y>>2];if(!(xa<wa)?(ua=+g[G>>2],ta=+g[H>>2],!(ua<ta)):0){va=xa-wa;wa=ua-ta;ka=1;wa=va<wa?va:wa}else{ka=0;wa=va}if(!ka){t=0;break b}if(wa<Ha){va=wa;Ha=wa;La=+g[da>>2];Na=+g[ha>>2];Ja=+g[ga>>2];Ia=+g[ia>>2]}else{va=wa}}ja=ja+1|0}while((ja|0)<(ea|0))}ma=e+48|0;Ea=c[ma>>2]|0;if((Ea|0)>0){ha=e+56|0;oa=K+48|0;ga=K+56|0;da=B+4|0;qa=B+8|0;pa=B+12|0;la=x+4|0;na=x+8|0;ja=z+4|0;ka=z+8|0;ea=w+4|0;ia=w+8|0;fa=A+4|0;ra=A+8|0;xa=0.0;wa=0.0;ya=0.0;za=0.0;Aa=0.0;Ca=0.0;Ga=0.0;Ba=0.0;Da=0.0;Fa=0.0;Ra=0.0;Sa=0.0;Ua=0.0;Qa=0.0;Pa=0.0;Oa=0.0;Ta=0.0;Va=0.0;Wa=0.0;Xa=c[oa>>2]|0;sa=0;Ma=-1;Ka=-1;while(1){gb=c[ha>>2]|0;eb=+g[gb+(sa<<4)>>2];fb=+g[gb+(sa<<4)+4>>2];ta=+g[gb+(sa<<4)+8>>2];ua=eb*+g[L>>2]+fb*+g[O>>2]+ta*+g[d>>2];va=eb*+g[W>>2]+fb*+g[X>>2]+ta*+g[ca>>2];ta=eb*+g[Y>>2]+fb*+g[M>>2]+ta*+g[N>>2];if((Xa|0)>0){Ea=0;do{gb=c[ga>>2]|0;ab=+g[gb+(Ea<<4)>>2];$a=+g[gb+(Ea<<4)+4>>2];_a=+g[gb+(Ea<<4)+8>>2];Ya=ab*+g[aa>>2]+$a*+g[f>>2]+_a*+g[ba>>2];Za=ab*+g[$>>2]+$a*+g[_>>2]+_a*+g[Z>>2];_a=ab*+g[V>>2]+$a*+g[S>>2]+_a*+g[P>>2];$a=va*_a-ta*Za;ab=ta*Ya-ua*_a;bb=ua*Za-va*Ya;g[B>>2]=$a;g[da>>2]=ab;g[qa>>2]=bb;g[pa>>2]=0.0;if(!((!(+Q(+$a)>1.0e-6)?!(+Q(+ab)>1.0e-6):0)?!(+Q(+bb)>1.0e-6):0)){fb=1.0/+R(+($a*$a+ab*ab+bb*bb));$a=$a*fb;g[B>>2]=$a;ab=ab*fb;g[da>>2]=ab;bb=bb*fb;g[qa>>2]=bb;if(D*$a+C*ab+F*bb<0.0){$a=$a*-1.0;g[B>>2]=$a;ab=ab*-1.0;g[da>>2]=ab;bb=bb*-1.0;g[qa>>2]=bb}c[3572]=(c[3572]|0)+1;if(Pq(L,aa,D,C,F,$a,ab,bb,e,K,Ha)|0){c[3574]=(c[3574]|0)+1;uq(e,L,B,H,J,w,x);uq(K,aa,B,y,G,z,A);ab=+g[J>>2];$a=+g[y>>2];do{if(!(ab<$a)?(I=+g[G>>2],E=+g[H>>2],!(I<E)):0){cb=ab-$a;xa=I-E;if(cb<xa){Xa=1;fb=+g[na>>2];eb=+g[la>>2];db=+g[x>>2];bb=+g[ka>>2];$a=+g[ja>>2];ab=+g[z>>2];break}else{Xa=1;fb=+g[ia>>2];eb=+g[ea>>2];db=+g[w>>2];bb=+g[ra>>2];$a=+g[fa>>2];ab=+g[A>>2];cb=xa;break}}else{Xa=0;fb=Ua;eb=Sa;db=Ra;bb=Ga;$a=Ca;ab=Aa;cb=xa}}while(0);if(!Xa){t=0;break b}if(cb<Ha){Wa=ta;Va=va;Ta=ua;Oa=_a;Pa=Za;Qa=Ya;Ua=fb;Sa=eb;Ra=db;Fa=fb;Da=eb;Ba=db;Ga=bb;Ca=$a;Aa=ab;za=bb;ya=$a;wa=ab;xa=cb;Ha=cb;Ma=sa;Ka=Ea;La=+g[B>>2];Na=+g[da>>2];Ja=+g[qa>>2];Ia=+g[pa>>2]}else{Ua=fb;Sa=eb;Ra=db;Ga=bb;Ca=$a;Aa=ab;xa=cb}}}Ea=Ea+1|0;Xa=c[oa>>2]|0}while((Ea|0)<(Xa|0));ta=Wa;ua=Va;va=Ta;Ea=c[ma>>2]|0}else{ta=Wa;ua=Va;va=Ta}sa=sa+1|0;if((sa|0)<(Ea|0)){Ta=va;Va=ua;Wa=ta}else{break}}}else{ta=0.0;ua=0.0;va=0.0;Oa=0.0;Pa=0.0;Qa=0.0;Fa=0.0;Da=0.0;Ba=0.0;za=0.0;ya=0.0;wa=0.0;Ma=-1;Ka=-1}if((Ka|Ma|0)>-1){xa=wa-Ba;I=ya-Da;E=za-Fa;Aa=va*Qa+ua*Pa+ta*Oa;Ba=va*xa+ua*I+ta*E;Ca=Qa*xa+Pa*I+Oa*E;Da=1.0-Aa*Aa;if(!(Da==0.0)){Da=(Ba-Aa*Ca)/Da;if(!(Da<-1.0000000150474662e+30)){if(Da>1.0000000150474662e+30){Da=1.0000000150474662e+30}}else{Da=-1.0000000150474662e+30}}else{Da=0.0}Ca=Aa*Da-Ca;if(Ca<-1.0000000150474662e+30){Da=Aa*-1.0000000150474662e+30+Ba;if(!(Da<-1.0000000150474662e+30)){if(Da>1.0000000150474662e+30){Da=1.0000000150474662e+30;Ca=-1.0000000150474662e+30}else{Ca=-1.0000000150474662e+30}}else{Da=-1.0000000150474662e+30;Ca=-1.0000000150474662e+30}}else{if(Ca>1.0000000150474662e+30){Da=Aa*1.0000000150474662e+30+Ba;if(!(Da<-1.0000000150474662e+30)){if(Da>1.0000000150474662e+30){Da=1.0000000150474662e+30;Ca=1.0000000150474662e+30}else{Ca=1.0000000150474662e+30}}else{Da=-1.0000000150474662e+30;Ca=1.0000000150474662e+30}}}Aa=Qa*Ca;Ba=Ca*Pa;Ca=Ca*Oa;va=xa-va*Da+Aa;I=I-Da*ua+Ba;ta=E-Da*ta+Ca;g[u>>2]=va;w=u+4|0;g[w>>2]=I;x=u+8|0;g[x>>2]=ta;g[u+12>>2]=0.0;E=va*va+I*I+ta*ta;if(E>1.1920928955078125e-7){E=+R(+E);fb=1.0/E;ua=va*fb;g[u>>2]=ua;I=fb*I;g[w>>2]=I;ta=fb*ta;g[x>>2]=ta;if(ua*D+I*C+ta*F<0.0){g[u>>2]=ua*-1.0;g[w>>2]=I*-1.0;g[x>>2]=ta*-1.0}g[t>>2]=wa+Aa;g[t+4>>2]=ya+Ba;g[t+8>>2]=za+Ca;g[t+12>>2]=0.0;jc[c[(c[h>>2]|0)+16>>2]&15](h,u,t,-E)}}if(D*La+C*Na+F*Ja<0.0){t=1;La=-La;Na=-Na;Ja=-Ja;Ia=0.0}else{t=1}}}while(0);if(t){C=-1.0000000150474662e+30;s=105}}if((s|0)==105){q=c[q>>2]|0;y=c[v>>2]|0;l=c[l>>2]|0;m=c[m>>2]|0;C=C-r;F=1.0/+R(+(La*La+Na*Na+Ja*Ja));D=La*F;E=Na*F;F=Ja*F;g[o>>2]=D;g[o+4>>2]=E;g[o+8>>2]=F;g[o+12>>2]=Ia;s=c[y+28>>2]|0;z=c[y+36>>2]|0;if((s|0)>0){ua=+g[m>>2];ta=+g[m+4>>2];I=+g[m+8>>2];Ca=+g[m+16>>2];Aa=+g[m+20>>2];wa=+g[m+24>>2];Ba=+g[m+32>>2];va=+g[m+36>>2];ya=+g[m+40>>2];u=-1;za=-3.4028234663852886e+38;v=0;while(1){eb=+g[z+(v*36|0)+20>>2];fb=+g[z+(v*36|0)+24>>2];xa=+g[z+(v*36|0)+28>>2];xa=(eb*ua+fb*ta+xa*I)*D+(eb*Ca+fb*Aa+xa*wa)*E+(eb*Ba+fb*va+xa*ya)*F;t=xa>za;u=t?v:u;v=v+1|0;if((v|0)<(s|0)){za=t?xa:za}else{break}}}else{u=-1}s=n+16|0;a[s]=1;t=n+12|0;c[t>>2]=0;x=n+4|0;c[x>>2]=0;v=n+8|0;c[v>>2]=0;w=c[z+(u*36|0)+4>>2]|0;c:do{if((w|0)>0){z=z+(u*36|0)+12|0;B=y+16|0;G=m+4|0;H=m+8|0;e=m+16|0;K=m+20|0;L=m+24|0;y=m+32|0;M=m+36|0;O=m+40|0;J=m+48|0;A=m+52|0;N=m+56|0;V=0;S=0;P=0;d=0;while(1){gb=c[(c[z>>2]|0)+(d<<2)>>2]|0;Xa=c[B>>2]|0;eb=+g[Xa+(gb<<4)>>2];fb=+g[Xa+(gb<<4)+4>>2];D=+g[Xa+(gb<<4)+8>>2];E=eb*+g[m>>2]+fb*+g[G>>2]+D*+g[H>>2]+ +g[J>>2];F=eb*+g[e>>2]+fb*+g[K>>2]+D*+g[L>>2]+ +g[A>>2];D=eb*+g[y>>2]+fb*+g[M>>2]+D*+g[O>>2]+ +g[N>>2];if((V|0)==(P|0)){V=(P|0)==0?1:P<<1;if((P|0)<(V|0)){if((V|0)!=0?(c[3580]=(c[3580]|0)+1,p=vr((V<<4|3)+16|0)|0,(p|0)!=0):0){S=p+19&-16;c[S+ -4>>2]=p}else{S=0}if((P|0)>0){W=0;do{gb=S+(W<<4)|0;Xa=(c[t>>2]|0)+(W<<4)|0;c[gb+0>>2]=c[Xa+0>>2];c[gb+4>>2]=c[Xa+4>>2];c[gb+8>>2]=c[Xa+8>>2];c[gb+12>>2]=c[Xa+12>>2];W=W+1|0}while((W|0)!=(P|0))}P=c[t>>2]|0;if((P|0)!=0){if((a[s]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[P+ -4>>2]|0)}c[t>>2]=0}a[s]=1;c[t>>2]=S;c[v>>2]=V;P=c[x>>2]|0}}else{P=V}g[S+(P<<4)>>2]=E;g[S+(P<<4)+4>>2]=F;g[S+(P<<4)+8>>2]=D;g[S+(P<<4)+12>>2]=0.0;V=(c[x>>2]|0)+1|0;c[x>>2]=V;d=d+1|0;if((d|0)>=(w|0)){break c}P=c[v>>2]|0}}else{S=0}}while(0);if((u|0)>-1){Qq(o,q,l,n,C,r,h);S=c[t>>2]|0}if((S|0)!=0){if((a[s]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[S+ -4>>2]|0)}c[t>>2]=0}}if((a[b+16|0]|0)==0){i=j;return}b=c[k>>2]|0;if((c[b+748>>2]|0)==0){i=j;return}k=c[b+740>>2]|0;l=c[(c[h+8>>2]|0)+8>>2]|0;if((k|0)==(l|0)){Un(b,k+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Un(b,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,l+4|0);i=j;return}}}}while(0);n=f+20|0;fn(L,M,h,c[n>>2]|0,0);o=b+28|0;if(((c[o>>2]|0)!=0?(c[(c[k>>2]|0)+748>>2]|0)<(c[b+32>>2]|0):0)?(r=+g[ia>>2],C=+g[ha>>2],D=+g[fa>>2],F=r*r+C*C+D*D,F>1.1920928955078125e-7):0){fb=1.0/F;r=r*fb;C=C*fb;D=D*fb;if(+Q(+D)>.7071067690849304){E=1.0/+R(+(D*D+C*C));F=0.0;I=-(D*E);E=C*E}else{I=1.0/+R(+(r*r+C*C));F=-(C*I);I=r*I;E=0.0}ta=+Vb[c[(c[_>>2]|0)+16>>2]&3](_);ua=+Vb[c[(c[Z>>2]|0)+16>>2]&3](Z);aa=ta<ua;ta=.019999999552965164/(aa?ta:ua);if(aa){c[N+0>>2]=c[M+0>>2];c[N+4>>2]=c[M+4>>2];c[N+8>>2]=c[M+8>>2];c[N+12>>2]=c[M+12>>2];gb=N+16|0;c[gb+0>>2]=c[d+0>>2];c[gb+4>>2]=c[d+4>>2];c[gb+8>>2]=c[d+8>>2];c[gb+12>>2]=c[d+12>>2];gb=N+32|0;c[gb+0>>2]=c[P+0>>2];c[gb+4>>2]=c[P+4>>2];c[gb+8>>2]=c[P+8>>2];c[gb+12>>2]=c[P+12>>2];gb=N+48|0;c[gb+0>>2]=c[S+0>>2];c[gb+4>>2]=c[S+4>>2];c[gb+8>>2]=c[S+8>>2];c[gb+12>>2]=c[S+12>>2]}else{c[N+0>>2]=c[V+0>>2];c[N+4>>2]=c[V+4>>2];c[N+8>>2]=c[V+8>>2];c[N+12>>2]=c[V+12>>2];gb=N+16|0;c[gb+0>>2]=c[W+0>>2];c[gb+4>>2]=c[W+4>>2];c[gb+8>>2]=c[W+8>>2];c[gb+12>>2]=c[W+12>>2];gb=N+32|0;c[gb+0>>2]=c[X+0>>2];c[gb+4>>2]=c[X+4>>2];c[gb+8>>2]=c[X+8>>2];c[gb+12>>2]=c[X+12>>2];gb=N+48|0;c[gb+0>>2]=c[Y+0>>2];c[gb+4>>2]=c[Y+4>>2];c[gb+8>>2]=c[Y+8>>2];c[gb+12>>2]=c[Y+12>>2]}$=c[o>>2]|0;if(($|0)>0){ua=E*E+(I*I+F*F);ta=ta>.39269909262657166?.19634954631328583:ta*.5;sa=M+4|0;ra=M+8|0;qa=M+12|0;Xa=M+16|0;oa=M+20|0;na=M+24|0;ma=M+28|0;la=M+32|0;ka=M+36|0;ja=M+40|0;ia=M+44|0;q=O+32|0;t=O+36|0;u=O+52|0;v=O+68|0;w=O+84|0;x=O+100|0;_=O+116|0;p=O+132|0;A=O+148|0;B=O+164|0;H=O+180|0;G=N+16|0;e=O+196|0;J=N+32|0;Z=O+212|0;K=N+48|0;s=O+228|0;z=aa&1;y=O+232|0;Ea=M+64|0;pa=M+68|0;ha=M+72|0;ga=M+76|0;fa=M+80|0;ea=M+84|0;da=M+88|0;ca=M+92|0;f=M+96|0;ba=M+100|0;Ma=M+104|0;Ka=M+108|0;if(ua>1.1920928955078125e-7){ua=+U(+ta)/+R(+ua);F=F*ua;I=I*ua;E=E*ua;ua=+T(+ta);ta=+R(+(D*D+(r*r+C*C)));if(aa){aa=0;do{Qa=+(aa|0)*(6.2831854820251465/+($|0))*.5;Ta=+U(+Qa)/ta;ab=r*Ta;eb=C*Ta;Ta=D*Ta;Qa=+T(+Qa);Wa=-ab;Ya=-eb;Ua=-Ta;cb=E*Ya+(F*Qa+ua*Wa)-I*Ua;Va=F*Ua+(I*Qa+ua*Ya)-E*Wa;Sa=I*Wa+(E*Qa+ua*Ua)-F*Ya;Ua=ua*Qa-F*Wa-I*Ya-E*Ua;Ya=Ta*Va+(ab*Ua+Qa*cb)-eb*Sa;Wa=ab*Sa+(Qa*Va+eb*Ua)-Ta*cb;Pa=eb*cb+(Ta*Ua+Qa*Sa)-ab*Va;Sa=Qa*Ua-ab*cb-eb*Va-Ta*Sa;Ta=2.0/(Sa*Sa+(Pa*Pa+(Ya*Ya+Wa*Wa)));Va=Ya*Ta;eb=Wa*Ta;Ta=Pa*Ta;cb=Sa*Va;ab=Sa*eb;Sa=Sa*Ta;Va=Ya*Va;Ua=Ya*eb;Ya=Ya*Ta;eb=Wa*eb;Wa=Wa*Ta;Ta=Pa*Ta;Pa=1.0-(eb+Ta);Qa=Ua-Sa;Ra=Ya+ab;Sa=Ua+Sa;Ta=1.0-(Va+Ta);Ua=Wa-cb;ab=Ya-ab;cb=Wa+cb;eb=1.0-(Va+eb);gb=c[l>>2]|0;Va=+g[gb>>2];Wa=+g[gb+16>>2];Ya=+g[gb+32>>2];Za=+g[gb+4>>2];_a=+g[gb+20>>2];$a=+g[gb+36>>2];bb=+g[gb+8>>2];db=+g[gb+24>>2];fb=+g[gb+40>>2];g[M>>2]=Ra*Ya+(Wa*Qa+Va*Pa);g[sa>>2]=Pa*Za+Qa*_a+Ra*$a;g[ra>>2]=Pa*bb+Qa*db+Ra*fb;g[qa>>2]=0.0;g[Xa>>2]=Ua*Ya+(Va*Sa+Wa*Ta);g[oa>>2]=Sa*Za+Ta*_a+Ua*$a;g[na>>2]=Sa*bb+Ta*db+Ua*fb;g[ma>>2]=0.0;g[la>>2]=Va*ab+Wa*cb+Ya*eb;g[ka>>2]=ab*Za+cb*_a+eb*$a;g[ja>>2]=ab*bb+cb*db+eb*fb;g[ia>>2]=0.0;gb=c[m>>2]|0;c[V+0>>2]=c[gb+0>>2];c[V+4>>2]=c[gb+4>>2];c[V+8>>2]=c[gb+8>>2];c[V+12>>2]=c[gb+12>>2];Ma=gb+16|0;c[W+0>>2]=c[Ma+0>>2];c[W+4>>2]=c[Ma+4>>2];c[W+8>>2]=c[Ma+8>>2];c[W+12>>2]=c[Ma+12>>2];Ma=gb+32|0;c[X+0>>2]=c[Ma+0>>2];c[X+4>>2]=c[Ma+4>>2];c[X+8>>2]=c[Ma+8>>2];c[X+12>>2]=c[Ma+12>>2];gb=gb+48|0;c[Y+0>>2]=c[gb+0>>2];c[Y+4>>2]=c[gb+4>>2];c[Y+8>>2]=c[gb+8>>2];c[Y+12>>2]=c[gb+12>>2];gb=c[n>>2]|0;c[O>>2]=13576;c[q>>2]=h;c[t+0>>2]=c[M+0>>2];c[t+4>>2]=c[M+4>>2];c[t+8>>2]=c[M+8>>2];c[t+12>>2]=c[M+12>>2];c[u+0>>2]=c[d+0>>2];c[u+4>>2]=c[d+4>>2];c[u+8>>2]=c[d+8>>2];c[u+12>>2]=c[d+12>>2];c[v+0>>2]=c[P+0>>2];c[v+4>>2]=c[P+4>>2];c[v+8>>2]=c[P+8>>2];c[v+12>>2]=c[P+12>>2];c[w+0>>2]=c[S+0>>2];c[w+4>>2]=c[S+4>>2];c[w+8>>2]=c[S+8>>2];c[w+12>>2]=c[S+12>>2];c[x+0>>2]=c[V+0>>2];c[x+4>>2]=c[V+4>>2];c[x+8>>2]=c[V+8>>2];c[x+12>>2]=c[V+12>>2];c[_+0>>2]=c[W+0>>2];c[_+4>>2]=c[W+4>>2];c[_+8>>2]=c[W+8>>2];c[_+12>>2]=c[W+12>>2];c[p+0>>2]=c[X+0>>2];c[p+4>>2]=c[X+4>>2];c[p+8>>2]=c[X+8>>2];c[p+12>>2]=c[X+12>>2];c[A+0>>2]=c[Y+0>>2];c[A+4>>2]=c[Y+4>>2];c[A+8>>2]=c[Y+8>>2];c[A+12>>2]=c[Y+12>>2];c[B+0>>2]=c[N+0>>2];c[B+4>>2]=c[N+4>>2];c[B+8>>2]=c[N+8>>2];c[B+12>>2]=c[N+12>>2];c[H+0>>2]=c[G+0>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];c[e+0>>2]=c[J+0>>2];c[e+4>>2]=c[J+4>>2];c[e+8>>2]=c[J+8>>2];c[e+12>>2]=c[J+12>>2];c[Z+0>>2]=c[K+0>>2];c[Z+4>>2]=c[K+4>>2];c[Z+8>>2]=c[K+8>>2];c[Z+12>>2]=c[K+12>>2];a[s]=z;c[y>>2]=gb;fn(L,M,O,gb,0);$=c[o>>2]|0;aa=aa+1|0}while((aa|0)<($|0))}else{aa=0;do{Qa=+(aa|0)*(6.2831854820251465/+($|0))*.5;Ta=+U(+Qa)/ta;ab=r*Ta;eb=C*Ta;Ta=D*Ta;Qa=+T(+Qa);gb=c[l>>2]|0;c[M+0>>2]=c[gb+0>>2];c[M+4>>2]=c[gb+4>>2];c[M+8>>2]=c[gb+8>>2];c[M+12>>2]=c[gb+12>>2];Xa=gb+16|0;c[d+0>>2]=c[Xa+0>>2];c[d+4>>2]=c[Xa+4>>2];c[d+8>>2]=c[Xa+8>>2];c[d+12>>2]=c[Xa+12>>2];Xa=gb+32|0;c[P+0>>2]=c[Xa+0>>2];c[P+4>>2]=c[Xa+4>>2];c[P+8>>2]=c[Xa+8>>2];c[P+12>>2]=c[Xa+12>>2];gb=gb+48|0;c[S+0>>2]=c[gb+0>>2];c[S+4>>2]=c[gb+4>>2];c[S+8>>2]=c[gb+8>>2];c[S+12>>2]=c[gb+12>>2];Wa=-ab;Ya=-eb;Ua=-Ta;cb=E*Ya+(F*Qa+ua*Wa)-I*Ua;Va=F*Ua+(I*Qa+ua*Ya)-E*Wa;Sa=I*Wa+(E*Qa+ua*Ua)-F*Ya;Ua=ua*Qa-F*Wa-I*Ya-E*Ua;Ya=Ta*Va+(ab*Ua+Qa*cb)-eb*Sa;Wa=ab*Sa+(Qa*Va+eb*Ua)-Ta*cb;Pa=eb*cb+(Ta*Ua+Qa*Sa)-ab*Va;Sa=Qa*Ua-ab*cb-eb*Va-Ta*Sa;Ta=2.0/(Sa*Sa+(Pa*Pa+(Ya*Ya+Wa*Wa)));Va=Ya*Ta;eb=Wa*Ta;Ta=Pa*Ta;cb=Sa*Va;ab=Sa*eb;Sa=Sa*Ta;Va=Ya*Va;Ua=Ya*eb;Ya=Ya*Ta;eb=Wa*eb;Wa=Wa*Ta;Ta=Pa*Ta;Pa=1.0-(eb+Ta);Qa=Ua-Sa;Ra=Ya+ab;Sa=Ua+Sa;Ta=1.0-(Va+Ta);Ua=Wa-cb;ab=Ya-ab;cb=Wa+cb;eb=1.0-(Va+eb);gb=c[m>>2]|0;Va=+g[gb>>2];Wa=+g[gb+16>>2];Ya=+g[gb+32>>2];Za=+g[gb+4>>2];_a=+g[gb+20>>2];$a=+g[gb+36>>2];bb=+g[gb+8>>2];db=+g[gb+24>>2];fb=+g[gb+40>>2];g[Ea>>2]=Ra*Ya+(Wa*Qa+Va*Pa);g[pa>>2]=Pa*Za+Qa*_a+Ra*$a;g[ha>>2]=Pa*bb+Qa*db+Ra*fb;g[ga>>2]=0.0;g[fa>>2]=Ua*Ya+(Va*Sa+Wa*Ta);g[ea>>2]=Sa*Za+Ta*_a+Ua*$a;g[da>>2]=Sa*bb+Ta*db+Ua*fb;g[ca>>2]=0.0;g[f>>2]=Va*ab+Wa*cb+Ya*eb;g[ba>>2]=ab*Za+cb*_a+eb*$a;g[Ma>>2]=ab*bb+cb*db+eb*fb;g[Ka>>2]=0.0;gb=c[n>>2]|0;c[O>>2]=13576;c[q>>2]=h;c[t+0>>2]=c[M+0>>2];c[t+4>>2]=c[M+4>>2];c[t+8>>2]=c[M+8>>2];c[t+12>>2]=c[M+12>>2];c[u+0>>2]=c[d+0>>2];c[u+4>>2]=c[d+4>>2];c[u+8>>2]=c[d+8>>2];c[u+12>>2]=c[d+12>>2];c[v+0>>2]=c[P+0>>2];c[v+4>>2]=c[P+4>>2];c[v+8>>2]=c[P+8>>2];c[v+12>>2]=c[P+12>>2];c[w+0>>2]=c[S+0>>2];c[w+4>>2]=c[S+4>>2];c[w+8>>2]=c[S+8>>2];c[w+12>>2]=c[S+12>>2];c[x+0>>2]=c[V+0>>2];c[x+4>>2]=c[V+4>>2];c[x+8>>2]=c[V+8>>2];c[x+12>>2]=c[V+12>>2];c[_+0>>2]=c[W+0>>2];c[_+4>>2]=c[W+4>>2];c[_+8>>2]=c[W+8>>2];c[_+12>>2]=c[W+12>>2];c[p+0>>2]=c[X+0>>2];c[p+4>>2]=c[X+4>>2];c[p+8>>2]=c[X+8>>2];c[p+12>>2]=c[X+12>>2];c[A+0>>2]=c[Y+0>>2];c[A+4>>2]=c[Y+4>>2];c[A+8>>2]=c[Y+8>>2];c[A+12>>2]=c[Y+12>>2];c[B+0>>2]=c[N+0>>2];c[B+4>>2]=c[N+4>>2];c[B+8>>2]=c[N+8>>2];c[B+12>>2]=c[N+12>>2];c[H+0>>2]=c[G+0>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];c[e+0>>2]=c[J+0>>2];c[e+4>>2]=c[J+4>>2];c[e+8>>2]=c[J+8>>2];c[e+12>>2]=c[J+12>>2];c[Z+0>>2]=c[K+0>>2];c[Z+4>>2]=c[K+4>>2];c[Z+8>>2]=c[K+8>>2];c[Z+12>>2]=c[K+12>>2];a[s]=z;c[y>>2]=gb;fn(L,M,O,gb,0);$=c[o>>2]|0;aa=aa+1|0}while((aa|0)<($|0))}}else{if(aa){l=0;do{l=l+1|0}while((l|0)<($|0))}else{l=0;do{l=l+1|0}while((l|0)<($|0))}}}}if((a[b+16|0]|0)==0){i=j;return}k=c[k>>2]|0;if((c[k+748>>2]|0)==0){i=j;return}b=c[k+740>>2]|0;l=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(l|0)){Un(k,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Un(k,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,l+4|0);i=j;return}}function Yp(a){a=a|0;return}function Zp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0;b=i;i=i+624|0;k=b+568|0;o=b+392|0;f=b+32|0;p=b+16|0;h=b;n=d+68|0;j=d+4|0;x=+g[d+116>>2]- +g[d+52>>2];w=+g[d+120>>2]- +g[d+56>>2];v=+g[d+124>>2]- +g[d+60>>2];m=e+68|0;l=e+4|0;q=+g[e+116>>2]- +g[e+52>>2];s=+g[e+120>>2]- +g[e+56>>2];r=+g[e+124>>2]- +g[e+60>>2];u=+g[d+252>>2];if(x*x+w*w+v*v<u*u?(x=+g[e+252>>2],q*q+s*s+r*r<x*x):0){x=1.0;i=b;return+x}y=c[d+192>>2]|0;x=+g[e+248>>2];c[k+8>>2]=0;g[k+12>>2]=1.0;g[k+16>>2]=1.0;g[k+20>>2]=1.0;g[k+24>>2]=0.0;c[k>>2]=11632;c[k+4>>2]=8;g[k+28>>2]=x;g[k+44>>2]=x;c[o>>2]=6728;t=o+164|0;g[t>>2]=999999984306749400.0;c[o+168>>2]=0;g[o+172>>2]=0.0;g[f+308>>2]=9999999747378752.0e-20;a[f+332|0]=0;c[p>>2]=8832;c[p+4>>2]=f;c[p+8>>2]=y;c[p+12>>2]=k;if(bn(p,j,n,l,m,o)|0){p=d+244|0;q=+g[t>>2];if(+g[p>>2]>q){g[p>>2]=q}p=e+244|0;if(+g[p>>2]>q){g[p>>2]=q}if(!(q<1.0)){q=1.0}}else{q=1.0}y=c[e+192>>2]|0;x=+g[d+248>>2];c[k+8>>2]=0;g[k+12>>2]=1.0;g[k+16>>2]=1.0;g[k+20>>2]=1.0;g[k+24>>2]=0.0;c[k>>2]=11632;c[k+4>>2]=8;g[k+28>>2]=x;g[k+44>>2]=x;c[o>>2]=6728;p=o+164|0;g[p>>2]=999999984306749400.0;c[o+168>>2]=0;g[o+172>>2]=0.0;g[f+308>>2]=9999999747378752.0e-20;t=f+332|0;a[t]=a[t]&-16;c[h>>2]=8832;c[h+4>>2]=f;c[h+8>>2]=k;c[h+12>>2]=y;if(!(bn(h,j,n,l,m,o)|0)){x=q;i=b;return+x}d=d+244|0;r=+g[p>>2];if(+g[d>>2]>r){g[d>>2]=r}e=e+244|0;if(+g[e>>2]>r){g[e>>2]=r}if(!(q>r)){x=q;i=b;return+x}x=r;i=b;return+x}function _p(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+20|0;if((c[e>>2]|0)==0){i=f;return}if((a[b+16|0]|0)==0){i=f;return}b=d+4|0;l=c[b>>2]|0;h=d+8|0;if((l|0)==(c[h>>2]|0)?(g=(l|0)==0?1:l<<1,(l|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}l=c[b>>2]|0}k=d+12|0;if((l|0)>0){n=0;do{m=j+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}n=c[k>>2]|0;m=d+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);l=c[b>>2]|0}c[k>>2]=0}a[m]=1;c[k>>2]=j;c[h>>2]=g}d=(c[d+12>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=c[e>>2]}c[b>>2]=l+1;i=f;return}function $p(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;e=i;f=c[d>>2]|0;f=$b[c[(c[f>>2]|0)+56>>2]&31](f,36)|0;if((f|0)==0){f=0;i=e;return f|0}h=c[d+4>>2]|0;k=c[b+12>>2]|0;j=c[b+8>>2]|0;g=c[b+16>>2]|0;b=c[b+20>>2]|0;c[f+4>>2]=c[d>>2];c[f>>2]=13440;c[f+8>>2]=k;c[f+12>>2]=j;a[f+16|0]=0;c[f+20>>2]=h;a[f+24|0]=0;c[f+28>>2]=g;c[f+32>>2]=b;i=e;return f|0}function aq(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function bq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0;p=i;i=i+16|0;j=p;q=+g[d>>2];l=d+4|0;r=+g[l>>2];k=d+8|0;s=+g[k>>2];h=+g[e>>2];n=q*f+h;o=+g[e+4>>2];m=r*f+o;t=+g[e+8>>2];f=s*f+t;e=b+164|0;if((a[b+228|0]|0)==0){B=+g[b+100>>2];y=+g[b+116>>2];E=+g[b+132>>2];A=+g[b+104>>2];w=+g[b+120>>2];D=+g[b+136>>2];z=+g[b+108>>2];u=+g[b+124>>2];C=+g[b+140>>2];r=-+g[b+148>>2];K=-+g[b+152>>2];F=-+g[b+156>>2];H=B*r+y*K+E*F;G=A*r+w*K+D*F;F=z*r+u*K+C*F;K=+g[e>>2];r=+g[b+168>>2];L=+g[b+172>>2];J=+g[b+180>>2];I=+g[b+184>>2];s=+g[b+188>>2];x=+g[b+196>>2];v=+g[b+200>>2];q=+g[b+204>>2];r=t*(E*K+D*r+C*L)+(h*(B*K+A*r+z*L)+o*(y*K+w*r+u*L))+(F*L+(K*H+r*G)+ +g[b+212>>2]);s=t*(E*J+D*I+C*s)+(h*(B*J+A*I+z*s)+o*(y*J+w*I+u*s))+(H*J+G*I+F*s+ +g[b+216>>2]);t=H*x+G*v+F*q+ +g[b+220>>2]+(t*(E*x+D*v+C*q)+(h*(B*x+A*v+z*q)+o*(y*x+w*v+u*q)));g[j>>2]=r;g[j+4>>2]=s;g[j+8>>2]=t;g[j+12>>2]=0.0;f=(n-r)*+g[d>>2]+(m-s)*+g[l>>2]+(f-t)*+g[k>>2];e=b+32|0;e=c[e>>2]|0;l=c[e>>2]|0;l=l+16|0;l=c[l>>2]|0;jc[l&15](e,d,j,f);i=p;return}else{B=+g[b+36>>2];E=+g[b+52>>2];y=+g[b+68>>2];C=+g[b+40>>2];G=+g[b+56>>2];z=+g[b+72>>2];D=+g[b+44>>2];L=+g[b+60>>2];A=+g[b+76>>2];I=-+g[b+84>>2];N=-+g[b+88>>2];x=-+g[b+92>>2];v=B*I+E*N+y*x;w=C*I+G*N+z*x;x=D*I+L*N+A*x;N=+g[e>>2];I=+g[b+168>>2];O=+g[b+172>>2];M=+g[b+180>>2];u=+g[b+184>>2];J=+g[b+188>>2];F=+g[b+196>>2];H=+g[b+200>>2];K=+g[b+204>>2];I=f*(y*N+z*I+A*O)+(n*(B*N+C*I+D*O)+m*(E*N+G*I+L*O))+(x*O+(N*v+I*w)+ +g[b+212>>2]);J=f*(y*M+z*u+A*J)+(n*(B*M+C*u+D*J)+m*(E*M+G*u+L*J))+(v*M+w*u+x*J+ +g[b+216>>2]);K=v*F+w*H+x*K+ +g[b+220>>2]+(f*(y*F+z*H+A*K)+(n*(B*F+C*H+D*K)+m*(E*F+G*H+L*K)));L=q*(I-h)+r*(J-o)+s*(K-t);g[j>>2]=I+q*L;g[j+4>>2]=J+r*L;g[j+8>>2]=K+s*L;g[j+12>>2]=0.0;e=b+32|0;e=c[e>>2]|0;l=c[e>>2]|0;l=l+16|0;l=c[l>>2]|0;jc[l&15](e,d,j,L);i=p;return}}function cq(a){a=a|0;return}function dq(a){a=a|0;return}function eq(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function fq(a,b,c){a=a|0;b=b|0;c=c|0;return}function gq(a,b,c){a=a|0;b=b|0;c=c|0;return}function hq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0;h=i;i=i+16|0;j=h;k=b+32|0;g[k>>2]=f;o=b+8|0;c[o+0>>2]=c[d+0>>2];c[o+4>>2]=c[d+4>>2];c[o+8>>2]=c[d+8>>2];c[o+12>>2]=c[d+12>>2];l=+g[b+28>>2];n=+g[e+4>>2]-l*+g[d+4>>2];m=+g[e+8>>2]-l*+g[d+8>>2];g[j>>2]=+g[e>>2]- +g[d>>2]*l;g[j+4>>2]=n;g[j+8>>2]=m;g[j+12>>2]=0.0;f=+g[b+24>>2]+l+f;g[k>>2]=f;if(!(f<0.0)){o=b+4|0;o=c[o>>2]|0;k=c[o>>2]|0;k=k+16|0;k=c[k>>2]|0;jc[k&15](o,d,j,f);i=h;return}a[b+36|0]=1;o=b+4|0;o=c[o>>2]|0;k=c[o>>2]|0;k=k+16|0;k=c[k>>2]|0;jc[k&15](o,d,j,f);i=h;return}function iq(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function jq(a,b,c){a=a|0;b=b|0;c=c|0;return}function kq(a,b,c){a=a|0;b=b|0;c=c|0;return}function lq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function mq(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=14032;if((a[b+8|0]|0)!=0){e=c[b+12>>2]|0;if((e|0)!=0){f=c[b+4>>2]|0;Hb[c[(c[f>>2]|0)+16>>2]&127](f,e)}if((b|0)==0){i=d;return}}wr(b);i=d;return}function nq(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=14032;if((a[b+8|0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Hb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function oq(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0,H=0.0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,S=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0,ma=0,na=0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0,va=0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0;f=i;i=i+128|0;j=f+112|0;m=f+96|0;l=f+80|0;n=f+64|0;s=f+48|0;z=f+32|0;x=f+16|0;w=f;k=b+12|0;if((c[k>>2]|0)==0){i=f;return}o=b+16|0;p=(a[o]|0)!=0;q=p?e:d;y=p?d:e;v=c[q+4>>2]|0;K=c[y+4>>2]|0;p=K+48|0;ga=c[q+12>>2]|0;W=+g[ga>>2];ca=+g[ga+16>>2];M=+g[ga+32>>2];Z=+g[ga+4>>2];X=+g[ga+20>>2];O=+g[ga+36>>2];F=+g[ga+8>>2];t=+g[ga+24>>2];S=+g[ga+40>>2];V=+g[ga+48>>2];aa=+g[ga+52>>2];_=+g[ga+56>>2];y=y+12|0;ga=c[y>>2]|0;ka=+g[ga>>2];ja=+g[ga+16>>2];ia=+g[ga+32>>2];ha=W*ka+ca*ja+M*ia;da=+g[ga+4>>2];ea=+g[ga+20>>2];fa=+g[ga+36>>2];ba=W*da+ca*ea+M*fa;Y=+g[ga+8>>2];H=+g[ga+24>>2];N=+g[ga+40>>2];M=W*Y+ca*H+M*N;ca=Z*ka+X*ja+O*ia;W=Z*da+X*ea+O*fa;O=Z*Y+X*H+O*N;X=F*ka+t*ja+S*ia;Z=F*da+t*ea+S*fa;S=F*Y+t*H+S*N;t=-+g[ga+48>>2];F=-+g[ga+52>>2];u=-+g[ga+56>>2];ga=c[(c[v>>2]|0)+64>>2]|0;$=-+g[p>>2];q=K+52|0;P=-+g[q>>2];r=K+56|0;L=-+g[r>>2];g[z>>2]=ha*$+ba*P+M*L;g[z+4>>2]=ca*$+W*P+O*L;g[z+8>>2]=X*$+Z*P+S*L;g[z+12>>2]=0.0;kc[ga&63](s,v,z);L=+g[s>>2];P=+g[s+4>>2];$=+g[s+8>>2];X=V*ka+aa*ja+_*ia+(ka*t+ja*F+ia*u)+(ha*L+ca*P+X*$);Z=V*da+aa*ea+_*fa+(da*t+ea*F+fa*u)+(ba*L+W*P+Z*$);$=V*Y+aa*H+_*N+(Y*t+H*F+N*u)+(M*L+O*P+S*$);S=+g[p>>2];P=+g[q>>2];O=+g[r>>2];L=O*$+(S*X+P*Z)- +g[K+64>>2];X=X-S*L;Z=Z-P*L;$=$-O*L;K=c[y>>2]|0;M=+g[K>>2];u=+g[K+4>>2];N=+g[K+8>>2];F=+g[K+16>>2];H=+g[K+20>>2];t=+g[K+24>>2];Y=+g[K+32>>2];_=+g[K+36>>2];aa=+g[K+40>>2];V=+g[K+48>>2];W=+g[K+52>>2];ba=+g[K+56>>2];K=c[k>>2]|0;ga=L<+g[K+752>>2];s=h+4|0;c[s>>2]=K;if(ga){ga=c[y>>2]|0;ja=S*+g[ga+16>>2]+P*+g[ga+20>>2]+O*+g[ga+24>>2];ka=S*+g[ga+32>>2]+P*+g[ga+36>>2]+O*+g[ga+40>>2];g[x>>2]=+g[ga>>2]*S+ +g[ga+4>>2]*P+ +g[ga+8>>2]*O;g[x+4>>2]=ja;g[x+8>>2]=ka;g[x+12>>2]=0.0;g[w>>2]=N*$+(M*X+u*Z)+V;g[w+4>>2]=X*F+Z*H+$*t+W;g[w+8>>2]=X*Y+Z*_+$*aa+ba;g[w+12>>2]=0.0;jc[c[(c[h>>2]|0)+16>>2]&15](h,x,w,L)}if((c[v+4>>2]|0)<7?(c[(c[s>>2]|0)+748>>2]|0)<(c[b+24>>2]|0):0){u=+g[r>>2];if(+Q(+u)>.7071067690849304){ka=+g[q>>2];F=1.0/+R(+(u*u+ka*ka));t=0.0;u=-(u*F);F=ka*F}else{F=+g[p>>2];t=+g[q>>2];u=1.0/+R(+(F*F+t*t));t=-(t*u);u=F*u;F=0.0}H=.019999999552965164/+Vb[c[(c[v>>2]|0)+16>>2]&3](v);L=+R(+(F*F+(u*u+t*t)));ka=H>.39269909262657166?.19634954631328583:H*.5;H=+U(+ka)/L;t=t*H;u=u*H;H=F*H;F=+T(+ka);G=b+20|0;K=c[G>>2]|0;if((K|0)>0){x=m+4|0;D=m+8|0;w=m+12|0;I=j+4|0;v=j+8|0;E=l+4|0;C=l+8|0;B=l+12|0;A=n+4|0;z=n+8|0;y=n+12|0;J=0;do{fa=+g[p>>2];ia=+g[q>>2];N=+g[r>>2];da=+(J|0)*(6.2831854820251465/+(K|0))*.5;ka=+U(+da)/+R(+(fa*fa+ia*ia+N*N));fa=fa*ka;ia=ia*ka;ka=N*ka;da=+T(+da);N=-fa;O=-ia;ea=-ka;ha=H*O+(t*da+F*N)-u*ea;ja=t*ea+(u*da+F*O)-H*N;L=u*N+(H*da+F*ea)-t*O;ea=F*da-t*N-u*O-H*ea;O=ka*ja+(fa*ea+da*ha)-ia*L;N=fa*L+(da*ja+ia*ea)-ka*ha;M=ia*ha+(ka*ea+da*L)-fa*ja;L=da*ea-fa*ha-ia*ja-ka*L;ga=(a[o]|0)!=0;K=ga?e:d;va=ga?d:e;ua=c[K+4>>2]|0;la=c[va+4>>2]|0;na=la+48|0;K=c[K+12>>2]|0;da=+g[K>>2];ca=+g[K+4>>2];W=+g[K+8>>2];X=+g[K+16>>2];aa=+g[K+20>>2];fa=+g[K+24>>2];S=+g[K+32>>2];_=+g[K+36>>2];ea=+g[K+40>>2];pa=+g[K+48>>2];oa=+g[K+52>>2];ha=+g[K+56>>2];K=va+12|0;va=c[K>>2]|0;ta=+g[va>>2];sa=+g[va+16>>2];Z=+g[va+32>>2];ra=+g[va+4>>2];qa=+g[va+20>>2];$=+g[va+36>>2];V=+g[va+8>>2];P=+g[va+24>>2];Y=+g[va+40>>2];ia=-+g[va+48>>2];ja=-+g[va+52>>2];ka=-+g[va+56>>2];za=2.0/(O*O+N*N+M*M+L*L);Ba=O*za;ya=N*za;za=M*za;Da=L*Ba;Fa=L*ya;Ea=L*za;Ba=O*Ba;Aa=O*ya;ba=O*za;O=N*ya;ya=N*za;za=M*za;Ca=1.0-(O+za);wa=Aa-Ea;M=ba+Fa;Ea=Aa+Ea;za=1.0-(Ba+za);N=ya-Da;Fa=ba-Fa;Da=ya+Da;O=1.0-(Ba+O);Ba=W*Fa+(ca*Ea+da*Ca);ya=W*Da+(da*wa+ca*za);ba=da*M+ca*N+W*O;Aa=fa*Fa+(aa*Ea+X*Ca);xa=fa*Da+(X*wa+aa*za);L=X*M+aa*N+fa*O;Ca=ea*Fa+(_*Ea+S*Ca);za=ea*Da+(S*wa+_*za);O=S*M+_*N+ea*O;va=c[(c[ua>>2]|0)+64>>2]|0;N=-+g[na>>2];ma=la+52|0;M=-+g[ma>>2];ga=la+56|0;wa=-+g[ga>>2];g[m>>2]=(Y*Ca+(V*Ba+P*Aa))*wa+((Z*Ca+(ta*Ba+sa*Aa))*N+($*Ca+(ra*Ba+qa*Aa))*M);g[x>>2]=(Y*za+(V*ya+P*xa))*wa+((Z*za+(ta*ya+sa*xa))*N+($*za+(ra*ya+qa*xa))*M);g[D>>2]=(Y*O+(V*ba+P*L))*wa+((Z*O+(ta*ba+sa*L))*N+($*O+(ra*ba+qa*L))*M);g[w>>2]=0.0;kc[va&63](j,ua,m);M=+g[j>>2];L=+g[I>>2];ba=+g[v>>2];Z=pa*ta+oa*sa+ha*Z+(ta*ia+sa*ja+Z*ka)+((da*ta+X*sa+S*Z)*M+(ca*ta+aa*sa+_*Z)*L+(W*ta+fa*sa+ea*Z)*ba);$=pa*ra+oa*qa+ha*$+(ra*ia+qa*ja+$*ka)+((da*ra+X*qa+S*$)*M+(ca*ra+aa*qa+_*$)*L+(W*ra+fa*qa+ea*$)*ba);ba=pa*V+oa*P+ha*Y+(V*ia+P*ja+Y*ka)+((da*V+X*P+S*Y)*M+(ca*V+aa*P+_*Y)*L+(W*V+fa*P+ea*Y)*ba);L=+g[na>>2];M=+g[ma>>2];Y=+g[ga>>2];ea=Y*ba+(L*Z+M*$)- +g[la+64>>2];Z=Z-L*ea;$=$-M*ea;ba=ba-Y*ea;la=c[K>>2]|0;O=+g[la>>2];P=+g[la+4>>2];N=+g[la+8>>2];fa=+g[la+16>>2];V=+g[la+20>>2];W=+g[la+24>>2];_=+g[la+32>>2];aa=+g[la+36>>2];ca=+g[la+40>>2];S=+g[la+48>>2];X=+g[la+52>>2];da=+g[la+56>>2];la=c[k>>2]|0;ga=ea<+g[la+752>>2];c[s>>2]=la;if(ga){va=c[K>>2]|0;Ea=L*+g[va+16>>2]+M*+g[va+20>>2]+Y*+g[va+24>>2];Fa=L*+g[va+32>>2]+M*+g[va+36>>2]+Y*+g[va+40>>2];g[l>>2]=+g[va>>2]*L+ +g[va+4>>2]*M+ +g[va+8>>2]*Y;g[E>>2]=Ea;g[C>>2]=Fa;g[B>>2]=0.0;g[n>>2]=N*ba+(O*Z+P*$)+S;g[A>>2]=Z*fa+$*V+ba*W+X;g[z>>2]=Z*_+$*aa+ba*ca+da;g[y>>2]=0.0;jc[c[(c[h>>2]|0)+16>>2]&15](h,l,n,ea)}J=J+1|0;K=c[G>>2]|0}while((J|0)<(K|0))}}if((a[b+8|0]|0)==0){i=f;return}if((c[(c[k>>2]|0)+748>>2]|0)==0){i=f;return}d=c[s>>2]|0;if((c[d+748>>2]|0)==0){i=f;return}e=c[d+740>>2]|0;b=c[(c[h+8>>2]|0)+8>>2]|0;if((e|0)==(b|0)){Un(d,e+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=f;return}else{Un(d,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,b+4|0);i=f;return}}function pq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function qq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+12|0;if((c[e>>2]|0)==0){i=f;return}if((a[b+8|0]|0)==0){i=f;return}b=d+4|0;l=c[b>>2]|0;h=d+8|0;if((l|0)==(c[h>>2]|0)?(g=(l|0)==0?1:l<<1,(l|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}l=c[b>>2]|0}k=d+12|0;if((l|0)>0){n=0;do{m=j+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}n=c[k>>2]|0;m=d+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);l=c[b>>2]|0}c[k>>2]=0}a[m]=1;c[k>>2]=j;c[h>>2]=g}d=(c[d+12>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=c[e>>2]}c[b>>2]=l+1;i=f;return}function rq(a){a=a|0;var b=0;b=i;sq(a);if((a|0)==0){i=b;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);i=b;return}function sq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;c[b>>2]=14120;g=b+48|0;f=b+56|0;h=c[f>>2]|0;e=b+60|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+52>>2]=0;e=b+28|0;g=c[e>>2]|0;f=b+36|0;if((g|0)>0){h=0;do{m=c[f>>2]|0;l=m+(h*36|0)+4|0;k=m+(h*36|0)+12|0;n=c[k>>2]|0;j=m+(h*36|0)+16|0;if((n|0)!=0){if((a[j]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0)}c[k>>2]=0}a[j]=1;c[k>>2]=0;c[l>>2]=0;c[m+(h*36|0)+8>>2]=0;h=h+1|0}while((h|0)!=(g|0))}g=c[f>>2]|0;h=b+40|0;if((g|0)!=0){if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[f>>2]=0}a[h]=1;c[f>>2]=0;c[e>>2]=0;c[b+32>>2]=0;f=b+8|0;g=b+16|0;e=c[g>>2]|0;h=b+20|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;n=b+12|0;c[n>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;n=b+12|0;c[n>>2]=0;i=d;return}function tq(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0;b=i;l=a+80|0;h=a+84|0;e=a+88|0;k=a+64|0;d=a+68|0;f=a+72|0;j=c[a+28>>2]|0;if((j|0)<=0){d=0;while(1){d=d+1|0;if((d|0)>=8){d=1;break}}i=b;return d|0}a=c[a+36>>2]|0;p=0.0;o=0.0;m=0.0;n=0;a:while(1){switch(n|0){case 4:{m=+g[e>>2]+ +g[f>>2];o=+g[h>>2]+ +g[d>>2];p=+g[k>>2]- +g[l>>2];break};case 6:{m=+g[e>>2]+ +g[f>>2];o=+g[d>>2]- +g[h>>2];p=+g[k>>2]- +g[l>>2];break};case 0:{m=+g[e>>2]+ +g[f>>2];o=+g[h>>2]+ +g[d>>2];p=+g[l>>2]+ +g[k>>2];break};case 7:{m=+g[f>>2]- +g[e>>2];o=+g[d>>2]- +g[h>>2];p=+g[k>>2]- +g[l>>2];break};case 1:{m=+g[f>>2]- +g[e>>2];o=+g[h>>2]+ +g[d>>2];p=+g[l>>2]+ +g[k>>2];break};case 3:{m=+g[f>>2]- +g[e>>2];o=+g[d>>2]- +g[h>>2];p=+g[l>>2]+ +g[k>>2];break};case 2:{m=+g[e>>2]+ +g[f>>2];o=+g[d>>2]- +g[h>>2];p=+g[l>>2]+ +g[k>>2];break};case 5:{m=+g[f>>2]- +g[e>>2];o=+g[h>>2]+ +g[d>>2];p=+g[k>>2]- +g[l>>2];break};default:{}}q=0;do{r=q;q=q+1|0;if(+g[a+(r*36|0)+32>>2]+(p*+g[a+(r*36|0)+20>>2]+o*+g[a+(r*36|0)+24>>2]+m*+g[a+(r*36|0)+28>>2])>0.0){d=0;e=17;break a}}while((q|0)<(j|0));n=n+1|0;if((n|0)>=8){d=1;e=17;break}}if((e|0)==17){i=b;return d|0}return 0}function uq(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0.0,M=0;l=i;i=i+16|0;k=l;g[e>>2]=3.4028234663852886e+38;g[f>>2]=-3.4028234663852886e+38;m=c[a+8>>2]|0;if((m|0)>0){t=a+16|0;u=b+4|0;K=b+8|0;x=b+16|0;y=b+20|0;z=b+24|0;B=b+32|0;C=b+36|0;D=b+40|0;w=b+48|0;A=b+52|0;E=b+56|0;F=d+4|0;G=d+8|0;q=h+4|0;r=h+8|0;s=h+12|0;a=j+4|0;o=j+8|0;p=j+12|0;H=0;do{M=c[t>>2]|0;L=+g[M+(H<<4)>>2];J=+g[M+(H<<4)+4>>2];v=+g[M+(H<<4)+8>>2];I=L*+g[b>>2]+J*+g[u>>2]+v*+g[K>>2]+ +g[w>>2];n=L*+g[x>>2]+J*+g[y>>2]+v*+g[z>>2]+ +g[A>>2];v=L*+g[B>>2]+J*+g[C>>2]+v*+g[D>>2]+ +g[E>>2];J=I*+g[d>>2]+n*+g[F>>2]+v*+g[G>>2];if(J<+g[e>>2]){g[e>>2]=J;g[h>>2]=I;g[q>>2]=n;g[r>>2]=v;g[s>>2]=0.0}if(J>+g[f>>2]){g[f>>2]=J;g[j>>2]=I;g[a>>2]=n;g[o>>2]=v;g[p>>2]=0.0}H=H+1|0}while((H|0)!=(m|0));v=+g[f>>2]}else{v=-3.4028234663852886e+38}n=+g[e>>2];if(!(n>v)){i=l;return}g[e>>2]=v;g[f>>2]=n;c[k+0>>2]=c[h+0>>2];c[k+4>>2]=c[h+4>>2];c[k+8>>2]=c[h+8>>2];c[k+12>>2]=c[h+12>>2];c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];i=l;return}function vq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;e=c[b>>2]|0;if((e|0)!=0){wq(b,e)}f=b+4|0;e=c[f>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[f>>2]=0;c[b+8>>2]=-1;e=b+24|0;f=b+32|0;h=c[f>>2]|0;g=b+36|0;if((h|0)!=0){if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[g]=1;c[f>>2]=0;c[e>>2]=0;h=b+28|0;c[h>>2]=0;c[b+16>>2]=0;j=b+44|0;k=b+52|0;m=c[k>>2]|0;l=b+56|0;if((m|0)==0){a[l]=1;c[k>>2]=0;c[j>>2]=0;c[b+48>>2]=0;a[g]=1;c[f>>2]=0;c[e>>2]=0;c[h>>2]=0;i=d;return}if((a[l]|0)==0){a[l]=1;c[k>>2]=0;c[j>>2]=0;c[b+48>>2]=0;a[g]=1;c[f>>2]=0;c[e>>2]=0;c[h>>2]=0;i=d;return}c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0);m=c[f>>2]|0;a[l]=1;c[k>>2]=0;c[j>>2]=0;c[b+48>>2]=0;if((m|0)==0){a[g]=1;c[f>>2]=0;c[e>>2]=0;c[h>>2]=0;i=d;return}if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[f>>2]=0;a[g]=1;c[f>>2]=0;c[e>>2]=0;c[h>>2]=0;i=d;return}function wq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=b+40|0;if((c[e>>2]|0)!=0){wq(a,c[b+36>>2]|0);wq(a,c[e>>2]|0)}if((c[a>>2]|0)==(b|0)){c[a>>2]=0}e=a+4|0;a=c[e>>2]|0;if((a|0)==0){c[e>>2]=b;i=d;return}c[3582]=(c[3582]|0)+1;wr(c[a+ -4>>2]|0);c[e>>2]=b;i=d;return}function xq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+32|0;d=e;if((b|0)<0){b=c[a+12>>2]|0}m=c[a>>2]|0;if(!((m|0)!=0&(b|0)>0)){i=e;return}f=a+16|0;while(1){h=m+40|0;a:do{if((c[h>>2]|0)!=0){g=0;while(1){j=(c[f>>2]|0)>>>g&1;p=m+32|0;q=c[p>>2]|0;if(q>>>0>m>>>0){o=q+40|0;s=(c[o>>2]|0)==(m|0)|0;r=s^1;k=c[q+(r<<2)+36>>2]|0;l=q+32|0;n=c[l>>2]|0;if((n|0)==0){c[a>>2]=m}else{c[n+(((c[n+40>>2]|0)==(q|0))<<2)+36>>2]=m}c[k+32>>2]=m;c[l>>2]=m;c[p>>2]=n;p=m+36|0;c[q+36>>2]=c[p>>2];c[o>>2]=c[h>>2];c[(c[p>>2]|0)+32>>2]=q;c[(c[h>>2]|0)+32>>2]=q;c[m+(s<<2)+36>>2]=q;c[m+(r<<2)+36>>2]=k;c[d+0>>2]=c[q+0>>2];c[d+4>>2]=c[q+4>>2];c[d+8>>2]=c[q+8>>2];c[d+12>>2]=c[q+12>>2];c[d+16>>2]=c[q+16>>2];c[d+20>>2]=c[q+20>>2];c[d+24>>2]=c[q+24>>2];c[d+28>>2]=c[q+28>>2];c[q+0>>2]=c[m+0>>2];c[q+4>>2]=c[m+4>>2];c[q+8>>2]=c[m+8>>2];c[q+12>>2]=c[m+12>>2];c[q+16>>2]=c[m+16>>2];c[q+20>>2]=c[m+20>>2];c[q+24>>2]=c[m+24>>2];c[q+28>>2]=c[m+28>>2];c[m+0>>2]=c[d+0>>2];c[m+4>>2]=c[d+4>>2];c[m+8>>2]=c[d+8>>2];c[m+12>>2]=c[d+12>>2];c[m+16>>2]=c[d+16>>2];c[m+20>>2]=c[d+20>>2];c[m+24>>2]=c[d+24>>2];c[m+28>>2]=c[d+28>>2];m=q}m=c[m+(j<<2)+36>>2]|0;h=m+40|0;if((c[h>>2]|0)==0){break a}g=g+1&31}}}while(0);if((zq(a,m)|0)==0){g=0}else{g=c[a>>2]|0}yq(a,g,m);c[f>>2]=(c[f>>2]|0)+1;b=b+ -1|0;if((b|0)==0){break}m=c[a>>2]|0}i=e;return}function yq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0;e=i;if((c[a>>2]|0)==0){c[a>>2]=d;c[d+32>>2]=0;i=e;return}f=c[b+40>>2]|0;if((f|0)!=0){o=+g[d>>2]+ +g[d+16>>2];n=+g[d+4>>2]+ +g[d+20>>2];m=+g[d+8>>2]+ +g[d+24>>2];do{t=c[b+36>>2]|0;s=+Q(+(o-(+g[t>>2]+ +g[t+16>>2])))+ +Q(+(n-(+g[t+4>>2]+ +g[t+20>>2])))+ +Q(+(m-(+g[t+8>>2]+ +g[t+24>>2])));b=c[b+((!(s<+Q(+(o-(+g[f>>2]+ +g[f+16>>2])))+ +Q(+(n-(+g[f+4>>2]+ +g[f+20>>2])))+ +Q(+(m-(+g[f+8>>2]+ +g[f+24>>2]))))&1)<<2)+36>>2]|0;f=c[b+40>>2]|0}while((f|0)!=0)}h=b+32|0;f=c[h>>2]|0;t=a+4|0;l=c[t>>2]|0;if((l|0)==0){c[3580]=(c[3580]|0)+1;l=vr(63)|0;if((l|0)!=0?(k=l+19&-16,j=k,c[j+ -4>>2]=l,(k|0)!=0):0){l=k;k=j+0|0;j=k+44|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(j|0))}else{l=0}}else{c[t>>2]=0}c[l+32>>2]=f;k=l+36|0;c[k>>2]=0;j=l+40|0;c[j>>2]=0;m=+g[d>>2];n=+g[b>>2];n=m<n?m:n;g[l>>2]=n;o=+g[d+16>>2];m=+g[b+16>>2];m=o>m?o:m;g[l+16>>2]=m;o=+g[d+4>>2];p=+g[b+4>>2];p=o<p?o:p;g[l+4>>2]=p;o=+g[d+20>>2];q=+g[b+20>>2];o=o>q?o:q;g[l+20>>2]=o;q=+g[d+8>>2];r=+g[b+8>>2];r=q<r?q:r;g[l+8>>2]=r;s=+g[d+24>>2];q=+g[b+24>>2];q=s>q?s:q;g[l+24>>2]=q;if((f|0)==0){c[k>>2]=b;c[h>>2]=l;c[j>>2]=d;c[d+32>>2]=l;c[a>>2]=l;i=e;return}c[f+(((c[(c[h>>2]|0)+40>>2]|0)==(b|0))<<2)+36>>2]=l;c[k>>2]=b;c[h>>2]=l;c[j>>2]=d;c[d+32>>2]=l;while(1){b=f+4|0;if(((((+g[f>>2]<=n?+g[b>>2]<=p:0)?+g[f+8>>2]<=r:0)?+g[f+16>>2]>=m:0)?+g[f+20>>2]>=o:0)?+g[f+24>>2]>=q:0){d=21;break}a=c[f+36>>2]|0;d=c[f+40>>2]|0;n=+g[a>>2];m=+g[d>>2];n=n<m?n:m;g[f>>2]=n;o=+g[a+16>>2];m=+g[d+16>>2];m=o>m?o:m;g[f+16>>2]=m;o=+g[a+4>>2];p=+g[d+4>>2];p=o<p?o:p;g[b>>2]=p;o=+g[a+20>>2];q=+g[d+20>>2];o=o>q?o:q;g[f+20>>2]=o;q=+g[a+8>>2];r=+g[d+8>>2];r=q<r?q:r;g[f+8>>2]=r;q=+g[a+24>>2];s=+g[d+24>>2];q=q>s?q:s;g[f+24>>2]=q;f=c[f+32>>2]|0;if((f|0)==0){d=21;break}}if((d|0)==21){i=e;return}}function zq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0.0;d=i;if((c[a>>2]|0)==(b|0)){c[a>>2]=0;x=0;i=d;return x|0}f=c[b+32>>2]|0;l=c[f+32>>2]|0;b=c[f+(((c[f+40>>2]|0)!=(b|0))<<2)+36>>2]|0;if((l|0)==0){c[a>>2]=b;c[b+32>>2]=0;e=a+4|0;l=c[e>>2]|0;if((l|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[l+ -4>>2]|0)}c[e>>2]=f;x=c[a>>2]|0;i=d;return x|0}c[l+(((c[l+40>>2]|0)==(f|0))<<2)+36>>2]=b;c[b+32>>2]=l;q=a+4|0;b=c[q>>2]|0;if((b|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0)}c[q>>2]=f;do{m=+g[l>>2];v=l+4|0;h=+g[v>>2];q=l+8|0;n=+g[q>>2];x=l+16|0;o=+g[x>>2];t=l+20|0;k=+g[t>>2];f=l+24|0;j=+g[f>>2];r=c[l+36>>2]|0;b=c[l+40>>2]|0;p=+g[r>>2];s=+g[b>>2];p=p<s?p:s;g[l>>2]=p;s=+g[r+16>>2];u=+g[b+16>>2];s=s>u?s:u;g[x>>2]=s;u=+g[r+4>>2];w=+g[b+4>>2];u=u<w?u:w;g[v>>2]=u;y=+g[r+20>>2];w=+g[b+20>>2];w=y>w?y:w;g[t>>2]=w;z=+g[r+8>>2];y=+g[b+8>>2];y=z<y?z:y;g[q>>2]=y;z=+g[r+24>>2];A=+g[b+24>>2];z=z>A?z:A;g[f>>2]=z;if(!(m!=p|h!=u|n!=y|o!=s)?!(k!=w|j!=z):0){e=14;break}l=c[l+32>>2]|0}while((l|0)!=0);if((e|0)==14){i=d;return l|0}x=c[a>>2]|0;i=d;return x|0}function Aq(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0,Z=0,_=0,$=0.0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0,qa=0,ra=0.0,sa=0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0;h=i;i=i+176|0;q=h+152|0;r=h+104|0;o=h+92|0;p=h+88|0;s=h+24|0;j=h+8|0;n=h;c[b+348>>2]=b+220;c[b+352>>2]=b+252;c[b+356>>2]=b+284;x=b+316|0;c[b+360>>2]=x;l=b+364|0;c[l>>2]=4;m=b+368|0;c[m>>2]=0;v=b+376|0;c[v>>2]=0;w=e;t=c[w+4>>2]|0;y=b;c[y>>2]=c[w>>2];c[y+4>>2]=t;y=b+8|0;t=e+8|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=b+24|0;t=e+24|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=b+40|0;t=e+40|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=b+56|0;t=e+56|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=b+72|0;t=e+72|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=b+88|0;t=e+88|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=b+104|0;t=e+104|0;c[y+0>>2]=c[t+0>>2];c[y+4>>2]=c[t+4>>2];c[y+8>>2]=c[t+8>>2];c[y+12>>2]=c[t+12>>2];y=e+120|0;e=d[y]|d[y+1|0]<<8|d[y+2|0]<<16|d[y+3|0]<<24;y=y+4|0;y=d[y]|d[y+1|0]<<8|d[y+2|0]<<16|d[y+3|0]<<24;t=b+120|0;a[t]=e;a[t+1|0]=e>>8;a[t+2|0]=e>>16;a[t+3|0]=e>>24;t=t+4|0;a[t]=y;a[t+1|0]=y>>8;a[t+2|0]=y>>16;a[t+3|0]=y>>24;t=b+144|0;g[t>>2]=0.0;y=b+180|0;c[y>>2]=0;e=b+128|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];$=+g[e>>2];w=b+132|0;ja=+g[w>>2];f=b+136|0;X=+g[f>>2];ra=$*$+ja*ja+X*X;if(ra>0.0){$=-$;ja=-ja;X=-X}else{$=1.0;ja=0.0;X=0.0}M=b+164|0;g[M>>2]=0.0;c[l>>2]=3;G=b+148|0;c[G>>2]=x;c[y>>2]=1;Dq(b,$,ja,X,x);g[M>>2]=1.0;G=(c[G>>2]|0)+16|0;c[e+0>>2]=c[G+0>>2];c[e+4>>2]=c[G+4>>2];c[e+8>>2]=c[G+8>>2];c[e+12>>2]=c[G+12>>2];M=s+16|0;N=s+32|0;O=s+48|0;c[O+0>>2]=c[G+0>>2];c[O+4>>2]=c[G+4>>2];c[O+8>>2]=c[G+8>>2];c[O+12>>2]=c[G+12>>2];c[N+0>>2]=c[G+0>>2];c[N+4>>2]=c[G+4>>2];c[N+8>>2]=c[G+8>>2];c[N+12>>2]=c[G+12>>2];c[M+0>>2]=c[G+0>>2];c[M+4>>2]=c[G+4>>2];c[M+8>>2]=c[G+8>>2];c[M+12>>2]=c[G+12>>2];c[s+0>>2]=c[G+0>>2];c[s+4>>2]=c[G+4>>2];c[s+8>>2]=c[G+8>>2];c[s+12>>2]=c[G+12>>2];G=b+128|0;M=q+4|0;N=q+8|0;O=q+12|0;P=r+4|0;Q=r+8|0;S=r+12|0;T=r+16|0;F=r+20|0;E=r+24|0;D=r+28|0;C=r+32|0;B=r+36|0;y=r+40|0;A=r+44|0;K=o+4|0;L=o+8|0;J=j+12|0;x=j+4|0;I=j+8|0;X=0.0;H=1;z=1;a:while(1){U=c[m>>2]|0;V=1-U|0;Y=b+(U*36|0)+148|0;la=+g[e>>2];ka=+g[w>>2];ja=+g[f>>2];$=+R(+(la*la+ka*ka+ja*ja));if($<9999999747378752.0e-20){u=5;break}W=b+(U*36|0)+180|0;g[b+(U*36|0)+(c[W>>2]<<2)+164>>2]=0.0;Z=(c[l>>2]|0)+ -1|0;c[l>>2]=Z;c[b+(U*36|0)+(c[W>>2]<<2)+148>>2]=c[b+(Z<<2)+348>>2];Z=c[W>>2]|0;c[W>>2]=Z+1;Dq(b,-la,-ka,-ja,c[b+(U*36|0)+(Z<<2)+148>>2]|0);Z=c[W>>2]|0;aa=c[b+(U*36|0)+(Z+ -1<<2)+148>>2]|0;_=aa+16|0;la=+g[_>>2];ka=+g[aa+20>>2];ja=+g[aa+24>>2];aa=0;do{ma=la- +g[s+(aa<<4)>>2];na=ka- +g[s+(aa<<4)+4>>2];oa=ja- +g[s+(aa<<4)+8>>2];aa=aa+1|0;if(ma*ma+na*na+oa*oa<9999999747378752.0e-20){u=9;break a}}while(aa>>>0<4);sa=s+(H<<4)|0;c[sa+0>>2]=c[_+0>>2];c[sa+4>>2]=c[_+4>>2];c[sa+8>>2]=c[_+8>>2];c[sa+12>>2]=c[_+12>>2];ja=(+g[e>>2]*la+ +g[w>>2]*ka+ +g[f>>2]*ja)/$;X=ja>X?ja:X;if($-X-$*9999999747378752.0e-20<=0.0){u=11;break}c[n>>2]=0;if((Z|0)==2){ra=+Gq((c[Y>>2]|0)+16|0,(c[b+(U*36|0)+152>>2]|0)+16|0,j,n)}else if((Z|0)==4){Z=c[Y>>2]|0;ia=Z+16|0;fa=c[b+(U*36|0)+152>>2]|0;da=fa+16|0;ea=c[b+(U*36|0)+156>>2]|0;ca=ea+16|0;ba=c[b+(U*36|0)+160>>2]|0;Y=ba+16|0;c[q>>2]=ia;c[M>>2]=da;c[N>>2]=ca;c[O>>2]=Y;za=+g[ia>>2];ma=+g[Y>>2];la=za-ma;_=Z+20|0;wa=+g[_>>2];ha=ba+20|0;na=+g[ha>>2];ja=wa-na;Z=Z+24|0;Aa=+g[Z>>2];ba=ba+24|0;oa=+g[ba>>2];ka=Aa-oa;g[r>>2]=la;g[P>>2]=ja;g[Q>>2]=ka;g[S>>2]=0.0;ua=+g[da>>2];Da=ua-ma;aa=fa+20|0;xa=+g[aa>>2];$=xa-na;fa=fa+24|0;ra=+g[fa>>2];Ea=ra-oa;g[T>>2]=Da;g[F>>2]=$;g[E>>2]=Ea;g[D>>2]=0.0;ta=+g[ca>>2];Ba=ta-ma;ga=ea+20|0;ya=+g[ga>>2];Fa=ya-na;ea=ea+24|0;va=+g[ea>>2];Ca=va-oa;g[C>>2]=Ba;g[B>>2]=Fa;g[y>>2]=Ca;g[A>>2]=0.0;$=ja*Ea*Ba+ka*Da*Fa-Fa*Ea*la-ja*Da*Ca+Ca*la*$-Ba*ka*$;ta=ua-ta;ya=xa-ya;va=ra-va;ua=za-ua;xa=wa-xa;ra=Aa-ra;if(!(!($*(Aa*(ta*xa-ya*ua)+(za*(ya*ra-va*xa)+wa*(va*ua-ta*ra)))<=0.0)|($!=$|0.0!=0.0|$==0.0))){c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[p>>2]=0;pa=0;ra=-1.0;while(1){qa=c[14176+(pa<<2)>>2]|0;Da=+g[r+(qa<<4)+8>>2];Ea=+g[r+(qa<<4)+4>>2];Fa=+g[r+(qa<<4)>>2];if($*((ja*Da-ka*Ea)*ma+na*(ka*Fa-Da*la)+(Ea*la-ja*Fa)*oa)>0.0?(k=+Hq(c[q+(pa<<2)>>2]|0,c[q+(qa<<2)>>2]|0,Y,o,p),ra<0.0|k<ra):0){sa=c[p>>2]|0;c[n>>2]=((sa&2|0)==0?0:1<<qa)+(sa<<1&8)+((sa&1|0)==0?0:1<<pa);g[j+(pa<<2)>>2]=+g[o>>2];g[j+(qa<<2)>>2]=+g[K>>2];g[j+(c[14176+(qa<<2)>>2]<<2)>>2]=0.0;g[J>>2]=+g[L>>2];ra=k}pa=pa+1|0;if((pa|0)==3){break}ja=+g[r+(pa<<4)+4>>2];ka=+g[r+(pa<<4)+8>>2];la=+g[r+(pa<<4)>>2];ma=+g[Y>>2];na=+g[ha>>2];oa=+g[ba>>2]}if(ra<0.0){c[n>>2]=15;ra=+g[ga>>2];Da=+g[fa>>2];Ca=+g[Y>>2];ua=+g[ea>>2];Ba=+g[da>>2];wa=+g[ha>>2];va=+g[ca>>2];Aa=+g[ba>>2];ya=+g[aa>>2];Fa=(ra*Da*Ca+ua*Ba*wa-wa*Da*va-ra*Ba*Aa+Aa*va*ya-Ca*ua*ya)/$;g[j>>2]=Fa;Ea=+g[_>>2];xa=+g[Z>>2];za=+g[ia>>2];ra=(Ea*ua*Ca+xa*va*wa-wa*ua*za-Ea*va*Aa+Aa*za*ra-Ca*xa*ra)/$;g[x>>2]=ra;Ea=(ya*xa*Ca+Da*za*wa-wa*xa*Ba-ya*za*Aa+Aa*Ba*Ea-Ca*Da*Ea)/$;g[I>>2]=Ea;g[J>>2]=1.0-(Ea+(Fa+ra));ra=0.0}}else{ra=-1.0}}else if((Z|0)==3){ra=+Hq((c[Y>>2]|0)+16|0,(c[b+(U*36|0)+152>>2]|0)+16|0,(c[b+(U*36|0)+156>>2]|0)+16|0,j,n)}if(!(ra>=0.0)){u=32;break}Y=b+(V*36|0)+180|0;c[Y>>2]=0;c[G+0>>2]=0;c[G+4>>2]=0;c[G+8>>2]=0;c[G+12>>2]=0;c[m>>2]=V;Z=c[W>>2]|0;_=c[n>>2]|0;if((Z|0)!=0){aa=0;do{ba=b+(U*36|0)+(aa<<2)+148|0;W=c[ba>>2]|0;if((_&1<<aa|0)==0){sa=c[l>>2]|0;c[l>>2]=sa+1;c[b+(sa<<2)+348>>2]=W}else{c[b+(V*36|0)+(c[Y>>2]<<2)+148>>2]=W;Da=+g[j+(aa<<2)>>2];sa=c[Y>>2]|0;c[Y>>2]=sa+1;g[b+(V*36|0)+(sa<<2)+164>>2]=Da;sa=c[ba>>2]|0;Ea=Da*+g[sa+20>>2];Fa=Da*+g[sa+24>>2];g[e>>2]=+g[sa+16>>2]*Da+ +g[e>>2];g[w>>2]=Ea+ +g[w>>2];g[f>>2]=Fa+ +g[f>>2]}aa=aa+1|0}while((aa|0)!=(Z|0))}if((_|0)==15){c[v>>2]=1}if(!(z>>>0<128)){u=34;break}if((c[v>>2]|0)!=0){break}H=H+1&3;z=z+1|0}if((u|0)==5){c[v>>2]=1}else if((u|0)==9){sa=c[m>>2]|0;pa=b+(sa*36|0)+180|0;qa=(c[pa>>2]|0)+ -1|0;c[pa>>2]=qa;qa=c[b+(sa*36|0)+(qa<<2)+148>>2]|0;sa=c[l>>2]|0;c[l>>2]=sa+1;c[b+(sa<<2)+348>>2]=qa}else if((u|0)==11){sa=c[m>>2]|0;pa=b+(sa*36|0)+180|0;qa=(c[pa>>2]|0)+ -1|0;c[pa>>2]=qa;qa=c[b+(sa*36|0)+(qa<<2)+148>>2]|0;sa=c[l>>2]|0;c[l>>2]=sa+1;c[b+(sa<<2)+348>>2]=qa}else if((u|0)==32){sa=c[m>>2]|0;pa=b+(sa*36|0)+180|0;qa=(c[pa>>2]|0)+ -1|0;c[pa>>2]=qa;qa=c[b+(sa*36|0)+(qa<<2)+148>>2]|0;sa=c[l>>2]|0;c[l>>2]=sa+1;c[b+(sa<<2)+348>>2]=qa}else if((u|0)==34){c[v>>2]=2}c[b+372>>2]=b+((c[m>>2]|0)*36|0)+148;b=c[v>>2]|0;if((b|0)==1){g[t>>2]=0.0;i=h;return b|0}else if((b|0)==0){Da=+g[e>>2];Ea=+g[w>>2];Fa=+g[f>>2];g[t>>2]=+R(+(Da*Da+Ea*Ea+Fa*Fa));i=h;return b|0}else{i=h;return b|0}return 0}function Bq(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0;b=i;i=i+32|0;e=b+16|0;f=b;d=a+372|0;h=c[d>>2]|0;j=h+32|0;k=c[j>>2]|0;a:do{if((k|0)==1){j=e+4|0;k=e+8|0;f=a+364|0;s=1;r=0;while(1){t=e+(r<<2)|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;g[t>>2]=1.0;t=h+32|0;g[h+(s<<2)+16>>2]=0.0;s=(c[f>>2]|0)+ -1|0;c[f>>2]=s;c[h+(c[t>>2]<<2)>>2]=c[a+(s<<2)+348>>2];s=c[t>>2]|0;c[t>>2]=s+1;n=+g[e>>2];l=+g[j>>2];m=+g[k>>2];Dq(a,n,l,m,c[h+(s<<2)>>2]|0);if(Bq(a)|0){d=1;a=19;break}s=c[d>>2]|0;t=s+32|0;h=(c[t>>2]|0)+ -1|0;c[t>>2]=h;h=c[s+(h<<2)>>2]|0;s=c[f>>2]|0;c[f>>2]=s+1;c[a+(s<<2)+348>>2]=h;s=c[d>>2]|0;h=s+32|0;g[s+(c[h>>2]<<2)+16>>2]=0.0;t=(c[f>>2]|0)+ -1|0;c[f>>2]=t;c[s+(c[h>>2]<<2)>>2]=c[a+(t<<2)+348>>2];t=c[h>>2]|0;c[h>>2]=t+1;Dq(a,-n,-l,-m,c[s+(t<<2)>>2]|0);if(Bq(a)|0){d=1;a=19;break}t=c[d>>2]|0;h=t+32|0;s=(c[h>>2]|0)+ -1|0;c[h>>2]=s;s=c[t+(s<<2)>>2]|0;t=c[f>>2]|0;c[f>>2]=t+1;c[a+(t<<2)+348>>2]=s;r=r+1|0;if(!(r>>>0<3)){break a}h=c[d>>2]|0;s=c[h+32>>2]|0}if((a|0)==19){i=b;return d|0}}else if((k|0)==2){j=c[h+4>>2]|0;k=c[h>>2]|0;n=+g[j+16>>2]- +g[k+16>>2];q=+g[j+20>>2]- +g[k+20>>2];l=+g[j+24>>2]- +g[k+24>>2];k=f+4|0;j=f+8|0;h=a+364|0;e=0;while(1){t=f+(e<<2)|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;g[t>>2]=1.0;o=+g[j>>2];u=+g[k>>2];p=q*o-l*u;m=+g[f>>2];o=l*m-n*o;m=n*u-q*m;if(p*p+o*o+m*m>0.0){s=c[d>>2]|0;r=s+32|0;g[s+(c[r>>2]<<2)+16>>2]=0.0;t=(c[h>>2]|0)+ -1|0;c[h>>2]=t;c[s+(c[r>>2]<<2)>>2]=c[a+(t<<2)+348>>2];t=c[r>>2]|0;c[r>>2]=t+1;Dq(a,p,o,m,c[s+(t<<2)>>2]|0);if(Bq(a)|0){d=1;a=19;break}s=c[d>>2]|0;t=s+32|0;r=(c[t>>2]|0)+ -1|0;c[t>>2]=r;r=c[s+(r<<2)>>2]|0;s=c[h>>2]|0;c[h>>2]=s+1;c[a+(s<<2)+348>>2]=r;s=c[d>>2]|0;r=s+32|0;g[s+(c[r>>2]<<2)+16>>2]=0.0;t=(c[h>>2]|0)+ -1|0;c[h>>2]=t;c[s+(c[r>>2]<<2)>>2]=c[a+(t<<2)+348>>2];t=c[r>>2]|0;c[r>>2]=t+1;Dq(a,-p,-o,-m,c[s+(t<<2)>>2]|0);if(Bq(a)|0){d=1;a=19;break}t=c[d>>2]|0;r=t+32|0;s=(c[r>>2]|0)+ -1|0;c[r>>2]=s;s=c[t+(s<<2)>>2]|0;t=c[h>>2]|0;c[h>>2]=t+1;c[a+(t<<2)+348>>2]=s}e=e+1|0;if(!(e>>>0<3)){break a}}if((a|0)==19){i=b;return d|0}}else if((k|0)==4){t=c[h>>2]|0;s=c[h+12>>2]|0;u=+g[s+16>>2];w=+g[t+16>>2]-u;l=+g[s+20>>2];m=+g[t+20>>2]-l;o=+g[s+24>>2];p=+g[t+24>>2]-o;t=c[h+4>>2]|0;n=+g[t+16>>2]-u;q=+g[t+20>>2]-l;v=+g[t+24>>2]-o;t=c[h+8>>2]|0;u=+g[t+16>>2]-u;l=+g[t+20>>2]-l;o=+g[t+24>>2]-o;u=w*q*o+(m*v*u+p*n*l-w*v*l-m*n*o)-p*q*u;if(!(u!=u|0.0!=0.0|u==0.0)){t=1;i=b;return t|0}}else if((k|0)==3?(t=c[h+4>>2]|0,s=c[h>>2]|0,n=+g[s+16>>2],u=+g[t+16>>2]-n,v=+g[s+20>>2],w=+g[t+20>>2]-v,m=+g[s+24>>2],q=+g[t+24>>2]-m,t=c[h+8>>2]|0,n=+g[t+16>>2]-n,v=+g[t+20>>2]-v,m=+g[t+24>>2]-m,l=w*m-q*v,m=q*n-u*m,n=u*v-w*n,l*l+m*m+n*n>0.0):0){g[h+28>>2]=0.0;e=a+364|0;t=(c[e>>2]|0)+ -1|0;c[e>>2]=t;c[h+(c[j>>2]<<2)>>2]=c[a+(t<<2)+348>>2];t=c[j>>2]|0;c[j>>2]=t+1;Dq(a,l,m,n,c[h+(t<<2)>>2]|0);if(Bq(a)|0){t=1;i=b;return t|0}s=c[d>>2]|0;t=s+32|0;r=(c[t>>2]|0)+ -1|0;c[t>>2]=r;r=c[s+(r<<2)>>2]|0;s=c[e>>2]|0;c[e>>2]=s+1;c[a+(s<<2)+348>>2]=r;s=c[d>>2]|0;r=s+32|0;g[s+(c[r>>2]<<2)+16>>2]=0.0;t=(c[e>>2]|0)+ -1|0;c[e>>2]=t;c[s+(c[r>>2]<<2)>>2]=c[a+(t<<2)+348>>2];t=c[r>>2]|0;c[r>>2]=t+1;Dq(a,-l,-m,-n,c[s+(t<<2)>>2]|0);if(Bq(a)|0){t=1;i=b;return t|0}else{t=c[d>>2]|0;r=t+32|0;s=(c[r>>2]|0)+ -1|0;c[r>>2]=s;s=c[t+(s<<2)>>2]|0;t=c[e>>2]|0;c[e>>2]=t+1;c[a+(t<<2)+348>>2]=s;break}}}while(0);t=0;i=b;return t|0}function Cq(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0.0,G=0.0;l=i;j=b+9288|0;k=c[j>>2]|0;if((k|0)==0){c[b>>2]=5;C=0;i=l;return C|0}m=k+48|0;o=c[m>>2]|0;n=k+44|0;if((o|0)!=0){c[o+44>>2]=c[n>>2]}o=c[n>>2]|0;if((o|0)!=0){c[o+48>>2]=c[m>>2]}if((c[j>>2]|0)==(k|0)){c[j>>2]=c[m>>2]}o=b+9292|0;c[o>>2]=(c[o>>2]|0)+ -1;c[n>>2]=0;p=b+9280|0;c[m>>2]=c[p>>2];q=c[p>>2]|0;if((q|0)!=0){c[q+44>>2]=k}c[p>>2]=k;q=b+9284|0;c[q>>2]=(c[q>>2]|0)+1;a[k+55|0]=0;c[k+20>>2]=d;c[k+24>>2]=e;c[k+28>>2]=f;s=e+16|0;t=d+16|0;A=+g[t>>2];F=+g[s>>2]-A;u=e+20|0;r=d+20|0;E=+g[r>>2];B=+g[u>>2]-E;e=e+24|0;d=d+24|0;x=+g[d>>2];G=+g[e>>2]-x;v=f+16|0;A=+g[v>>2]-A;w=f+20|0;E=+g[w>>2]-E;C=f+24|0;x=+g[C>>2]-x;D=B*x-G*E;x=G*A-F*x;A=F*E-B*A;g[k>>2]=D;y=k+4|0;g[y>>2]=x;f=k+8|0;g[f>>2]=A;g[k+12>>2]=0.0;B=+R(+(D*D+x*x+A*A));do{if(B>9999999747378752.0e-20){z=k+16|0;if((!(Fq(D,x,A,+g[t>>2],+g[r>>2],+g[d>>2],+g[s>>2],+g[u>>2],+g[e>>2],z)|0)?!(Fq(+g[k>>2],+g[y>>2],+g[f>>2],+g[s>>2],+g[u>>2],+g[e>>2],+g[v>>2],+g[w>>2],+g[C>>2],z)|0):0)?!(Fq(+g[k>>2],+g[y>>2],+g[f>>2],+g[v>>2],+g[w>>2],+g[C>>2],+g[t>>2],+g[r>>2],+g[d>>2],z)|0):0){g[z>>2]=(+g[t>>2]*+g[k>>2]+ +g[r>>2]*+g[y>>2]+ +g[d>>2]*+g[f>>2])/B}G=1.0/B;g[k>>2]=G*+g[k>>2];g[y>>2]=G*+g[y>>2];g[f>>2]=G*+g[f>>2];if(h){C=k;i=l;return C|0}if(!(+g[z>>2]>=-9999999747378752.0e-21)){c[b>>2]=3;break}else{C=k;i=l;return C|0}}else{c[b>>2]=2}}while(0);b=c[m>>2]|0;if((b|0)!=0){c[b+44>>2]=c[n>>2]}b=c[n>>2]|0;if((b|0)!=0){c[b+48>>2]=c[m>>2]}if((c[p>>2]|0)==(k|0)){c[p>>2]=c[m>>2]}c[q>>2]=(c[q>>2]|0)+ -1;c[n>>2]=0;c[m>>2]=c[j>>2];m=c[j>>2]|0;if((m|0)!=0){c[m+44>>2]=k}c[j>>2]=k;c[o>>2]=(c[o>>2]|0)+1;C=0;i=l;return C|0}function Dq(a,b,e,f,h){a=a|0;b=+b;e=+e;f=+f;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0;l=i;i=i+48|0;j=l+32|0;m=l+16|0;k=l;t=1.0/+R(+(b*b+e*e+f*f));g[h>>2]=t*b;o=h+4|0;g[o>>2]=t*e;p=h+8|0;g[p>>2]=t*f;g[h+12>>2]=0.0;n=a+120|0;r=d[n]|d[n+1|0]<<8|d[n+2|0]<<16|d[n+3|0]<<24;s=n+4|0;s=d[s]|d[s+1|0]<<8|d[s+2|0]<<16|d[s+3|0]<<24;q=(c[a>>2]|0)+(s>>1)|0;if((s&1|0)!=0){r=c[(c[q>>2]|0)+r>>2]|0}kc[r&63](k,q,h);f=-+g[h>>2];e=-+g[o>>2];b=-+g[p>>2];o=d[n]|d[n+1|0]<<8|d[n+2|0]<<16|d[n+3|0]<<24;s=n+4|0;s=d[s]|d[s+1|0]<<8|d[s+2|0]<<16|d[s+3|0]<<24;n=(c[a+4>>2]|0)+(s>>1)|0;if((s&1|0)!=0){o=c[(c[n>>2]|0)+o>>2]|0}t=+g[a+24>>2]*f+ +g[a+28>>2]*e+ +g[a+32>>2]*b;u=+g[a+40>>2]*f+ +g[a+44>>2]*e+ +g[a+48>>2]*b;g[m>>2]=+g[a+8>>2]*f+ +g[a+12>>2]*e+ +g[a+16>>2]*b;g[m+4>>2]=t;g[m+8>>2]=u;g[m+12>>2]=0.0;kc[o&63](j,n,m);u=+g[j>>2];f=+g[j+4>>2];e=+g[j+8>>2];b=+g[k+4>>2]-(u*+g[a+72>>2]+f*+g[a+76>>2]+e*+g[a+80>>2]+ +g[a+108>>2]);t=+g[k+8>>2]-(u*+g[a+88>>2]+f*+g[a+92>>2]+e*+g[a+96>>2]+ +g[a+112>>2]);g[h+16>>2]=+g[k>>2]-(u*+g[a+56>>2]+f*+g[a+60>>2]+e*+g[a+64>>2]+ +g[a+104>>2]);g[h+20>>2]=b;g[h+24>>2]=t;g[h+28>>2]=0.0;i=l;return}function Eq(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;m=h+55|0;if((d[m]|0|0)==(e|0)){j=0;i=l;return j|0}n=c[14176+(j<<2)>>2]|0;if(+g[h>>2]*+g[f+16>>2]+ +g[h+4>>2]*+g[f+20>>2]+ +g[h+8>>2]*+g[f+24>>2]- +g[h+16>>2]<-9999999747378752.0e-21){b=Cq(b,c[h+(n<<2)+20>>2]|0,c[h+(j<<2)+20>>2]|0,f,0)|0;if((b|0)==0){j=0;i=l;return j|0}a[b+52|0]=j;c[b+32>>2]=h;a[h+j+52|0]=0;c[h+(j<<2)+32>>2]=b;h=c[k>>2]|0;if((h|0)==0){c[k+4>>2]=b}else{a[h+53|0]=2;c[h+36>>2]=b;a[b+54|0]=1;c[b+40>>2]=h}c[k>>2]=b;j=k+8|0;c[j>>2]=(c[j>>2]|0)+1;j=1;i=l;return j|0}j=c[14160+(j<<2)>>2]|0;a[m]=e;if(!(Eq(b,e,f,c[h+(n<<2)+32>>2]|0,d[h+n+52|0]|0,k)|0)){j=0;i=l;return j|0}if(!(Eq(b,e,f,c[h+(j<<2)+32>>2]|0,d[h+j+52|0]|0,k)|0)){j=0;i=l;return j|0}k=h+48|0;e=c[k>>2]|0;f=h+44|0;if((e|0)!=0){c[e+44>>2]=c[f>>2]}e=c[f>>2]|0;if((e|0)!=0){c[e+48>>2]=c[k>>2]}e=b+9280|0;if((c[e>>2]|0)==(h|0)){c[e>>2]=c[k>>2]}j=b+9284|0;c[j>>2]=(c[j>>2]|0)+ -1;c[f>>2]=0;f=b+9288|0;c[k>>2]=c[f>>2];k=c[f>>2]|0;if((k|0)!=0){c[k+44>>2]=h}c[f>>2]=h;j=b+9292|0;c[j>>2]=(c[j>>2]|0)+1;j=1;i=l;return j|0}function Fq(a,b,c,d,e,f,h,j,k,l){a=+a;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;j=+j;k=+k;l=l|0;var m=0,n=0.0,o=0.0,p=0.0;m=i;n=h-d;o=j-e;p=k-f;if(!((n*b-o*a)*f+((o*c-p*b)*d+(p*a-n*c)*e)<0.0)){l=0;i=m;return l|0}if(n*d+o*e+p*f>0.0){g[l>>2]=+R(+(d*d+e*e+f*f));l=1;i=m;return l|0}if(n*h+o*j+p*k<0.0){g[l>>2]=+R(+(h*h+j*j+k*k));l=1;i=m;return l|0}else{b=h*d+j*e+k*f;n=((h*h+j*j+k*k)*(d*d+e*e+f*f)-b*b)/(n*n+o*o+p*p);g[l>>2]=+R(+(n>0.0?n:0.0));l=1;i=m;return l|0}return 0}function Gq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0;o=i;s=+g[a>>2];k=+g[b>>2]-s;h=b+4|0;m=a+4|0;r=+g[m>>2];l=+g[h>>2]-r;j=b+8|0;f=a+8|0;q=+g[f>>2];n=+g[j>>2]-q;p=k*k+l*l+n*n;if(!(p>0.0)){s=-1.0;i=o;return+s}p=-(s*k+r*l+q*n)/p;if(p>=1.0){g[d>>2]=0.0;g[d+4>>2]=1.0;c[e>>2]=2;q=+g[b>>2];r=+g[h>>2];s=+g[j>>2];s=q*q+r*r+s*s;i=o;return+s}if(!(p<=0.0)){g[d+4>>2]=p;g[d>>2]=1.0-p;c[e>>2]=3;q=k*p+ +g[a>>2];r=l*p+ +g[m>>2];s=n*p+ +g[f>>2];s=q*q+r*r+s*s;i=o;return+s}else{g[d>>2]=1.0;g[d+4>>2]=0.0;c[e>>2]=1;q=+g[a>>2];r=+g[m>>2];s=+g[f>>2];s=q*q+r*r+s*s;i=o;return+s}return 0.0}function Hq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0.0;D=i;i=i+80|0;k=D+64|0;o=D+16|0;B=D;j=D+8|0;c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;J=+g[a>>2];w=+g[b>>2];I=J-w;q=a+4|0;K=+g[q>>2];s=b+4|0;u=+g[s>>2];G=K-u;r=a+8|0;L=+g[r>>2];t=b+8|0;v=+g[t>>2];H=L-v;g[o>>2]=I;g[o+4>>2]=G;g[o+8>>2]=H;g[o+12>>2]=0.0;h=+g[d>>2];w=w-h;x=d+4|0;z=+g[x>>2];u=u-z;y=d+8|0;A=+g[y>>2];v=v-A;g[o+16>>2]=w;g[o+20>>2]=u;g[o+24>>2]=v;g[o+28>>2]=0.0;h=h-J;z=z-K;A=A-L;g[o+32>>2]=h;g[o+36>>2]=z;g[o+40>>2]=A;g[o+44>>2]=0.0;n=G*v-H*u;m=H*w-v*I;l=u*I-G*w;p=l*l+(n*n+m*m);if(!(p>0.0)){O=-1.0;i=D;return+O}C=B;c[C>>2]=0;c[C+4>>2]=0;c[j>>2]=0;C=B+4|0;N=a;M=0;O=-1.0;while(1){if(J*(l*G-m*H)+K*(n*H-l*I)+(m*I-n*G)*L>0.0?(F=c[14176+(M<<2)>>2]|0,E=+Gq(N,c[k+(F<<2)>>2]|0,B,j),O<0.0|E<O):0){N=c[j>>2]|0;c[f>>2]=((N&1|0)==0?0:1<<M)+((N&2|0)==0?0:1<<F);g[e+(M<<2)>>2]=+g[B>>2];g[e+(F<<2)>>2]=+g[C>>2];g[e+(c[14176+(F<<2)>>2]<<2)>>2]=0.0;O=E}M=M+1|0;if((M|0)==3){break}N=c[k+(M<<2)>>2]|0;G=+g[o+(M<<4)+4>>2];H=+g[o+(M<<4)+8>>2];I=+g[o+(M<<4)>>2];J=+g[N>>2];K=+g[N+4>>2];L=+g[N+8>>2]}if(!(O<0.0)){i=D;return+O}I=+R(+p);K=(n*+g[a>>2]+m*+g[q>>2]+l*+g[r>>2])/p;L=n*K;O=m*K;K=l*K;c[f>>2]=7;H=+g[b>>2]-L;G=+g[s>>2]-O;J=+g[t>>2]-K;E=u*J-G*v;J=H*v-J*w;w=G*w-H*u;J=+R(+(w*w+(E*E+J*J)))/I;g[e>>2]=J;E=+g[d>>2]-L;w=+g[x>>2]-O;H=+g[y>>2]-K;G=z*H-w*A;H=E*A-H*h;E=w*h-E*z;I=+R(+(E*E+(G*G+H*H)))/I;g[e+4>>2]=I;g[e+8>>2]=1.0-(I+J);O=K*K+(L*L+O*O);i=D;return+O}function Iq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;d=b+12|0;g=c[d>>2]|0;h=b+32|0;f=c[h>>2]|0;if((f|0)>=(g|0)){i=e;return}if((f|0)<=(g|0)){j=b+36|0;if((c[j>>2]|0)<(g|0)){if((g|0)==0){k=0;m=f}else{c[3580]=(c[3580]|0)+1;k=vr((g<<2|3)+16|0)|0;if((k|0)==0){k=0}else{p=k+19&-16;c[p+ -4>>2]=k;k=p}m=c[h>>2]|0}l=b+40|0;if((m|0)>0){o=0;do{n=k+(o<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(o<<2)>>2]}o=o+1|0}while((o|0)!=(m|0))}m=c[l>>2]|0;n=b+44|0;if((m|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[l>>2]=0}a[n]=1;c[l>>2]=k;c[j>>2]=g}else{k=c[b+40>>2]|0}l=f;do{j=k+(l<<2)|0;if((j|0)!=0){c[j>>2]=0}l=l+1|0}while((l|0)!=(g|0))}c[h>>2]=g;h=b+52|0;j=c[h>>2]|0;if((j|0)<(g|0)){k=b+56|0;if((c[k>>2]|0)<(g|0)){if((g|0)==0){m=0;o=j}else{c[3580]=(c[3580]|0)+1;l=vr((g<<2|3)+16|0)|0;if((l|0)==0){m=0}else{m=l+19&-16;c[m+ -4>>2]=l}o=c[h>>2]|0}l=b+60|0;if((o|0)>0){n=0;do{p=m+(n<<2)|0;if((p|0)!=0){c[p>>2]=c[(c[l>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(o|0))}o=c[l>>2]|0;n=b+64|0;if((o|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[o+ -4>>2]|0)}c[l>>2]=0}a[n]=1;c[l>>2]=m;c[k>>2]=g}else{m=c[b+60>>2]|0}do{k=m+(j<<2)|0;if((k|0)!=0){c[k>>2]=0}j=j+1|0}while((j|0)!=(g|0))}c[h>>2]=g;if((g|0)>0){p=g<<2;Cr(c[b+40>>2]|0,-1,p|0)|0;Cr(c[b+60>>2]|0,-1,p|0)|0}if((f|0)<=0){i=e;return}g=c[b+16>>2]|0;h=c[b+40>>2]|0;b=c[b+60>>2]|0;j=0;do{p=c[g+(j*12|0)+4>>2]<<16|c[g+(j*12|0)>>2];p=p+~(p<<15)|0;p=(p>>10^p)*9|0;p=p>>6^p;p=p+~(p<<11)|0;p=h+(((p>>16^p)&(c[d>>2]|0)+ -1)<<2)|0;c[b+(j<<2)>>2]=c[p>>2];c[p>>2]=j;j=j+1|0}while((j|0)!=(f|0));i=e;return}function Jq(a){a=a|0;var b=0;b=i;Kq(a);if((a|0)!=0){wr(a)}i=b;return}function Kq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=14224;g=b+52|0;f=b+60|0;h=c[f>>2]|0;e=b+64|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+56>>2]=0;f=b+32|0;h=b+40|0;g=c[h>>2]|0;e=b+44|0;if((g|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[f>>2]=0;c[b+36>>2]=0;f=b+8|0;g=b+16|0;e=c[g>>2]|0;h=b+20|0;if((e|0)==0){a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+12|0;c[h>>2]=0;i=d;return}if((a[h]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}c[g>>2]=0;a[h]=1;c[g>>2]=0;c[f>>2]=0;h=b+12|0;c[h>>2]=0;i=d;return}function Lq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;h=b+8|0;e=b+16|0;g=c[e>>2]|0;d=b+20|0;if((g|0)!=0){if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[e>>2]=0}a[d]=1;c[e>>2]=0;c[h>>2]=0;g=b+12|0;c[g>>2]=0;l=b+32|0;k=b+40|0;m=c[k>>2]|0;j=b+44|0;if((m|0)!=0){if((a[j]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[k>>2]=0}a[j]=1;c[k>>2]=0;c[l>>2]=0;c[b+36>>2]=0;l=b+52|0;k=b+60|0;m=c[k>>2]|0;j=b+64|0;if((m|0)!=0){if((a[j]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[m+ -4>>2]|0)}c[k>>2]=0}a[j]=1;c[k>>2]=0;c[l>>2]=0;c[b+56>>2]=0;if((c[g>>2]|0)>=2){Iq(b);i=f;return}c[3580]=(c[3580]|0)+1;j=vr(43)|0;if((j|0)==0){j=0}else{m=j+19&-16;c[m+ -4>>2]=j;j=m}h=c[h>>2]|0;if((h|0)>0){k=0;do{l=j+(k*12|0)|0;if((l|0)!=0){m=(c[e>>2]|0)+(k*12|0)|0;c[l+0>>2]=c[m+0>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2]}k=k+1|0}while((k|0)!=(h|0))}h=c[e>>2]|0;if((h|0)!=0){if((a[d]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[e>>2]=0}a[d]=1;c[e>>2]=j;c[g>>2]=2;Iq(b);i=f;return}function Mq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;c[3548]=(c[3548]|0)+1;n=d<<16|b;n=n+~(n<<15)|0;n=(n>>10^n)*9|0;n=n>>6^n;n=n+~(n<<11)|0;m=a+12|0;g=a+40|0;l=c[g>>2]|0;n=l+(((c[m>>2]|0)+ -1&(n>>16^n))<<2)|0;o=c[n>>2]|0;if((o|0)==-1){q=0;i=f;return q|0}j=c[a+16>>2]|0;h=a+60|0;k=o;while(1){if((c[j+(k*12|0)>>2]|0)==(b|0)?(c[j+(k*12|0)+4>>2]|0)==(d|0):0){break}k=c[(c[h>>2]|0)+(k<<2)>>2]|0;if((k|0)==-1){g=0;e=22;break}}if((e|0)==22){i=f;return g|0}if((j+(k*12|0)|0)==0){q=0;i=f;return q|0}b=c[j+(k*12|0)+8>>2]|0;k=(k*12|0)/12|0;d=c[h>>2]|0;if((o|0)!=(k|0)){while(1){p=d+(o<<2)|0;q=c[p>>2]|0;if((q|0)==(k|0)){break}else{o=q}}q=c[d+(k<<2)>>2]|0;if((o|0)==-1){e=12}else{c[p>>2]=q}}else{q=c[d+(o<<2)>>2]|0;e=12}if((e|0)==12){c[n>>2]=q}a=a+8|0;n=(c[a>>2]|0)+ -1|0;if((n|0)==(k|0)){c[a>>2]=k;q=b;i=f;return q|0}p=c[j+(n*12|0)+4>>2]<<16|c[j+(n*12|0)>>2];p=p+~(p<<15)|0;p=(p>>10^p)*9|0;p=p>>6^p;p=p+~(p<<11)|0;m=(p>>16^p)&(c[m>>2]|0)+ -1;l=l+(m<<2)|0;p=c[l>>2]|0;if((p|0)!=(n|0)){while(1){o=d+(p<<2)|0;q=c[o>>2]|0;if((q|0)==(n|0)){break}else{p=q}}d=c[d+(n<<2)>>2]|0;if((p|0)==-1){e=20}else{c[o>>2]=d}}else{d=c[d+(n<<2)>>2]|0;e=20}if((e|0)==20){c[l>>2]=d}q=j+(k*12|0)|0;p=j+(n*12|0)|0;c[q+0>>2]=c[p+0>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];q=(c[g>>2]|0)+(m<<2)|0;c[(c[h>>2]|0)+(k<<2)>>2]=c[q>>2];c[q>>2]=k;c[a>>2]=(c[a>>2]|0)+ -1;q=b;i=f;return q|0}function Nq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;c[3550]=(c[3550]|0)+1;h=e<<16|d;h=h+~(h<<15)|0;h=(h>>10^h)*9|0;h=h>>6^h;h=h+~(h<<11)|0;h=h>>16^h;k=b+12|0;l=c[k>>2]|0;j=l+ -1&h;g=b+40|0;o=c[(c[g>>2]|0)+(j<<2)>>2]|0;a:do{if(!((o|0)==-1)){n=c[b+16>>2]|0;m=b+60|0;while(1){if((c[n+(o*12|0)>>2]|0)==(d|0)?(c[n+(o*12|0)+4>>2]|0)==(e|0):0){break}o=c[(c[m>>2]|0)+(o<<2)>>2]|0;if((o|0)==-1){break a}}m=n+(o*12|0)|0;if((m|0)!=0){t=m;i=f;return t|0}}}while(0);n=b+8|0;m=c[n>>2]|0;if((m|0)==(l|0)){o=(l|0)==0?1:l<<1;if((l|0)<(o|0)){if((o|0)==0){q=0;s=l}else{c[3580]=(c[3580]|0)+1;p=vr((o*12|3)+16|0)|0;if((p|0)==0){q=0}else{q=p+19&-16;c[q+ -4>>2]=p}s=c[n>>2]|0}p=b+16|0;if((s|0)>0){r=0;do{t=q+(r*12|0)|0;if((t|0)!=0){u=(c[p>>2]|0)+(r*12|0)|0;c[t+0>>2]=c[u+0>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2]}r=r+1|0}while((r|0)!=(s|0))}r=c[p>>2]|0;s=b+20|0;if((r|0)!=0){if((a[s]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[r+ -4>>2]|0)}c[p>>2]=0}a[s]=1;c[p>>2]=q;c[k>>2]=o;p=c[n>>2]|0}else{p=l;o=l}}else{p=m;o=l}c[n>>2]=p+1;n=c[b+16>>2]|0;p=n+(m*12|0)|0;if((l|0)<(o|0)){Iq(b);j=(c[k>>2]|0)+ -1&h}if((p|0)==0){p=0}else{c[p>>2]=d;c[n+(m*12|0)+4>>2]=e;c[n+(m*12|0)+8>>2]=0}c[p+8>>2]=0;u=(c[g>>2]|0)+(j<<2)|0;c[(c[b+60>>2]|0)+(m<<2)>>2]=c[u>>2];c[u>>2]=m;u=p;i=f;return u|0}function Oq(a){a=a|0;return c[a+16>>2]|0}function Pq(a,b,c,d,e,f,h,j,k,l,m){a=a|0;b=b|0;c=+c;d=+d;e=+e;f=+f;h=+h;j=+j;k=k|0;l=l|0;m=+m;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0;n=i;c=c*f+d*h+e*j;o=+g[a>>2]*f+ +g[a+16>>2]*h+ +g[a+32>>2]*j;e=+g[a+4>>2]*f+ +g[a+20>>2]*h+ +g[a+36>>2]*j;q=+g[a+8>>2]*f+ +g[a+24>>2]*h+ +g[a+40>>2]*j;p=+g[b>>2]*f+ +g[b+16>>2]*h+ +g[b+32>>2]*j;d=+g[b+4>>2]*f+ +g[b+20>>2]*h+ +g[b+36>>2]*j;j=+g[b+8>>2]*f+ +g[b+24>>2]*h+ +g[b+40>>2]*j;h=+g[k+80>>2];if(o<0.0){h=-h}f=+g[k+84>>2];if(e<0.0){f=-f}s=+g[k+88>>2];if(q<0.0){s=-s}r=+g[l+80>>2];if(p<0.0){r=-r}t=+g[l+84>>2];if(d<0.0){t=-t}u=+g[l+88>>2];if(!(j<0.0)){h=o*h;o=e*f;o=h+o;e=q*s;e=o+e;s=p*r;o=d*t;o=s+o;d=j*u;d=o+d;a=k+96|0;o=+g[a>>2];a=e>o;e=a?e:o;a=l+96|0;o=+g[a>>2];a=d>o;u=a?d:o;u=e+u;d=c+u;c=u-c;a=d<c;u=a?d:c;a=!(u>m);i=n;return a|0}u=-u;h=o*h;o=e*f;o=h+o;e=q*s;e=o+e;s=p*r;o=d*t;o=s+o;d=j*u;d=o+d;a=k+96|0;o=+g[a>>2];a=e>o;e=a?e:o;a=l+96|0;o=+g[a>>2];a=d>o;u=a?d:o;u=e+u;d=c+u;c=u-c;a=d<c;u=a?d:c;a=!(u>m);i=n;return a|0}function Qq(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;j=+j;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0.0,R=0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0.0,Z=0,_=0,$=0.0,aa=0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0,ha=0.0,ia=0,ja=0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0,sa=0;m=i;i=i+64|0;M=m+32|0;t=m+16|0;o=m;n=M+16|0;a[n]=1;l=M+12|0;c[l>>2]=0;c[M+4>>2]=0;q=M+8|0;c[q>>2]=0;p=c[f+4>>2]|0;if((p|0)>0){c[3580]=(c[3580]|0)+1;w=vr((p<<4|3)+16|0)|0;if((w|0)==0){F=0}else{F=w+19&-16;c[F+ -4>>2]=w}a[n]=1;c[l>>2]=F;c[q>>2]=p}else{F=0}E=c[d+28>>2]|0;if((E|0)>0){q=c[d+36>>2]|0;T=+g[e>>2];y=e+4|0;Y=+g[y>>2];z=e+8|0;ca=+g[z>>2];A=e+16|0;$=+g[A>>2];B=e+20|0;U=+g[B>>2];C=e+24|0;S=+g[C>>2];x=e+32|0;Q=+g[x>>2];D=e+36|0;P=+g[D>>2];w=e+40|0;O=+g[w>>2];ea=+g[b>>2];da=+g[b+4>>2];ka=+g[b+8>>2];p=-1;ha=3.4028234663852886e+38;G=0;while(1){ma=+g[q+(G*36|0)+20>>2];la=+g[q+(G*36|0)+24>>2];fa=+g[q+(G*36|0)+28>>2];fa=(ma*T+la*Y+fa*ca)*ea+(ma*$+la*U+fa*S)*da+(ma*Q+la*P+fa*O)*ka;H=fa<ha;p=H?G:p;G=G+1|0;if((G|0)>=(E|0)){break}else{ha=H?fa:ha}}if((p|0)>=0){J=c[q+(p*36|0)+4>>2]|0;if((J|0)>0){I=q+(p*36|0)+12|0;L=d+16|0;d=q+(p*36|0)+20|0;K=q+(p*36|0)+24|0;H=q+(p*36|0)+28|0;G=e+48|0;F=e+52|0;E=e+56|0;da=Q;ea=P;fa=O;N=0;while(1){ja=c[I>>2]|0;V=c[ja+(N<<2)>>2]|0;R=c[L>>2]|0;N=N+1|0;X=c[ja+(((N|0)==(J|0)?0:N)<<2)>>2]|0;ka=+g[R+(V<<4)>>2];Q=ka- +g[R+(X<<4)>>2];la=+g[R+(V<<4)+4>>2];qa=la- +g[R+(X<<4)+4>>2];ma=+g[R+(V<<4)+8>>2];pa=ma- +g[R+(X<<4)+8>>2];oa=Q*T+qa*Y+pa*ca;ha=Q*$+qa*U+pa*S;pa=Q*da+qa*ea+pa*fa;qa=+g[d>>2];Q=+g[K>>2];P=+g[H>>2];O=T*qa+Y*Q+ca*P;na=$*qa+U*Q+S*P;P=da*qa+ea*Q+fa*P;Q=-(ha*P-pa*na);P=-(pa*O-oa*P);O=-(oa*na-ha*O);S=(ka*T+la*Y+ma*ca+ +g[G>>2])*Q+(ka*$+la*U+ma*S+ +g[F>>2])*P+(ka*da+la*ea+ma*fa+ +g[E>>2])*O;R=f+4|0;X=c[R>>2]|0;if((X|0)>=2){Z=X+ -1|0;V=f+12|0;ga=c[V>>2]|0;pa=+g[ga+(Z<<4)>>2];qa=+g[ga+(Z<<4)+4>>2];ha=+g[ga+(Z<<4)+8>>2];Z=M+4|0;W=M+8|0;_=M+12|0;aa=M+16|0;da=pa;ea=qa;fa=ha;ha=pa*Q+qa*P+ha*O-S;ba=0;while(1){U=+g[ga+(ba<<4)>>2];$=+g[ga+(ba<<4)+4>>2];Y=+g[ga+(ba<<4)+8>>2];ca=+g[ga+(ba<<4)+12>>2];T=U*Q+$*P+Y*O-S;ga=T<0.0;do{if(ha<0.0){if(ga){ia=c[Z>>2]|0;if((ia|0)==(c[W>>2]|0)?(r=(ia|0)==0?1:ia<<1,(ia|0)<(r|0)):0){if((r|0)==0){ga=0}else{c[3580]=(c[3580]|0)+1;ga=vr((r<<4|3)+16|0)|0;if((ga|0)==0){ga=0}else{ja=ga+19&-16;c[ja+ -4>>2]=ga;ga=ja}ia=c[Z>>2]|0}if((ia|0)>0){ja=0;do{ra=ga+(ja<<4)|0;sa=(c[_>>2]|0)+(ja<<4)|0;c[ra+0>>2]=c[sa+0>>2];c[ra+4>>2]=c[sa+4>>2];c[ra+8>>2]=c[sa+8>>2];c[ra+12>>2]=c[sa+12>>2];ja=ja+1|0}while((ja|0)!=(ia|0))}ia=c[_>>2]|0;if((ia|0)!=0){if((a[aa]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ia+ -4>>2]|0)}c[_>>2]=0}a[aa]=1;c[_>>2]=ga;c[W>>2]=r;ia=c[Z>>2]|0}sa=c[_>>2]|0;g[sa+(ia<<4)>>2]=U;g[sa+(ia<<4)+4>>2]=$;g[sa+(ia<<4)+8>>2]=Y;g[sa+(ia<<4)+12>>2]=ca;c[Z>>2]=(c[Z>>2]|0)+1;break}else{qa=ha/(ha-T);ca=da+(U-da)*qa;da=ea+($-ea)*qa;ea=fa+(Y-fa)*qa;ja=c[Z>>2]|0;if((ja|0)==(c[W>>2]|0)?(u=(ja|0)==0?1:ja<<1,(ja|0)<(u|0)):0){if((u|0)==0){ga=0}else{c[3580]=(c[3580]|0)+1;ga=vr((u<<4|3)+16|0)|0;if((ga|0)==0){ga=0}else{sa=ga+19&-16;c[sa+ -4>>2]=ga;ga=sa}ja=c[Z>>2]|0}if((ja|0)>0){ia=0;do{sa=ga+(ia<<4)|0;ra=(c[_>>2]|0)+(ia<<4)|0;c[sa+0>>2]=c[ra+0>>2];c[sa+4>>2]=c[ra+4>>2];c[sa+8>>2]=c[ra+8>>2];c[sa+12>>2]=c[ra+12>>2];ia=ia+1|0}while((ia|0)!=(ja|0))}ia=c[_>>2]|0;if((ia|0)!=0){if((a[aa]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ia+ -4>>2]|0)}c[_>>2]=0}a[aa]=1;c[_>>2]=ga;c[W>>2]=u;ja=c[Z>>2]|0}sa=c[_>>2]|0;g[sa+(ja<<4)>>2]=ca;g[sa+(ja<<4)+4>>2]=da;g[sa+(ja<<4)+8>>2]=ea;g[sa+(ja<<4)+12>>2]=0.0;c[Z>>2]=(c[Z>>2]|0)+1;break}}else{if(ga){qa=ha/(ha-T);da=da+(U-da)*qa;ea=ea+($-ea)*qa;fa=fa+(Y-fa)*qa;ia=c[Z>>2]|0;if((ia|0)==(c[W>>2]|0)?(v=(ia|0)==0?1:ia<<1,(ia|0)<(v|0)):0){if((v|0)==0){ga=0}else{c[3580]=(c[3580]|0)+1;ga=vr((v<<4|3)+16|0)|0;if((ga|0)==0){ga=0}else{sa=ga+19&-16;c[sa+ -4>>2]=ga;ga=sa}ia=c[Z>>2]|0}if((ia|0)>0){ja=0;do{sa=ga+(ja<<4)|0;ra=(c[_>>2]|0)+(ja<<4)|0;c[sa+0>>2]=c[ra+0>>2];c[sa+4>>2]=c[ra+4>>2];c[sa+8>>2]=c[ra+8>>2];c[sa+12>>2]=c[ra+12>>2];ja=ja+1|0}while((ja|0)!=(ia|0))}ia=c[_>>2]|0;if((ia|0)!=0){if((a[aa]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ia+ -4>>2]|0)}c[_>>2]=0}a[aa]=1;c[_>>2]=ga;c[W>>2]=v;ia=c[Z>>2]|0}sa=c[_>>2]|0;g[sa+(ia<<4)>>2]=da;g[sa+(ia<<4)+4>>2]=ea;g[sa+(ia<<4)+8>>2]=fa;g[sa+(ia<<4)+12>>2]=0.0;ia=(c[Z>>2]|0)+1|0;c[Z>>2]=ia;if((ia|0)==(c[W>>2]|0)?(s=(ia|0)==0?1:ia<<1,(ia|0)<(s|0)):0){if((s|0)==0){ga=0}else{c[3580]=(c[3580]|0)+1;ga=vr((s<<4|3)+16|0)|0;if((ga|0)==0){ga=0}else{sa=ga+19&-16;c[sa+ -4>>2]=ga;ga=sa}ia=c[Z>>2]|0}if((ia|0)>0){ja=0;do{sa=ga+(ja<<4)|0;ra=(c[_>>2]|0)+(ja<<4)|0;c[sa+0>>2]=c[ra+0>>2];c[sa+4>>2]=c[ra+4>>2];c[sa+8>>2]=c[ra+8>>2];c[sa+12>>2]=c[ra+12>>2];ja=ja+1|0}while((ja|0)!=(ia|0))}ia=c[_>>2]|0;if((ia|0)!=0){if((a[aa]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ia+ -4>>2]|0)}c[_>>2]=0}a[aa]=1;c[_>>2]=ga;c[W>>2]=s;ia=c[Z>>2]|0}sa=c[_>>2]|0;g[sa+(ia<<4)>>2]=U;g[sa+(ia<<4)+4>>2]=$;g[sa+(ia<<4)+8>>2]=Y;g[sa+(ia<<4)+12>>2]=ca;c[Z>>2]=(c[Z>>2]|0)+1}}}while(0);ba=ba+1|0;if((ba|0)==(X|0)){break}ga=c[V>>2]|0;da=U;ea=$;fa=Y;ha=T}X=c[R>>2]|0}if((X|0)<0){_=f+8|0;V=f+12|0;if((c[_>>2]|0)<0){W=c[V>>2]|0;Z=f+16|0;if((W|0)!=0){if((a[Z]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[W+ -4>>2]|0)}c[V>>2]=0}a[Z]=1;c[V>>2]=0;c[_>>2]=0}do{sa=(c[V>>2]|0)+(X<<4)|0;c[sa+0>>2]=c[t+0>>2];c[sa+4>>2]=c[t+4>>2];c[sa+8>>2]=c[t+8>>2];c[sa+12>>2]=c[t+12>>2];X=X+1|0}while((X|0)!=0)}c[R>>2]=0;T=+g[e>>2];Y=+g[y>>2];ca=+g[z>>2];$=+g[A>>2];U=+g[B>>2];S=+g[C>>2];Q=+g[x>>2];P=+g[D>>2];O=+g[w>>2];if((N|0)<(J|0)){sa=M;da=Q;ea=P;fa=O;M=f;f=sa}else{f=M;break}}}else{K=q+(p*36|0)+24|0;H=q+(p*36|0)+28|0;G=e+48|0;F=e+52|0;E=e+56|0;d=q+(p*36|0)+20|0}oa=+g[d>>2];pa=+g[K>>2];qa=+g[H>>2];T=oa*T+pa*Y+qa*ca;S=oa*$+pa*U+qa*S;O=oa*Q+pa*P+qa*O;P=+g[q+(p*36|0)+32>>2]-(T*+g[G>>2]+S*+g[F>>2]+O*+g[E>>2]);p=f+4|0;r=c[p>>2]|0;if((r|0)>0){q=f+12|0;e=0;do{sa=c[q>>2]|0;s=sa+(e<<4)|0;Q=P+(T*+g[s>>2]+S*+g[sa+(e<<4)+4>>2]+O*+g[sa+(e<<4)+8>>2]);Q=!(Q<=h)?Q:h;if(Q<=j){c[o+0>>2]=c[s+0>>2];c[o+4>>2]=c[s+4>>2];c[o+8>>2]=c[s+8>>2];c[o+12>>2]=c[s+12>>2];jc[c[(c[k>>2]|0)+16>>2]&15](k,b,o,Q);r=c[p>>2]|0}e=e+1|0}while((e|0)<(r|0))}F=c[l>>2]|0}}if((F|0)==0){i=m;return}if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[F+ -4>>2]|0)}c[l>>2]=0;i=m;return}function Rq(a,b,d,e,f,h,j,k){a=a|0;b=b|0;d=d|0;e=+e;f=+f;h=+h;j=j|0;k=k|0;var l=0,m=0.0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0,I=0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0.0,W=0,X=0.0,Y=0.0,Z=0.0,_=0,$=0,aa=0.0,ba=0.0,ca=0,da=0,ea=0,fa=0,ga=0.0,ha=0.0,ia=0.0;l=i;i=i+32|0;o=l;ha=+g[d>>2];n=d+4|0;ga=+g[n>>2];p=d+8|0;K=+g[p>>2];V=+g[j>>2];E=(ha>e?e:ha)+V;F=j+4|0;ba=+g[F>>2];G=(ga>f?f:ga)+ba;r=j+8|0;aa=+g[r>>2];D=(K>h?h:K)+aa;Z=+g[k>>2];C=(ha<e?e:ha)+Z;B=k+4|0;Y=+g[B>>2];A=(ga<f?f:ga)+Y;s=k+8|0;X=+g[s>>2];q=(K<h?h:K)+X;ia=e-ha;ha=f-ga;h=h-K;K=1.0/+R(+(ia*ia+ha*ha+h*h));f=ia*K;e=ha*K;K=h*K;h=h*K+(ia*f+ha*e);if(f==0.0){f=999999984306749400.0}else{f=1.0/f}if(e==0.0){e=999999984306749400.0}else{e=1.0/e}if(K==0.0){K=999999984306749400.0}else{K=1.0/K}P=f<0.0|0;S=e<0.0|0;U=K<0.0|0;J=a+56|0;W=c[J>>2]|0;a:do{if((W|0)>0){O=o+16|0;N=o+4|0;M=o+8|0;L=o+20|0;I=o+24|0;H=o+(P<<4)|0;Q=o+((P^1)<<4)|0;P=o+(S<<4)+4|0;S=o+((S^1)<<4)+4|0;T=o+(U<<4)+8|0;U=o+((U^1)<<4)+8|0;_=0;$=c[a+96>>2]|0;a=1;while(1){c[o+0>>2]=c[$+0>>2];c[o+4>>2]=c[$+4>>2];c[o+8>>2]=c[$+8>>2];c[o+12>>2]=c[$+12>>2];fa=$+16|0;c[O+0>>2]=c[fa+0>>2];c[O+4>>2]=c[fa+4>>2];c[O+8>>2]=c[fa+8>>2];c[O+12>>2]=c[fa+12>>2];g[o>>2]=+g[o>>2]-Z;g[N>>2]=+g[N>>2]-Y;g[M>>2]=+g[M>>2]-X;g[O>>2]=+g[O>>2]-V;g[L>>2]=+g[L>>2]-ba;g[I>>2]=+g[I>>2]-aa;if(!(E>+g[fa>>2])?!(C<+g[$>>2]):0){ca=1}else{ca=0}if(!(!(D>+g[$+24>>2])?!(q<+g[$+8>>2]):0)){ca=0}if((((!(G>+g[$+20>>2])?!(A<+g[$+4>>2]|ca^1):0)?(x=+g[d>>2],z=f*(+g[H>>2]-x),x=f*(+g[Q>>2]-x),m=+g[n>>2],y=e*(+g[P>>2]-m),m=e*(+g[S>>2]-m),!(z>m|y>x)):0)?(v=y>z?y:z,t=m<x?m:x,w=+g[p>>2],u=K*(+g[T>>2]-w),w=K*(+g[U>>2]-w),!(v>w|u>t)):0)?(u>v?u:v)<h:0){fa=(w<t?w:t)>0.0;ea=c[$+32>>2]|0;da=(ea|0)==-1;if(da&fa){kc[c[(c[b>>2]|0)+8>>2]&63](b,c[$+36>>2]|0,c[$+40>>2]|0);W=c[J>>2]|0;ca=24}else{ca=23}}else{ea=c[$+32>>2]|0;da=(ea|0)==-1;fa=0;ca=23}if((ca|0)==23){ca=0;if(fa|da){ca=24}else{_=ea+_|0;$=$+(ea<<6)|0}}if((ca|0)==24){_=_+1|0;$=$+64|0}if((_|0)>=(W|0)){break a}ba=+g[F>>2];aa=+g[r>>2];Z=+g[k>>2];Y=+g[B>>2];X=+g[s>>2];V=+g[j>>2];a=a+1|0}}else{a=0}}while(0);if((c[3578]|0)>=(a|0)){i=l;return}c[3578]=a;i=l;return}function Sq(a,d,f,h,j,k,l,m,n){a=a|0;d=d|0;f=f|0;h=+h;j=+j;k=+k;l=l|0;m=m|0;n=n|0;var o=0,p=0.0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0;o=i;i=i+32|0;z=o;qa=+g[f>>2];Ba=h-qa;q=f+4|0;va=+g[q>>2];s=j-va;t=f+8|0;ua=+g[t>>2];Aa=k-ua;D=1.0/+R(+(Ba*Ba+s*s+Aa*Aa));B=Ba*D;C=s*D;D=Aa*D;s=Aa*D+(Ba*B+s*C);if(B==0.0){B=999999984306749400.0}else{B=1.0/B}if(C==0.0){C=999999984306749400.0}else{C=1.0/C}if(D==0.0){D=999999984306749400.0}else{D=1.0/D}V=B<0.0|0;U=C<0.0|0;S=D<0.0|0;sa=(qa>h?h:qa)+ +g[l>>2];E=l+4|0;ra=(va>j?j:va)+ +g[E>>2];F=l+8|0;ta=(ua>k?k:ua)+ +g[F>>2];qa=(qa<h?h:qa)+ +g[m>>2];G=m+4|0;j=(va<j?j:va)+ +g[G>>2];H=m+8|0;ua=(ua<k?k:ua)+ +g[H>>2];I=a+4|0;k=+g[I>>2];za=sa<k?k:sa;J=a+8|0;sa=+g[J>>2];Aa=ra<sa?sa:ra;K=a+12|0;ra=+g[K>>2];Ba=ta<ra?ra:ta;ya=+g[a+20>>2];wa=+g[a+24>>2];va=+g[a+28>>2];N=a+36|0;xa=+g[N>>2];M=a+40|0;h=+g[M>>2];L=a+44|0;ta=+g[L>>2];O=~~(((ya<za?ya:za)-k)*xa)&65535&65534;P=~~(((wa<Aa?wa:Aa)-sa)*h)&65535&65534;Q=~~(((va<Ba?va:Ba)-ra)*ta)&65535&65534;za=qa<k?k:qa;j=j<sa?sa:j;qa=ua<ra?ra:ua;T=(~~(((ya<za?ya:za)-k)*xa+1.0)&65535|1)&65535;W=(~~(((wa<j?wa:j)-sa)*h+1.0)&65535|1)&65535;$=(~~(((va<qa?va:qa)-ra)*ta+1.0)&65535|1)&65535;if((n|0)>0){aa=z+4|0;Z=z+8|0;X=z+12|0;ca=z+16|0;_=z+20|0;Y=z+24|0;ba=z+28|0;da=z+(V<<4)|0;V=z+((V^1)<<4)|0;ea=z+(U<<4)+4|0;fa=z+((U^1)<<4)+4|0;U=z+(S<<4)+8|0;S=z+((S^1)<<4)+8|0;ga=0;ha=c[a+136>>2]|0;a=0;do{a=a+1|0;oa=ha+6|0;pa=b[ha>>1]|0;ka=ha+10|0;na=b[ha+4>>1]|0;la=ha+8|0;ma=b[ha+2>>1]|0;ja=ha+12|0;ia=(c[ja>>2]|0)>-1;if((((O&65535)<=(e[oa>>1]|0)&(T&65535)>=(pa&65535)&(Q&65535)<=(e[ka>>1]|0)&($&65535)>=(na&65535)&(P&65535)<=(e[la>>1]|0)&(W&65535)>=(ma&65535)?(xa=+g[N>>2],za=+g[M>>2],Ba=+g[L>>2],ya=+g[I>>2],Aa=+g[J>>2],v=+g[K>>2],g[X>>2]=0.0,x=+(e[oa>>1]|0)/xa+ya,u=+(e[la>>1]|0)/za+Aa,w=+(e[ka>>1]|0)/Ba+v,g[ba>>2]=0.0,g[z>>2]=+(pa&65535)/xa+ya- +g[m>>2],g[aa>>2]=+(ma&65535)/za+Aa- +g[G>>2],g[Z>>2]=+(na&65535)/Ba+v- +g[H>>2],g[ca>>2]=x- +g[l>>2],g[_>>2]=u- +g[E>>2],g[Y>>2]=w- +g[F>>2],w=+g[f>>2],u=B*(+g[da>>2]-w),w=B*(+g[V>>2]-w),x=+g[q>>2],v=C*(+g[ea>>2]-x),x=C*(+g[fa>>2]-x),!(u>x|v>w)):0)?(A=v>u?v:u,y=x<w?x:w,r=+g[t>>2],p=D*(+g[U>>2]-r),r=D*(+g[S>>2]-r),!(A>r|p>y)):0)?(p>A?p:A)<s:0){la=!((r<y?r:y)>0.0);if(la|ia^1){ka=15}else{ka=c[ja>>2]|0;kc[c[(c[d>>2]|0)+8>>2]&63](d,ka>>21,ka&2097151);ka=16}}else{la=1;ka=15}if((ka|0)==15){ka=0;if(ia|la^1){ka=16}else{pa=c[ja>>2]|0;ga=ga-pa|0;ha=ha+(0-pa<<4)|0}}if((ka|0)==16){ga=ga+1|0;ha=ha+16|0}}while((ga|0)<(n|0))}else{a=0}if((c[3578]|0)>=(a|0)){i=o;return}c[3578]=a;i=o;return}function Tq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=c[g+16>>2]|0;if((j|0)!=(f|0)){l=f-j|0;i=h;return l|0}if((f|0)==0){l=0;i=h;return l|0}n=g+8|0;o=c[n>>2]|0;n=c[n+4>>2]|0;k=Pr(o|0,0,a|0,0)|0;j=F;p=Pr(n|0,0,a|0,0)|0;m=F;o=Pr(o|0,0,b|0,0)|0;a=F;n=Pr(n|0,0,b|0,0)|0;l=F;b=Er(p|0,0,o|0,0)|0;o=F;l=Er(m|0,0,n|0,l|0)|0;a=Er(l|0,F|0,a|0,0)|0;o=Er(a|0,F|0,o|0,0)|0;a=F;j=Er(0,b|0,k|0,j|0)|0;k=F;b=Er(o|0,a|0,(k>>>0<b>>>0|(k|0)==(b|0)&j>>>0<0)&1|0,0)|0;a=F;o=g;l=c[o>>2]|0;o=c[o+4>>2]|0;n=Pr(l|0,0,d|0,0)|0;g=F;m=Pr(o|0,0,d|0,0)|0;p=F;l=Pr(l|0,0,e|0,0)|0;d=F;o=Pr(o|0,0,e|0,0)|0;e=F;l=Er(m|0,0,l|0,0)|0;m=F;e=Er(p|0,0,o|0,e|0)|0;e=Er(e|0,F|0,d|0,0)|0;m=Er(e|0,F|0,m|0,0)|0;e=F;g=Er(0,l|0,n|0,g|0)|0;d=F;l=Er(m|0,e|0,(d>>>0<l>>>0|(d|0)==(l|0)&g>>>0<0)&1|0,0)|0;e=F;if(!(a>>>0<e>>>0|(a|0)==(e|0)&b>>>0<l>>>0)){if(!(a>>>0>e>>>0|(a|0)==(e|0)&b>>>0>l>>>0)){if(k>>>0<d>>>0|(k|0)==(d|0)&j>>>0<g>>>0){a=-1}else{a=(k>>>0>d>>>0|(k|0)==(d|0)&j>>>0>g>>>0)&1}}else{a=1}}else{a=-1}p=ba(a,f)|0;i=h;return p|0}function Uq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a+8|0;g=c[d>>2]|0;if((g|0)==0){h=a+4|0;g=c[h>>2]|0;if((g|0)==0){c[3580]=(c[3580]|0)+1;g=vr(31)|0;if((g|0)!=0?(e=g+19&-16,f=e,c[f+ -4>>2]=g,(e|0)!=0):0){h=c[a+12>>2]|0;c[f+4>>2]=h;c[f+8>>2]=0;c[3580]=(c[3580]|0)+1;f=vr((h*24|3)+16|0)|0;if((f|0)==0){f=0}else{h=f+19&-16;c[h+ -4>>2]=f;f=h}c[e>>2]=f}else{e=0}c[e+8>>2]=c[a>>2];c[a>>2]=e}else{c[h>>2]=c[g+8>>2];e=g}h=c[e+4>>2]|0;if((h|0)>0){a=0;f=c[e>>2]|0;do{a=a+1|0;g=f;f=f+24|0;c[g>>2]=(a|0)<(h|0)?f:0}while((a|0)!=(h|0))}g=c[e>>2]|0;c[d>>2]=c[g>>2];if((g|0)==0){h=0;i=b;return h|0}}else{c[d>>2]=c[g>>2]}c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;h=g;i=b;return h|0}function Vq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ca=0,da=0,ea=0,fa=0,ga=0;f=i;i=i+144|0;r=f+140|0;q=f+136|0;h=f+120|0;j=f+72|0;k=f+48|0;o=f+24|0;g=f;n=f+116|0;m=f+112|0;t=f+96|0;s=d-b|0;do{if((s|0)==1){h=c[(c[a+92>>2]|0)+(b<<2)>>2]|0}else if((s|0)==0){c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;i=f;return}else if((s|0)==2){h=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;g=h+112|0;k=c[h+88>>2]|0;l=c[h+200>>2]|0;j=(k|0)==(l|0);n=c[h+92>>2]|0;o=c[h+204>>2]|0;m=(n|0)==(o|0);if(j){if(m){if((c[h+96>>2]|0)==(c[h+208>>2]|0)){break}else{o=n}}if((n|0)==(o|0)){k=(c[h+96>>2]|0)>(c[h+208>>2]|0);j=k?g:h;c[j>>2]=j;c[j+4>>2]=j;c[e>>2]=j;c[e+4>>2]=j;c[e+8>>2]=j;c[e+12>>2]=j;g=k?h:g}else{m=0;C=9}}else{C=9}do{if((C|0)==9){n=n-o|0;c[h>>2]=g;c[h+4>>2]=g;c[g>>2]=h;c[h+116>>2]=h;k=(k-l|0)<0;if(!k?!(j&(n|0)<0):0){c[e>>2]=g;c[e+4>>2]=h}else{c[e>>2]=h;c[e+4>>2]=g}j=e+8|0;if((n|0)<0|m&k){c[j>>2]=h;c[e+12>>2]=g;j=h;break}else{c[j>>2]=g;c[e+12>>2]=h;j=h;break}}}while(0);Y=a+48|0;k=Uq(Y)|0;Y=Uq(Y)|0;l=k+8|0;c[l>>2]=Y;c[Y+8>>2]=k;Z=a+100|0;c[k+20>>2]=c[Z>>2];c[Y+20>>2]=c[Z>>2];c[k+12>>2]=g;c[Y+12>>2]=j;c[k+16>>2]=0;c[Y+16>>2]=0;Y=a+116|0;Z=c[Y>>2]|0;h=Z+1|0;c[Y>>2]=h;a=a+120|0;if((Z|0)>=(c[a>>2]|0)){c[a>>2]=h}c[k>>2]=k;c[k+4>>2]=k;c[j+8>>2]=k;Z=c[l>>2]|0;c[Z>>2]=Z;c[Z+4>>2]=Z;c[g+8>>2]=Z;i=f;return}else{s=((s|0)/2|0)+b|0;G=c[a+92>>2]|0;H=c[G+(s+ -1<<2)>>2]|0;E=c[H+88>>2]|0;D=c[H+92>>2]|0;H=c[H+96>>2]|0;a:do{if((s|0)<(d|0)){I=s;while(1){J=c[G+(I<<2)>>2]|0;if((c[J+88>>2]|0)!=(E|0)){break a}if((c[J+92>>2]|0)!=(D|0)){break a}K=I+1|0;if((c[J+96>>2]|0)!=(H|0)){break a}if((K|0)<(d|0)){I=K}else{I=K;break}}}else{I=s}}while(0);Vq(a,b,s,e);c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;Vq(a,I,d,t);G=t+4|0;J=c[G>>2]|0;if((J|0)==0){i=f;return}D=e+4|0;if((c[D>>2]|0)==0){c[e+0>>2]=c[t+0>>2];c[e+4>>2]=c[t+4>>2];c[e+8>>2]=c[t+8>>2];c[e+12>>2]=c[t+12>>2];i=f;return}d=a+100|0;c[d>>2]=(c[d>>2]|0)+ -1;E=e+12|0;s=c[E>>2]|0;b=c[t+8>>2]|0;I=c[s+88>>2]|0;b:do{if((I|0)==(c[b+88>>2]|0)?(c[s+92>>2]|0)==(c[b+92>>2]|0):0){H=c[b+4>>2]|0;if((H|0)==(b|0)){q=c[b+8>>2]|0;if((q|0)!=0){b=c[q+12>>2]|0;I=c[b+88>>2]|0}T=c[b+96>>2]|0;Q=I+1|0;break}s=c[b>>2]|0;c[H>>2]=s;c[s+4>>2]=H;c:do{if((b|0)==(c[t>>2]|0)){C=c[s+88>>2]|0;I=c[H+88>>2]|0;do{if((C|0)>=(I|0)){if((C|0)==(I|0)?(c[s+92>>2]|0)<(c[H+92>>2]|0):0){break}c[t>>2]=H;break c}}while(0);c[t>>2]=s}}while(0);J=c[G>>2]|0;if((b|0)==(J|0)){b=c[s+88>>2]|0;C=c[H+88>>2]|0;do{if((b|0)<=(C|0)){if((b|0)==(C|0)?(c[s+92>>2]|0)>(c[H+92>>2]|0):0){break}c[G>>2]=H;J=H;C=45;break b}}while(0);c[G>>2]=s;J=s;C=45}else{C=45}}else{C=45}}while(0);if((C|0)==45){C=c[t>>2]|0;I=0;H=1;K=D;s=0;b=0;d:while(1){M=c[K>>2]|0;while(1){K=c[M+88>>2]|0;P=ba((c[J+88>>2]|0)-K|0,H)|0;e:do{if((P|0)<=0){if((P|0)>=0){O=c[M+92>>2]|0;L=(I|0)!=0;f:do{if(L){N=M;while(1){P=c[N>>2]|0;if((P|0)==(M|0)){M=N;break f}if((c[P+88>>2]|0)!=(K|0)){M=N;break f}Q=c[P+92>>2]|0;if((Q|0)>(O|0)){M=N;break}else{N=P;O=Q}}}else{N=M;while(1){P=c[N+4>>2]|0;if((P|0)==(M|0)){M=N;break f}if((c[P+88>>2]|0)!=(K|0)){M=N;break f}Q=c[P+92>>2]|0;if((Q|0)>(O|0)){M=N;break}else{N=P;O=Q}}}}while(0);N=c[J+92>>2]|0;if(L){L=J;O=N;while(1){N=c[L+4>>2]|0;if((N|0)==(J|0)){break e}if((c[N+88>>2]|0)!=(K|0)){break e}P=c[N+92>>2]|0;if((P|0)<(O|0)){break e}else{L=N;O=P}}}else{L=J;while(1){P=c[L>>2]|0;if((P|0)==(J|0)){break e}if((c[P+88>>2]|0)!=(K|0)){break e}O=c[P+92>>2]|0;if((O|0)<(N|0)){break e}else{L=P;N=O}}}}K=c[J+92>>2]|0;R=c[M+92>>2]|0;if((I|0)==0){S=P;while(1){Q=c[J>>2]|0;L=(Q|0)==(J|0);P=J+88|0;O=Q+88|0;N=Q+92|0;while(1){V=M+88|0;T=K-R|0;if(!L?(A=c[O>>2]|0,y=ba(A-(c[P>>2]|0)|0,H)|0,z=c[N>>2]|0,B=z-K|0,(B|0)>-1):0){if((y|0)==0){break}if((y|0)<0?(ba(B,S)|0)<=(ba(y,T)|0):0){break}}U=c[M>>2]|0;if((U|0)==(M|0)){L=J;break e}W=c[U+88>>2]|0;X=ba(W-(c[V>>2]|0)|0,H)|0;V=c[U+92>>2]|0;R=V-R|0;W=ba((c[P>>2]|0)-W|0,H)|0;if(!((W|0)<0&(R|0)>0)){L=J;break e}if((X|0)==0){R=V;S=W;M=U;continue}if((X|0)>=0){L=J;break e}if((ba(R,S)|0)<(ba(X,T)|0)){R=V;S=W;M=U}else{L=J;break e}}K=z;S=ba(A-(c[V>>2]|0)|0,H)|0;J=Q}}else{S=P;while(1){P=c[J+4>>2]|0;L=(P|0)==(J|0);Q=J+88|0;O=P+88|0;N=P+92|0;while(1){V=M+88|0;U=K-R|0;if(!L?(w=c[O>>2]|0,u=ba(w-(c[Q>>2]|0)|0,H)|0,v=c[N>>2]|0,x=v-K|0,(x|0)>-1):0){if((u|0)==0){break}if((u|0)<0?(ba(x,S)|0)<=(ba(u,U)|0):0){break}}T=c[M+4>>2]|0;if((T|0)==(M|0)){L=J;break e}W=c[T+88>>2]|0;X=ba(W-(c[V>>2]|0)|0,H)|0;V=c[T+92>>2]|0;R=V-R|0;W=ba((c[Q>>2]|0)-W|0,H)|0;if(!((W|0)<0&(R|0)>0)){L=J;break e}if((X|0)==0){R=V;S=W;M=T;continue}if((X|0)>=0){L=J;break e}if((ba(R,S)|0)<(ba(X,U)|0)){R=V;S=W;M=T}else{L=J;break e}}K=v;S=ba(w-(c[V>>2]|0)|0,H)|0;J=P}}}else{K=(I|0)!=0;L=c[J+92>>2]|0;Q=M;while(1){M=J+88|0;O=Q+88|0;T=c[Q+92>>2]|0;R=L-T|0;N=c[(K?Q:Q+4|0)>>2]|0;g:do{if((N|0)==(Q|0)){N=Q}else{while(1){V=c[N+88>>2]|0;U=ba(V-(c[O>>2]|0)|0,H)|0;S=c[N+92>>2]|0;T=S-T|0;if((T|0)>=1){N=Q;break g}if((U|0)!=0){if((U|0)>=0){N=Q;break g}if((ba(T,P)|0)>(ba(U,R)|0)){N=Q;break g}}P=ba((c[M>>2]|0)-V|0,H)|0;O=N+88|0;R=L-S|0;Q=c[(K?N:N+4|0)>>2]|0;if((Q|0)==(N|0)){break}else{Z=N;N=Q;T=S;Q=Z}}}}while(0);S=c[(K?J:J+4|0)>>2]|0;if((S|0)==(J|0)){M=N;L=J;break e}Z=c[S+88>>2]|0;M=ba(Z-(c[M>>2]|0)|0,H)|0;Q=c[S+92>>2]|0;L=Q-L|0;O=ba(Z-(c[O>>2]|0)|0,H)|0;if(!((O|0)>0&(L|0)<0)){M=N;L=J;break e}if((M|0)==0){L=Q;P=O;Q=N;J=S;continue}if((M|0)>=0){M=N;L=J;break e}if((ba(L,P)|0)<(ba(M,R)|0)){L=Q;P=O;Q=N;J=S}else{M=N;L=J;break}}}}while(0);if((I|0)==0){I=1;H=-1;K=e;s=M;J=C;b=L;continue d}I=I+1|0;if((I|0)==2){break d}else{J=L}}}c[M+4>>2]=L;c[L>>2]=M;c[s>>2]=b;c[b+4>>2]=s;u=c[t>>2]|0;if((c[u+88>>2]|0)<(c[(c[e>>2]|0)+88>>2]|0)){c[e>>2]=u}e=c[G>>2]|0;if((c[e+88>>2]|0)>=(c[(c[D>>2]|0)+88>>2]|0)){c[D>>2]=e}c[E>>2]=c[t+12>>2];u=c[b+88>>2]|0;J=c[s+88>>2]|0;L=u-J|0;t=c[b+92>>2]|0;I=c[s+92>>2]|0;w=t-I|0;E=c[b+96>>2]|0;K=c[s+96>>2]|0;D=E-K|0;e=((w|0)<0)<<31>>31;y=0-L|0;A=((y|0)<0)<<31>>31;x=((D|0)<0)<<31>>31;v=Br(0,0,y|0,A|0)|0;v=Pr(D|0,x|0,v|0,F|0)|0;z=F;x=Pr(D|0,x|0,w|0,e|0)|0;D=F;L=Pr(L|0,((L|0)<0)<<31>>31|0,y|0,A|0)|0;B=F;C=Pr(w|0,e|0,w|0,e|0)|0;C=Br(L|0,B|0,C|0,F|0)|0;B=F;L=c[s+8>>2]|0;c[r>>2]=0;if((L|0)==0){N=0}else{H=Br(0,0,w|0,e|0)|0;G=F;N=0;M=L;do{O=c[M+12>>2]|0;Q=c[O+88>>2]|0;S=Q-J|0;P=c[O+92>>2]|0;U=P-I|0;O=c[O+96>>2]|0;R=((S|0)<0)<<31>>31;T=((U|0)<0)<<31>>31;X=Pr(U|0,T|0,y|0,A|0)|0;Z=F;Y=Pr(S|0,R|0,H|0,G|0)|0;do{if((X|0)==(Y|0)&(Z|0)==(F|0)?(Z=O-K|0,Y=Pr(S|0,R|0,v|0,z|0)|0,X=F,W=Pr(U|0,T|0,x|0,D|0)|0,X=Er(W|0,F|0,Y|0,X|0)|0,Y=F,Z=Pr(Z|0,((Z|0)<0)<<31>>31|0,C|0,B|0)|0,Z=Er(X|0,Y|0,Z|0,F|0)|0,Y=F,(Y|0)>0|(Y|0)==0&Z>>>0>0):0){if((N|0)!=0){R=(c[N+4>>2]|0)==(M|0);if((c[N>>2]|0)==(M|0)){if(!R){break}Y=c[N+12>>2]|0;W=c[(c[M+8>>2]|0)+12>>2]|0;Z=c[W+88>>2]|0;X=c[W+92>>2]|0;W=c[W+96>>2]|0;V=(c[Y+96>>2]|0)-W|0;W=O-W|0;X=(ba(W,(c[Y+92>>2]|0)-X|0)|0)-(ba(V,P-X|0)|0)|0;Z=(ba(V,Q-Z|0)|0)-(ba(W,(c[Y+88>>2]|0)-Z|0)|0)|0;X=Pr(X|0,((X|0)<0)<<31>>31|0,w|0,e|0)|0;Y=F;Z=Pr(Z|0,((Z|0)<0)<<31>>31|0,y|0,A|0)|0;Z=Er(X|0,Y|0,Z|0,F|0)|0;Y=F;O=(Y|0)>0|(Y|0)==0&Z>>>0>0?2:1}else{O=R&1}if((O|0)!=1){break}}c[r>>2]=M;N=M}}while(0);M=c[M>>2]|0}while((M|0)!=(L|0))}H=c[b+8>>2]|0;c[q>>2]=0;if((H|0)==0){K=0}else{G=Br(0,0,w|0,e|0)|0;I=F;K=0;J=H;do{S=c[J+12>>2]|0;P=c[S+88>>2]|0;R=P-u|0;Q=c[S+92>>2]|0;M=Q-t|0;S=c[S+96>>2]|0;L=((R|0)<0)<<31>>31;O=((M|0)<0)<<31>>31;X=Pr(M|0,O|0,y|0,A|0)|0;Z=F;Y=Pr(R|0,L|0,G|0,I|0)|0;do{if((X|0)==(Y|0)&(Z|0)==(F|0)?(Z=S-E|0,Y=Pr(R|0,L|0,v|0,z|0)|0,X=F,W=Pr(M|0,O|0,x|0,D|0)|0,X=Er(W|0,F|0,Y|0,X|0)|0,Y=F,Z=Pr(Z|0,((Z|0)<0)<<31>>31|0,C|0,B|0)|0,Z=Er(X|0,Y|0,Z|0,F|0)|0,Y=F,(Y|0)>0|(Y|0)==0&Z>>>0>0):0){if((K|0)!=0){if((c[K>>2]|0)!=(J|0)){break}if((c[K+4>>2]|0)==(J|0)?(Y=c[K+12>>2]|0,W=c[(c[J+8>>2]|0)+12>>2]|0,Z=c[W+88>>2]|0,X=c[W+92>>2]|0,W=c[W+96>>2]|0,V=(c[Y+96>>2]|0)-W|0,W=S-W|0,X=(ba(W,(c[Y+92>>2]|0)-X|0)|0)-(ba(V,Q-X|0)|0)|0,Z=(ba(V,P-Z|0)|0)-(ba(W,(c[Y+88>>2]|0)-Z|0)|0)|0,X=Pr(X|0,((X|0)<0)<<31>>31|0,w|0,e|0)|0,Y=F,Z=Pr(Z|0,((Z|0)<0)<<31>>31|0,y|0,A|0)|0,Z=Er(X|0,Y|0,Z|0,F|0)|0,Y=F,!((Y|0)>0|(Y|0)==0&Z>>>0>0)):0){break}}c[q>>2]=J;K=J}}while(0);J=c[J>>2]|0}while((J|0)!=(H|0))}if(!((N|0)==0&(K|0)==0)){Xq(a,s,b,r,q);r=c[r>>2]|0;if((r|0)!=0){s=c[r+12>>2]|0}q=c[q>>2]|0;if((q|0)!=0){b=c[q+12>>2]|0}}T=(c[b+96>>2]|0)+1|0;Q=c[b+88>>2]|0}S=c[b+92>>2]|0;v=h+4|0;B=h+8|0;A=h+12|0;z=j+8|0;w=j+16|0;u=k+8|0;G=k+16|0;x=o+16|0;y=o+8|0;D=g+16|0;H=g+8|0;t=a+48|0;q=a+116|0;e=a+120|0;r=a+56|0;C=S;E=s;L=b;I=0;M=0;X=1;P=0;U=0;O=0;V=0;J=0;N=0;while(1){Y=E+88|0;ea=(c[L+88>>2]|0)-(c[Y>>2]|0)|0;ga=E+92|0;$=C-(c[ga>>2]|0)|0;K=E+96|0;C=(c[L+96>>2]|0)-(c[K>>2]|0)|0;c[h>>2]=ea;c[v>>2]=$;c[B>>2]=C;c[A>>2]=-1;Y=Q-(c[Y>>2]|0)|0;ga=S-(c[ga>>2]|0)|0;K=T-(c[K>>2]|0)|0;ca=(ba(C,ga)|0)-(ba($,K)|0)|0;aa=((ca|0)<0)<<31>>31;K=(ba(ea,K)|0)-(ba(C,Y)|0)|0;_=((K|0)<0)<<31>>31;ga=(ba($,Y)|0)-(ba(ea,ga)|0)|0;Y=((ga|0)<0)<<31>>31;W=j;c[W>>2]=ca;c[W+4>>2]=aa;W=z;c[W>>2]=K;c[W+4>>2]=_;W=w;c[W>>2]=ga;c[W+4>>2]=Y;W=(($|0)<0)<<31>>31;da=Pr(ga|0,Y|0,$|0,W|0)|0;R=F;fa=((C|0)<0)<<31>>31;Z=Pr(C|0,fa|0,K|0,_|0)|0;Z=Br(da|0,R|0,Z|0,F|0)|0;R=F;fa=Pr(ca|0,aa|0,C|0,fa|0)|0;C=F;da=((ea|0)<0)<<31>>31;Y=Pr(ea|0,da|0,ga|0,Y|0)|0;Y=Br(fa|0,C|0,Y|0,F|0)|0;C=F;_=Pr(ea|0,da|0,K|0,_|0)|0;K=F;W=Pr(ca|0,aa|0,$|0,W|0)|0;W=Br(_|0,K|0,W|0,F|0)|0;K=k;c[K>>2]=Z;c[K+4>>2]=R;K=u;c[K>>2]=Y;c[K+4>>2]=C;K=G;c[K>>2]=W;c[K+4>>2]=F;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;K=Wq(a,0,E,h,j,k,o)|0;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;W=Wq(a,1,L,h,j,k,g)|0;C=(K|0)!=0;Y=C^1;R=(W|0)==0;if(R&Y){C=138;break}if(R|Y){R=C?-1:1}else{ga=o;R=y;R=Tq(c[ga>>2]|0,c[ga+4>>2]|0,c[R>>2]|0,c[R+4>>2]|0,c[x>>2]|0,g)|0}do{if(!X){if((R|0)>-1){if((c[D>>2]|0)>=0){C=150;break}ga=H;if((c[ga>>2]|0)==0&(c[ga+4>>2]|0)==0){C=157;break}else{C=150;break}}if((c[x>>2]|0)<0?(ga=y,(c[ga>>2]|0)==0&(c[ga+4>>2]|0)==0):0){c[n>>2]=K;c[m>>2]=W;W=K;R=V;C=179}else{C=150}}else{C=150}}while(0);if((C|0)==150){C=Uq(t)|0;ga=Uq(t)|0;X=C+8|0;c[X>>2]=ga;c[ga+8>>2]=C;c[C+20>>2]=c[d>>2];c[ga+20>>2]=c[d>>2];c[C+12>>2]=L;c[ga+12>>2]=E;c[C+16>>2]=0;c[ga+16>>2]=0;ga=c[q>>2]|0;Y=ga+1|0;c[q>>2]=Y;if((ga|0)>=(c[e>>2]|0)){c[e>>2]=Y}if((O|0)==0){P=C}else{c[O+4>>2]=C}c[C>>2]=O;X=c[X>>2]|0;if((V|0)==0){U=X}else{c[V>>2]=X}c[X+4>>2]=V;O=C;V=X;C=157}do{if((C|0)==157){C=0;c[n>>2]=K;c[m>>2]=W;if((R|0)!=0){if((R|0)>-1){X=W}else{W=K;R=V;C=179;break}}else{Xq(a,E,L,n,m);X=c[m>>2]|0}if((X|0)!=0){Q=(N|0)!=0;if(Q?(p=c[N>>2]|0,(p|0)!=(W|0)):0){S=p;do{T=S;S=c[S>>2]|0;Y=c[T+8>>2]|0;if((S|0)==(T|0)){c[(c[Y+12>>2]|0)+8>>2]=0}else{ga=T+4|0;c[S+4>>2]=c[ga>>2];c[c[ga>>2]>>2]=S;c[(c[Y+12>>2]|0)+8>>2]=S}Z=c[Y>>2]|0;if((Z|0)==(Y|0)){c[(c[T+12>>2]|0)+8>>2]=0}else{ga=Y+4|0;c[Z+4>>2]=c[ga>>2];c[c[ga>>2]>>2]=Z;c[(c[T+12>>2]|0)+8>>2]=Z}c[T+0>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;c[T+12>>2]=0;c[T+16>>2]=0;c[T>>2]=c[r>>2];c[r>>2]=T;c[Y+0>>2]=0;c[Y+4>>2]=0;c[Y+8>>2]=0;c[Y+12>>2]=0;c[Y+16>>2]=0;c[Y>>2]=c[r>>2];c[r>>2]=Y;c[q>>2]=(c[q>>2]|0)+ -1}while((S|0)!=(W|0))}if((V|0)==0){N=X;M=Q?M:W}else{if(Q){c[N>>2]=U;c[U+4>>2]=N;N=W+4|0}else{N=W+4|0;M=c[N>>2]|0;c[M>>2]=U;c[U+4>>2]=M;M=U}c[V>>2]=W;c[N>>2]=V;N=c[m>>2]|0;U=0}T=c[L+96>>2]|0;S=c[L+92>>2]|0;Q=c[L+88>>2]|0;L=c[N+12>>2]|0;V=0;N=c[N+8>>2]|0}if((R|0)<1){W=c[n>>2]|0;R=V;C=179}else{K=U;R=V}}}while(0);if((C|0)==179){C=0;if((W|0)==0){K=U}else{Q=(J|0)!=0;if(Q?(l=c[J+4>>2]|0,(l|0)!=(K|0)):0){V=l;do{Y=V+4|0;T=V;V=c[Y>>2]|0;X=c[T>>2]|0;S=c[T+8>>2]|0;if((X|0)==(T|0)){c[(c[S+12>>2]|0)+8>>2]=0}else{c[X+4>>2]=V;c[c[Y>>2]>>2]=X;c[(c[S+12>>2]|0)+8>>2]=X}X=c[S>>2]|0;if((X|0)==(S|0)){c[(c[T+12>>2]|0)+8>>2]=0}else{ga=S+4|0;c[X+4>>2]=c[ga>>2];c[c[ga>>2]>>2]=X;c[(c[T+12>>2]|0)+8>>2]=X}c[T+0>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;c[T+12>>2]=0;c[T+16>>2]=0;c[T>>2]=c[r>>2];c[r>>2]=T;c[S+0>>2]=0;c[S+4>>2]=0;c[S+8>>2]=0;c[S+12>>2]=0;c[S+16>>2]=0;c[S>>2]=c[r>>2];c[r>>2]=S;c[q>>2]=(c[q>>2]|0)+ -1}while((V|0)!=(K|0))}if((O|0)==0){I=Q?I:K}else{if(Q){c[P>>2]=J;c[J+4>>2]=P;J=K}else{J=c[K>>2]|0;c[P>>2]=J;c[J+4>>2]=P;J=K;I=P}c[J>>2]=O;c[O+4>>2]=K;W=c[n>>2]|0;P=0}T=c[E+96>>2]|0;S=c[E+92>>2]|0;Q=c[E+88>>2]|0;E=c[W+12>>2]|0;K=U;O=0;J=c[W+8>>2]|0}}if((E|0)==(s|0)&(L|0)==(b|0)){break}C=c[L+92>>2]|0;X=0;U=K;V=R}if((C|0)==138){a=Uq(t)|0;ga=Uq(t)|0;g=a+8|0;c[g>>2]=ga;c[ga+8>>2]=a;c[a+20>>2]=c[d>>2];c[ga+20>>2]=c[d>>2];c[a+12>>2]=L;c[ga+12>>2]=E;c[a+16>>2]=0;c[ga+16>>2]=0;ga=c[q>>2]|0;h=ga+1|0;c[q>>2]=h;if((ga|0)>=(c[e>>2]|0)){c[e>>2]=h}c[a>>2]=a;c[a+4>>2]=a;c[E+8>>2]=a;ga=c[g>>2]|0;c[ga>>2]=ga;c[ga+4>>2]=ga;c[L+8>>2]=ga;i=f;return}if((J|0)!=0){a=J+4|0;g=c[a>>2]|0;if((g|0)!=(I|0)){do{k=g+4|0;h=g;g=c[k>>2]|0;l=c[h>>2]|0;j=c[h+8>>2]|0;if((l|0)==(h|0)){c[(c[j+12>>2]|0)+8>>2]=0}else{c[l+4>>2]=g;c[c[k>>2]>>2]=l;c[(c[j+12>>2]|0)+8>>2]=l}k=c[j>>2]|0;if((k|0)==(j|0)){c[(c[h+12>>2]|0)+8>>2]=0}else{ga=j+4|0;c[k+4>>2]=c[ga>>2];c[c[ga>>2]>>2]=k;c[(c[h+12>>2]|0)+8>>2]=k}c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h>>2]=c[r>>2];c[r>>2]=h;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j>>2]=c[r>>2];c[r>>2]=j;c[q>>2]=(c[q>>2]|0)+ -1}while((g|0)!=(I|0))}if((O|0)!=0){c[P>>2]=J;c[a>>2]=P;c[I>>2]=O;c[O+4>>2]=I}}else{c[P>>2]=O;c[O+4>>2]=P;c[s+8>>2]=O}if((N|0)==0){c[R>>2]=K;c[K+4>>2]=R;c[b+8>>2]=R;i=f;return}g=c[N>>2]|0;if((g|0)!=(M|0)){do{a=g;g=c[g>>2]|0;j=c[a+8>>2]|0;if((g|0)==(a|0)){c[(c[j+12>>2]|0)+8>>2]=0}else{ga=a+4|0;c[g+4>>2]=c[ga>>2];c[c[ga>>2]>>2]=g;c[(c[j+12>>2]|0)+8>>2]=g}h=c[j>>2]|0;if((h|0)==(j|0)){c[(c[a+12>>2]|0)+8>>2]=0}else{ga=j+4|0;c[h+4>>2]=c[ga>>2];c[c[ga>>2]>>2]=h;c[(c[a+12>>2]|0)+8>>2]=h}c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a>>2]=c[r>>2];c[r>>2]=a;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j>>2]=c[r>>2];c[r>>2]=j;c[q>>2]=(c[q>>2]|0)+ -1}while((g|0)!=(M|0))}if((R|0)==0){i=f;return}c[N>>2]=K;c[K+4>>2]=N;c[R>>2]=M;c[M+4>>2]=R;i=f;return}}while(0);c[h+8>>2]=0;c[h>>2]=h;c[h+4>>2]=h;c[e>>2]=h;c[e+4>>2]=h;c[e+8>>2]=h;c[e+12>>2]=h;i=f;return}function Wq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,G=0,H=0,I=0,J=0,K=0,L=0;j=i;k=d+8|0;v=c[k>>2]|0;if((v|0)==0){K=0;i=j;return K|0}a=a+100|0;l=d+88|0;m=d+92|0;d=d+96|0;r=g+8|0;s=g+16|0;t=f+8|0;u=f+16|0;q=h+8|0;o=h+16|0;p=e+8|0;n=e+4|0;w=0;do{do{if((c[v+20>>2]|0)>(c[a>>2]|0)){x=c[v+12>>2]|0;C=c[x+88>>2]|0;A=C-(c[l>>2]|0)|0;z=c[x+92>>2]|0;y=z-(c[m>>2]|0)|0;x=c[x+96>>2]|0;B=x-(c[d>>2]|0)|0;H=((A|0)<0)<<31>>31;E=g;E=Pr(A|0,H|0,c[E>>2]|0,c[E+4>>2]|0)|0;K=F;J=((y|0)<0)<<31>>31;I=r;I=Pr(y|0,J|0,c[I>>2]|0,c[I+4>>2]|0)|0;K=Er(I|0,F|0,E|0,K|0)|0;E=F;I=((B|0)<0)<<31>>31;D=s;D=Pr(B|0,I|0,c[D>>2]|0,c[D+4>>2]|0)|0;D=Er(K|0,E|0,D|0,F|0)|0;E=F;K=f;H=Pr(c[K>>2]|0,c[K+4>>2]|0,A|0,H|0)|0;K=F;G=t;J=Pr(c[G>>2]|0,c[G+4>>2]|0,y|0,J|0)|0;K=Er(J|0,F|0,H|0,K|0)|0;H=F;J=u;I=Pr(c[J>>2]|0,c[J+4>>2]|0,B|0,I|0)|0;I=Er(K|0,H|0,I|0,F|0)|0;H=F;if((E|0)>0|(E|0)==0&D>>>0>0){J=1;G=1}else{G=(E|0)<0;D=Br(0,0,D|0,E|0)|0;J=G?-1:0;D=G?D:0;E=G?F:0;G=G?-1:0}if(!((H|0)>0|(H|0)==0&I>>>0>0)){if((H|0)<0){G=0-J|0;L=Br(0,0,I|0,H|0)|0;J=G;K=(I|0)==0&(H|0)==0;I=L;H=F}else{K=1;I=0;H=0}if((J|0)==0&K){break}}if((w|0)==0){w=h;c[w>>2]=D;c[w+4>>2]=E;w=q;c[w>>2]=I;c[w+4>>2]=H;c[o>>2]=G;w=v;break}J=Tq(D,E,I,H,G,h)|0;if((J|0)<0){w=h;c[w>>2]=D;c[w+4>>2]=E;w=q;c[w>>2]=I;c[w+4>>2]=H;c[o>>2]=G;w=v;break}if((J|0)==0){D=(c[w+4>>2]|0)==(v|0);if((c[w>>2]|0)==(v|0)){if(D){K=c[p>>2]|0;H=ba(K,y)|0;L=c[n>>2]|0;H=H-(ba(L,B)|0)|0;J=c[e>>2]|0;K=(ba(J,B)|0)-(ba(A,K)|0)|0;J=(ba(A,L)|0)-(ba(J,y)|0)|0;B=c[w+12>>2]|0;L=c[(c[v+8>>2]|0)+12>>2]|0;E=c[L+88>>2]|0;D=(c[B+88>>2]|0)-E|0;I=c[L+92>>2]|0;G=(c[B+92>>2]|0)-I|0;L=c[L+96>>2]|0;B=(c[B+96>>2]|0)-L|0;E=C-E|0;C=z-I|0;L=x-L|0;I=(ba(L,G)|0)-(ba(C,B)|0)|0;L=(ba(E,B)|0)-(ba(L,D)|0)|0;G=(ba(C,D)|0)-(ba(E,G)|0)|0;H=Pr(I|0,((I|0)<0)<<31>>31|0,H|0,((H|0)<0)<<31>>31|0)|0;I=F;K=Pr(L|0,((L|0)<0)<<31>>31|0,K|0,((K|0)<0)<<31>>31|0)|0;L=F;J=Pr(G|0,((G|0)<0)<<31>>31|0,J|0,((J|0)<0)<<31>>31|0)|0;J=Er(H|0,I|0,J|0,F|0)|0;L=Er(J|0,F|0,K|0,L|0)|0;K=F;x=(K|0)>0|(K|0)==0&L>>>0>0?2:1}else{x=2}}else{x=D&1}w=(x|0)==2^b?w:v}}}while(0);v=c[v>>2]|0}while((v|0)!=(c[k>>2]|0));i=j;return w|0}



function Bo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;j=d+8|0;if((c[j>>2]|0)>0){h=c[d+16>>2]|0;k=0;f=0;do{l=c[h+(k<<2)>>2]|0;if((c[l+204>>2]&3|0)==0){c[l+208>>2]=f;f=f+1|0}c[l+212>>2]=-1;g[l+244>>2]=1.0;k=k+1|0}while((k|0)<(c[j>>2]|0))}else{f=0}h=b+8|0;j=c[h>>2]|0;if((j|0)<(f|0)){k=b+12|0;if((c[k>>2]|0)<(f|0)){if((f|0)==0){m=0;o=j}else{c[3580]=(c[3580]|0)+1;l=vr((f<<3|3)+16|0)|0;if((l|0)==0){m=0}else{m=l+19&-16;c[m+ -4>>2]=l}o=c[h>>2]|0}l=b+16|0;if((o|0)>0){p=0;do{n=m+(p<<3)|0;if((n|0)!=0){r=(c[l>>2]|0)+(p<<3)|0;q=c[r+4>>2]|0;c[n>>2]=c[r>>2];c[n+4>>2]=q}p=p+1|0}while((p|0)!=(o|0))}o=c[l>>2]|0;n=b+20|0;if((o|0)!=0){if((a[n]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[o+ -4>>2]|0)}c[l>>2]=0}a[n]=1;c[l>>2]=m;c[k>>2]=f}else{l=b+16|0}do{k=(c[l>>2]|0)+(j<<3)|0;if((k|0)!=0){r=k;c[r>>2]=0;c[r+4>>2]=0}j=j+1|0}while((j|0)!=(f|0))}c[h>>2]=f;if((f|0)>0){j=c[b+16>>2]|0;h=0;do{c[j+(h<<3)>>2]=h;c[j+(h<<3)+4>>2]=1;h=h+1|0}while((h|0)!=(f|0))}f=c[d+68>>2]|0;f=Jb[c[(c[f>>2]|0)+36>>2]&63](f)|0;d=Jb[c[(c[f>>2]|0)+36>>2]&63](f)|0;if((d|0)==0){i=e;return}f=Jb[c[(c[f>>2]|0)+20>>2]&63](f)|0;if((d|0)<=0){i=e;return}b=b+16|0;h=0;do{k=c[c[f+(h<<4)>>2]>>2]|0;j=c[c[f+(h<<4)+4>>2]>>2]|0;if(((k|0)!=0?!((c[k+204>>2]&7|0)!=0|(j|0)==0):0)?(c[j+204>>2]&7|0)==0:0){l=c[k+208>>2]|0;k=c[j+208>>2]|0;j=c[b>>2]|0;m=j+(l<<3)|0;n=c[m>>2]|0;if((n|0)!=(l|0)){l=n;while(1){l=j+(l<<3)|0;c[m>>2]=c[l>>2];l=c[l>>2]|0;m=j+(l<<3)|0;n=c[m>>2]|0;if((l|0)==(n|0)){break}else{l=n}}}m=j+(k<<3)|0;n=c[m>>2]|0;if((n|0)!=(k|0)){k=n;while(1){k=j+(k<<3)|0;c[m>>2]=c[k>>2];k=c[k>>2]|0;m=j+(k<<3)|0;n=c[m>>2]|0;if((k|0)==(n|0)){break}else{k=n}}}if((l|0)!=(k|0)){c[j+(l<<3)>>2]=k;r=j+(k<<3)+4|0;c[r>>2]=(c[r>>2]|0)+(c[j+(l<<3)+4>>2]|0)}}h=h+1|0}while((h|0)!=(d|0));i=e;return}function Co(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;d=b+8|0;if((c[d>>2]|0)<=0){i=e;return}b=c[b+16>>2]|0;a=a+16|0;f=0;h=0;do{j=c[b+(f<<2)>>2]|0;if((c[j+204>>2]&3|0)==0){g=c[a>>2]|0;k=g+(h<<3)|0;l=c[k>>2]|0;if((l|0)==(h|0)){m=h}else{do{m=g+(l<<3)|0;c[k>>2]=c[m>>2];m=c[m>>2]|0;k=g+(m<<3)|0;l=c[k>>2]|0}while((m|0)!=(l|0))}c[j+208>>2]=m;c[g+(h<<3)+4>>2]=f;c[j+212>>2]=-1;h=h+1|0}else{c[j+208>>2]=-1;c[j+212>>2]=-2}f=f+1|0}while((f|0)<(c[d>>2]|0));i=e;return}function Do(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=a+12|0;while(1){g=c[f>>2]|0;h=c[g+(((b+d|0)/2|0)<<2)>>2]|0;j=h+740|0;h=h+744|0;m=b;n=d;while(1){k=c[(c[j>>2]|0)+208>>2]|0;o=(k|0)>-1;if(o){while(1){l=c[g+(m<<2)>>2]|0;p=c[(c[l+740>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[l+744>>2]|0)+208>>2]|0}if((p|0)<(k|0)){m=m+1|0}else{break}}}else{p=c[(c[h>>2]|0)+208>>2]|0;while(1){l=c[g+(m<<2)>>2]|0;q=c[(c[l+740>>2]|0)+208>>2]|0;if(!((q|0)>-1)){q=c[(c[l+744>>2]|0)+208>>2]|0}if((q|0)<(p|0)){m=m+1|0}else{break}}}if(o){while(1){o=c[g+(n<<2)>>2]|0;p=c[(c[o+740>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[o+744>>2]|0)+208>>2]|0}if((k|0)<(p|0)){n=n+ -1|0}else{break}}}else{k=c[(c[h>>2]|0)+208>>2]|0;while(1){o=c[g+(n<<2)>>2]|0;p=c[(c[o+740>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[o+744>>2]|0)+208>>2]|0}if((k|0)<(p|0)){n=n+ -1|0}else{break}}}if((m|0)<=(n|0)){c[g+(m<<2)>>2]=o;c[(c[f>>2]|0)+(n<<2)>>2]=l;m=m+1|0;n=n+ -1|0}if((m|0)>(n|0)){break}g=c[f>>2]|0}if((n|0)>(b|0)){Do(a,b,n)}if((m|0)<(d|0)){b=m}else{break}}i=e;return}function Eo(a,b,d){a=a|0;b=b|0;d=d|0;d=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;i=d;return}function Fo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;a=i;if((e|0)>0){b=0}else{i=a;return}do{g=d+(b<<4)|0;b=b+1|0;f=(b|0)==(e|0);c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0}while(!f);i=a;return}function Go(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;kc[c[(c[b>>2]|0)+68>>2]&63](a,b,d);f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];d=f*f+h*h+j*j<1.4210854715202004e-14;j=d?-1.0:j;h=d?-1.0:h;l=d?-1.0:f;f=1.0/+R(+(j*j+(l*l+h*h)));k=+Vb[c[(c[b>>2]|0)+48>>2]&3](b);g[a>>2]=f*l*k+ +g[a>>2];d=a+4|0;g[d>>2]=k*f*h+ +g[d>>2];d=a+8|0;g[d>>2]=k*f*j+ +g[d>>2];i=e;return}function Ho(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0.0;f=i;k=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);j=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);h=+Vb[c[(c[a>>2]|0)+48>>2]&3](a);a=b+48|0;l=b+52|0;n=+g[l>>2]-j;b=b+56|0;m=+g[b>>2]-h;g[d>>2]=+g[a>>2]-k;g[d+4>>2]=n;g[d+8>>2]=m;g[d+12>>2]=0.0;j=j+ +g[l>>2];h=h+ +g[b>>2];g[e>>2]=k+ +g[a>>2];g[e+4>>2]=j;g[e+8>>2]=h;g[e+12>>2]=0.0;i=f;return}function Io(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;b=b*.4000000059604645*+Vb[c[(c[a>>2]|0)+48>>2]&3](a);b=b*+Vb[c[(c[a>>2]|0)+48>>2]&3](a);g[d>>2]=b;g[d+4>>2]=b;g[d+8>>2]=b;g[d+12>>2]=0.0;i=e;return}function Jo(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=11768;if((a[b+8|0]|0)!=0?(e=c[b+12>>2]|0,(e|0)!=0):0){f=c[b+4>>2]|0;Hb[c[(c[f>>2]|0)+16>>2]&127](f,e)}wr(b);i=d;return}function Ko(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=11768;if((a[b+8|0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Hb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function Lo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0.0,w=0.0;e=i;i=i+32|0;j=e+16|0;h=e;o=c[a+12>>2]|0;if((o|0)==0){i=e;return}a=f+4|0;c[a>>2]=o;t=c[b+4>>2]|0;s=c[d+4>>2]|0;u=c[b+12>>2]|0;b=c[d+12>>2]|0;m=b+48|0;q=+g[u+48>>2]- +g[m>>2];d=b+52|0;p=+g[u+52>>2]- +g[d>>2];b=b+56|0;r=+g[u+56>>2]- +g[b>>2];n=+R(+(q*q+p*p+r*r));l=+g[s+28>>2]*+g[s+12>>2];k=+g[t+28>>2]*+g[t+12>>2]+l;if(n>k){if((c[o+748>>2]|0)==0){i=e;return}j=c[o+740>>2]|0;h=c[(c[f+8>>2]|0)+8>>2]|0;if((j|0)==(h|0)){Un(o,j+4|0,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0);i=e;return}else{Un(o,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0,h+4|0);i=e;return}}g[j>>2]=1.0;t=j+4|0;g[t>>2]=0.0;s=j+8|0;g[s>>2]=0.0;o=j+12|0;g[o>>2]=0.0;if(n>1.1920928955078125e-7){w=1.0/n;v=q*w;p=p*w;q=r*w;g[j>>2]=v;g[t>>2]=p;g[s>>2]=q;g[o>>2]=0.0;r=v}else{r=1.0;p=0.0;q=0.0}v=l*p+ +g[d>>2];w=l*q+ +g[b>>2];g[h>>2]=l*r+ +g[m>>2];g[h+4>>2]=v;g[h+8>>2]=w;g[h+12>>2]=0.0;jc[c[(c[f>>2]|0)+16>>2]&15](f,j,h,n-k);h=c[a>>2]|0;if((c[h+748>>2]|0)==0){i=e;return}j=c[h+740>>2]|0;a=c[(c[f+8>>2]|0)+8>>2]|0;if((j|0)==(a|0)){Un(h,j+4|0,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0);i=e;return}else{Un(h,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0,a+4|0);i=e;return}}function Mo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function No(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+12|0;if((c[e>>2]|0)==0){i=f;return}if((a[b+8|0]|0)==0){i=f;return}b=d+4|0;l=c[b>>2]|0;h=d+8|0;if((l|0)==(c[h>>2]|0)?(g=(l|0)==0?1:l<<1,(l|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}l=c[b>>2]|0}k=d+12|0;if((l|0)>0){n=0;do{m=j+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}n=c[k>>2]|0;m=d+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);l=c[b>>2]|0}c[k>>2]=0}a[m]=1;c[k>>2]=j;c[h>>2]=g}d=(c[d+12>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=c[e>>2]}c[b>>2]=l+1;i=f;return}function Oo(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=11856;if((a[b+8|0]|0)!=0?(e=c[b+12>>2]|0,(e|0)!=0):0){f=c[b+4>>2]|0;Hb[c[(c[f>>2]|0)+16>>2]&127](f,e)}wr(b);i=d;return}function Po(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=11856;if((a[b+8|0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Hb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function Qo(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0;j=i;i=i+160|0;m=j+136|0;n=j;l=b+12|0;k=c[l>>2]|0;if((k|0)==0){i=j;return}o=(a[b+16|0]|0)!=0;p=o?e:d;q=o?d:e;s=c[p+4>>2]|0;e=c[q+4>>2]|0;d=h+4|0;c[d>>2]=k;r=+g[(c[l>>2]|0)+752>>2];c[m>>2]=12096;c[m+4>>2]=s;c[m+8>>2]=e;g[m+12>>2]=r;g[n+128>>2]=999999984306749400.0;p=c[p+12>>2]|0;c[n+0>>2]=c[p+0>>2];c[n+4>>2]=c[p+4>>2];c[n+8>>2]=c[p+8>>2];c[n+12>>2]=c[p+12>>2];e=n+16|0;l=p+16|0;c[e+0>>2]=c[l+0>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];e=n+32|0;l=p+32|0;c[e+0>>2]=c[l+0>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];e=n+48|0;p=p+48|0;c[e+0>>2]=c[p+0>>2];c[e+4>>2]=c[p+4>>2];c[e+8>>2]=c[p+8>>2];c[e+12>>2]=c[p+12>>2];e=n+64|0;p=c[q+12>>2]|0;c[e+0>>2]=c[p+0>>2];c[e+4>>2]=c[p+4>>2];c[e+8>>2]=c[p+8>>2];c[e+12>>2]=c[p+12>>2];e=n+80|0;l=p+16|0;c[e+0>>2]=c[l+0>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];e=n+96|0;l=p+32|0;c[e+0>>2]=c[l+0>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];e=n+112|0;p=p+48|0;c[e+0>>2]=c[p+0>>2];c[e+4>>2]=c[p+4>>2];c[e+8>>2]=c[p+8>>2];c[e+12>>2]=c[p+12>>2];_o(m,n,h,c[f+20>>2]|0,o);if((a[b+8|0]|0)==0){i=j;return}k=c[d>>2]|0;if((c[k+748>>2]|0)==0){i=j;return}l=c[k+740>>2]|0;m=c[(c[h+8>>2]|0)+8>>2]|0;if((l|0)==(m|0)){Un(k,l+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Un(k,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,m+4|0);i=j;return}}function Ro(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function So(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+12|0;if((c[e>>2]|0)==0){i=f;return}if((a[b+8|0]|0)==0){i=f;return}b=d+4|0;l=c[b>>2]|0;h=d+8|0;if((l|0)==(c[h>>2]|0)?(g=(l|0)==0?1:l<<1,(l|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}l=c[b>>2]|0}k=d+12|0;if((l|0)>0){n=0;do{m=j+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}n=c[k>>2]|0;m=d+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);l=c[b>>2]|0}c[k>>2]=0}a[m]=1;c[k>>2]=j;c[h>>2]=g}d=(c[d+12>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=c[e>>2]}c[b>>2]=l+1;i=f;return}function To(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0,O=0.0,P=0.0,Q=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0,Da=0,Ea=0,Fa=0.0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0;k=i;i=i+128|0;Ma=k+112|0;Na=k+96|0;aa=k+80|0;$=k+64|0;v=k+48|0;w=k+32|0;p=k+16|0;u=k;l=b+4|0;t=c[l>>2]|0;a[t+312|0]=0;c[t>>2]=0;a[t+356|0]=1;g[t+292>>2]=999999984306749400.0;g[t+296>>2]=999999984306749400.0;g[t+300>>2]=999999984306749400.0;g[t+304>>2]=0.0;s=t+336|0;t=t+332|0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;a[s+16|0]=0;a[t]=a[t]&-16;t=e+48|0;s=d+48|0;fa=+g[s>>2];r=e+52|0;q=d+52|0;na=+g[q>>2];z=e+56|0;x=d+56|0;ha=+g[x>>2];A=h+48|0;y=f+48|0;ua=+g[y>>2];e=h+52|0;B=f+52|0;ma=+g[B>>2];h=h+56|0;N=f+56|0;ea=+g[N>>2];V=+g[d>>2];La=d+4|0;S=+g[La>>2];Ka=d+8|0;G=+g[Ka>>2];Ja=d+16|0;O=+g[Ja>>2];Ia=d+20|0;E=+g[Ia>>2];X=d+24|0;H=+g[X>>2];Y=d+32|0;D=+g[Y>>2];Z=d+36|0;F=+g[Z>>2];_=d+40|0;I=+g[_>>2];K=+g[f>>2];ba=f+4|0;W=+g[ba>>2];ca=f+8|0;C=+g[ca>>2];da=f+16|0;L=+g[da>>2];Ca=f+20|0;P=+g[Ca>>2];Da=f+24|0;T=+g[Da>>2];Ea=f+32|0;M=+g[Ea>>2];Ga=f+36|0;Q=+g[Ga>>2];Ha=f+40|0;U=+g[Ha>>2];o=+g[t>>2]-fa-(+g[A>>2]-ua);m=+g[r>>2]-na-(+g[e>>2]-ma);n=+g[z>>2]-ha-(+g[h>>2]-ea);J=b+8|0;Oa=c[J>>2]|0;Pa=c[(c[Oa>>2]|0)+64>>2]|0;xa=-o;Fa=-m;Ba=-n;g[Na>>2]=V*xa+O*Fa+D*Ba;g[Na+4>>2]=S*xa+E*Fa+F*Ba;g[Na+8>>2]=G*xa+H*Fa+I*Ba;g[Na+12>>2]=0.0;kc[Pa&63](Ma,Oa,Na);Ba=+g[Ma>>2];Fa=+g[Ma+4>>2];xa=+g[Ma+8>>2];ya=Ba*+g[d>>2]+Fa*+g[La>>2]+xa*+g[Ka>>2]+ +g[s>>2];za=Ba*+g[Ja>>2]+Fa*+g[Ia>>2]+xa*+g[X>>2]+ +g[q>>2];xa=Ba*+g[Y>>2]+Fa*+g[Z>>2]+xa*+g[_>>2]+ +g[x>>2];b=b+12|0;_=c[b>>2]|0;Z=c[(c[_>>2]|0)+64>>2]|0;Fa=o*+g[ba>>2]+m*+g[Ca>>2]+n*+g[Ga>>2];Ba=o*+g[ca>>2]+m*+g[Da>>2]+n*+g[Ha>>2];g[$>>2]=o*+g[f>>2]+m*+g[da>>2]+n*+g[Ea>>2];g[$+4>>2]=Fa;g[$+8>>2]=Ba;g[$+12>>2]=0.0;kc[Z&63](aa,_,$);Ba=+g[aa>>2];Fa=+g[aa+4>>2];Aa=+g[aa+8>>2];ya=ya-(Ba*+g[f>>2]+Fa*+g[ba>>2]+Aa*+g[ca>>2]+ +g[y>>2]);za=za-(Ba*+g[da>>2]+Fa*+g[Ca>>2]+Aa*+g[Da>>2]+ +g[B>>2]);Aa=xa-(Ba*+g[Ea>>2]+Fa*+g[Ga>>2]+Aa*+g[Ha>>2]+ +g[N>>2]);a:do{if(ya*ya+za*za+Aa*Aa>9999999747378752.0e-20){ba=w+4|0;aa=w+8|0;$=w+12|0;_=v+4|0;ca=v+8|0;Y=u+4|0;X=u+8|0;f=u+12|0;Z=p+4|0;d=p+8|0;wa=0.0;xa=0.0;va=0.0;ia=0.0;ga=0.0;Ca=32;Ba=0.0;while(1){da=Ca+ -1|0;if((Ca|0)==0){break a}Pa=c[J>>2]|0;Oa=c[(c[Pa>>2]|0)+64>>2]|0;pa=-ya;ta=-za;ka=-Aa;g[w>>2]=V*pa+O*ta+D*ka;g[ba>>2]=S*pa+E*ta+F*ka;g[aa>>2]=G*pa+H*ta+I*ka;g[$>>2]=0.0;kc[Oa&63](v,Pa,w);ka=+g[v>>2];ta=+g[_>>2];pa=+g[ca>>2];la=fa+(V*ka+S*ta+G*pa);oa=na+(O*ka+E*ta+H*pa);pa=ha+(D*ka+F*ta+I*pa);Pa=c[b>>2]|0;Oa=c[(c[Pa>>2]|0)+64>>2]|0;g[u>>2]=K*ya+L*za+M*Aa;g[Y>>2]=W*ya+P*za+Q*Aa;g[X>>2]=C*ya+T*za+U*Aa;g[f>>2]=0.0;kc[Oa&63](p,Pa,u);ta=+g[p>>2];ka=+g[Z>>2];sa=+g[d>>2];qa=ua+(K*ta+W*ka+C*sa);ra=ma+(L*ta+P*ka+T*sa);sa=ea+(M*ta+Q*ka+U*sa);ka=la-qa;ta=oa-ra;ja=pa-sa;Fa=ya*ka+za*ta+Aa*ja;if(ga>1.0){j=0;p=24;break}if(Fa>0.0){ea=o*ya+m*za+n*Aa;if(ea>=-1.4210854715202004e-14){j=0;p=24;break}ga=ga-Fa/ea;ua=1.0-ga;ha=ua*+g[x>>2]+ga*+g[z>>2];na=ua*+g[q>>2]+ga*+g[r>>2];fa=+g[s>>2]*ua+ga*+g[t>>2];ea=ua*+g[N>>2]+ga*+g[h>>2];ma=ua*+g[B>>2]+ga*+g[e>>2];ua=ua*+g[y>>2]+ga*+g[A>>2];ia=Ba;va=Aa;xa=za;wa=ya}Da=c[l>>2]|0;Ca=c[Da>>2]|0;if((Ca|0)>0){ya=+g[Da+308>>2];Ea=0;Ga=0;do{Aa=ka- +g[Da+(Ga<<4)+4>>2];Ba=ta- +g[Da+(Ga<<4)+8>>2];Fa=ja- +g[Da+(Ga<<4)+12>>2];Ea=Ea|Aa*Aa+Ba*Ba+Fa*Fa<=ya;Ga=Ga+1|0}while((Ga|0)!=(Ca|0))}else{Ea=0}Ha=Da+304|0;if((+g[Ha>>2]==0.0?ja==+g[Da+300>>2]:0)?ta==+g[Da+296>>2]:0){Ga=ka==+g[Da+292>>2]}else{Ga=0}if(!(Ga|Ea)){g[Da+292>>2]=ka;g[Da+296>>2]=ta;g[Da+300>>2]=ja;g[Ha>>2]=0.0;a[Da+356|0]=1;g[Da+(Ca<<4)+4>>2]=ka;g[Da+(Ca<<4)+8>>2]=ta;g[Da+(Ca<<4)+12>>2]=ja;g[Da+(Ca<<4)+16>>2]=0.0;Pa=c[Da>>2]|0;g[Da+(Pa<<4)+84>>2]=la;g[Da+(Pa<<4)+88>>2]=oa;g[Da+(Pa<<4)+92>>2]=pa;g[Da+(Pa<<4)+96>>2]=0.0;Pa=c[Da>>2]|0;g[Da+(Pa<<4)+164>>2]=qa;g[Da+(Pa<<4)+168>>2]=ra;g[Da+(Pa<<4)+172>>2]=sa;g[Da+(Pa<<4)+176>>2]=0.0;c[Da>>2]=(c[Da>>2]|0)+1;Da=c[l>>2]|0}Pa=Yo(Da)|0;ya=+g[Da+276>>2];za=+g[Da+280>>2];Aa=+g[Da+284>>2];if(!Pa){break a}if(ya*ya+za*za+Aa*Aa>9999999747378752.0e-20){Ca=da;Ba=+g[Da+288>>2]}else{break a}}if((p|0)==24){i=k;return j|0}}else{ia=0.0;va=0.0;xa=0.0;wa=0.0;ga=0.0}}while(0);g[j+164>>2]=ga;C=va*va+(xa*xa+wa*wa);if(!(C>=1.4210854715202004e-14)){Pa=j+132|0;c[Pa+0>>2]=0;c[Pa+4>>2]=0;c[Pa+8>>2]=0;c[Pa+12>>2]=0;E=0.0;D=0.0;C=0.0}else{C=1.0/+R(+C);E=wa*C;D=xa*C;C=va*C;g[j+132>>2]=E;g[j+136>>2]=D;g[j+140>>2]=C;g[j+144>>2]=ia}if(o*E+m*D+n*C>=-+g[j+172>>2]){Pa=0;i=k;return Pa|0}Pa=c[l>>2]|0;Yo(Pa)|0;Gr(j+148|0,Pa+260|0,16)|0;Pa=1;i=k;return Pa|0}function Uo(a){a=a|0;return}function Vo(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Wo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=a+12|0;while(1){h=c[f>>2]|0;g=c[h+(((b+d|0)/2|0)<<3)>>2]|0;j=b;l=d;while(1){while(1){k=j+1|0;if((c[h+(j<<3)>>2]|0)<(g|0)){j=k}else{break}}while(1){n=h+(l<<3)|0;m=l+ -1|0;if((g|0)<(c[n>>2]|0)){l=m}else{break}}if((j|0)<=(l|0)){j=h+(j<<3)|0;h=j;o=c[h>>2]|0;h=c[h+4>>2]|0;p=n;n=c[p+4>>2]|0;c[j>>2]=c[p>>2];c[j+4>>2]=n;j=(c[f>>2]|0)+(l<<3)|0;c[j>>2]=o;c[j+4>>2]=h;j=k;l=m}if((j|0)>(l|0)){break}h=c[f>>2]|0}if((l|0)>(b|0)){Wo(a,b,l)}if((j|0)<(d|0)){b=j}else{break}}i=e;return}function Xo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;h=c[b>>2]|0;if((h|0)>3){g=a[d]|0;if((g&8)==0){h=h+ -1|0;c[b>>2]=h;f=b+52|0;g=b+(h<<4)+4|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];f=b+132|0;g=b+(h<<4)+84|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];f=b+212|0;g=b+(h<<4)+164|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];f=4}else{f=6}}else{f=4}if((f|0)==4){if((h|0)>2){g=a[d]|0;f=6}else{g=h}}if((f|0)==6){if((g&4)==0){g=h+ -1|0;c[b>>2]=g;h=b+36|0;j=b+(g<<4)+4|0;c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];h=b+116|0;j=b+(g<<4)+84|0;c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];h=b+196|0;j=b+(g<<4)+164|0;c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2]}else{g=h}}if((g|0)>1){h=a[d]|0;if((h&2)==0){g=g+ -1|0;c[b>>2]=g;f=b+20|0;j=b+(g<<4)+4|0;c[f+0>>2]=c[j+0>>2];c[f+4>>2]=c[j+4>>2];c[f+8>>2]=c[j+8>>2];c[f+12>>2]=c[j+12>>2];f=b+100|0;j=b+(g<<4)+84|0;c[f+0>>2]=c[j+0>>2];c[f+4>>2]=c[j+4>>2];c[f+8>>2]=c[j+8>>2];c[f+12>>2]=c[j+12>>2];f=b+180|0;j=b+(g<<4)+164|0;c[f+0>>2]=c[j+0>>2];c[f+4>>2]=c[j+4>>2];c[f+8>>2]=c[j+8>>2];c[f+12>>2]=c[j+12>>2];f=11}else{d=h}}else{f=11}do{if((f|0)==11){if((g|0)>0){d=a[d]|0;break}else{i=e;return}}}while(0);if(!((d&1)==0)){i=e;return}h=g+ -1|0;c[b>>2]=h;j=b+4|0;g=b+(h<<4)+4|0;c[j+0>>2]=c[g+0>>2];c[j+4>>2]=c[g+4>>2];c[j+8>>2]=c[g+8>>2];c[j+12>>2]=c[g+12>>2];j=b+84|0;g=b+(h<<4)+84|0;c[j+0>>2]=c[g+0>>2];c[j+4>>2]=c[g+4>>2];c[j+8>>2]=c[g+8>>2];c[j+12>>2]=c[g+12>>2];j=b+164|0;h=b+(h<<4)+164|0;c[j+0>>2]=c[h+0>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];c[j+12>>2]=c[h+12>>2];i=e;return}function Yo(b){b=b|0;var d=0,e=0,f=0,h=0.0,j=0.0,k=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0,B=0,C=0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0,fa=0,ga=0,ha=0;d=i;i=i+80|0;n=d+32|0;A=d+16|0;l=d;B=b+356|0;if((a[B]|0)==0){ha=a[b+312|0]|0;ha=ha<<24>>24!=0;i=d;return ha|0}k=b+316|0;e=b+336|0;f=b+332|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;a[e+16|0]=0;L=a[f]|0;x=L&-16;a[f]=x;a[B]=0;switch(c[b>>2]|0){case 0:{a[b+312|0]=0;ha=0;ha=ha<<24>>24!=0;i=d;return ha|0};case 2:{ca=+g[b+4>>2];da=+g[b+8>>2];h=+g[b+12>>2];j=+g[b+20>>2]-ca;m=+g[b+24>>2]-da;o=+g[b+28>>2]-h;h=(0.0-ca)*j+(0.0-da)*m+(0.0-h)*o;do{if(h>0.0){j=j*j+m*m+o*o;if(h<j){a[f]=x|3;h=h/j;break}else{a[f]=x|2;h=1.0;break}}else{a[f]=x|1;h=0.0}}while(0);g[e>>2]=1.0-h;l=b+340|0;g[l>>2]=h;f=b+344|0;g[f>>2]=0.0;k=b+348|0;g[k>>2]=0.0;_=+g[b+84>>2];aa=+g[b+88>>2];ca=+g[b+92>>2];_=_+h*(+g[b+100>>2]-_);aa=aa+h*(+g[b+104>>2]-aa);ca=ca+h*(+g[b+108>>2]-ca);g[b+244>>2]=_;g[b+248>>2]=aa;g[b+252>>2]=ca;g[b+256>>2]=0.0;$=+g[b+164>>2];ba=+g[b+168>>2];da=+g[b+172>>2];$=$+h*(+g[b+180>>2]-$);ba=ba+h*(+g[b+184>>2]-ba);da=da+h*(+g[b+188>>2]-da);g[b+260>>2]=$;g[b+264>>2]=ba;g[b+268>>2]=da;g[b+272>>2]=0.0;g[b+276>>2]=_-$;g[b+280>>2]=aa-ba;g[b+284>>2]=ca-da;g[b+288>>2]=0.0;Xo(b,b+332|0);if((+g[e>>2]>=0.0?+g[l>>2]>=0.0:0)?+g[f>>2]>=0.0:0){e=+g[k>>2]>=0.0|0}else{e=0}a[b+312|0]=e;ha=e;ha=ha<<24>>24!=0;i=d;return ha|0};case 3:{c[A+0>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[A+12>>2]=0;Zo(A,b+4|0,b+20|0,b+36|0,k);Y=+g[e>>2];f=b+340|0;Z=+g[f>>2];k=b+344|0;da=+g[k>>2];_=+g[b+84>>2]*Y+ +g[b+100>>2]*Z+ +g[b+116>>2]*da;aa=Y*+g[b+88>>2]+Z*+g[b+104>>2]+da*+g[b+120>>2];ca=Y*+g[b+92>>2]+Z*+g[b+108>>2]+da*+g[b+124>>2];g[b+244>>2]=_;g[b+248>>2]=aa;g[b+252>>2]=ca;g[b+256>>2]=0.0;$=+g[b+164>>2]*Y+ +g[b+180>>2]*Z+ +g[b+196>>2]*da;ba=Y*+g[b+168>>2]+Z*+g[b+184>>2]+da*+g[b+200>>2];da=Y*+g[b+172>>2]+Z*+g[b+188>>2]+da*+g[b+204>>2];g[b+260>>2]=$;g[b+264>>2]=ba;g[b+268>>2]=da;g[b+272>>2]=0.0;g[b+276>>2]=_-$;g[b+280>>2]=aa-ba;g[b+284>>2]=ca-da;g[b+288>>2]=0.0;Xo(b,b+332|0);if((+g[e>>2]>=0.0?+g[f>>2]>=0.0:0)?+g[k>>2]>=0.0:0){e=+g[b+348>>2]>=0.0|0}else{e=0}a[b+312|0]=e;ha=e;ha=ha<<24>>24!=0;i=d;return ha|0};case 1:{ga=b+244|0;ha=b+84|0;c[ga+0>>2]=c[ha+0>>2];c[ga+4>>2]=c[ha+4>>2];c[ga+8>>2]=c[ha+8>>2];c[ga+12>>2]=c[ha+12>>2];ha=b+260|0;fa=b+164|0;c[ha+0>>2]=c[fa+0>>2];c[ha+4>>2]=c[fa+4>>2];c[ha+8>>2]=c[fa+8>>2];c[ha+12>>2]=c[fa+12>>2];ca=+g[b+248>>2]- +g[b+264>>2];da=+g[b+252>>2]- +g[b+268>>2];g[b+276>>2]=+g[ga>>2]- +g[ha>>2];g[b+280>>2]=ca;g[b+284>>2]=da;g[b+288>>2]=0.0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;a[e+16|0]=0;a[f]=x;g[e>>2]=1.0;g[b+340>>2]=0.0;g[b+344>>2]=0.0;g[b+348>>2]=0.0;a[b+312|0]=1;ha=1;ha=ha<<24>>24!=0;i=d;return ha|0};case 4:{E=b+4|0;A=b+20|0;C=b+36|0;B=b+52|0;c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;x=n+16|0;a[x]=0;c[k+0>>2]=c[l+0>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];a[f]=L|15;G=+g[A>>2];K=+g[E>>2];Y=G-K;F=+g[b+24>>2];I=+g[b+8>>2];Z=F-I;H=+g[b+28>>2];J=+g[b+12>>2];$=H-J;P=+g[C>>2];V=P-K;Q=+g[b+40>>2];S=Q-I;R=+g[b+44>>2];U=R-J;ba=Z*U-$*S;da=$*V-Y*U;aa=Y*S-Z*V;M=+g[B>>2];W=M-K;N=+g[b+56>>2];X=N-I;O=+g[b+60>>2];_=O-J;ca=W*ba+X*da+aa*_;if(ca*ca<9.99999905104687e-9){L=-1}else{L=ca*(da*(0.0-I)+ba*(0.0-K)+aa*(0.0-J))<0.0|0}ba=S*_-U*X;aa=U*W-V*_;da=V*X-S*W;ca=Y*ba+Z*aa+da*$;if(ca*ca<9.99999905104687e-9){T=-1}else{T=ca*(aa*(0.0-I)+ba*(0.0-K)+da*(0.0-J))<0.0|0}aa=X*$-_*Z;_=_*Y-W*$;W=W*Z-X*Y;S=V*aa+S*_+W*U;if(S*S<9.99999905104687e-9){ea=-1}else{ea=S*(_*(0.0-I)+aa*(0.0-K)+W*(0.0-J))<0.0|0}ba=M-G;da=N-F;aa=O-H;N=P-G;ca=Q-F;M=R-H;O=da*M-aa*ca;M=aa*N-ba*M;N=ba*ca-da*N;I=(K-G)*O+(I-F)*M+N*(J-H);if(I*I<9.99999905104687e-9){ha=-1}else{ha=I*(M*(0.0-F)+O*(0.0-G)+N*(0.0-H))<0.0|0}if((T|L|ea|ha|0)<0){a[b+352|0]=1;a[b+312|0]=0;ha=0;ha=ha<<24>>24!=0;i=d;return ha|0}fa=(L|0)!=0;ga=(T|0)==0;L=(ea|0)==0;T=(ha|0)==0;if(ga&(fa^1)&L&T){a[b+312|0]=1;ha=b+276|0;c[ha+0>>2]=0;c[ha+4>>2]=0;c[ha+8>>2]=0;c[ha+12>>2]=0;ha=1;ha=ha<<24>>24!=0;i=d;return ha|0}if(fa?(Zo(l,E,A,C,n),D=+g[n>>2],y=+g[n+4>>2],z=+g[n+8>>2],ca=D- +g[l>>2],da=y- +g[l+4>>2],w=z- +g[l+8>>2],w=ca*ca+da*da+w*w,w<3.4028234663852886e+38):0){ca=+g[n+12>>2];g[k>>2]=D;g[b+320>>2]=y;g[b+324>>2]=z;g[b+328>>2]=ca;ha=a[x]|0;a[f]=ha&1|a[f]&-16|ha&2|ha&4;ca=+g[n+24>>2];da=+g[n+28>>2];g[e>>2]=+g[n+20>>2];g[b+340>>2]=ca;g[b+344>>2]=da;g[b+348>>2]=0.0}else{w=3.4028234663852886e+38}if(!ga?(Zo(l,E,C,B,n),s=+g[n>>2],t=+g[n+4>>2],u=+g[n+8>>2],ca=s- +g[l>>2],da=t- +g[l+4>>2],v=u- +g[l+8>>2],v=ca*ca+da*da+v*v,v<w):0){ca=+g[n+12>>2];g[k>>2]=s;g[b+320>>2]=t;g[b+324>>2]=u;g[b+328>>2]=ca;ga=a[x]|0;ha=ga<<1&255;a[f]=ha&4|(ga&1|a[f]&-16)|ha&8;ca=+g[n+24>>2];da=+g[n+28>>2];g[e>>2]=+g[n+20>>2];g[b+340>>2]=0.0;g[b+344>>2]=ca;g[b+348>>2]=da}else{v=w}if(!L?(Zo(l,E,B,A,n),q=+g[n>>2],p=+g[n+4>>2],o=+g[n+8>>2],ca=q- +g[l>>2],da=p- +g[l+4>>2],r=o- +g[l+8>>2],r=ca*ca+da*da+r*r,r<v):0){ca=+g[n+12>>2];g[k>>2]=q;g[b+320>>2]=p;g[b+324>>2]=o;g[b+328>>2]=ca;ha=a[x]|0;a[f]=(ha&255)>>>1&2|(ha&1|a[f]&-16)|ha<<2&8;ca=+g[n+28>>2];da=+g[n+24>>2];g[e>>2]=+g[n+20>>2];g[b+340>>2]=ca;g[b+344>>2]=0.0;g[b+348>>2]=da}else{r=v}if(!T?(Zo(l,A,B,C,n),m=+g[n>>2],h=+g[n+4>>2],j=+g[n+8>>2],ba=m- +g[l>>2],ca=h- +g[l+4>>2],da=j- +g[l+8>>2],ba*ba+ca*ca+da*da<r):0){ba=+g[n+12>>2];g[k>>2]=m;g[b+320>>2]=h;g[b+324>>2]=j;g[b+328>>2]=ba;ha=a[x]|0;a[f]=ha<<1&2|a[f]&-16|ha&4|ha<<2&8;ba=+g[n+20>>2];ca=+g[n+28>>2];da=+g[n+24>>2];g[e>>2]=0.0;g[b+340>>2]=ba;g[b+344>>2]=ca;g[b+348>>2]=da}X=+g[e>>2];k=b+340|0;Y=+g[k>>2];f=b+344|0;Z=+g[f>>2];l=b+348|0;da=+g[l>>2];_=+g[b+84>>2]*X+ +g[b+100>>2]*Y+ +g[b+116>>2]*Z+ +g[b+132>>2]*da;aa=X*+g[b+88>>2]+Y*+g[b+104>>2]+Z*+g[b+120>>2]+da*+g[b+136>>2];ca=X*+g[b+92>>2]+Y*+g[b+108>>2]+Z*+g[b+124>>2]+da*+g[b+140>>2];g[b+244>>2]=_;g[b+248>>2]=aa;g[b+252>>2]=ca;g[b+256>>2]=0.0;$=+g[b+164>>2]*X+ +g[b+180>>2]*Y+ +g[b+196>>2]*Z+ +g[b+212>>2]*da;ba=X*+g[b+168>>2]+Y*+g[b+184>>2]+Z*+g[b+200>>2]+da*+g[b+216>>2];da=X*+g[b+172>>2]+Y*+g[b+188>>2]+Z*+g[b+204>>2]+da*+g[b+220>>2];g[b+260>>2]=$;g[b+264>>2]=ba;g[b+268>>2]=da;g[b+272>>2]=0.0;g[b+276>>2]=_-$;g[b+280>>2]=aa-ba;g[b+284>>2]=ca-da;g[b+288>>2]=0.0;Xo(b,b+332|0);if((+g[e>>2]>=0.0?+g[k>>2]>=0.0:0)?+g[f>>2]>=0.0:0){e=+g[l>>2]>=0.0|0}else{e=0}a[b+312|0]=e;ha=e;ha=ha<<24>>24!=0;i=d;return ha|0};default:{a[b+312|0]=0;ha=0;ha=ha<<24>>24!=0;i=d;return ha|0}}return 0}function Zo(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0;A=i;k=h+16|0;l=a[k]&-16;a[k]=l;x=+g[e>>2];n=+g[d>>2];o=x-n;z=+g[e+4>>2];p=+g[d+4>>2];q=z-p;B=+g[e+8>>2];r=+g[d+8>>2];s=B-r;y=+g[f>>2];u=y-n;j=+g[f+4>>2];v=j-p;C=+g[f+8>>2];w=C-r;J=+g[b>>2];F=J-n;I=+g[b+4>>2];G=I-p;K=+g[b+8>>2];E=K-r;H=o*F+q*G+s*E;E=u*F+v*G+w*E;if(!(!(H<=0.0)|!(E<=0.0))){c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];a[k]=l|1;g[h+20>>2]=1.0;g[h+24>>2]=0.0;g[h+28>>2]=0.0;g[h+32>>2]=0.0;i=A;return}L=J-x;G=I-z;D=K-B;F=o*L+q*G+s*D;D=u*L+v*G+w*D;if(!(!(F>=0.0)|!(D<=F))){c[h+0>>2]=c[e+0>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];c[h+12>>2]=c[e+12>>2];a[k]=l|2;g[h+20>>2]=0.0;g[h+24>>2]=1.0;g[h+28>>2]=0.0;g[h+32>>2]=0.0;i=A;return}G=H*D-F*E;if(!(!(G<=0.0)|!(H>=0.0)|!(F<=0.0))){L=H/(H-F);g[h>>2]=n+o*L;g[h+4>>2]=p+q*L;g[h+8>>2]=r+s*L;g[h+12>>2]=0.0;a[k]=l|3;g[h+20>>2]=1.0-L;g[h+24>>2]=L;g[h+28>>2]=0.0;g[h+32>>2]=0.0;i=A;return}M=J-y;L=I-j;I=K-C;J=o*M+q*L+s*I;I=u*M+v*L+w*I;if(!(!(I>=0.0)|!(J<=I))){c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];a[k]=l|4;g[h+20>>2]=0.0;g[h+24>>2]=0.0;g[h+28>>2]=1.0;g[h+32>>2]=0.0;i=A;return}H=J*E-H*I;if(!(!(H<=0.0)|!(E>=0.0)|!(I<=0.0))){M=E/(E-I);g[h>>2]=n+u*M;g[h+4>>2]=p+v*M;g[h+8>>2]=r+w*M;g[h+12>>2]=0.0;a[k]=l|5;g[h+20>>2]=1.0-M;g[h+24>>2]=0.0;g[h+28>>2]=M;g[h+32>>2]=0.0;i=A;return}E=F*I-J*D;if((E<=0.0?(m=D-F,m>=0.0):0)?(t=J-I,t>=0.0):0){M=m/(m+t);g[h>>2]=x+(y-x)*M;g[h+4>>2]=z+(j-z)*M;g[h+8>>2]=B+(C-B)*M;g[h+12>>2]=0.0;a[k]=l|6;g[h+20>>2]=0.0;g[h+24>>2]=1.0-M;g[h+28>>2]=M;g[h+32>>2]=0.0;i=A;return}M=1.0/(G+(E+H));L=H*M;M=G*M;g[h>>2]=u*M+(n+o*L);g[h+4>>2]=v*M+(p+q*L);g[h+8>>2]=w*M+(s*L+r);g[h+12>>2]=0.0;a[k]=l|7;g[h+20>>2]=1.0-L-M;g[h+24>>2]=L;g[h+28>>2]=M;g[h+32>>2]=0.0;i=A;return}function _o(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0.0,N=0,O=0.0,P=0.0,Q=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0;e=i;i=i+96|0;F=e+80|0;E=e+64|0;o=e+48|0;k=e+32|0;j=e+16|0;h=e;l=b+112|0;H=+g[b+48>>2]- +g[l>>2];n=b+116|0;y=+g[b+52>>2]- +g[n>>2];m=b+120|0;A=+g[b+56>>2]- +g[m>>2];p=b+64|0;s=b+80|0;v=b+96|0;q=b+68|0;t=b+84|0;w=b+100|0;r=b+72|0;u=b+88|0;b=b+104|0;D=H*+g[p>>2]+y*+g[s>>2]+A*+g[v>>2];B=H*+g[q>>2]+y*+g[t>>2]+A*+g[w>>2];A=H*+g[r>>2]+y*+g[u>>2]+A*+g[b>>2];G=a+8|0;I=c[G>>2]|0;N=c[a+4>>2]|0;y=+g[N+28>>2]*+g[N+12>>2];H=y+ +g[a+12>>2];T=+g[I+72>>2];Y=+g[I+56>>2];ba=T-Y;S=+g[I+76>>2];V=+g[I+60>>2];aa=S-V;U=+g[I+80>>2];W=+g[I+64>>2];_=U-W;M=+g[I+88>>2];x=M-Y;O=+g[I+92>>2];$=O-V;Q=+g[I+96>>2];z=Q-W;C=aa*z-_*$;z=_*x-ba*z;x=ba*$-aa*x;$=1.0/+R(+(x*x+(C*C+z*z)));C=$*C;z=$*z;x=$*x;$=D-Y;Z=B-V;X=A-W;P=$*C+z*Z+x*X;if(P<0.0){P=P*-1.0;x=x*-1.0;z=z*-1.0;C=C*-1.0}if(!(P<H)){i=e;return}da=M-T;fa=O-S;ea=Q-U;Y=Y-M;ca=V-O;W=W-Q;V=X*(ba*z-aa*C)+($*(aa*x-_*z)+Z*(_*C-ba*x));S=(A-U)*(da*z-fa*C)+((D-T)*(fa*x-ea*z)+(B-S)*(ea*C-da*x));M=(A-Q)*(Y*z-ca*C)+((D-M)*(ca*x-W*z)+(B-O)*(W*C-Y*x));if(!(V>0.0&S>0.0&M>0.0)?!(V<=0.0)|!(S<=0.0)|!(M<=0.0):0){H=H*H;if((Jb[c[(c[I>>2]|0)+100>>2]&63](I)|0)<=0){i=e;return}a=F+4|0;J=F+8|0;K=E+4|0;I=E+8|0;M=0.0;O=0.0;S=0.0;N=0;L=0;do{ga=c[G>>2]|0;oc[c[(c[ga>>2]|0)+104>>2]&63](ga,L,F,E);Q=+g[F>>2];Y=D-Q;U=+g[a>>2];Z=B-U;W=+g[J>>2];X=A-W;P=+g[E>>2]-Q;T=+g[K>>2]-U;V=+g[I>>2]-W;$=Y*P+Z*T+X*V;do{if($>0.0){_=P*P+T*T+V*V;if($<_){fa=$/_;Y=Y-P*fa;_=Z-T*fa;X=X-V*fa;Z=fa;break}else{Y=Y-P;_=Z-T;X=X-V;Z=1.0;break}}else{_=Z;Z=0.0}}while(0);if(X*X+(_*_+Y*Y)<H){S=W+V*Z;O=U+T*Z;M=Q+P*Z;N=1}L=L+1|0;ga=c[G>>2]|0}while((L|0)<(Jb[c[(c[ga>>2]|0)+100>>2]&63](ga)|0));if((N&1)==0){i=e;return}}else{H=H*H;M=D-C*P;O=B-z*P;S=A-x*P}D=D-M;B=B-O;A=A-S;P=D*D+B*B+A*A;if(!(P<H)){i=e;return}if(P>1.1920928955078125e-7){C=+R(+P);x=1.0/C;y=y-C;C=D*x;z=B*x;x=A*x}y=-y;if(f){aa=+g[p>>2];ba=+g[q>>2];ca=+g[r>>2];da=aa*C+ba*z+ca*x;W=+g[s>>2];X=+g[t>>2];Y=+g[u>>2];ea=C*W+z*X+x*Y;Z=+g[v>>2];_=+g[w>>2];$=+g[b>>2];fa=C*Z+z*_+x*$;g[o>>2]=-da;g[o+4>>2]=-ea;g[o+8>>2]=-fa;g[o+12>>2]=0.0;ea=M*W+O*X+S*Y+ +g[n>>2]+ea*y;fa=M*Z+O*_+S*$+ +g[m>>2]+fa*y;g[k>>2]=M*aa+O*ba+S*ca+ +g[l>>2]+da*y;g[k+4>>2]=ea;g[k+8>>2]=fa;g[k+12>>2]=0.0;jc[c[(c[d>>2]|0)+16>>2]&15](d,o,k,y);i=e;return}else{ga=c[(c[d>>2]|0)+16>>2]|0;ba=+g[p>>2];ca=+g[q>>2];da=+g[r>>2];Z=+g[s>>2];_=+g[t>>2];ea=+g[u>>2];$=+g[v>>2];aa=+g[w>>2];fa=+g[b>>2];g[j>>2]=ba*C+ca*z+da*x;g[j+4>>2]=C*Z+z*_+x*ea;g[j+8>>2]=C*$+z*aa+x*fa;g[j+12>>2]=0.0;ea=M*Z+O*_+S*ea+ +g[n>>2];fa=M*$+O*aa+S*fa+ +g[m>>2];g[h>>2]=M*ba+O*ca+S*da+ +g[l>>2];g[h+4>>2]=ea;g[h+8>>2]=fa;g[h+12>>2]=0.0;jc[ga&15](d,j,h,y);i=e;return}}function $o(a){a=a|0;return}function ap(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function bp(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=12224;if((a[b+8|0]|0)!=0?(e=c[b+12>>2]|0,(e|0)!=0):0){f=c[b+4>>2]|0;Hb[c[(c[f>>2]|0)+16>>2]&127](f,e)}wr(b);i=d;return}function cp(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=12224;if((a[b+8|0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Hb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function dp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+144|0;l=j+12|0;m=j;k=c[b+12>>2]|0;if((k|0)==0){i=j;return}p=c[d+4>>2]|0;o=c[e+4>>2]|0;n=h+4|0;c[n>>2]=k;g[l+128>>2]=999999984306749400.0;d=c[d+12>>2]|0;c[l+0>>2]=c[d+0>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2];c[l+12>>2]=c[d+12>>2];k=l+16|0;q=d+16|0;c[k+0>>2]=c[q+0>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[k+12>>2]=c[q+12>>2];k=l+32|0;q=d+32|0;c[k+0>>2]=c[q+0>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[k+12>>2]=c[q+12>>2];k=l+48|0;d=d+48|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];k=l+64|0;d=c[e+12>>2]|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];e=l+80|0;k=d+16|0;c[e+0>>2]=c[k+0>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];e=l+96|0;k=d+32|0;c[e+0>>2]=c[k+0>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];e=l+112|0;d=d+48|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];c[m>>2]=12304;c[m+4>>2]=p;c[m+8>>2]=o;gp(m,l,h,c[f+20>>2]|0,0);if((a[b+8|0]|0)==0){i=j;return}k=c[n>>2]|0;if((c[k+748>>2]|0)==0){i=j;return}l=c[k+740>>2]|0;m=c[(c[h+8>>2]|0)+8>>2]|0;if((l|0)==(m|0)){Un(k,l+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Un(k,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,m+4|0);i=j;return}}function ep(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function fp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;e=b+12|0;if((c[e>>2]|0)==0){i=f;return}if((a[b+8|0]|0)==0){i=f;return}b=d+4|0;l=c[b>>2]|0;h=d+8|0;if((l|0)==(c[h>>2]|0)?(g=(l|0)==0?1:l<<1,(l|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}l=c[b>>2]|0}k=d+12|0;if((l|0)>0){n=0;do{m=j+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}n=c[k>>2]|0;m=d+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);l=c[b>>2]|0}c[k>>2]=0}a[m]=1;c[k>>2]=j;c[h>>2]=g}d=(c[d+12>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=c[e>>2]}c[b>>2]=l+1;i=f;return}function gp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0,Y=0,_=0,$=0.0,aa=0.0,ba=0,ca=0,da=0.0,ea=0,fa=0,ga=0,ha=0.0,ia=0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0.0,Ma=0.0,Na=0.0,Oa=0.0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0.0,Ua=0.0,Va=0.0,Wa=0.0,Xa=0,Ya=0.0,Za=0.0,_a=0.0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0;e=i;i=i+656|0;o=e+592|0;p=e+560|0;_=e+548|0;ba=e+536|0;z=e+520|0;y=e+504|0;G=e+488|0;x=e+456|0;w=e+448|0;r=e+384|0;h=e+288|0;f=e+256|0;u=e+240|0;v=e+224|0;t=e+208|0;s=e+192|0;j=e+160|0;k=e+144|0;l=e+128|0;m=e+112|0;n=e+96|0;B=e+48|0;A=e;g[B>>2]=+g[b>>2];g[A>>2]=+g[b+64>>2];fa=B+4|0;g[fa>>2]=+g[b+4>>2];Qa=A+4|0;g[Qa>>2]=+g[b+68>>2];Xa=B+8|0;g[Xa>>2]=+g[b+8>>2];Pa=A+8|0;g[Pa>>2]=+g[b+72>>2];ia=B+16|0;g[ia>>2]=+g[b+16>>2];cb=A+16|0;g[cb>>2]=+g[b+80>>2];ea=B+20|0;g[ea>>2]=+g[b+20>>2];ab=A+20|0;g[ab>>2]=+g[b+84>>2];eb=B+24|0;g[eb>>2]=+g[b+24>>2];Sa=A+24|0;g[Sa>>2]=+g[b+88>>2];ga=B+32|0;g[ga>>2]=+g[b+32>>2];bb=A+32|0;g[bb>>2]=+g[b+96>>2];ca=B+36|0;g[ca>>2]=+g[b+36>>2];Ra=A+36|0;g[Ra>>2]=+g[b+100>>2];db=B+40|0;g[db>>2]=+g[b+40>>2];$a=A+40|0;g[$a>>2]=+g[b+104>>2];F=c[a+4>>2]|0;pa=+g[F+28>>2];O=+g[F+32>>2];$=+g[F+36>>2];ha=+Vb[c[(c[F>>2]|0)+48>>2]&3](F);da=+Vb[c[(c[F>>2]|0)+48>>2]&3](F);$=($+ +Vb[c[(c[F>>2]|0)+48>>2]&3](F))*2.0;F=b+112|0;Y=c[a+8>>2]|0;S=+g[Y+28>>2];J=+g[Y+32>>2];K=+g[Y+36>>2];U=+Vb[c[(c[Y>>2]|0)+48>>2]&3](Y);T=+Vb[c[(c[Y>>2]|0)+48>>2]&3](Y);K=(K+ +Vb[c[(c[Y>>2]|0)+48>>2]&3](Y))*2.0;Y=b+48|0;Ka=+g[F>>2]- +g[Y>>2];X=b+52|0;La=+g[b+116>>2]- +g[X>>2];a=b+56|0;Ma=+g[b+120>>2]- +g[a>>2];oa=+g[B>>2];qa=+g[ia>>2];D=+g[ga>>2];la=Ka*oa+La*qa+Ma*D;wa=+g[fa>>2];Da=+g[ea>>2];E=+g[ca>>2];ka=Ka*wa+La*Da+Ma*E;aa=+g[Xa>>2];W=+g[eb>>2];V=+g[db>>2];ua=Ka*aa+La*W+Ma*V;ha=(pa+ha)*2.0*.5;g[_>>2]=ha;da=(O+da)*2.0*.5;g[_+4>>2]=da;$=$*.5;g[_+8>>2]=$;U=(S+U)*2.0*.5;g[ba>>2]=U;T=(J+T)*2.0*.5;g[ba+4>>2]=T;K=K*.5;g[ba+8>>2]=K;J=+g[A>>2];S=+g[cb>>2];O=+g[bb>>2];pa=oa*J+qa*S+D*O;L=+g[Qa>>2];P=+g[ab>>2];N=+g[Ra>>2];ma=oa*L+qa*P+D*N;M=+g[Pa>>2];I=+g[Sa>>2];H=+g[$a>>2];D=oa*M+qa*I+D*H;qa=J*wa+S*Da+O*E;oa=L*wa+P*Da+N*E;E=M*wa+I*Da+H*E;Da=J*aa+S*W+O*V;wa=L*aa+P*W+N*V;sa=M*aa+I*W+H*V;Ga=+Q(+pa);Ba=+Q(+ma);va=+Q(+D);Ha=+Q(+qa);Ca=+Q(+oa);xa=+Q(+E);ya=+Q(+Da);za=+Q(+wa);Ea=+Q(+sa);Na=+Q(+la)-(K*va+(ha+Ga*U+Ba*T));if(Na>0.0){i=e;return}if(Na>-3.4028234663852886e+38){Ra=1;Sa=la<0.0|0;$a=B}else{Ra=0;Sa=0;$a=0;Na=-3.4028234663852886e+38}Oa=+Q(+ka)-(da+Ha*U+Ca*T+xa*K);if(Oa>0.0){i=e;return}if(Oa>Na){Ra=2;Sa=ka<0.0|0;$a=fa;Na=Oa}Oa=+Q(+ua)-($+ya*U+za*T+Ea*K);if(Oa>0.0){i=e;return}if(Oa>Na){Ra=3;Sa=ua<0.0|0;Na=Oa}else{Xa=$a}Ta=Ka*J+La*S+Ma*O;Oa=+Q(+Ta)-(U+(Ga*ha+Ha*da+ya*$));if(Oa>0.0){i=e;return}if(Oa>Na){Ra=4;Sa=Ta<0.0|0;Xa=A;Na=Oa}Ta=Ka*L+La*P+Ma*N;Oa=+Q(+Ta)-(T+(Ba*ha+Ca*da+za*$));if(Oa>0.0){i=e;return}if(Oa>Na){Ra=5;Sa=Ta<0.0|0;Na=Oa}else{Qa=Xa}Ka=Ka*M+La*I+Ma*H;La=+Q(+Ka)-(K+(va*ha+xa*da+Ea*$));if(La>0.0){i=e;return}if(La>Na){Ra=6;Sa=Ka<0.0|0}else{Pa=Qa;La=Na}Ga=Ga+9999999747378752.0e-21;Ba=Ba+9999999747378752.0e-21;va=va+9999999747378752.0e-21;Ha=Ha+9999999747378752.0e-21;Ca=Ca+9999999747378752.0e-21;xa=xa+9999999747378752.0e-21;ya=ya+9999999747378752.0e-21;za=za+9999999747378752.0e-21;Ea=Ea+9999999747378752.0e-21;Ma=ua*qa-ka*Da;Na=+Q(+Ma)-(ya*da+Ha*$+va*T+Ba*K);if(Na>1.1920928955078125e-7){i=e;return}Ua=-Da;Oa=Da*Da+0.0;Ka=qa*qa;Ta=+R(+(Ka+Oa));if(Ta>1.1920928955078125e-7?(Ia=Na/Ta,Ia*1.0499999523162842>La):0){Na=qa/Ta;Ua=Ua/Ta;Va=0.0/Ta;Qa=7;Sa=Ma<0.0|0;Pa=0;Wa=Ia}else{Na=0.0;Ua=0.0;Va=0.0;Qa=Ra;Wa=La}Ma=ua*oa-ka*wa;Za=+Q(+Ma)-(za*da+Ca*$+va*U+Ga*K);if(Za>1.1920928955078125e-7){i=e;return}Ya=-wa;La=wa*wa+0.0;Ia=oa*oa;Ta=+R(+(Ia+La));if(Ta>1.1920928955078125e-7?(Ja=Za/Ta,Ja*1.0499999523162842>Wa):0){Na=oa/Ta;Ua=Ya/Ta;Va=0.0/Ta;Qa=8;Sa=Ma<0.0|0;Pa=0;Wa=Ja}Ya=ua*E-ka*sa;Ta=+Q(+Ya)-(Ea*da+xa*$+Ba*U+Ga*T);if(Ta>1.1920928955078125e-7){i=e;return}_a=-sa;Ma=sa*sa+0.0;Ja=E*E;Za=+R(+(Ja+Ma));if(Za>1.1920928955078125e-7?(Fa=Ta/Za,Fa*1.0499999523162842>Wa):0){Ta=E/Za;Ua=_a/Za;Va=0.0/Za;Qa=9;Sa=Ya<0.0|0;Pa=0}else{Ta=Na;Fa=Wa}Wa=la*Da-ua*pa;Ya=+Q(+Wa)-(ya*ha+Ga*$+xa*T+Ca*K);if(Ya>1.1920928955078125e-7){i=e;return}Za=-pa;Na=pa*pa;Oa=+R(+(Na+Oa));if(Oa>1.1920928955078125e-7?(Aa=Ya/Oa,Aa*1.0499999523162842>Fa):0){Ta=Za/Oa;Ua=0.0/Oa;Va=Da/Oa;Qa=10;Sa=Wa<0.0|0;Pa=0}else{Aa=Fa}Fa=la*wa-ua*ma;Oa=+Q(+Fa)-(za*ha+Ba*$+xa*U+Ha*K);if(Oa>1.1920928955078125e-7){i=e;return}Wa=-ma;Da=ma*ma;La=+R(+(Da+La));if(La>1.1920928955078125e-7?(ta=Oa/La,ta*1.0499999523162842>Aa):0){Ta=Wa/La;Ua=0.0/La;Va=wa/La;Qa=11;Sa=Fa<0.0|0;Pa=0}else{ta=Aa}wa=la*sa-ua*D;Fa=+Q(+wa)-(Ea*ha+va*$+Ca*U+Ha*T);if(Fa>1.1920928955078125e-7){i=e;return}La=-D;ua=D*D;Aa=+R(+(ua+Ma));if(Aa>1.1920928955078125e-7?(ra=Fa/Aa,ra*1.0499999523162842>ta):0){Ta=La/Aa;Ua=0.0/Aa;Va=sa/Aa;Qa=12;Sa=wa<0.0|0;Pa=0}else{ra=ta}sa=ka*pa-la*qa;ta=+Q(+sa)-(Ha*ha+Ga*da+Ea*T+za*K);if(ta>1.1920928955078125e-7){i=e;return}qa=-qa;wa=+R(+(Na+Ka+0.0));if(wa>1.1920928955078125e-7?(na=ta/wa,na*1.0499999523162842>ra):0){Ta=0.0/wa;Ua=pa/wa;Va=qa/wa;Qa=13;Sa=sa<0.0|0;Pa=0}else{na=ra}pa=ka*ma-la*oa;qa=+Q(+pa)-(Ca*ha+Ba*da+Ea*U+ya*K);if(qa>1.1920928955078125e-7){i=e;return}oa=-oa;ra=+R(+(Da+Ia+0.0));if(ra>1.1920928955078125e-7?(ja=qa/ra,ja*1.0499999523162842>na):0){Ta=0.0/ra;Ua=ma/ra;Va=oa/ra;Qa=14;Sa=pa<0.0|0;Pa=0}else{ja=na}ka=ka*D-la*E;la=+Q(+ka)-(xa*ha+va*da+za*U+ya*T);if(la>1.1920928955078125e-7){i=e;return}E=-E;ma=+R(+(ua+Ja+0.0));if(ma>1.1920928955078125e-7?(C=la/ma,C*1.0499999523162842>ja):0){Va=E/ma;Ua=D/ma;Ta=0.0/ma;Qa=15;Sa=ka<0.0|0;ja=C;q=58}else{if((Qa|0)==0){i=e;return}if((Pa|0)==0){q=58}else{E=+g[Pa>>2];C=+g[Pa+16>>2];D=+g[Pa+32>>2]}}if((q|0)==58){E=Va*+g[B>>2]+Ua*+g[fa>>2]+Ta*aa;C=Va*+g[ia>>2]+Ua*+g[ea>>2]+Ta*W;D=Va*+g[ga>>2]+Ua*+g[ca>>2]+Ta*V}if((Sa|0)!=0){E=-E;C=-C;D=-D}if((Qa|0)>6){ka=+g[B>>2];ma=+g[ia>>2];la=+g[ga>>2];ha=(E*ka+C*ma+D*la>0.0?1.0:-1.0)*ha;pa=+g[fa>>2];oa=+g[ea>>2];na=+g[ca>>2];da=(E*pa+C*oa+D*na>0.0?1.0:-1.0)*da;_a=(E*aa+C*W+D*V>0.0?1.0:-1.0)*$;$=+g[b+48>>2]+ha*ka+da*pa+_a*aa;W=+g[X>>2]+ha*ma+da*oa+_a*W;V=+g[a>>2]+ha*la+da*na+_a*V;c[z+0>>2]=c[F+0>>2];c[z+4>>2]=c[F+4>>2];c[z+8>>2]=c[F+8>>2];U=(E*J+C*S+D*O>0.0?-1.0:1.0)*U;h=z+4|0;f=z+8|0;T=(E*L+C*P+D*N>0.0?-1.0:1.0)*T;P=+g[h>>2]+U*S+T*P;N=+g[f>>2]+U*O+T*N;K=(E*M+C*I+D*H>0.0?-1.0:1.0)*K;J=+g[z>>2]+U*J+T*L+K*M;g[z>>2]=J;I=P+K*I;g[h>>2]=I;H=N+K*H;g[f>>2]=H;eb=Qa+ -7|0;db=(eb|0)/3|0;K=+g[B+(db<<2)>>2];L=+g[B+(db+4<<2)>>2];P=+g[B+(db+8<<2)>>2];eb=(eb|0)%3|0;M=+g[A+(eb<<2)>>2];N=+g[A+(eb+4<<2)>>2];O=+g[A+(eb+8<<2)>>2];S=J-$;T=I-W;W=H-V;U=K*M+L*N+P*O;V=1.0-U*U;if(!(V<=9999999747378752.0e-20)){K=((S*K+T*L+W*P)*U-(S*M+T*N+W*O))*(1.0/V)}else{K=0.0}g[z>>2]=J+K*M;g[h>>2]=I+K*N;g[f>>2]=H+K*O;eb=c[(c[d>>2]|0)+16>>2]|0;g[y>>2]=-E;g[y+4>>2]=-C;g[y+8>>2]=-D;g[y+12>>2]=0.0;jc[eb&15](d,y,z,ja);i=e;return}z=(Qa|0)<4;if(z){H=E;J=C;I=D;b=B;B=_;_=ba;y=Y}else{H=-E;J=-C;I=-D;b=A;A=B;B=ba;y=F;F=Y}K=H*+g[A>>2]+J*+g[A+16>>2]+I*+g[A+32>>2];g[G>>2]=K;L=H*+g[A+4>>2]+J*+g[A+20>>2]+I*+g[A+36>>2];g[G+4>>2]=L;M=H*+g[A+8>>2]+J*+g[A+24>>2]+I*+g[A+40>>2];g[G+8>>2]=M;K=+Q(+K);L=+Q(+L);M=+Q(+M);if(L>K){eb=L>M;X=eb;ba=0;a=eb?1:2}else{eb=K>M;X=eb;ba=eb&1;a=eb?0:2}ca=X?2:1;M=+g[_+(a<<2)>>2];K=+g[F>>2]- +g[y>>2];L=M*+g[A+(a<<2)>>2];if(+g[G+(a<<2)>>2]<0.0){K=K+L;L=+g[F+4>>2]- +g[y+4>>2]+M*+g[A+((a|4)<<2)>>2];M=+g[F+8>>2]- +g[y+8>>2]+M*+g[A+((a|8)<<2)>>2]}else{K=K-L;L=+g[F+4>>2]- +g[y+4>>2]-M*+g[A+((a|4)<<2)>>2];M=+g[F+8>>2]- +g[y+8>>2]-M*+g[A+((a|8)<<2)>>2]}Y=(z?-1:-4)+Qa|0;if((Y|0)==1){ea=0;fa=2}else if((Y|0)==0){ea=1;fa=2}else{ea=0;fa=1}Na=+g[b+(ea<<2)>>2];Oa=+g[b+((ea|4)<<2)>>2];U=+g[b+((ea|8)<<2)>>2];N=K*Na+L*Oa+M*U;Ua=+g[b+(fa<<2)>>2];_a=+g[b+((fa|4)<<2)>>2];Za=+g[b+((fa|8)<<2)>>2];O=K*Ua+L*_a+M*Za;X=A+(ba<<2)|0;Ta=+g[X>>2];b=A+((ba|4)<<2)|0;Va=+g[b>>2];F=A+((ba|8)<<2)|0;S=+g[F>>2];T=Na*Ta+Oa*Va+U*S;a=A+(ca<<2)|0;Ya=+g[a>>2];G=A+((ca|4)<<2)|0;Wa=+g[G>>2];A=A+((ca|8)<<2)|0;P=+g[A>>2];U=Na*Ya+Oa*Wa+U*P;S=Ua*Ta+_a*Va+Za*S;P=Ua*Ya+_a*Wa+Za*P;Za=+g[_+(ba<<2)>>2];Wa=T*Za;Za=S*Za;_a=+g[_+(ca<<2)>>2];Ya=U*_a;_a=P*_a;Ua=N-Wa;g[x>>2]=Ua-Ya;Va=O-Za;g[x+4>>2]=Va-_a;g[x+8>>2]=Ua+Ya;g[x+12>>2]=Va+_a;Wa=N+Wa;g[x+16>>2]=Wa+Ya;Za=O+Za;g[x+20>>2]=Za+_a;g[x+24>>2]=Wa-Ya;g[x+28>>2]=Za-_a;g[w>>2]=+g[B+(ea<<2)>>2];g[w+4>>2]=+g[B+(fa<<2)>>2];_=0;ga=4;ea=r;a:while(1){ba=w+(_<<2)|0;ca=1-_|0;fa=-1;while(1){if((ga|0)>0){V=+(fa|0);Qa=0;ia=x;Ra=ea;while(1){Pa=ia+(_<<2)|0;W=+g[Pa>>2];$=+g[ba>>2];if(V*W<$){g[Ra>>2]=+g[ia>>2];g[Ra+4>>2]=+g[ia+4>>2];Qa=Qa+1|0;if((Qa&8|0)!=0){ga=Qa;break a}W=+g[Pa>>2];$=+g[ba>>2];Ra=Ra+8|0}Pa=ia+8|0;Sa=(ga|0)>1?Pa:x;aa=+g[Sa+(_<<2)>>2];if(V*W<$^V*aa<$){_a=+g[ia+(ca<<2)>>2];g[Ra+(ca<<2)>>2]=_a+(V*$-W)*((+g[Sa+(ca<<2)>>2]-_a)/(aa-W));g[Ra+(_<<2)>>2]=V*+g[ba>>2];Qa=Qa+1|0;if((Qa&8|0)==0){Ra=Ra+8|0}else{ga=Qa;break a}}ga=ga+ -1|0;if((ga|0)>0){ia=Pa}else{ga=Qa;break}}}else{ga=0}ia=(ea|0)==(r|0)?o:r;if((fa|0)<0){x=ea;ea=ia;fa=fa+2|0}else{break}}_=_+1|0;if((_|0)<2){x=ea;ea=ia}else{break}}if((ea|0)!=(r|0)){Fr(r|0,ea|0,ga<<3|0)|0}if((ga|0)<1){i=e;return}V=1.0/(T*P-S*U);T=T*V;U=U*V;S=S*V;P=P*V;V=+g[B+(Y<<2)>>2];W=+g[X>>2];$=+g[a>>2];aa=+g[b>>2];da=+g[G>>2];ha=+g[F>>2];ja=+g[A>>2];w=0;x=0;do{eb=x<<1;ka=+g[r+(eb<<2)>>2];_a=ka-N;la=+g[r+((eb|1)<<2)>>2];Ya=la-O;Wa=P*_a-U*Ya;_a=T*Ya-S*_a;eb=w*3|0;Ya=K+Wa*W+_a*$;g[h+(eb<<2)>>2]=Ya;Za=L+Wa*aa+_a*da;g[h+(eb+1<<2)>>2]=Za;_a=M+Wa*ha+_a*ja;g[h+(eb+2<<2)>>2]=_a;_a=V-(H*Ya+J*Za+I*_a);g[f+(w<<2)>>2]=_a;if(_a>=0.0){eb=w<<1;g[r+(eb<<2)>>2]=ka;g[r+((eb|1)<<2)>>2]=la;w=w+1|0}x=x+1|0}while((x|0)!=(ga|0));if((w|0)<1){i=e;return}x=(w|0)<4?w:4;x=(x|0)<1?1:x;if((w|0)<=(x|0)){j=(w|0)>0;if(z){if(!j){i=e;return}l=v+4|0;k=v+8|0;j=v+12|0;m=y+4|0;n=u+4|0;p=y+8|0;o=u+8|0;E=-E;C=-C;D=-D;q=0;do{eb=q*3|0;g[u>>2]=+g[h+(eb<<2)>>2]+ +g[y>>2];g[n>>2]=+g[h+(eb+1<<2)>>2]+ +g[m>>2];g[o>>2]=+g[h+(eb+2<<2)>>2]+ +g[p>>2];eb=c[(c[d>>2]|0)+16>>2]|0;g[v>>2]=E;g[l>>2]=C;g[k>>2]=D;g[j>>2]=0.0;jc[eb&15](d,v,u,-+g[f+(q<<2)>>2]);q=q+1|0}while((q|0)!=(w|0));i=e;return}else{if(!j){i=e;return}q=s+4|0;k=s+8|0;j=s+12|0;p=y+4|0;l=t+4|0;n=y+8|0;m=t+8|0;I=-E;H=-C;J=-D;o=0;do{eb=o*3|0;_a=+g[f+(o<<2)>>2];g[t>>2]=+g[h+(eb<<2)>>2]+ +g[y>>2]-E*_a;g[l>>2]=+g[h+(eb+1<<2)>>2]+ +g[p>>2]-C*_a;g[m>>2]=+g[h+(eb+2<<2)>>2]+ +g[n>>2]-D*_a;eb=c[(c[d>>2]|0)+16>>2]|0;g[s>>2]=I;g[q>>2]=H;g[k>>2]=J;g[j>>2]=0.0;jc[eb&15](d,s,t,-_a);o=o+1|0}while((o|0)!=(w|0));i=e;return}}if((w|0)>1){u=1;s=0;H=+g[f>>2];while(1){I=+g[f+(u<<2)>>2];t=I>H;s=t?u:s;u=u+1|0;if((u|0)==(w|0)){break}else{H=t?I:H}}}else{s=0}if((w|0)==1){I=+g[r>>2];H=+g[r+4>>2];q=115}else if((w|0)!=2){t=w+ -1|0;if((t|0)>0){M=0.0;I=0.0;K=0.0;u=0;do{eb=u<<1;Va=+g[r+(eb<<2)>>2];Ya=+g[r+(eb+3<<2)>>2];Wa=+g[r+(eb+2<<2)>>2];Za=+g[r+((eb|1)<<2)>>2];_a=Va*Ya-Wa*Za;M=M+_a;I=I+(Va+Wa)*_a;K=K+(Ya+Za)*_a;u=u+1|0}while((u|0)!=(t|0))}else{M=0.0;I=0.0;K=0.0}eb=w<<1;N=+g[r+(eb+ -2<<2)>>2];J=+g[r+4>>2];O=+g[r>>2];H=+g[r+(eb+ -1<<2)>>2];L=N*J-O*H;M=M+L;if(+Q(+M)>1.1920928955078125e-7){M=1.0/(M*3.0)}else{M=999999984306749400.0}if((w|0)>0){I=M*(I+L*(N+O));H=M*(K+L*(H+J));q=115}else{t=0}}else{I=(+g[r>>2]+ +g[r+8>>2])*.5;H=(+g[r+4>>2]+ +g[r+12>>2])*.5;q=115}if((q|0)==115){q=0;while(1){eb=q<<1;g[o+(q<<2)>>2]=+Z(+(+g[r+((eb|1)<<2)>>2]-H),+(+g[r+(eb<<2)>>2]-I));q=q+1|0;if((q|0)==(w|0)){q=0;break}}while(1){c[p+(q<<2)>>2]=1;q=q+1|0;if((q|0)==(w|0)){t=1;break}}}r=p+(s<<2)|0;c[r>>2]=0;c[j>>2]=s;q=j+4|0;b:do{if((x|0)>1){I=6.2831854820251465/+(x|0);H=+g[o+(s<<2)>>2];if(t){r=1}else{o=1;while(1){c[q>>2]=s;c[r>>2]=0;o=o+1|0;if((o|0)==(x|0)){break b}else{q=q+4|0}}}while(1){J=+(r|0)*I+H;if(J>3.1415927410125732){J=J+-6.2831854820251465}c[q>>2]=s;u=s;t=0;K=1.0e9;do{if((c[p+(t<<2)>>2]|0)!=0){L=+Q(+(+g[o+(t<<2)>>2]-J));if(L>3.1415927410125732){L=6.2831854820251465-L}if(L<K){c[q>>2]=t;u=t;K=L}}t=t+1|0}while((t|0)!=(w|0));c[p+(u<<2)>>2]=0;r=r+1|0;if((r|0)==(x|0)){break}else{q=q+4|0}}}}while(0);if((x|0)<=0){i=e;return}v=l+4|0;u=l+8|0;t=l+12|0;w=m+4|0;A=m+8|0;s=m+12|0;r=k+4|0;p=k+8|0;B=n+4|0;F=n+8|0;G=n+12|0;q=y+4|0;o=y+8|0;J=-D;I=-C;H=-E;if(z){m=0;do{eb=c[j+(m<<2)>>2]|0;db=eb*3|0;g[k>>2]=+g[h+(db<<2)>>2]+ +g[y>>2];g[r>>2]=+g[h+(db+1<<2)>>2]+ +g[q>>2];g[p>>2]=+g[h+(db+2<<2)>>2]+ +g[o>>2];db=c[(c[d>>2]|0)+16>>2]|0;g[l>>2]=H;g[v>>2]=I;g[u>>2]=J;g[t>>2]=0.0;jc[db&15](d,l,k,-+g[f+(eb<<2)>>2]);m=m+1|0}while((m|0)<(x|0));i=e;return}else{l=0;do{db=c[j+(l<<2)>>2]|0;eb=db*3|0;Wa=+g[h+(eb<<2)>>2]+ +g[y>>2];g[k>>2]=Wa;Ya=+g[h+(eb+1<<2)>>2]+ +g[q>>2];g[r>>2]=Ya;Za=+g[h+(eb+2<<2)>>2]+ +g[o>>2];g[p>>2]=Za;eb=c[(c[d>>2]|0)+16>>2]|0;g[m>>2]=H;g[w>>2]=I;g[A>>2]=J;g[s>>2]=0.0;_a=+g[f+(db<<2)>>2];g[n>>2]=Wa-E*_a;g[B>>2]=Ya-_a*C;g[F>>2]=Za-_a*D;g[G>>2]=0.0;jc[eb&15](d,m,n,-_a);l=l+1|0}while((l|0)<(x|0));i=e;return}}function hp(a){a=a|0;return}function ip(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function jp(a){a=a|0;return}function kp(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function lp(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0;q=i;i=i+80|0;k=q+32|0;m=q+28|0;f=q+20|0;t=q+16|0;r=q+12|0;s=q+8|0;v=q;j=a+4|0;p=c[j>>2]|0;_b[c[(c[p>>2]|0)+16>>2]&0](p,m,q+24|0,f,t,r,s,q+4|0,v,b);r=c[r>>2]|0;s=ba(c[s>>2]|0,d)|0;p=r+s|0;n=c[j>>2]|0;f=(c[f>>2]|0)==0;m=c[m>>2]|0;l=n+4|0;o=n+8|0;n=n+12|0;if((c[v>>2]|0)!=3){t=c[t>>2]|0;v=ba(t,c[r+(s+8)>>2]|0)|0;u=m+v|0;if(f){x=+g[m+(v+4)>>2]*+g[o>>2];w=+g[m+(v+8)>>2]*+g[n>>2];g[k+32>>2]=+g[u>>2]*+g[l>>2];g[k+36>>2]=x;g[k+40>>2]=w;g[k+44>>2]=0.0;v=ba(t,c[r+(s+4)>>2]|0)|0;w=+g[m+(v+4)>>2]*+g[o>>2];x=+g[m+(v+8)>>2]*+g[n>>2];g[k+16>>2]=+g[m+v>>2]*+g[l>>2];g[k+20>>2]=w;g[k+24>>2]=x;g[k+28>>2]=0.0;v=ba(t,c[p>>2]|0)|0;x=+g[m+(v+4)>>2]*+g[o>>2];w=+g[m+(v+8)>>2]*+g[n>>2];g[k>>2]=+g[m+v>>2]*+g[l>>2];g[k+4>>2]=x;g[k+8>>2]=w;g[k+12>>2]=0.0;v=a+8|0;v=c[v>>2]|0;u=c[v>>2]|0;u=u+8|0;u=c[u>>2]|0;oc[u&63](v,k,b,d);v=c[j>>2]|0;u=c[v>>2]|0;u=u+24|0;u=c[u>>2]|0;Hb[u&127](v,b);i=q;return}else{w=+h[m+(v+8)>>3]*+g[o>>2];x=+h[m+(v+16)>>3]*+g[n>>2];g[k+32>>2]=+h[u>>3]*+g[l>>2];g[k+36>>2]=w;g[k+40>>2]=x;g[k+44>>2]=0.0;v=ba(t,c[r+(s+4)>>2]|0)|0;x=+h[m+(v+8)>>3]*+g[o>>2];w=+h[m+(v+16)>>3]*+g[n>>2];g[k+16>>2]=+h[m+v>>3]*+g[l>>2];g[k+20>>2]=x;g[k+24>>2]=w;g[k+28>>2]=0.0;v=ba(t,c[p>>2]|0)|0;w=+h[m+(v+8)>>3]*+g[o>>2];x=+h[m+(v+16)>>3]*+g[n>>2];g[k>>2]=+h[m+v>>3]*+g[l>>2];g[k+4>>2]=w;g[k+8>>2]=x;g[k+12>>2]=0.0;v=a+8|0;v=c[v>>2]|0;u=c[v>>2]|0;u=u+8|0;u=c[u>>2]|0;oc[u&63](v,k,b,d);v=c[j>>2]|0;u=c[v>>2]|0;u=u+24|0;u=c[u>>2]|0;Hb[u&127](v,b);i=q;return}}r=c[t>>2]|0;s=2;while(1){u=ba(r,e[p+(s<<1)>>1]|0)|0;t=m+u|0;if(f){w=+g[m+(u+4)>>2]*+g[o>>2];x=+g[m+(u+8)>>2]*+g[n>>2];g[k+(s<<4)>>2]=+g[t>>2]*+g[l>>2];g[k+(s<<4)+4>>2]=w;g[k+(s<<4)+8>>2]=x;g[k+(s<<4)+12>>2]=0.0}else{w=+h[m+(u+8)>>3]*+g[o>>2];x=+h[m+(u+16)>>3]*+g[n>>2];g[k+(s<<4)>>2]=+h[t>>3]*+g[l>>2];g[k+(s<<4)+4>>2]=w;g[k+(s<<4)+8>>2]=x;g[k+(s<<4)+12>>2]=0.0}if((s|0)>0){s=s+ -1|0}else{break}}v=a+8|0;v=c[v>>2]|0;u=c[v>>2]|0;u=u+8|0;u=c[u>>2]|0;oc[u&63](v,k,b,d);v=c[j>>2]|0;u=c[v>>2]|0;u=u+24|0;u=c[u>>2]|0;Hb[u&127](v,b);i=q;return}function mp(a){a=a|0;return}function np(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function op(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0;k=i;i=i+80|0;q=k+32|0;l=k+28|0;f=k+20|0;p=k+16|0;n=k+12|0;r=k+8|0;s=k;j=a+4|0;o=c[j>>2]|0;_b[c[(c[o>>2]|0)+16>>2]&0](o,l,k+24|0,f,p,n,r,k+4|0,s,b);r=(c[n>>2]|0)+(ba(c[r>>2]|0,d)|0)|0;n=c[j>>2]|0;s=(c[s>>2]|0)==3;f=(c[f>>2]|0)==0;l=c[l>>2]|0;o=n+4|0;m=n+8|0;n=n+12|0;t=2;while(1){if(s){u=e[r+(t<<1)>>1]|0}else{u=c[r+(t<<2)>>2]|0}v=ba(c[p>>2]|0,u)|0;u=l+v|0;if(f){x=+g[l+(v+4)>>2]*+g[m>>2];w=+g[l+(v+8)>>2]*+g[n>>2];g[q+(t<<4)>>2]=+g[u>>2]*+g[o>>2];g[q+(t<<4)+4>>2]=x;g[q+(t<<4)+8>>2]=w;g[q+(t<<4)+12>>2]=0.0}else{w=+h[l+(v+8)>>3]*+g[m>>2];x=+h[l+(v+16)>>3]*+g[n>>2];g[q+(t<<4)>>2]=+h[u>>3]*+g[o>>2];g[q+(t<<4)+4>>2]=w;g[q+(t<<4)+8>>2]=x;g[q+(t<<4)+12>>2]=0.0}if((t|0)>0){t=t+ -1|0}else{break}}v=c[a+8>>2]|0;oc[c[(c[v>>2]|0)+8>>2]&63](v,q,b,d);v=c[j>>2]|0;Hb[c[(c[v>>2]|0)+24>>2]&127](v,b);i=k;return}function pp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;i=i+32|0;g=h;j=(a[b+28|0]|0)!=0;f=j?e:d;d=j?d:e;j=c[f+4>>2]|0;e=c[j+16>>2]|0;k=b+12|0;l=c[k>>2]|0;if((l|0)<(e|0)){m=b+16|0;if((c[m>>2]|0)<(e|0)){if((e|0)==0){n=0;p=l}else{c[3580]=(c[3580]|0)+1;n=vr((e<<2|3)+16|0)|0;if((n|0)==0){n=0}else{u=n+19&-16;c[u+ -4>>2]=n;n=u}p=c[k>>2]|0}o=b+20|0;if((p|0)>0){r=0;do{q=n+(r<<2)|0;if((q|0)!=0){c[q>>2]=c[(c[o>>2]|0)+(r<<2)>>2]}r=r+1|0}while((r|0)!=(p|0))}q=c[o>>2]|0;p=b+24|0;if((q|0)!=0){if((a[p]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[q+ -4>>2]|0)}c[o>>2]=0}a[p]=1;c[o>>2]=n;c[m>>2]=e}else{o=b+20|0}do{m=(c[o>>2]|0)+(l<<2)|0;if((m|0)!=0){c[m>>2]=0}l=l+1|0}while((l|0)!=(e|0))}c[k>>2]=e;if((e|0)<=0){i=h;return}k=j+64|0;j=j+24|0;t=f+8|0;s=f+12|0;q=g+4|0;p=g+8|0;o=g+12|0;n=g+16|0;m=g+20|0;l=b+4|0;r=b+32|0;u=b+20|0;b=0;do{if((c[k>>2]|0)==0){x=c[(c[j>>2]|0)+(b*80|0)+64>>2]|0;w=c[t>>2]|0;v=c[s>>2]|0;c[g>>2]=f;c[q>>2]=x;c[p>>2]=w;c[o>>2]=v;c[n>>2]=-1;c[m>>2]=b;v=c[l>>2]|0;v=Nb[c[(c[v>>2]|0)+8>>2]&15](v,g,d,c[r>>2]|0)|0;c[(c[u>>2]|0)+(b<<2)>>2]=v}else{c[(c[u>>2]|0)+(b<<2)>>2]=0}b=b+1|0}while((b|0)!=(e|0));i=h;return}function qp(a){a=a|0;var b=0;b=i;rp(a);if((a|0)!=0){wr(a)}i=b;return}function rp(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;f=i;c[b>>2]=12704;e=b+12|0;g=c[e>>2]|0;d=b+20|0;if((g|0)>0){h=b+4|0;j=0;do{k=c[(c[d>>2]|0)+(j<<2)>>2]|0;if((k|0)!=0){Fb[c[c[k>>2]>>2]&255](k);k=c[h>>2]|0;Hb[c[(c[k>>2]|0)+60>>2]&127](k,c[(c[d>>2]|0)+(j<<2)>>2]|0)}j=j+1|0}while((j|0)!=(g|0))}h=c[d>>2]|0;g=b+24|0;if((h|0)==0){a[g]=1;c[d>>2]=0;c[e>>2]=0;k=b+16|0;c[k>>2]=0;i=f;return}if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[d>>2]=0;a[g]=1;c[d>>2]=0;c[e>>2]=0;k=b+16|0;c[k>>2]=0;i=f;return}function sp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0;l=i;i=i+320|0;r=l+280|0;y=l+256|0;u=l+240|0;v=l+224|0;x=l+160|0;w=l+128|0;k=l+64|0;m=l+48|0;j=l+32|0;o=l+16|0;n=l;p=(a[b+28|0]|0)!=0;q=p?e:d;p=p?d:e;s=c[q+4>>2]|0;t=b+12|0;if((c[s+68>>2]|0)!=(c[b+40>>2]|0)){C=c[t>>2]|0;if((C|0)>0){z=b+20|0;A=b+4|0;B=0;do{D=c[(c[z>>2]|0)+(B<<2)>>2]|0;if((D|0)!=0){Fb[c[c[D>>2]>>2]&255](D);P=c[A>>2]|0;Hb[c[(c[P>>2]|0)+60>>2]&127](P,c[(c[z>>2]|0)+(B<<2)>>2]|0)}B=B+1|0}while((B|0)!=(C|0))}pp(b,d,e)}z=c[s+64>>2]|0;e=b+4|0;A=c[e>>2]|0;d=b+20|0;E=c[d>>2]|0;B=c[b+32>>2]|0;c[r>>2]=12784;c[r+4>>2]=q;c[r+8>>2]=p;c[r+12>>2]=A;c[r+16>>2]=f;c[r+20>>2]=h;c[r+24>>2]=E;c[r+28>>2]=B;B=y+16|0;a[B]=1;f=y+12|0;c[f>>2]=0;b=y+4|0;c[b>>2]=0;A=y+8|0;c[A>>2]=0;F=c[t>>2]|0;if((F|0)>0){C=h+4|0;D=h+8|0;h=h+12|0;G=E;E=0;while(1){G=c[G+(E<<2)>>2]|0;if((G|0)!=0){Hb[c[(c[G>>2]|0)+16>>2]&127](G,y);H=c[b>>2]|0;if((H|0)>0){F=0;do{G=c[(c[f>>2]|0)+(F<<2)>>2]|0;if((c[G+748>>2]|0)!=0){c[C>>2]=G;I=c[G+740>>2]|0;H=c[(c[D>>2]|0)+8>>2]|0;if((I|0)==(H|0)){Un(G,I+4|0,(c[(c[h>>2]|0)+8>>2]|0)+4|0)}else{Un(G,(c[(c[h>>2]|0)+8>>2]|0)+4|0,H+4|0)}c[C>>2]=0;H=c[b>>2]|0}F=F+1|0}while((F|0)<(H|0))}if((H|0)<0){if((c[A>>2]|0)<0){G=c[f>>2]|0;if((H|0)>0){F=0;do{if((F|0)!=0){c[0+(F<<2)>>2]=c[G+(F<<2)>>2]}F=F+1|0}while((F|0)!=(H|0))}if((G|0)!=0){if((a[B]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[G+ -4>>2]|0)}c[f>>2]=0}a[B]=1;c[f>>2]=0;c[A>>2]=0}do{F=(c[f>>2]|0)+(H<<2)|0;if((F|0)!=0){c[F>>2]=0}H=H+1|0}while((H|0)!=0)}c[b>>2]=0;F=c[t>>2]|0}E=E+1|0;if((E|0)>=(F|0)){break}G=c[d>>2]|0}y=c[f>>2]|0;if((y|0)!=0){if((a[B]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[y+ -4>>2]|0)}c[f>>2]=0}}a[B]=1;c[f>>2]=0;c[b>>2]=0;c[A>>2]=0;if((z|0)==0){w=c[t>>2]|0;if((w|0)>0){v=s+24|0;u=0;do{tp(r,c[(c[v>>2]|0)+(u*80|0)+64>>2]|0,u);u=u+1|0}while((u|0)<(w|0))}else{i=l;return}}else{P=c[q+12>>2]|0;ca=+g[P>>2];ba=+g[P+16>>2];aa=+g[P+32>>2];$=+g[P+4>>2];_=+g[P+20>>2];Z=+g[P+36>>2];V=+g[P+8>>2];T=+g[P+24>>2];R=+g[P+40>>2];Y=-+g[P+48>>2];X=-+g[P+52>>2];W=-+g[P+56>>2];P=c[p+12>>2]|0;la=+g[P>>2];ka=+g[P+16>>2];ja=+g[P+32>>2];ia=+g[P+4>>2];ha=+g[P+20>>2];ga=+g[P+36>>2];fa=+g[P+8>>2];ea=+g[P+24>>2];da=+g[P+40>>2];U=+g[P+48>>2];S=+g[P+52>>2];Q=+g[P+56>>2];g[x>>2]=ca*la+ba*ka+aa*ja;g[x+4>>2]=ca*ia+ba*ha+aa*ga;g[x+8>>2]=ca*fa+ba*ea+aa*da;g[x+12>>2]=0.0;g[x+16>>2]=$*la+_*ka+Z*ja;g[x+20>>2]=$*ia+_*ha+Z*ga;g[x+24>>2]=$*fa+_*ea+Z*da;g[x+28>>2]=0.0;g[x+32>>2]=V*la+T*ka+R*ja;g[x+36>>2]=V*ia+T*ha+R*ga;g[x+40>>2]=V*fa+T*ea+R*da;g[x+44>>2]=0.0;g[x+48>>2]=ca*Y+ba*X+aa*W+(ca*U+ba*S+aa*Q);g[x+52>>2]=$*Y+_*X+Z*W+($*U+_*S+Z*Q);g[x+56>>2]=V*Y+T*X+R*W+(V*U+T*S+R*Q);g[x+60>>2]=0.0;P=c[p+4>>2]|0;oc[c[(c[P>>2]|0)+8>>2]&63](P,x,u,v);c[w+0>>2]=c[u+0>>2];c[w+4>>2]=c[u+4>>2];c[w+8>>2]=c[u+8>>2];c[w+12>>2]=c[u+12>>2];P=w+16|0;c[P+0>>2]=c[v+0>>2];c[P+4>>2]=c[v+4>>2];c[P+8>>2]=c[v+8>>2];c[P+12>>2]=c[v+12>>2];Rl(c[z>>2]|0,w,r)}r=c[t>>2]|0;if((r|0)<=0){i=l;return}s=s+24|0;f=q+12|0;E=k+4|0;h=k+8|0;D=k+12|0;C=k+16|0;B=k+20|0;A=k+24|0;b=k+28|0;w=k+32|0;v=k+36|0;u=k+40|0;t=k+44|0;q=k+48|0;z=k+52|0;y=k+56|0;x=k+60|0;F=p+4|0;G=p+12|0;I=m+8|0;H=n+8|0;M=m+4|0;L=n+4|0;K=j+4|0;N=o+4|0;p=j+8|0;J=o+8|0;O=0;do{do{if((c[(c[d>>2]|0)+(O<<2)>>2]|0)!=0){na=c[s>>2]|0;P=c[na+(O*80|0)+64>>2]|0;ma=c[f>>2]|0;T=+g[ma>>2];U=+g[ma+4>>2];V=+g[ma+8>>2];W=+g[ma+16>>2];X=+g[ma+20>>2];Y=+g[ma+24>>2];da=+g[ma+32>>2];fa=+g[ma+36>>2];ha=+g[ma+40>>2];Z=+g[na+(O*80|0)>>2];_=+g[na+(O*80|0)+16>>2];$=+g[na+(O*80|0)+32>>2];aa=+g[na+(O*80|0)+4>>2];ba=+g[na+(O*80|0)+20>>2];ca=+g[na+(O*80|0)+36>>2];ea=+g[na+(O*80|0)+8>>2];ga=+g[na+(O*80|0)+24>>2];ia=+g[na+(O*80|0)+40>>2];R=+g[na+(O*80|0)+48>>2];S=+g[na+(O*80|0)+52>>2];la=+g[na+(O*80|0)+56>>2];ja=+g[ma+48>>2]+(T*R+U*S+V*la);ka=+g[ma+52>>2]+(W*R+X*S+Y*la);la=+g[ma+56>>2]+(da*R+fa*S+ha*la);g[k>>2]=T*Z+U*_+V*$;g[E>>2]=T*aa+U*ba+V*ca;g[h>>2]=T*ea+U*ga+V*ia;g[D>>2]=0.0;g[C>>2]=W*Z+X*_+Y*$;g[B>>2]=W*aa+X*ba+Y*ca;g[A>>2]=W*ea+X*ga+Y*ia;g[b>>2]=0.0;g[w>>2]=da*Z+fa*_+ha*$;g[v>>2]=da*aa+fa*ba+ha*ca;g[u>>2]=da*ea+fa*ga+ha*ia;g[t>>2]=0.0;g[q>>2]=ja;g[z>>2]=ka;g[y>>2]=la;g[x>>2]=0.0;oc[c[(c[P>>2]|0)+8>>2]&63](P,k,m,j);P=c[F>>2]|0;oc[c[(c[P>>2]|0)+8>>2]&63](P,c[G>>2]|0,o,n);if(!(+g[m>>2]>+g[n>>2])?!(+g[j>>2]<+g[o>>2]):0){P=1}else{P=0}if(!(!(+g[I>>2]>+g[H>>2])?!(+g[p>>2]<+g[J>>2]):0)){P=0}if(!(+g[M>>2]>+g[L>>2])?!(+g[K>>2]<+g[N>>2]|P^1):0){break}na=c[(c[d>>2]|0)+(O<<2)>>2]|0;Fb[c[c[na>>2]>>2]&255](na);na=c[e>>2]|0;Hb[c[(c[na>>2]|0)+60>>2]&127](na,c[(c[d>>2]|0)+(O<<2)>>2]|0);c[(c[d>>2]|0)+(O<<2)>>2]=0}}while(0);O=O+1|0}while((O|0)<(r|0));i=l;return}function tp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0;f=i;i=i+160|0;k=f+88|0;n=f+72|0;m=f+56|0;o=f+40|0;l=f+24|0;j=f;e=a+4|0;p=c[e>>2]|0;h=c[p+12>>2]|0;L=+g[h>>2];K=+g[h+4>>2];J=+g[h+8>>2];I=+g[h+16>>2];H=+g[h+20>>2];G=+g[h+24>>2];z=+g[h+32>>2];x=+g[h+36>>2];v=+g[h+40>>2];p=c[(c[p+4>>2]|0)+24>>2]|0;F=+g[p+(d*80|0)>>2];E=+g[p+(d*80|0)+16>>2];D=+g[p+(d*80|0)+32>>2];C=+g[p+(d*80|0)+4>>2];B=+g[p+(d*80|0)+20>>2];A=+g[p+(d*80|0)+36>>2];y=+g[p+(d*80|0)+8>>2];w=+g[p+(d*80|0)+24>>2];u=+g[p+(d*80|0)+40>>2];N=+g[p+(d*80|0)+48>>2];M=+g[p+(d*80|0)+52>>2];r=+g[p+(d*80|0)+56>>2];t=+g[h+48>>2]+(L*N+K*M+J*r);s=+g[h+52>>2]+(I*N+H*M+G*r);r=+g[h+56>>2]+(z*N+x*M+v*r);g[k>>2]=L*F+K*E+J*D;g[k+4>>2]=L*C+K*B+J*A;g[k+8>>2]=L*y+K*w+J*u;g[k+12>>2]=0.0;g[k+16>>2]=I*F+H*E+G*D;g[k+20>>2]=I*C+H*B+G*A;g[k+24>>2]=I*y+H*w+G*u;g[k+28>>2]=0.0;g[k+32>>2]=z*F+x*E+v*D;g[k+36>>2]=z*C+x*B+v*A;g[k+40>>2]=z*y+x*w+v*u;g[k+44>>2]=0.0;g[k+48>>2]=t;g[k+52>>2]=s;g[k+56>>2]=r;g[k+60>>2]=0.0;oc[c[(c[b>>2]|0)+8>>2]&63](b,k,n,m);h=a+8|0;p=c[h>>2]|0;q=c[p+4>>2]|0;oc[c[(c[q>>2]|0)+8>>2]&63](q,c[p+12>>2]|0,o,l);if(!(+g[n>>2]>+g[l>>2])?!(+g[m>>2]<+g[o>>2]):0){p=1}else{p=0}if(!(!(+g[n+8>>2]>+g[l+8>>2])?!(+g[m+8>>2]<+g[o+8>>2]):0)){p=0}if(+g[n+4>>2]>+g[l+4>>2]){i=f;return}if(+g[m+4>>2]<+g[o+4>>2]|p^1){i=f;return}l=c[e>>2]|0;q=c[l+8>>2]|0;c[j>>2]=l;c[j+4>>2]=b;c[j+8>>2]=q;c[j+12>>2]=k;c[j+16>>2]=-1;c[j+20>>2]=d;k=a+24|0;if((c[(c[k>>2]|0)+(d<<2)>>2]|0)==0){l=c[a+12>>2]|0;l=Nb[c[(c[l>>2]|0)+8>>2]&15](l,j,c[h>>2]|0,c[a+28>>2]|0)|0;c[(c[k>>2]|0)+(d<<2)>>2]=l;l=c[e>>2]|0}b=a+20|0;o=c[b>>2]|0;n=o+8|0;m=c[n>>2]|0;if((c[m+8>>2]|0)==(c[l+8>>2]|0)){c[n>>2]=j;q=c[b>>2]|0;kc[c[(c[q>>2]|0)+8>>2]&63](q,-1,d)}else{q=o+12|0;m=c[q>>2]|0;c[q>>2]=j;q=c[b>>2]|0;kc[c[(c[q>>2]|0)+12>>2]&63](q,-1,d)}q=c[(c[k>>2]|0)+(d<<2)>>2]|0;Db[c[(c[q>>2]|0)+8>>2]&31](q,j,c[h>>2]|0,c[a+16>>2]|0,c[b>>2]|0);h=c[b>>2]|0;a=h+8|0;if((c[(c[a>>2]|0)+8>>2]|0)==(c[(c[e>>2]|0)+8>>2]|0)){c[a>>2]=m;i=f;return}else{c[h+12>>2]=m;i=f;return}}function up(a){a=a|0;return}function vp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0;j=i;l=(a[b+28|0]|0)!=0;k=l?e:d;o=l?d:e;n=c[b+12>>2]|0;if((n|0)<=0){W=1.0;i=j;return+W}r=k+4|0;t=k+8|0;v=k+12|0;x=k+16|0;z=k+20|0;B=k+24|0;C=k+28|0;A=k+32|0;y=k+36|0;w=k+40|0;u=k+44|0;s=k+48|0;q=k+52|0;e=k+56|0;d=k+60|0;l=k+64|0;m=(c[k+192>>2]|0)+24|0;p=k+260|0;b=b+20|0;D=+g[r>>2];M=+g[t>>2];K=+g[v>>2];I=+g[x>>2];G=+g[z>>2];O=+g[B>>2];E=+g[C>>2];Q=+g[A>>2];F=+g[y>>2];H=+g[w>>2];J=+g[u>>2];L=+g[s>>2];N=+g[q>>2];P=+g[e>>2];R=+g[d>>2];S=+g[l>>2];V=c[p>>2]|0;U=1.0;T=0;do{ga=c[m>>2]|0;fa=+g[ga+(T*80|0)>>2];ea=+g[ga+(T*80|0)+16>>2];da=+g[ga+(T*80|0)+32>>2];ca=+g[ga+(T*80|0)+4>>2];ba=+g[ga+(T*80|0)+20>>2];aa=+g[ga+(T*80|0)+36>>2];$=+g[ga+(T*80|0)+8>>2];_=+g[ga+(T*80|0)+24>>2];Z=+g[ga+(T*80|0)+40>>2];Y=+g[ga+(T*80|0)+48>>2];X=+g[ga+(T*80|0)+52>>2];W=+g[ga+(T*80|0)+56>>2];c[p>>2]=V+1;g[r>>2]=D*fa+M*ea+K*da;g[t>>2]=D*ca+M*ba+K*aa;g[v>>2]=D*$+M*_+K*Z;g[x>>2]=0.0;g[z>>2]=G*fa+O*ea+E*da;g[B>>2]=G*ca+O*ba+E*aa;g[C>>2]=G*$+O*_+E*Z;g[A>>2]=0.0;g[y>>2]=F*fa+H*ea+J*da;g[w>>2]=F*ca+H*ba+J*aa;g[u>>2]=F*$+H*_+J*Z;g[s>>2]=0.0;g[q>>2]=N+(D*Y+M*X+K*W);g[e>>2]=P+(G*Y+O*X+E*W);g[d>>2]=R+(F*Y+H*X+J*W);g[l>>2]=0.0;V=c[(c[b>>2]|0)+(T<<2)>>2]|0;W=+Rb[c[(c[V>>2]|0)+12>>2]&15](V,k,o,f,h);U=W<U?W:U;V=(c[p>>2]|0)+1|0;c[p>>2]=V;g[r>>2]=D;g[t>>2]=M;g[v>>2]=K;g[x>>2]=I;g[z>>2]=G;g[B>>2]=O;g[C>>2]=E;g[A>>2]=Q;g[y>>2]=F;g[w>>2]=H;g[u>>2]=J;g[s>>2]=L;g[q>>2]=N;g[e>>2]=P;g[d>>2]=R;g[l>>2]=S;T=T+1|0}while((T|0)!=(n|0));i=j;return+U}function wp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a+12|0;g=c[e>>2]|0;if((g|0)<=0){i=d;return}a=a+20|0;f=0;do{h=c[(c[a>>2]|0)+(f<<2)>>2]|0;if((h|0)!=0){Hb[c[(c[h>>2]|0)+16>>2]&127](h,b);g=c[e>>2]|0}f=f+1|0}while((f|0)<(g|0));i=d;return}function xp(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function yp(a,b){a=a|0;b=b|0;var d=0;d=i;b=c[b+36>>2]|0;tp(a,c[(c[(c[(c[a+4>>2]|0)+4>>2]|0)+24>>2]|0)+(b*80|0)+64>>2]|0,b);i=d;return}function zp(a){a=a|0;var b=0;b=i;Ap(a);if((a|0)==0){i=b;return}wr(a);i=b;return}function Ap(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;c[b>>2]=12872;e=b+8|0;g=c[e>>2]|0;f=c[g+8>>2]|0;if((f|0)>0){j=g+16|0;h=b+4|0;k=0;do{g=c[(c[j>>2]|0)+(k*12|0)+8>>2]|0;if((g|0)!=0){Fb[c[c[g>>2]>>2]&255](g);l=c[h>>2]|0;Hb[c[(c[l>>2]|0)+60>>2]&127](l,g)}k=k+1|0}while((k|0)!=(f|0));g=c[e>>2]|0}Lq(g);l=c[e>>2]|0;Fb[c[c[l>>2]>>2]&255](l);e=c[e>>2]|0;if((e|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0)}e=b+16|0;f=b+24|0;h=c[f>>2]|0;g=b+28|0;if((h|0)==0){a[g]=1;c[f>>2]=0;c[e>>2]=0;l=b+20|0;c[l>>2]=0;i=d;return}if((a[g]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0;a[g]=1;c[f>>2]=0;c[e>>2]=0;l=b+20|0;c[l>>2]=0;i=d;return}function Bp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[a+8>>2]|0;a=e+8|0;h=c[a>>2]|0;if((h|0)<=0){i=d;return}e=e+16|0;f=0;do{g=c[(c[e>>2]|0)+(f*12|0)+8>>2]|0;if((g|0)!=0){Hb[c[(c[g>>2]|0)+16>>2]&127](g,b);h=c[a>>2]|0}f=f+1|0}while((f|0)<(h|0));i=d;return}function Cp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0.0,Ma=0.0,Na=0.0,Oa=0.0,Pa=0.0,Qa=0.0,Ra=0.0,Sa=0.0,Ta=0.0,Ua=0;j=i;i=i+192|0;r=j+164|0;u=j+128|0;l=j+112|0;n=j+96|0;o=j+80|0;m=j+64|0;k=j;t=c[d+4>>2]|0;s=c[e+4>>2]|0;if((c[t+68>>2]|0)==(c[b+40>>2]|0)?(c[s+68>>2]|0)==(c[b+44>>2]|0):0){q=b+8|0}else{q=b+8|0;w=c[q>>2]|0;v=c[w+8>>2]|0;if((v|0)>0){z=w+16|0;x=b+4|0;w=0;do{y=c[(c[z>>2]|0)+(w*12|0)+8>>2]|0;if((y|0)!=0){Fb[c[c[y>>2]>>2]&255](y);Ka=c[x>>2]|0;Hb[c[(c[Ka>>2]|0)+60>>2]&127](Ka,y)}w=w+1|0}while((w|0)!=(v|0));w=c[q>>2]|0}Lq(w)}y=r+16|0;a[y]=1;x=r+12|0;c[x>>2]=0;w=r+4|0;c[w>>2]=0;v=r+8|0;c[v>>2]=0;A=c[q>>2]|0;z=A+8|0;G=c[z>>2]|0;if((G|0)>0){C=A+16|0;D=h+4|0;B=h+8|0;A=h+12|0;E=0;do{F=c[(c[C>>2]|0)+(E*12|0)+8>>2]|0;if((F|0)!=0){Hb[c[(c[F>>2]|0)+16>>2]&127](F,r);H=c[w>>2]|0;if((H|0)>0){F=0;do{G=c[(c[x>>2]|0)+(F<<2)>>2]|0;if((c[G+748>>2]|0)!=0){c[D>>2]=G;I=c[G+740>>2]|0;H=c[(c[B>>2]|0)+8>>2]|0;if((I|0)==(H|0)){Un(G,I+4|0,(c[(c[A>>2]|0)+8>>2]|0)+4|0)}else{Un(G,(c[(c[A>>2]|0)+8>>2]|0)+4|0,H+4|0)}c[D>>2]=0;H=c[w>>2]|0}F=F+1|0}while((F|0)<(H|0))}if((H|0)<0){if((c[v>>2]|0)<0){G=c[x>>2]|0;if((H|0)>0){F=0;do{if((F|0)!=0){c[0+(F<<2)>>2]=c[G+(F<<2)>>2]}F=F+1|0}while((F|0)!=(H|0))}if((G|0)!=0){if((a[y]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[G+ -4>>2]|0)}c[x>>2]=0}a[y]=1;c[x>>2]=0;c[v>>2]=0}do{F=(c[x>>2]|0)+(H<<2)|0;if((F|0)!=0){c[F>>2]=0}H=H+1|0}while((H|0)!=0)}c[w>>2]=0;G=c[z>>2]|0}E=E+1|0}while((E|0)<(G|0));r=c[x>>2]|0;if((r|0)!=0){if((a[y]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[r+ -4>>2]|0)}c[x>>2]=0}}a[y]=1;c[x>>2]=0;c[w>>2]=0;c[v>>2]=0;Ja=c[t+64>>2]|0;Ka=c[s+64>>2]|0;r=b+4|0;Ga=c[r>>2]|0;Ha=c[q>>2]|0;Ia=c[b+32>>2]|0;c[u>>2]=12960;c[u+4>>2]=0;c[u+8>>2]=d;c[u+12>>2]=e;c[u+16>>2]=Ga;c[u+20>>2]=f;c[u+24>>2]=h;c[u+28>>2]=Ha;c[u+32>>2]=Ia;h=d+12|0;d=c[h>>2]|0;za=+g[d>>2];Aa=+g[d+16>>2];ua=+g[d+32>>2];Ba=+g[d+4>>2];Ca=+g[d+20>>2];pa=+g[d+36>>2];Ma=+g[d+8>>2];Oa=+g[d+24>>2];Qa=+g[d+40>>2];Da=-+g[d+48>>2];Ea=-+g[d+52>>2];La=-+g[d+56>>2];e=e+12|0;d=c[e>>2]|0;wa=+g[d>>2];xa=+g[d+16>>2];ka=+g[d+32>>2];va=za*wa+Aa*xa+ua*ka;ya=+g[d+4>>2];la=+g[d+20>>2];sa=+g[d+36>>2];ra=za*ya+Aa*la+ua*sa;Pa=+g[d+8>>2];Na=+g[d+24>>2];ta=+g[d+40>>2];qa=za*Pa+Aa*Na+ua*ta;oa=Ba*wa+Ca*xa+pa*ka;na=Ba*ya+Ca*la+pa*sa;ma=Ba*Pa+Ca*Na+pa*ta;ka=Ma*wa+Oa*xa+Qa*ka;sa=Ma*ya+Oa*la+Qa*sa;ta=Ma*Pa+Oa*Na+Qa*ta;Na=+g[d+48>>2];Pa=+g[d+52>>2];la=+g[d+56>>2];ua=za*Da+Aa*Ea+ua*La+(za*Na+Aa*Pa+ua*la);pa=Ba*Da+Ca*Ea+pa*La+(Ba*Na+Ca*Pa+pa*la);la=Ma*Da+Oa*Ea+Qa*La+(Ma*Na+Oa*Pa+Qa*la);d=c[Ja>>2]|0;f=c[Ka>>2]|0;if(!((d|0)==0|(f|0)==0)){c[3580]=(c[3580]|0)+1;x=vr(1043)|0;y=x+19&-16;c[y+ -4>>2]=x;x=y;c[x>>2]=d;c[x+4>>2]=f;Aa=+Q(+va);Da=+Q(+ra);Ca=+Q(+qa);Ba=+Q(+oa);wa=+Q(+na);za=+Q(+ma);Ea=+Q(+ka);xa=+Q(+sa);ya=+Q(+ta);x=128;A=128;f=1;z=124;do{d=f+ -1|0;w=c[y+(d<<3)>>2]|0;v=c[y+(d<<3)+4>>2]|0;Ta=+g[v+16>>2];Oa=+g[v>>2];Sa=+g[v+20>>2];Pa=+g[v+4>>2];Qa=+g[v+24>>2];Ra=+g[v+8>>2];La=(Ta-Oa)*.5+0.0;Na=(Sa-Pa)*.5+0.0;Ma=(Qa-Ra)*.5+0.0;Oa=(Ta+Oa)*.5;Pa=(Sa+Pa)*.5;Ra=(Qa+Ra)*.5;Qa=ua+(va*Oa+ra*Pa+qa*Ra);Sa=pa+(oa*Oa+na*Pa+ma*Ra);Ra=la+(ka*Oa+sa*Pa+ta*Ra);Pa=La*Aa+Na*Da+Ma*Ca;Oa=La*Ba+Na*wa+Ma*za;Ma=La*Ea+Na*xa+Ma*ya;Na=Sa-Oa;La=Ra-Ma;Oa=Sa+Oa;Ma=Ra+Ma;do{if(((((+g[w>>2]<=Pa+Qa?+g[w+16>>2]>=Qa-Pa:0)?+g[w+4>>2]<=Oa:0)?+g[w+20>>2]>=Na:0)?+g[w+8>>2]<=Ma:0)?+g[w+24>>2]>=La:0){if((d|0)>(z|0)){z=x<<1;if((x|0)<(z|0)&(A|0)<(z|0)){if((x|0)!=0){c[3580]=(c[3580]|0)+1;A=vr((x<<4|3)+16|0)|0;if((A|0)==0){A=0}else{Ka=A+19&-16;c[Ka+ -4>>2]=A;A=Ka}if((x|0)>0){C=0;do{B=A+(C<<3)|0;if((B|0)!=0){Ia=y+(C<<3)|0;Ja=c[Ia+4>>2]|0;Ka=B;c[Ka>>2]=c[Ia>>2];c[Ka+4>>2]=Ja}C=C+1|0}while((C|0)!=(x|0))}}else{A=0}if((y|0)==0){y=A;A=z}else{c[3582]=(c[3582]|0)+1;wr(c[y+ -4>>2]|0);y=A;A=z}}x=z;z=z+ -4|0}D=w+40|0;B=v+40|0;C=(c[B>>2]|0)!=0;if((c[D>>2]|0)==0){if(C){Ia=w;Ka=c[v+36>>2]|0;Ja=y+(d<<3)|0;c[Ja>>2]=Ia;c[Ja+4>>2]=Ka;Ja=c[B>>2]|0;Ka=y+(f<<3)|0;c[Ka>>2]=Ia;c[Ka+4>>2]=Ja;f=f+1|0;break}else{kc[c[(c[u>>2]|0)+8>>2]&63](u,w,v);f=d;break}}else{d=y+(d<<3)|0;w=w+36|0;E=c[w>>2]|0;if(C){Ja=v+36|0;Ia=c[Ja>>2]|0;Ka=d;c[Ka>>2]=E;c[Ka+4>>2]=Ia;Ja=c[Ja>>2]|0;Ka=y+(f<<3)|0;c[Ka>>2]=c[D>>2];c[Ka+4>>2]=Ja;Ka=c[B>>2]|0;Ja=y+(f+1<<3)|0;c[Ja>>2]=c[w>>2];c[Ja+4>>2]=Ka;Ja=c[B>>2]|0;Ka=y+(f+2<<3)|0;c[Ka>>2]=c[D>>2];c[Ka+4>>2]=Ja;f=f+3|0;break}else{Ja=v;Ka=d;c[Ka>>2]=E;c[Ka+4>>2]=Ja;Ka=y+(f<<3)|0;c[Ka>>2]=c[D>>2];c[Ka+4>>2]=Ja;f=f+1|0;break}}}else{f=d}}while(0)}while((f|0)!=0);if((y|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[y+ -4>>2]|0)}}f=c[q>>2]|0;u=f+8|0;if((c[u>>2]|0)>0){f=f+16|0;z=t+24|0;B=k+4|0;F=k+8|0;G=k+12|0;H=k+16|0;t=k+20|0;d=k+24|0;v=k+28|0;w=k+32|0;x=k+36|0;I=k+40|0;y=k+44|0;A=k+48|0;C=k+52|0;D=k+56|0;E=k+60|0;S=s+24|0;T=k+4|0;U=k+8|0;V=k+12|0;W=k+16|0;X=k+20|0;ia=k+24|0;ha=k+28|0;ga=k+32|0;fa=k+36|0;ea=k+40|0;da=k+44|0;ca=k+48|0;ba=k+52|0;aa=k+56|0;L=k+60|0;_=l+8|0;$=m+8|0;K=l+4|0;M=m+4|0;s=b+16|0;J=b+20|0;P=b+24|0;O=b+28|0;R=n+4|0;N=o+4|0;Y=n+8|0;Z=o+8|0;ja=0;do{Ga=c[f>>2]|0;Fa=c[Ga+(ja*12|0)+8>>2]|0;do{if((Fa|0)!=0){Ka=c[Ga+(ja*12|0)>>2]|0;Ja=c[z>>2]|0;Ia=c[Ja+(Ka*80|0)+64>>2]|0;Ha=c[h>>2]|0;Ta=+g[Ha>>2];sa=+g[Ha+4>>2];ra=+g[Ha+8>>2];Qa=+g[Ha+16>>2];Oa=+g[Ha+20>>2];Ma=+g[Ha+24>>2];Pa=+g[Ha+32>>2];La=+g[Ha+36>>2];xa=+g[Ha+40>>2];Ea=+g[Ja+(Ka*80|0)>>2];Da=+g[Ja+(Ka*80|0)+16>>2];Ca=+g[Ja+(Ka*80|0)+32>>2];Ba=+g[Ja+(Ka*80|0)+4>>2];Aa=+g[Ja+(Ka*80|0)+20>>2];za=+g[Ja+(Ka*80|0)+36>>2];Na=+g[Ja+(Ka*80|0)+8>>2];ya=+g[Ja+(Ka*80|0)+24>>2];wa=+g[Ja+(Ka*80|0)+40>>2];Sa=+g[Ja+(Ka*80|0)+48>>2];Ra=+g[Ja+(Ka*80|0)+52>>2];ta=+g[Ja+(Ka*80|0)+56>>2];va=+g[Ha+48>>2]+(Ta*Sa+sa*Ra+ra*ta);ua=+g[Ha+52>>2]+(Qa*Sa+Oa*Ra+Ma*ta);ta=+g[Ha+56>>2]+(Pa*Sa+La*Ra+xa*ta);g[k>>2]=Ta*Ea+sa*Da+ra*Ca;g[B>>2]=Ta*Ba+sa*Aa+ra*za;g[F>>2]=Ta*Na+sa*ya+ra*wa;g[G>>2]=0.0;g[H>>2]=Qa*Ea+Oa*Da+Ma*Ca;g[t>>2]=Qa*Ba+Oa*Aa+Ma*za;g[d>>2]=Qa*Na+Oa*ya+Ma*wa;g[v>>2]=0.0;g[w>>2]=Pa*Ea+La*Da+xa*Ca;g[x>>2]=Pa*Ba+La*Aa+xa*za;g[I>>2]=Pa*Na+La*ya+xa*wa;g[y>>2]=0.0;g[A>>2]=va;g[C>>2]=ua;g[D>>2]=ta;g[E>>2]=0.0;oc[c[(c[Ia>>2]|0)+8>>2]&63](Ia,k,l,n);Ia=c[(c[f>>2]|0)+(ja*12|0)+4>>2]|0;Ha=c[S>>2]|0;Ka=c[Ha+(Ia*80|0)+64>>2]|0;Ja=c[e>>2]|0;ta=+g[Ja>>2];ua=+g[Ja+4>>2];va=+g[Ja+8>>2];wa=+g[Ja+16>>2];xa=+g[Ja+20>>2];ya=+g[Ja+24>>2];La=+g[Ja+32>>2];Na=+g[Ja+36>>2];Pa=+g[Ja+40>>2];za=+g[Ha+(Ia*80|0)>>2];Aa=+g[Ha+(Ia*80|0)+16>>2];Ba=+g[Ha+(Ia*80|0)+32>>2];Ca=+g[Ha+(Ia*80|0)+4>>2];Da=+g[Ha+(Ia*80|0)+20>>2];Ea=+g[Ha+(Ia*80|0)+36>>2];Ma=+g[Ha+(Ia*80|0)+8>>2];Oa=+g[Ha+(Ia*80|0)+24>>2];Qa=+g[Ha+(Ia*80|0)+40>>2];ra=+g[Ha+(Ia*80|0)+48>>2];sa=+g[Ha+(Ia*80|0)+52>>2];Ta=+g[Ha+(Ia*80|0)+56>>2];Ra=+g[Ja+48>>2]+(ta*ra+ua*sa+va*Ta);Sa=+g[Ja+52>>2]+(wa*ra+xa*sa+ya*Ta);Ta=+g[Ja+56>>2]+(La*ra+Na*sa+Pa*Ta);g[k>>2]=ta*za+ua*Aa+va*Ba;g[T>>2]=ta*Ca+ua*Da+va*Ea;g[U>>2]=ta*Ma+ua*Oa+va*Qa;g[V>>2]=0.0;g[W>>2]=wa*za+xa*Aa+ya*Ba;g[X>>2]=wa*Ca+xa*Da+ya*Ea;g[ia>>2]=wa*Ma+xa*Oa+ya*Qa;g[ha>>2]=0.0;g[ga>>2]=La*za+Na*Aa+Pa*Ba;g[fa>>2]=La*Ca+Na*Da+Pa*Ea;g[ea>>2]=La*Ma+Na*Oa+Pa*Qa;g[da>>2]=0.0;g[ca>>2]=Ra;g[ba>>2]=Sa;g[aa>>2]=Ta;g[L>>2]=0.0;oc[c[(c[Ka>>2]|0)+8>>2]&63](Ka,k,o,m);if(!(+g[l>>2]>+g[m>>2])?!(+g[n>>2]<+g[o>>2]):0){Ga=1}else{Ga=0}if(!(!(+g[_>>2]>+g[$>>2])?!(+g[Y>>2]<+g[Z>>2]):0)){Ga=0}if(!(+g[K>>2]>+g[M>>2])?!(+g[R>>2]<+g[N>>2]|Ga^1):0){break}Fb[c[c[Fa>>2]>>2]&255](Fa);Ga=c[r>>2]|0;Hb[c[(c[Ga>>2]|0)+60>>2]&127](Ga,Fa);Fa=c[f>>2]|0;Ga=c[Fa+(ja*12|0)>>2]|0;Fa=c[Fa+(ja*12|0)+4>>2]|0;Ia=c[s>>2]|0;if((Ia|0)==(c[J>>2]|0)?(p=(Ia|0)==0?1:Ia<<1,(Ia|0)<(p|0)):0){if((p|0)==0){Ha=0}else{c[3580]=(c[3580]|0)+1;Ha=vr((p*12|3)+16|0)|0;if((Ha|0)==0){Ha=0}else{Ka=Ha+19&-16;c[Ka+ -4>>2]=Ha;Ha=Ka}Ia=c[s>>2]|0}if((Ia|0)>0){Ja=0;do{Ka=Ha+(Ja*12|0)|0;if((Ka|0)!=0){Ua=(c[P>>2]|0)+(Ja*12|0)|0;c[Ka+0>>2]=c[Ua+0>>2];c[Ka+4>>2]=c[Ua+4>>2];c[Ka+8>>2]=c[Ua+8>>2]}Ja=Ja+1|0}while((Ja|0)!=(Ia|0))}Ia=c[P>>2]|0;if((Ia|0)!=0){if((a[O]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[Ia+ -4>>2]|0)}c[P>>2]=0}a[O]=1;c[P>>2]=Ha;c[J>>2]=p;Ia=c[s>>2]|0}Ja=c[P>>2]|0;Ha=Ja+(Ia*12|0)|0;if((Ha|0)!=0){c[Ha>>2]=Ga;c[Ja+(Ia*12|0)+4>>2]=Fa;c[Ja+(Ia*12|0)+8>>2]=0;Ia=c[s>>2]|0}c[s>>2]=Ia+1}}while(0);ja=ja+1|0}while((ja|0)<(c[u>>2]|0))}else{P=b+24|0;s=b+16|0}if((c[s>>2]|0)>0){k=0;do{Ka=c[q>>2]|0;Ua=c[P>>2]|0;Sb[c[(c[Ka>>2]|0)+8>>2]&31](Ka,c[Ua+(k*12|0)>>2]|0,c[Ua+(k*12|0)+4>>2]|0)|0;k=k+1|0}while((k|0)<(c[s>>2]|0))}l=c[P>>2]|0;k=b+28|0;if((l|0)==0){a[k]=1;c[P>>2]=0;c[s>>2]=0;Ua=b+20|0;c[Ua>>2]=0;i=j;return}if((a[k]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[l+ -4>>2]|0)}c[P>>2]=0;a[k]=1;c[P>>2]=0;c[s>>2]=0;Ua=b+20|0;c[Ua>>2]=0;i=j;return}function Dp(a){a=a|0;return}function Ep(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0.0}function Fp(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Gp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0;h=i;i=i+240|0;m=h+176|0;o=h+112|0;n=h+96|0;p=h+80|0;q=h+64|0;l=h+48|0;f=h+24|0;j=h;s=a+4|0;c[s>>2]=(c[s>>2]|0)+1;b=c[b+36>>2]|0;d=c[d+36>>2]|0;s=a+8|0;v=c[s>>2]|0;t=a+12|0;U=c[(c[v+4>>2]|0)+24>>2]|0;u=c[U+(b*80|0)+64>>2]|0;T=(c[(c[t>>2]|0)+4>>2]|0)+24|0;r=c[(c[T>>2]|0)+(d*80|0)+64>>2]|0;v=c[v+12>>2]|0;w=+g[v>>2];R=+g[v+4>>2];S=+g[v+8>>2];z=+g[v+16>>2];B=+g[v+20>>2];D=+g[v+24>>2];A=+g[v+32>>2];E=+g[v+36>>2];M=+g[v+40>>2];F=+g[U+(b*80|0)>>2];G=+g[U+(b*80|0)+16>>2];H=+g[U+(b*80|0)+32>>2];I=+g[U+(b*80|0)+4>>2];J=+g[U+(b*80|0)+20>>2];K=+g[U+(b*80|0)+36>>2];C=+g[U+(b*80|0)+8>>2];L=+g[U+(b*80|0)+24>>2];N=+g[U+(b*80|0)+40>>2];x=+g[U+(b*80|0)+48>>2];y=+g[U+(b*80|0)+52>>2];Q=+g[U+(b*80|0)+56>>2];O=+g[v+48>>2]+(w*x+R*y+S*Q);P=+g[v+52>>2]+(z*x+B*y+D*Q);Q=+g[v+56>>2]+(A*x+E*y+M*Q);g[m>>2]=w*F+R*G+S*H;g[m+4>>2]=w*I+R*J+S*K;g[m+8>>2]=w*C+R*L+S*N;g[m+12>>2]=0.0;g[m+16>>2]=z*F+B*G+D*H;g[m+20>>2]=z*I+B*J+D*K;g[m+24>>2]=z*C+B*L+D*N;g[m+28>>2]=0.0;g[m+32>>2]=A*F+E*G+M*H;g[m+36>>2]=A*I+E*J+M*K;g[m+40>>2]=A*C+E*L+M*N;g[m+44>>2]=0.0;g[m+48>>2]=O;g[m+52>>2]=P;g[m+56>>2]=Q;g[m+60>>2]=0.0;v=c[(c[t>>2]|0)+12>>2]|0;Q=+g[v>>2];P=+g[v+4>>2];O=+g[v+8>>2];N=+g[v+16>>2];M=+g[v+20>>2];L=+g[v+24>>2];E=+g[v+32>>2];C=+g[v+36>>2];A=+g[v+40>>2];T=c[T>>2]|0;K=+g[T+(d*80|0)>>2];J=+g[T+(d*80|0)+16>>2];I=+g[T+(d*80|0)+32>>2];H=+g[T+(d*80|0)+4>>2];G=+g[T+(d*80|0)+20>>2];F=+g[T+(d*80|0)+36>>2];D=+g[T+(d*80|0)+8>>2];B=+g[T+(d*80|0)+24>>2];z=+g[T+(d*80|0)+40>>2];S=+g[T+(d*80|0)+48>>2];R=+g[T+(d*80|0)+52>>2];w=+g[T+(d*80|0)+56>>2];y=+g[v+48>>2]+(Q*S+P*R+O*w);x=+g[v+52>>2]+(N*S+M*R+L*w);w=+g[v+56>>2]+(E*S+C*R+A*w);g[o>>2]=Q*K+P*J+O*I;g[o+4>>2]=Q*H+P*G+O*F;g[o+8>>2]=Q*D+P*B+O*z;g[o+12>>2]=0.0;g[o+16>>2]=N*K+M*J+L*I;g[o+20>>2]=N*H+M*G+L*F;g[o+24>>2]=N*D+M*B+L*z;g[o+28>>2]=0.0;g[o+32>>2]=E*K+C*J+A*I;g[o+36>>2]=E*H+C*G+A*F;g[o+40>>2]=E*D+C*B+A*z;g[o+44>>2]=0.0;g[o+48>>2]=y;g[o+52>>2]=x;g[o+56>>2]=w;g[o+60>>2]=0.0;oc[c[(c[u>>2]|0)+8>>2]&63](u,m,n,p);oc[c[(c[r>>2]|0)+8>>2]&63](r,o,q,l);if(!(+g[n>>2]>+g[l>>2])?!(+g[p>>2]<+g[q>>2]):0){v=1}else{v=0}if(!(!(+g[n+8>>2]>+g[l+8>>2])?!(+g[p+8>>2]<+g[q+8>>2]):0)){v=0}if(+g[n+4>>2]>+g[l+4>>2]){i=h;return}if(+g[p+4>>2]<+g[q+4>>2]|v^1){i=h;return}l=c[s>>2]|0;n=c[l+8>>2]|0;c[f>>2]=l;c[f+4>>2]=u;c[f+8>>2]=n;c[f+12>>2]=m;c[f+16>>2]=-1;c[f+20>>2]=b;n=c[t>>2]|0;l=c[n+8>>2]|0;c[j>>2]=n;c[j+4>>2]=r;c[j+8>>2]=l;c[j+12>>2]=o;c[j+16>>2]=-1;c[j+20>>2]=d;l=a+28|0;n=c[l>>2]|0;c[3552]=(c[3552]|0)+1;m=d<<16|b;m=m+~(m<<15)|0;m=(m>>10^m)*9|0;m=m>>6^m;m=m+~(m<<11)|0;m=(c[n+12>>2]|0)+ -1&(m>>16^m);a:do{if((m|0)<(c[n+32>>2]|0)?(k=c[(c[n+40>>2]|0)+(m<<2)>>2]|0,!((k|0)==-1)):0){m=c[n+16>>2]|0;n=n+60|0;while(1){if((c[m+(k*12|0)>>2]|0)==(b|0)?(c[m+(k*12|0)+4>>2]|0)==(d|0):0){break}k=c[(c[n>>2]|0)+(k<<2)>>2]|0;if((k|0)==-1){e=17;break a}}if((m+(k*12|0)|0)!=0){k=c[m+(k*12|0)+8>>2]|0}else{e=17}}else{e=17}}while(0);if((e|0)==17){k=c[a+16>>2]|0;k=Nb[c[(c[k>>2]|0)+8>>2]&15](k,f,j,c[a+32>>2]|0)|0;U=c[l>>2]|0;c[(Sb[c[(c[U>>2]|0)+12>>2]&31](U,b,d)|0)+8>>2]=k}U=a+24|0;T=c[U>>2]|0;u=T+8|0;v=c[u>>2]|0;T=c[T+12>>2]|0;c[u>>2]=f;c[(c[U>>2]|0)+12>>2]=j;u=c[U>>2]|0;kc[c[(c[u>>2]|0)+8>>2]&63](u,-1,b);u=c[U>>2]|0;kc[c[(c[u>>2]|0)+12>>2]&63](u,-1,d);Db[c[(c[k>>2]|0)+8>>2]&31](k,f,j,c[a+20>>2]|0,c[U>>2]|0);c[(c[U>>2]|0)+8>>2]=v;c[(c[U>>2]|0)+12>>2]=T;i=h;return}function Hp(a,b){a=a|0;b=b|0;return}function Ip(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=13056;c[a+12>>2]=13088;e=a+60|0;f=c[e>>2]|0;d=a+76|0;Hb[c[(c[f>>2]|0)+20>>2]&127](f,c[d>>2]|0);e=c[e>>2]|0;Hb[c[(c[e>>2]|0)+16>>2]&127](e,c[d>>2]|0);if((a|0)==0){i=b;return}wr(a);i=b;return}function Jp(a){a=a|0;var b=0,d=0,e=0;b=i;c[a>>2]=13056;c[a+12>>2]=13088;d=a+60|0;e=c[d>>2]|0;a=a+76|0;Hb[c[(c[e>>2]|0)+20>>2]&127](e,c[a>>2]|0);d=c[d>>2]|0;Hb[c[(c[d>>2]|0)+16>>2]&127](d,c[a>>2]|0);i=b;return}function Kp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;b=b+76|0;if((c[b>>2]|0)==0){i=e;return}f=d+4|0;l=c[f>>2]|0;h=d+8|0;if((l|0)==(c[h>>2]|0)?(g=(l|0)==0?1:l<<1,(l|0)<(g|0)):0){if((g|0)==0){j=0}else{c[3580]=(c[3580]|0)+1;j=vr((g<<2|3)+16|0)|0;if((j|0)==0){j=0}else{n=j+19&-16;c[n+ -4>>2]=j;j=n}l=c[f>>2]|0}k=d+12|0;if((l|0)>0){n=0;do{m=j+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}n=c[k>>2]|0;m=d+16|0;if((n|0)!=0){if((a[m]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[n+ -4>>2]|0);l=c[f>>2]|0}c[k>>2]=0}a[m]=1;c[k>>2]=j;c[h>>2]=g}d=(c[d+12>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=c[b>>2]}c[f>>2]=l+1;i=e;return}function Lp(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;c[a>>2]=13088;e=a+48|0;f=c[e>>2]|0;d=a+64|0;Hb[c[(c[f>>2]|0)+20>>2]&127](f,c[d>>2]|0);e=c[e>>2]|0;Hb[c[(c[e>>2]|0)+16>>2]&127](e,c[d>>2]|0);if((a|0)==0){i=b;return}wr(a);i=b;return}function Mp(a){a=a|0;var b=0,d=0,e=0;b=i;c[a>>2]=13088;d=a+48|0;e=c[d>>2]|0;a=a+64|0;Hb[c[(c[e>>2]|0)+20>>2]&127](e,c[a>>2]|0);d=c[d>>2]|0;Hb[c[(c[d>>2]|0)+16>>2]&127](d,c[a>>2]|0);i=b;return}function Np(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0;f=i;i=i+128|0;h=f+24|0;j=f;l=b+16|0;v=+g[b>>2];u=+g[l>>2];k=b+32|0;t=v<u?v:u;r=+g[k>>2];if((t<r?t:r)>+g[a+28>>2]){i=f;return}l=v>u?b:l;if(+g[(+g[l>>2]>r?l:k)>>2]<+g[a+12>>2]){i=f;return}l=b+8|0;m=b+24|0;u=+g[l>>2];v=+g[m>>2];k=b+40|0;t=u<v?u:v;r=+g[k>>2];if((t<r?t:r)>+g[a+36>>2]){i=f;return}l=u>v?l:m;if(+g[(+g[l>>2]>r?l:k)>>2]<+g[a+20>>2]){i=f;return}l=b+4|0;m=b+20|0;t=+g[l>>2];u=+g[m>>2];k=b+36|0;v=t<u?t:u;r=+g[k>>2];if((v<r?v:r)>+g[a+32>>2]){i=f;return}l=t>u?l:m;if(+g[(+g[l>>2]>r?l:k)>>2]<+g[a+16>>2]){i=f;return}l=a+8|0;m=c[a+48>>2]|0;n=a+4|0;o=c[n>>2]|0;if((c[(c[o+4>>2]|0)+4>>2]|0)>=20){i=f;return}w=b+16|0;q=b+32|0;c[h+8>>2]=0;g[h+12>>2]=1.0;g[h+16>>2]=1.0;g[h+20>>2]=1.0;g[h+24>>2]=0.0;p=h+44|0;k=h+52|0;c[k>>2]=0;c[h>>2]=11328;s=h+56|0;c[h+4>>2]=1;c[s+0>>2]=c[b+0>>2];c[s+4>>2]=c[b+4>>2];c[s+8>>2]=c[b+8>>2];c[s+12>>2]=c[b+12>>2];s=h+72|0;c[s+0>>2]=c[w+0>>2];c[s+4>>2]=c[w+4>>2];c[s+8>>2]=c[w+8>>2];c[s+12>>2]=c[w+12>>2];s=h+88|0;c[s+0>>2]=c[q+0>>2];c[s+4>>2]=c[q+4>>2];c[s+8>>2]=c[q+8>>2];c[s+12>>2]=c[q+12>>2];g[p>>2]=+g[a+56>>2];p=c[l>>2]|0;s=c[p+8>>2]|0;b=c[p+12>>2]|0;c[j>>2]=p;c[j+4>>2]=h;c[j+8>>2]=s;c[j+12>>2]=b;c[j+16>>2]=d;c[j+20>>2]=e;b=Nb[c[(c[m>>2]|0)+8>>2]&15](m,o,j,c[a+64>>2]|0)|0;o=a+44|0;s=c[o>>2]|0;p=s+8|0;q=c[p>>2]|0;if((c[q+8>>2]|0)==(c[(c[l>>2]|0)+8>>2]|0)){c[p>>2]=j;w=c[o>>2]|0;kc[c[(c[w>>2]|0)+8>>2]&63](w,d,e)}else{w=s+12|0;q=c[w>>2]|0;c[w>>2]=j;w=c[o>>2]|0;kc[c[(c[w>>2]|0)+12>>2]&63](w,d,e)}Db[c[(c[b>>2]|0)+8>>2]&31](b,c[n>>2]|0,j,c[a+52>>2]|0,c[o>>2]|0);a=c[o>>2]|0;j=a+8|0;if((c[(c[j>>2]|0)+8>>2]|0)==(c[(c[l>>2]|0)+8>>2]|0)){c[j>>2]=q}else{c[a+12>>2]=q}Fb[c[c[b>>2]>>2]&255](b);Hb[c[(c[m>>2]|0)+60>>2]&127](m,b);c[h>>2]=11024;h=c[k>>2]|0;if((h|0)==0){i=f;return}Fb[c[c[h>>2]>>2]&255](h);h=c[k>>2]|0;if((h|0)==0){i=f;return}c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0);i=f;return}function Op(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0;j=i;i=i+64|0;l=j;m=(a[b+8|0]|0)!=0;k=m?e:d;n=m?d:e;m=c[n+4>>2]|0;if(!(((c[m+4>>2]|0)+ -21|0)>>>0<9)){i=j;return}if((c[(c[k+4>>2]|0)+4>>2]|0)>=20){i=j;return}r=+Vb[c[(c[m>>2]|0)+48>>2]&3](m);q=b+76|0;o=h+4|0;c[o>>2]=c[q>>2];e=b+16|0;c[e>>2]=k;d=b+20|0;c[d>>2]=n;c[b+64>>2]=f;g[b+68>>2]=r;c[b+56>>2]=h;s=c[n+12>>2]|0;H=+g[s>>2];G=+g[s+16>>2];F=+g[s+32>>2];E=+g[s+4>>2];D=+g[s+20>>2];C=+g[s+36>>2];y=+g[s+8>>2];w=+g[s+24>>2];u=+g[s+40>>2];B=-+g[s+48>>2];A=-+g[s+52>>2];z=-+g[s+56>>2];s=c[k+12>>2]|0;Q=+g[s>>2];P=+g[s+16>>2];O=+g[s+32>>2];N=+g[s+4>>2];M=+g[s+20>>2];L=+g[s+36>>2];K=+g[s+8>>2];J=+g[s+24>>2];I=+g[s+40>>2];x=+g[s+48>>2];v=+g[s+52>>2];t=+g[s+56>>2];g[l>>2]=H*Q+G*P+F*O;g[l+4>>2]=H*N+G*M+F*L;g[l+8>>2]=H*K+G*J+F*I;g[l+12>>2]=0.0;g[l+16>>2]=E*Q+D*P+C*O;g[l+20>>2]=E*N+D*M+C*L;g[l+24>>2]=E*K+D*J+C*I;g[l+28>>2]=0.0;g[l+32>>2]=y*Q+w*P+u*O;g[l+36>>2]=y*N+w*M+u*L;g[l+40>>2]=y*K+w*J+u*I;g[l+44>>2]=0.0;g[l+48>>2]=H*B+G*A+F*z+(H*x+G*v+F*t);g[l+52>>2]=E*B+D*A+C*z+(E*x+D*v+C*t);g[l+56>>2]=y*B+w*A+u*z+(y*x+w*v+u*t);g[l+60>>2]=0.0;s=c[(c[e>>2]|0)+4>>2]|0;p=b+24|0;f=b+40|0;oc[c[(c[s>>2]|0)+8>>2]&63](s,l,p,f);g[f>>2]=+g[f>>2]+r;l=b+44|0;g[l>>2]=+g[l>>2]+r;l=b+48|0;g[l>>2]=+g[l>>2]+r;g[p>>2]=+g[p>>2]-r;l=b+28|0;g[l>>2]=+g[l>>2]-r;l=b+32|0;g[l>>2]=+g[l>>2]-r;l=c[q>>2]|0;n=c[n+8>>2]|0;c[l+740>>2]=c[k+8>>2];c[l+744>>2]=n;oc[c[(c[m>>2]|0)+64>>2]&63](m,b+12|0,p,f);k=c[o>>2]|0;do{if((c[k+748>>2]|0)!=0){b=c[k+740>>2]|0;f=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(f|0)){Un(k,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);break}else{Un(k,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,f+4|0);break}}}while(0);c[e>>2]=0;c[d>>2]=0;i=j;return}function Pp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0,T=0.0,U=0.0,V=0.0,W=0,X=0.0,Y=0.0,Z=0.0,_=0,$=0,aa=0,ba=0.0;h=i;i=i+240|0;k=h+224|0;f=h+208|0;j=h;S=(a[b+8|0]|0)!=0;b=S?e:d;e=S?d:e;S=b+116|0;_=b+52|0;V=+g[S>>2]- +g[_>>2];d=b+120|0;$=b+56|0;X=+g[d>>2]- +g[$>>2];W=b+124|0;aa=b+60|0;Y=+g[W>>2]- +g[aa>>2];Z=+g[b+252>>2];if(V*V+X*X+Y*Y<Z*Z){Z=1.0;i=h;return+Z}w=+g[e+4>>2];y=+g[e+20>>2];A=+g[e+36>>2];l=+g[e+8>>2];p=+g[e+24>>2];n=+g[e+40>>2];m=+g[e+12>>2];q=+g[e+28>>2];o=+g[e+44>>2];z=-+g[e+52>>2];x=-+g[e+56>>2];X=-+g[e+60>>2];P=w*z+y*x+A*X;Q=l*z+p*x+n*X;X=m*z+q*x+o*X;x=+g[b+4>>2];z=+g[b+20>>2];B=+g[b+36>>2];C=+g[b+8>>2];v=+g[b+24>>2];u=+g[b+40>>2];t=+g[b+12>>2];s=+g[b+28>>2];r=+g[b+44>>2];I=+g[_>>2];H=+g[$>>2];G=+g[aa>>2];L=P+(w*I+y*H+A*G);F=Q+(l*I+p*H+n*G);G=X+(m*I+q*H+o*G);H=+g[b+68>>2];I=+g[b+84>>2];E=+g[b+100>>2];K=+g[b+72>>2];D=+g[b+88>>2];M=+g[b+104>>2];N=+g[b+76>>2];O=+g[b+92>>2];J=+g[b+108>>2];Y=+g[S>>2];Z=+g[d>>2];R=+g[W>>2];P=P+(w*Y+y*Z+A*R);Q=Q+(l*Y+p*Z+n*R);R=X+(m*Y+q*Z+o*R);e=c[e+192>>2]|0;if(!(((c[e+4>>2]|0)+ -21|0)>>>0<9)){Z=1.0;i=h;return+Z}g[k>>2]=L;d=k+4|0;g[d>>2]=F;_=k+8|0;g[_>>2]=G;g[k+12>>2]=0.0;if(P<L){g[k>>2]=P;Z=P}else{Z=L}if(Q<F){g[d>>2]=Q;Y=Q}else{Y=F}if(R<G){g[_>>2]=R;X=R}else{X=G}g[f>>2]=L;W=f+4|0;g[W>>2]=F;S=f+8|0;g[S>>2]=G;g[f+12>>2]=0.0;if(L<P){g[f>>2]=P;T=P}else{T=L}if(F<Q){g[W>>2]=Q;U=Q}else{U=F}if(G<R){g[S>>2]=R;V=R}else{V=G}ba=+g[b+248>>2];g[k>>2]=Z-ba;g[d>>2]=Y-ba;g[_>>2]=X-ba;g[f>>2]=ba+T;g[W>>2]=ba+U;g[S>>2]=ba+V;c[j>>2]=13216;g[j+4>>2]=w*x+y*z+A*B;g[j+8>>2]=w*C+y*v+A*u;g[j+12>>2]=w*t+y*s+A*r;g[j+16>>2]=0.0;g[j+20>>2]=l*x+p*z+n*B;g[j+24>>2]=l*C+p*v+n*u;g[j+28>>2]=l*t+p*s+n*r;g[j+32>>2]=0.0;g[j+36>>2]=m*x+q*z+o*B;g[j+40>>2]=m*C+q*v+o*u;g[j+44>>2]=m*t+q*s+o*r;g[j+48>>2]=0.0;g[j+52>>2]=L;g[j+56>>2]=F;g[j+60>>2]=G;g[j+64>>2]=0.0;g[j+68>>2]=w*H+y*I+A*E;g[j+72>>2]=w*K+y*D+A*M;g[j+76>>2]=w*N+y*O+A*J;g[j+80>>2]=0.0;g[j+84>>2]=l*H+p*I+n*E;g[j+88>>2]=l*K+p*D+n*M;g[j+92>>2]=l*N+p*O+n*J;g[j+96>>2]=0.0;g[j+100>>2]=m*H+q*I+o*E;g[j+104>>2]=m*K+q*D+o*M;g[j+108>>2]=m*N+q*O+o*J;g[j+112>>2]=0.0;g[j+116>>2]=P;g[j+120>>2]=Q;g[j+124>>2]=R;g[j+128>>2]=0.0;g[j+196>>2]=ba;d=j+200|0;b=b+244|0;g[d>>2]=+g[b>>2];if((e|0)==0){ba=1.0;i=h;return+ba}oc[c[(c[e>>2]|0)+64>>2]&63](e,j,k,f);l=+g[d>>2];if(!(l<+g[b>>2])){ba=1.0;i=h;return+ba}g[b>>2]=l;ba=l;i=h;return+ba}function Qp(a){a=a|0;return}function Rp(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Sp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;e=i;i=i+784|0;n=e+712|0;m=e+536|0;p=e+480|0;l=e+376|0;q=e+16|0;o=e;g[n>>2]=1.0;k=n+4|0;j=n+20|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;g[j>>2]=1.0;j=n+24|0;k=n+40|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;g[k>>2]=1.0;k=n+44|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[m>>2]=6728;k=m+164|0;c[m+168>>2]=0;g[m+172>>2]=0.0;j=b+200|0;g[k>>2]=+g[j>>2];u=+g[b+196>>2];c[p+8>>2]=0;g[p+12>>2]=1.0;g[p+16>>2]=1.0;g[p+20>>2]=1.0;g[p+24>>2]=0.0;c[p>>2]=11632;c[p+4>>2]=8;g[p+28>>2]=u;g[p+44>>2]=u;c[l+8>>2]=0;g[l+12>>2]=1.0;g[l+16>>2]=1.0;g[l+20>>2]=1.0;g[l+24>>2]=0.0;g[l+44>>2]=.03999999910593033;f=l+52|0;c[f>>2]=0;r=d+32|0;s=d+16|0;c[l>>2]=11328;t=l+56|0;c[l+4>>2]=1;c[t+0>>2]=c[d+0>>2];c[t+4>>2]=c[d+4>>2];c[t+8>>2]=c[d+8>>2];c[t+12>>2]=c[d+12>>2];d=l+72|0;c[d+0>>2]=c[s+0>>2];c[d+4>>2]=c[s+4>>2];c[d+8>>2]=c[s+8>>2];c[d+12>>2]=c[s+12>>2];d=l+88|0;c[d+0>>2]=c[r+0>>2];c[d+4>>2]=c[r+4>>2];c[d+8>>2]=c[r+8>>2];c[d+12>>2]=c[r+12>>2];g[q+308>>2]=9999999747378752.0e-20;a[q+332|0]=0;c[o>>2]=11944;c[o+4>>2]=q;c[o+8>>2]=p;c[o+12>>2]=l;if(To(o,b+4|0,b+68|0,n,n,m)|0?(h=+g[k>>2],+g[j>>2]>h):0){g[j>>2]=h}c[l>>2]=11024;b=c[f>>2]|0;if((b|0)==0){i=e;return}Fb[c[c[b>>2]>>2]&255](b);b=c[f>>2]|0;if((b|0)==0){i=e;return}c[3582]=(c[3582]|0)+1;wr(c[b+ -4>>2]|0);i=e;return}function Tp(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function Up(a){a=a|0;return}function Vp(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=13440;if((a[b+16|0]|0)!=0?(e=c[b+20>>2]|0,(e|0)!=0):0){f=c[b+4>>2]|0;Hb[c[(c[f>>2]|0)+16>>2]&127](f,e)}wr(b);i=d;return}function Wp(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=13440;if((a[b+16|0]|0)==0){i=d;return}e=c[b+20>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Hb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}



function Xq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;g=i;i=i+96|0;x=g+72|0;y=g+48|0;j=g+24|0;h=g;z=c[e>>2]|0;k=c[f>>2]|0;n=(z|0)!=0;if(n){l=c[z+12>>2]|0}else{l=b}E=c[l+88>>2]|0;D=c[l+92>>2]|0;C=c[l+96>>2]|0;if((k|0)==0){l=d}else{l=c[k+12>>2]|0}J=c[l+88>>2]|0;I=c[l+92>>2]|0;H=c[l+96>>2]|0;q=c[b+88>>2]|0;l=(c[d+88>>2]|0)-q|0;r=c[b+92>>2]|0;m=(c[d+92>>2]|0)-r|0;s=c[b+96>>2]|0;d=(c[d+96>>2]|0)-s|0;n=c[(n?z:k)+12>>2]|0;B=(c[n+88>>2]|0)-q|0;A=(c[n+92>>2]|0)-r|0;n=(c[n+96>>2]|0)-s|0;b=(ba(A,d)|0)-(ba(n,m)|0)|0;p=((b|0)<0)<<31>>31;n=(ba(n,l)|0)-(ba(B,d)|0)|0;o=((n|0)<0)<<31>>31;A=(ba(B,m)|0)-(ba(A,l)|0)|0;B=((A|0)<0)<<31>>31;v=Pr(b|0,p|0,q|0,((q|0)<0)<<31>>31|0)|0;t=F;K=Pr(n|0,o|0,r|0,((r|0)<0)<<31>>31|0)|0;L=F;s=Pr(A|0,B|0,s|0,((s|0)<0)<<31>>31|0)|0;s=Er(v|0,t|0,s|0,F|0)|0;L=Er(s|0,F|0,K|0,L|0)|0;K=F;s=((m|0)<0)<<31>>31;t=Pr(A|0,B|0,m|0,s|0)|0;v=F;r=((d|0)<0)<<31>>31;q=Pr(n|0,o|0,d|0,r|0)|0;q=Br(t|0,v|0,q|0,F|0)|0;v=F;r=Pr(b|0,p|0,d|0,r|0)|0;t=F;N=((l|0)<0)<<31>>31;u=Pr(A|0,B|0,l|0,N|0)|0;u=Br(r|0,t|0,u|0,F|0)|0;t=F;N=Pr(n|0,o|0,l|0,N|0)|0;r=F;s=Pr(b|0,p|0,m|0,s|0)|0;s=Br(N|0,r|0,s|0,F|0)|0;r=F;N=Pr(q|0,v|0,E|0,((E|0)<0)<<31>>31|0)|0;ma=F;M=Pr(u|0,t|0,D|0,((D|0)<0)<<31>>31|0)|0;ma=Er(M|0,F|0,N|0,ma|0)|0;N=F;M=Pr(s|0,r|0,C|0,((C|0)<0)<<31>>31|0)|0;M=Er(ma|0,N|0,M|0,F|0)|0;N=F;if((z|0)!=0?(c[z+12>>2]|0)!=0:0){G=a+100|0;O=z;while(1){O=c[(c[O+8>>2]|0)+4>>2]|0;R=O+12|0;Q=c[R>>2]|0;P=c[Q+88>>2]|0;U=((P|0)<0)<<31>>31;la=Pr(P|0,U|0,b|0,p|0)|0;ka=F;T=c[Q+92>>2]|0;S=((T|0)<0)<<31>>31;V=Pr(T|0,S|0,n|0,o|0)|0;ka=Er(V|0,F|0,la|0,ka|0)|0;la=F;Q=c[Q+96>>2]|0;V=((Q|0)<0)<<31>>31;ma=Pr(Q|0,V|0,A|0,B|0)|0;ma=Er(ka|0,la|0,ma|0,F|0)|0;la=F;if((la|0)<(K|0)|(la|0)==(K|0)&ma>>>0<L>>>0){break}if((c[O+20>>2]|0)==(c[G>>2]|0)){break}P=Pr(P|0,U|0,q|0,v|0)|0;ma=F;la=Pr(T|0,S|0,u|0,t|0)|0;ma=Er(la|0,F|0,P|0,ma|0)|0;P=F;Q=Pr(Q|0,V|0,s|0,r|0)|0;Q=Er(ma|0,P|0,Q|0,F|0)|0;P=F;if(!((P|0)>(N|0)|(P|0)==(N|0)&Q>>>0>M>>>0)){break}c[e>>2]=O;ma=c[R>>2]|0;E=c[ma+88>>2]|0;D=c[ma+92>>2]|0;C=c[ma+96>>2]|0;if((ma|0)==0){M=Q;N=P;break}else{N=P;M=Q}}G=c[f>>2]|0}else{G=k}P=Pr(q|0,v|0,J|0,((J|0)<0)<<31>>31|0)|0;ma=F;Q=Pr(u|0,t|0,I|0,((I|0)<0)<<31>>31|0)|0;ma=Er(Q|0,F|0,P|0,ma|0)|0;P=F;Q=Pr(s|0,r|0,H|0,((H|0)<0)<<31>>31|0)|0;Q=Er(ma|0,P|0,Q|0,F|0)|0;P=F;a:do{if((G|0)!=0){if((c[G+12>>2]|0)!=0){O=a+100|0;while(1){R=c[c[G+8>>2]>>2]|0;S=R+12|0;U=c[S>>2]|0;Y=c[U+88>>2]|0;X=((Y|0)<0)<<31>>31;la=Pr(Y|0,X|0,b|0,p|0)|0;ka=F;W=c[U+92>>2]|0;V=((W|0)<0)<<31>>31;T=Pr(W|0,V|0,n|0,o|0)|0;ka=Er(T|0,F|0,la|0,ka|0)|0;la=F;U=c[U+96>>2]|0;T=((U|0)<0)<<31>>31;ma=Pr(U|0,T|0,A|0,B|0)|0;ma=Er(ka|0,la|0,ma|0,F|0)|0;la=F;if((la|0)<(K|0)|(la|0)==(K|0)&ma>>>0<L>>>0){break a}if((c[R+20>>2]|0)==(c[O>>2]|0)){break a}ma=Pr(Y|0,X|0,q|0,v|0)|0;la=F;ka=Pr(W|0,V|0,u|0,t|0)|0;la=Er(ka|0,F|0,ma|0,la|0)|0;ma=F;U=Pr(U|0,T|0,s|0,r|0)|0;U=Er(la|0,ma|0,U|0,F|0)|0;T=F;if(!((T|0)>(P|0)|(T|0)==(P|0)&U>>>0>Q>>>0)){break a}c[f>>2]=R;ma=c[S>>2]|0;J=c[ma+88>>2]|0;I=c[ma+92>>2]|0;H=c[ma+96>>2]|0;if((ma|0)==0){Q=U;P=T;G=R;break}else{G=R;P=T;Q=U}}}}else{G=0}}while(0);L=Br(Q|0,P|0,M|0,N|0)|0;K=F;if((K|0)>0|(K|0)==0&L>>>0>0){T=a+100|0;P=Br(0,0,A|0,B|0)|0;Q=F;R=y+16|0;M=y+8|0;N=x+16|0;O=x+8|0;V=C;S=D;U=E;_=H;$=I;aa=J;X=L;W=K;b:while(1){c:while(1){Y=(ba($-S|0,m)|0)+(ba(_-V|0,d)|0)+(ba(aa-U|0,l)|0)|0;Z=((Y|0)<0)<<31>>31;ea=c[e>>2]|0;do{if(((ea|0)!=0?(c[ea+12>>2]|0)!=0:0)?(w=c[(c[ea>>2]|0)+8>>2]|0,(c[w+20>>2]|0)>(c[T>>2]|0)):0){fa=c[w+12>>2]|0;ca=c[fa+88>>2]|0;la=ca-U|0;da=c[fa+92>>2]|0;ma=da-S|0;fa=c[fa+96>>2]|0;ga=fa-V|0;ha=Pr(la|0,((la|0)<0)<<31>>31|0,q|0,v|0)|0;ka=F;ia=Pr(ma|0,((ma|0)<0)<<31>>31|0,u|0,t|0)|0;ka=Er(ia|0,F|0,ha|0,ka|0)|0;ha=F;ia=Pr(ga|0,((ga|0)<0)<<31>>31|0,s|0,r|0)|0;ia=Er(ka|0,ha|0,ia|0,F|0)|0;ha=F;ga=(ba(ma,m)|0)+(ba(la,l)|0)+(ba(ga,d)|0)|0;la=((ga|0)<0)<<31>>31;if((ia|0)==0&(ha|0)==0){if((ga|0)<0){break c}else{break}}if((ha|0)<0){if((ga|0)>0){ja=1;ka=1}else{ma=(ga|0)<0;ga=Br(0,0,ga|0,la|0)|0;ja=ma?-1:0;ka=ma?-1:0;ga=ma?ga:0;la=ma?F:0}if(!((ha|0)>0|(ha|0)==0&ia>>>0>0)){ia=Br(0,0,ia|0,ha|0)|0;ja=0-ka|0;ha=F}do{if((Y|0)<=0){if((Y|0)<0){c[N>>2]=-1;ma=Br(0,0,Y|0,Z|0)|0;ka=x;c[ka>>2]=ma;c[ka+4>>2]=F;ka=-1;break}else{c[N>>2]=0;ka=x;c[ka>>2]=0;c[ka+4>>2]=0;ka=0;break}}else{c[N>>2]=1;ka=x;c[ka>>2]=Y;c[ka+4>>2]=Z;ka=1}}while(0);do{if(!((W|0)>0|(W|0)==0&X>>>0>0)){if((W|0)<0){c[N>>2]=0-ka;ka=Br(0,0,X|0,W|0)|0;ma=O;c[ma>>2]=ka;c[ma+4>>2]=F;break}else{ma=O;c[ma>>2]=0;c[ma+4>>2]=0;break}}else{ma=O;c[ma>>2]=X;c[ma+4>>2]=W}}while(0);if((Tq(ga,la,ia,ha,ja,x)|0)>-1){break c}}}}while(0);ca=c[f>>2]|0;if((ca|0)==0){w=117;break b}if((c[ca+12>>2]|0)==0){w=117;break b}ca=c[c[ca+8>>2]>>2]|0;if((c[ca+20>>2]|0)<=(c[T>>2]|0)){w=117;break b}da=ca+12|0;fa=c[da>>2]|0;ea=c[fa+88>>2]|0;ga=ea-aa|0;aa=c[fa+92>>2]|0;ha=aa-$|0;fa=c[fa+96>>2]|0;ia=fa-_|0;ja=((ga|0)<0)<<31>>31;ma=Pr(ga|0,ja|0,b|0,p|0)|0;ka=F;$=((ha|0)<0)<<31>>31;_=Pr(ha|0,$|0,n|0,o|0)|0;ka=Er(_|0,F|0,ma|0,ka|0)|0;ma=F;_=((ia|0)<0)<<31>>31;la=Pr(ia|0,_|0,P|0,Q|0)|0;if(!((ka|0)==(la|0)&(ma|0)==(F|0))){w=117;break b}ma=Pr(ga|0,ja|0,q|0,v|0)|0;la=F;$=Pr(ha|0,$|0,u|0,t|0)|0;la=Er($|0,F|0,ma|0,la|0)|0;ma=F;$=Pr(ia|0,_|0,s|0,r|0)|0;$=Er(la|0,ma|0,$|0,F|0)|0;_=F;ia=(ba(ha,m)|0)+(ba(ga,l)|0)+(ba(ia,d)|0)|0;ga=((ia|0)<0)<<31>>31;ma=ea-U|0;la=aa-S|0;ea=fa-V|0;fa=Pr(ma|0,((ma|0)<0)<<31>>31|0,q|0,v|0)|0;ma=F;la=Pr(la|0,((la|0)<0)<<31>>31|0,u|0,t|0)|0;ma=Er(la|0,F|0,fa|0,ma|0)|0;fa=F;ea=Pr(ea|0,((ea|0)<0)<<31>>31|0,s|0,r|0)|0;ea=Er(ma|0,fa|0,ea|0,F|0)|0;fa=F;if(!((fa|0)>0|(fa|0)==0&ea>>>0>0)){w=117;break b}if(($|0)==0&(_|0)==0){if((ia|0)>=0){w=117;break b}}else{if((_|0)>=0){w=117;break b}if((ia|0)>0){ha=1;ja=1;aa=ia}else{ka=(ia|0)<0;aa=Br(0,0,ia|0,ga|0)|0;ha=ka?-1:0;ja=ka?-1:0;aa=ka?aa:0;ga=ka?F:0}if(!((_|0)>0|(_|0)==0&$>>>0>0)){$=Br(0,0,$|0,_|0)|0;ha=0-ja|0;_=F}do{if((Y|0)<=0){if((Y|0)<0){c[R>>2]=-1;ma=Br(0,0,Y|0,Z|0)|0;Y=y;c[Y>>2]=ma;c[Y+4>>2]=F;Y=-1;break}else{c[R>>2]=0;Y=y;c[Y>>2]=0;c[Y+4>>2]=0;Y=0;break}}else{c[R>>2]=1;ma=y;c[ma>>2]=Y;c[ma+4>>2]=Z;Y=1}}while(0);do{if(!((W|0)>0|(W|0)==0&X>>>0>0)){if((W|0)<0){c[R>>2]=0-Y;la=Br(0,0,X|0,W|0)|0;ma=M;c[ma>>2]=la;c[ma+4>>2]=F;break}else{ma=M;c[ma>>2]=0;c[ma+4>>2]=0;break}}else{ma=M;c[ma>>2]=X;c[ma+4>>2]=W}}while(0);if((Tq(aa,ga,$,_,ha,y)|0)<=0){w=117;break b}}c[f>>2]=ca;_=c[da>>2]|0;aa=c[_+88>>2]|0;$=c[_+92>>2]|0;_=c[_+96>>2]|0;W=fa;X=ea}ma=aa-ca|0;ka=$-da|0;X=_-fa|0;ma=Pr(ma|0,((ma|0)<0)<<31>>31|0,q|0,v|0)|0;la=F;ka=Pr(ka|0,((ka|0)<0)<<31>>31|0,u|0,t|0)|0;la=Er(ka|0,F|0,ma|0,la|0)|0;ma=F;X=Pr(X|0,((X|0)<0)<<31>>31|0,s|0,r|0)|0;X=Er(la|0,ma|0,X|0,F|0)|0;c[e>>2]=(ea|0)==(z|0)?0:w;V=fa;S=da;U=ca;W=F}if((w|0)==117){i=g;return}}if((K|0)>=0){i=g;return}a=a+100|0;w=Br(0,0,A|0,B|0)|0;z=F;y=h+16|0;B=h+8|0;A=j+16|0;x=j+8|0;while(1){M=(ba(I-D|0,m)|0)+(ba(H-C|0,d)|0)+(ba(J-E|0,l)|0)|0;N=((M|0)<0)<<31>>31;d:do{if((G|0)==0){G=M}else{O=M;while(1){if((c[G+12>>2]|0)==0){G=O;break d}S=c[(c[G+4>>2]|0)+8>>2]|0;if((c[S+20>>2]|0)<=(c[a>>2]|0)){G=O;break d}R=c[S+12>>2]|0;P=c[R+88>>2]|0;W=P-J|0;Q=c[R+92>>2]|0;ma=Q-I|0;R=c[R+96>>2]|0;U=R-H|0;T=Pr(W|0,((W|0)<0)<<31>>31|0,q|0,v|0)|0;la=F;V=Pr(ma|0,((ma|0)<0)<<31>>31|0,u|0,t|0)|0;la=Er(V|0,F|0,T|0,la|0)|0;T=F;V=Pr(U|0,((U|0)<0)<<31>>31|0,s|0,r|0)|0;V=Er(la|0,T|0,V|0,F|0)|0;T=F;U=(ba(ma,m)|0)+(ba(W,l)|0)+(ba(U,d)|0)|0;W=((U|0)<0)<<31>>31;if((V|0)==0&(T|0)==0){if((U|0)<=0){G=O;break d}}else{if((T|0)>=0){G=O;break d}if((U|0)>0){X=1;Y=1}else{Z=(U|0)<0;U=Br(0,0,U|0,W|0)|0;X=Z?-1:0;Y=Z?-1:0;U=Z?U:0;W=Z?F:0}if(!((T|0)>0|(T|0)==0&V>>>0>0)){V=Br(0,0,V|0,T|0)|0;X=0-Y|0;T=F}do{if((O|0)<=0){if((O|0)<0){c[A>>2]=-1;ma=Br(0,0,M|0,N|0)|0;Y=j;c[Y>>2]=ma;c[Y+4>>2]=F;Y=-1;break}else{c[A>>2]=0;Y=j;c[Y>>2]=0;c[Y+4>>2]=0;Y=0;break}}else{c[A>>2]=1;Y=j;c[Y>>2]=M;c[Y+4>>2]=N;Y=1}}while(0);do{if(!((K|0)>0|(K|0)==0&L>>>0>0)){if((K|0)<0){c[A>>2]=0-Y;la=Br(0,0,L|0,K|0)|0;ma=x;c[ma>>2]=la;c[ma+4>>2]=F;break}else{ma=x;c[ma>>2]=0;c[ma+4>>2]=0;break}}else{ma=x;c[ma>>2]=L;c[ma+4>>2]=K}}while(0);if((Tq(U,W,V,T,X,j)|0)>=1){G=O;break d}}I=P-E|0;J=Q-D|0;H=R-C|0;K=Pr(I|0,((I|0)<0)<<31>>31|0,q|0,v|0)|0;ma=F;L=Pr(J|0,((J|0)<0)<<31>>31|0,u|0,t|0)|0;ma=Er(L|0,F|0,K|0,ma|0)|0;K=F;L=Pr(H|0,((H|0)<0)<<31>>31|0,s|0,r|0)|0;L=Er(ma|0,K|0,L|0,F|0)|0;K=F;G=(G|0)==(k|0)?0:S;c[f>>2]=G;M=(ba(J,m)|0)+(ba(H,d)|0)+(ba(I,l)|0)|0;N=((M|0)<0)<<31>>31;if((G|0)==0){H=R;I=Q;J=P;G=M;break}else{J=P;I=Q;H=R;O=M}}}}while(0);O=c[e>>2]|0;if((O|0)==0){w=117;break}if((c[O+12>>2]|0)==0){w=117;break}P=c[(c[O+8>>2]|0)+4>>2]|0;if((c[P+20>>2]|0)<=(c[a>>2]|0)){w=117;break}O=P+12|0;R=c[O>>2]|0;Q=c[R+88>>2]|0;S=Q-E|0;E=c[R+92>>2]|0;T=E-D|0;R=c[R+96>>2]|0;U=R-C|0;V=((S|0)<0)<<31>>31;ma=Pr(S|0,V|0,b|0,p|0)|0;ka=F;D=((T|0)<0)<<31>>31;C=Pr(T|0,D|0,n|0,o|0)|0;ka=Er(C|0,F|0,ma|0,ka|0)|0;ma=F;C=((U|0)<0)<<31>>31;la=Pr(U|0,C|0,w|0,z|0)|0;if(!((ka|0)==(la|0)&(ma|0)==(F|0))){w=117;break}V=Pr(S|0,V|0,q|0,v|0)|0;la=F;D=Pr(T|0,D|0,u|0,t|0)|0;la=Er(D|0,F|0,V|0,la|0)|0;V=F;D=Pr(U|0,C|0,s|0,r|0)|0;D=Er(la|0,V|0,D|0,F|0)|0;C=F;V=(ba(T,m)|0)+(ba(S,l)|0)+(ba(U,d)|0)|0;S=((V|0)<0)<<31>>31;Q=J-Q|0;la=I-E|0;R=H-R|0;Q=Pr(Q|0,((Q|0)<0)<<31>>31|0,q|0,v|0)|0;ma=F;la=Pr(la|0,((la|0)<0)<<31>>31|0,u|0,t|0)|0;ma=Er(la|0,F|0,Q|0,ma|0)|0;Q=F;R=Pr(R|0,((R|0)<0)<<31>>31|0,s|0,r|0)|0;R=Er(ma|0,Q|0,R|0,F|0)|0;Q=F;if((Q|0)>=0){w=117;break}if((D|0)==0&(C|0)==0){if((V|0)<=0){w=117;break}}else{if((C|0)>=0){w=117;break}if((V|0)>0){U=1;T=1;E=V}else{W=(V|0)<0;E=Br(0,0,V|0,S|0)|0;U=W?-1:0;T=W?-1:0;E=W?E:0;S=W?F:0}if(!((C|0)>0|(C|0)==0&D>>>0>0)){D=Br(0,0,D|0,C|0)|0;U=0-T|0;C=F}do{if((G|0)<=0){if((G|0)<0){c[y>>2]=-1;ma=Br(0,0,M|0,N|0)|0;G=h;c[G>>2]=ma;c[G+4>>2]=F;G=-1;break}else{c[y>>2]=0;G=h;c[G>>2]=0;c[G+4>>2]=0;G=0;break}}else{c[y>>2]=1;G=h;c[G>>2]=M;c[G+4>>2]=N;G=1}}while(0);do{if(!((K|0)>0|(K|0)==0&L>>>0>0)){if((K|0)<0){c[y>>2]=0-G;la=Br(0,0,L|0,K|0)|0;ma=B;c[ma>>2]=la;c[ma+4>>2]=F;break}else{ma=B;c[ma>>2]=0;c[ma+4>>2]=0;break}}else{ma=B;c[ma>>2]=L;c[ma+4>>2]=K}}while(0);if((Tq(E,S,D,C,U,h)|0)>=0){w=117;break}}c[e>>2]=P;E=c[O>>2]|0;C=c[E+96>>2]|0;D=c[E+92>>2]|0;E=c[E+88>>2]|0;G=c[f>>2]|0;L=R;K=Q}if((w|0)==117){i=g;return}}function Yq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0.0,h=0,j=0,k=0;b=i;i=i+16|0;f=b;d=a+8|0;e=c[d>>2]|0;d=c[d+4>>2]|0;if((d|0)>-1|(d|0)==-1&e>>>0>4294967295){f=a;g=(+(e>>>0)+4294967296.0*+(d>>>0))*18446744073709552000.0+(+((c[f>>2]|0)>>>0)+4294967296.0*+((c[f+4>>2]|0)>>>0));i=b;return+g}else{j=a;k=c[j>>2]|0;j=c[j+4>>2]|0;h=Br(0,0,k|0,j|0)|0;a=F;d=Er((k|0)==0&(j|0)==0&1|0,0,~e|0,~d|0)|0;e=f;c[e>>2]=h;c[e+4>>2]=a;e=f+8|0;c[e>>2]=d;c[e+4>>2]=F;g=-+Yq(f);i=b;return+g}return 0.0}function Zq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0,ea=0,fa=0,ga=0,ha=0;f=i;i=i+256|0;p=f+232|0;V=f+216|0;T=f+200|0;y=f+184|0;j=f+56|0;z=f+40|0;x=f+24|0;l=f+12|0;k=f;if((e|0)<1){k=b+4|0;h=b+12|0;j=c[h>>2]|0;l=b+16|0;if((j|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0)}c[h>>2]=0}a[l]=1;c[h>>2]=0;c[k>>2]=0;c[b+8>>2]=0;h=b+24|0;k=b+32|0;j=c[k>>2]|0;l=b+36|0;if((j|0)!=0){if((a[l]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[j+ -4>>2]|0)}c[k>>2]=0}a[l]=1;c[k>>2]=0;c[h>>2]=0;c[b+28>>2]=0;h=b+44|0;j=b+52|0;l=c[j>>2]|0;k=b+56|0;if((l|0)!=0){if((a[k]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[l+ -4>>2]|0)}c[j>>2]=0}a[k]=1;c[j>>2]=0;c[h>>2]=0;c[b+48>>2]=0;i=f;return}c[j+32>>2]=0;H=j+36|0;c[H>>2]=0;E=j+40|0;c[E>>2]=0;J=j+44|0;c[J>>2]=256;A=j+48|0;c[A>>2]=0;C=j+52|0;c[C>>2]=0;D=j+56|0;c[D>>2]=0;B=j+60|0;c[B>>2]=256;c[j+64>>2]=0;c[j+68>>2]=0;c[j+72>>2]=0;c[j+76>>2]=256;N=j+96|0;a[N]=1;I=j+92|0;c[I>>2]=0;M=j+84|0;c[M>>2]=0;O=j+88|0;c[O>>2]=0;L=(e|0)>0;ca=1.0000000150474662e+30;aa=1.0000000150474662e+30;Z=1.0000000150474662e+30;ba=-1.0000000150474662e+30;$=-1.0000000150474662e+30;_=-1.0000000150474662e+30;q=0;r=d;while(1){W=+g[r>>2];X=+g[r+4>>2];Y=+g[r+8>>2];ca=W<ca?W:ca;aa=X<aa?X:aa;Z=Y<Z?Y:Z;ba=ba<W?W:ba;$=$<X?X:$;_=_<Y?Y:_;q=q+1|0;if((q|0)==(e|0)){break}else{r=r+16|0}}W=ba-ca;X=$-aa;Y=_-Z;if(W<X){U=j+112|0;c[U>>2]=X<Y?2:1;r=W<Y?0:2}else{U=j+112|0;c[U>>2]=W<Y?2:0;r=X<Y?1:2}q=j+104|0;c[q>>2]=r;s=c[U>>2]|0;if((r|0)==(s|0)){r=((r+1|0)>>>0)%3|0;c[q>>2]=r;s=c[U>>2]|0}ga=3-s-r|0;r=j+108|0;c[r>>2]=ga;W=W*9788566967472434.0e-20;X=X*9788566967472434.0e-20;Y=Y*9788566967472434.0e-20;if(((ga+1|0)%3|0|0)!=(c[U>>2]|0)){W=W*-1.0;X=X*-1.0;Y=Y*-1.0}g[j>>2]=W;s=j+4|0;g[s>>2]=X;t=j+8|0;g[t>>2]=Y;g[j+12>>2]=0.0;if(W!=0.0){W=1.0/W}if(X!=0.0){X=1.0/X}if(Y!=0.0){Y=1.0/Y}u=j+16|0;g[u>>2]=(ca+ba)*.5;v=j+20|0;g[v>>2]=(aa+$)*.5;w=j+24|0;g[w>>2]=(Z+_)*.5;g[j+28>>2]=0.0;P=p+16|0;a[P]=1;Q=p+12|0;c[Q>>2]=0;S=p+4|0;c[S>>2]=0;R=p+8|0;c[R>>2]=0;if(L){c[3580]=(c[3580]|0)+1;da=vr((e<<4|3)+16|0)|0;if((da|0)==0){da=0}else{ga=da+19&-16;c[ga+ -4>>2]=da;da=ga}ga=c[S>>2]|0;if((ga|0)>0){ea=0;do{fa=da+(ea<<4)|0;if((fa|0)!=0){ha=(c[Q>>2]|0)+(ea<<4)|0;c[fa+0>>2]=c[ha+0>>2];c[fa+4>>2]=c[ha+4>>2];c[fa+8>>2]=c[ha+8>>2];c[fa+12>>2]=c[ha+12>>2]}ea=ea+1|0}while((ea|0)!=(ga|0))}ea=c[Q>>2]|0;if((ea|0)!=0){if((a[P]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[ea+ -4>>2]|0)}c[Q>>2]=0}a[P]=1;c[Q>>2]=da;c[R>>2]=e;ea=0;while(1){da=da+(ea<<4)|0;if((da|0)!=0){c[da+0>>2]=c[V+0>>2];c[da+4>>2]=c[V+4>>2];c[da+8>>2]=c[V+8>>2];c[da+12>>2]=c[V+12>>2]}ea=ea+1|0;if((ea|0)==(e|0)){break}da=c[Q>>2]|0}c[S>>2]=e;ea=T+4|0;V=T+8|0;da=T+12|0;fa=c[Q>>2]|0;_=+g[u>>2];$=+g[v>>2];Z=+g[w>>2];ga=0;while(1){aa=+g[d>>2];g[T>>2]=aa;ba=+g[d+4>>2];g[ea>>2]=ba;ca=Y*(+g[d+8>>2]-Z);g[T>>2]=W*(aa-_);g[ea>>2]=X*(ba-$);g[V>>2]=ca;g[da>>2]=0.0;c[fa+(ga<<4)>>2]=~~+g[T+(c[r>>2]<<2)>>2];c[fa+(ga<<4)+4>>2]=~~+g[T+(c[U>>2]<<2)>>2];c[fa+(ga<<4)+8>>2]=~~+g[T+(c[q>>2]<<2)>>2];c[fa+(ga<<4)+12>>2]=ga;ga=ga+1|0;if((ga|0)==(e|0)){break}d=d+16|0}T=c[S>>2]|0;if((T|0)>1){_q(p,0,T+ -1|0)}}else{c[S>>2]=e}T=j+32|0;c[H>>2]=c[T>>2];c[E>>2]=0;c[J>>2]=e;d=c[M>>2]|0;if((d|0)<(e|0)){if((c[O>>2]|0)<(e|0)){if((e|0)==0){U=0;V=d}else{c[3580]=(c[3580]|0)+1;U=vr((e<<2|3)+16|0)|0;if((U|0)==0){U=0}else{ha=U+19&-16;c[ha+ -4>>2]=U;U=ha}V=c[M>>2]|0}if((V|0)>0){da=0;do{ea=U+(da<<2)|0;if((ea|0)!=0){c[ea>>2]=c[(c[I>>2]|0)+(da<<2)>>2]}da=da+1|0}while((da|0)!=(V|0))}V=c[I>>2]|0;if((V|0)!=0){if((a[N]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[V+ -4>>2]|0)}c[I>>2]=0}a[N]=1;c[I>>2]=U;c[O>>2]=e}do{N=(c[I>>2]|0)+(d<<2)|0;if((N|0)!=0){c[N>>2]=0}d=d+1|0}while((d|0)!=(e|0))}c[M>>2]=e;if(L){L=0;do{M=c[E>>2]|0;if((M|0)==0){N=c[H>>2]|0;if((N|0)==0){c[3580]=(c[3580]|0)+1;M=vr(31)|0;if((M|0)!=0?(F=M+19&-16,K=F,c[K+ -4>>2]=M,(F|0)!=0):0){M=c[J>>2]|0;c[K+4>>2]=M;c[K+8>>2]=0;c[3580]=(c[3580]|0)+1;M=vr((M*112|3)+16|0)|0;if((M|0)==0){M=0}else{ha=M+19&-16;c[ha+ -4>>2]=M;M=ha}c[F>>2]=M;N=F}else{N=0}c[N+8>>2]=c[T>>2];c[T>>2]=N}else{c[H>>2]=c[N+8>>2]}O=c[N+4>>2]|0;if((O|0)>0){U=0;M=c[N>>2]|0;do{U=U+1|0;d=M;M=M+112|0;c[d>>2]=(U|0)<(O|0)?M:0}while((U|0)!=(O|0))}M=c[N>>2]|0;c[E>>2]=c[M>>2];if((M|0)==0){M=0}else{G=85}}else{c[E>>2]=c[M>>2];G=85}if((G|0)==85){G=0;ha=M+104|0;c[M+0>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;c[M+16>>2]=0;c[ha>>2]=-1}c[M+8>>2]=0;ha=M+88|0;ga=(c[Q>>2]|0)+(L<<4)|0;c[ha+0>>2]=c[ga+0>>2];c[ha+4>>2]=c[ga+4>>2];c[ha+8>>2]=c[ga+8>>2];c[ha+12>>2]=c[ga+12>>2];c[M+104>>2]=-1;c[(c[I>>2]|0)+(L<<2)>>2]=M;L=L+1|0}while((L|0)<(e|0))}E=c[Q>>2]|0;if((E|0)!=0){if((a[P]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[E+ -4>>2]|0)}c[Q>>2]=0}a[P]=1;c[Q>>2]=0;c[S>>2]=0;c[R>>2]=0;c[C>>2]=c[A>>2];c[D>>2]=0;c[B>>2]=e*6;c[j+116>>2]=0;c[j+120>>2]=0;c[j+100>>2]=-3;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;Vq(j,0,e,y);A=j+124|0;c[A>>2]=c[y>>2];y=c[Q>>2]|0;if((y|0)!=0){if((a[P]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[y+ -4>>2]|0)}c[Q>>2]=0}y=b+4|0;C=c[y>>2]|0;if((C|0)<0){D=b+8|0;B=b+12|0;if((c[D>>2]|0)<0){E=c[B>>2]|0;e=b+16|0;if((E|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[E+ -4>>2]|0)}c[B>>2]=0}a[e]=1;c[B>>2]=0;c[D>>2]=0}do{ha=(c[B>>2]|0)+(C<<4)|0;c[ha+0>>2]=c[z+0>>2];c[ha+4>>2]=c[z+4>>2];c[ha+8>>2]=c[z+8>>2];c[ha+12>>2]=c[z+12>>2];C=C+1|0}while((C|0)!=0)}c[y>>2]=0;c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;z=b+24|0;C=c[z>>2]|0;if((C|0)<0){D=b+28|0;B=b+32|0;if((c[D>>2]|0)<0){E=c[B>>2]|0;e=b+36|0;if((E|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[E+ -4>>2]|0)}c[B>>2]=0}a[e]=1;c[B>>2]=0;c[D>>2]=0}do{D=(c[B>>2]|0)+(C*12|0)|0;if((D|0)!=0){c[D+0>>2]=c[x+0>>2];c[D+4>>2]=c[x+4>>2];c[D+8>>2]=c[x+8>>2]}C=C+1|0}while((C|0)!=0)}c[z>>2]=0;x=b+44|0;B=c[x>>2]|0;if((B|0)<0){e=b+48|0;D=b+52|0;E=c[D>>2]|0;if((c[e>>2]|0)<0){C=b+56|0;if((E|0)!=0){if((a[C]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[E+ -4>>2]|0)}c[D>>2]=0}a[C]=1;c[D>>2]=0;c[e>>2]=0;E=0}do{C=E+(B<<2)|0;if((C|0)!=0){c[C>>2]=0}B=B+1|0}while((B|0)!=0)}c[x>>2]=0;A=c[A>>2]|0;B=A+104|0;if((c[B>>2]|0)<0){c[B>>2]=0;c[3580]=(c[3580]|0)+1;B=vr(23)|0;if((B|0)!=0){ha=B+19&-16;c[ha+ -4>>2]=B;R=ha;if((ha|0)!=0){c[R>>2]=A}}else{R=0}E=b+8|0;B=b+12|0;C=b+16|0;A=b+28|0;H=b+32|0;F=b+36|0;D=j+112|0;G=p+4|0;e=p+8|0;K=1;P=1;I=0;while(1){J=c[R+(I<<2)>>2]|0;if((c[J+100>>2]|0)>-1){g[p+(c[r>>2]<<2)>>2]=+(c[J+88>>2]|0);g[p+(c[D>>2]<<2)>>2]=+(c[J+92>>2]|0);W=+(c[J+96>>2]|0)}else{W=+Yq(J+24|0);ha=J+72|0;W=W/+Yq(ha);g[p+(c[r>>2]<<2)>>2]=W;W=+Yq(J+40|0);W=W/+Yq(ha);g[p+(c[D>>2]<<2)>>2]=W;W=+Yq(J+56|0);W=W/+Yq(ha)}g[p+(c[q>>2]<<2)>>2]=W;W=+g[p>>2]*+g[j>>2]+ +g[u>>2];X=+g[G>>2]*+g[s>>2]+ +g[v>>2];Y=+g[e>>2]*+g[t>>2]+ +g[w>>2];N=c[y>>2]|0;if((N|0)==(c[E>>2]|0)?(o=(N|0)==0?1:N<<1,(N|0)<(o|0)):0){if((o|0)==0){L=0}else{c[3580]=(c[3580]|0)+1;L=vr((o<<4|3)+16|0)|0;if((L|0)==0){L=0}else{ha=L+19&-16;c[ha+ -4>>2]=L;L=ha}N=c[y>>2]|0}if((N|0)>0){M=0;do{ha=L+(M<<4)|0;ga=(c[B>>2]|0)+(M<<4)|0;c[ha+0>>2]=c[ga+0>>2];c[ha+4>>2]=c[ga+4>>2];c[ha+8>>2]=c[ga+8>>2];c[ha+12>>2]=c[ga+12>>2];M=M+1|0}while((M|0)!=(N|0))}M=c[B>>2]|0;if((M|0)!=0){if((a[C]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[M+ -4>>2]|0)}c[B>>2]=0}a[C]=1;c[B>>2]=L;c[E>>2]=o;N=c[y>>2]|0}ha=c[B>>2]|0;g[ha+(N<<4)>>2]=W;g[ha+(N<<4)+4>>2]=X;g[ha+(N<<4)+8>>2]=Y;g[ha+(N<<4)+12>>2]=0.0;c[y>>2]=(c[y>>2]|0)+1;J=c[J+8>>2]|0;if((J|0)!=0){L=J;M=-1;N=-1;do{O=L+20|0;Q=c[O>>2]|0;if((Q|0)<0){Q=c[z>>2]|0;c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;S=c[A>>2]|0;if((Q|0)==(S|0)){S=(Q|0)==0?1:Q<<1;if((Q|0)<(S|0)){if((S|0)==0){T=0;V=Q}else{c[3580]=(c[3580]|0)+1;T=vr((S*12|3)+16|0)|0;if((T|0)==0){T=0}else{ha=T+19&-16;c[ha+ -4>>2]=T;T=ha}V=c[z>>2]|0}if((V|0)>0){U=0;do{d=T+(U*12|0)|0;if((d|0)!=0){ha=(c[H>>2]|0)+(U*12|0)|0;c[d+0>>2]=c[ha+0>>2];c[d+4>>2]=c[ha+4>>2];c[d+8>>2]=c[ha+8>>2]}U=U+1|0}while((U|0)!=(V|0))}d=c[H>>2]|0;if((d|0)!=0){if((a[F]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0)}c[H>>2]=0}a[F]=1;c[H>>2]=T;c[A>>2]=S;T=c[z>>2]|0}else{T=Q;S=Q}}else{T=Q}d=(c[H>>2]|0)+(T*12|0)|0;if((d|0)==0){d=S}else{c[d+0>>2]=c[l+0>>2];c[d+4>>2]=c[l+4>>2];c[d+8>>2]=c[l+8>>2];T=c[z>>2]|0;d=c[A>>2]|0}S=T+1|0;c[z>>2]=S;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;if((S|0)==(d|0)){S=(d|0)==0?1:d<<1;if((d|0)<(S|0)){if((S|0)==0){T=0;V=d}else{c[3580]=(c[3580]|0)+1;T=vr((S*12|3)+16|0)|0;if((T|0)==0){T=0}else{ha=T+19&-16;c[ha+ -4>>2]=T;T=ha}V=c[z>>2]|0}if((V|0)>0){d=0;do{U=T+(d*12|0)|0;if((U|0)!=0){ha=(c[H>>2]|0)+(d*12|0)|0;c[U+0>>2]=c[ha+0>>2];c[U+4>>2]=c[ha+4>>2];c[U+8>>2]=c[ha+8>>2]}d=d+1|0}while((d|0)!=(V|0))}d=c[H>>2]|0;if((d|0)!=0){if((a[F]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[d+ -4>>2]|0)}c[H>>2]=0}a[F]=1;c[H>>2]=T;c[A>>2]=S;d=c[z>>2]|0}}else{d=S}S=c[H>>2]|0;T=S+(d*12|0)|0;if((T|0)!=0){c[T+0>>2]=c[k+0>>2];c[T+4>>2]=c[k+4>>2];c[T+8>>2]=c[k+8>>2];d=c[z>>2]|0;S=c[H>>2]|0}c[z>>2]=d+1;T=Q+1|0;c[O>>2]=Q;c[(c[L+8>>2]|0)+20>>2]=T;c[S+(Q*12|0)+4>>2]=1;c[S+(T*12|0)+4>>2]=-1;d=c[L+12>>2]|0;V=d+104|0;U=c[V>>2]|0;if((U|0)<0){c[V>>2]=K;if((K|0)==(P|0)?(n=(P|0)==0?1:P<<1,(P|0)<(n|0)):0){if((n|0)!=0?(c[3580]=(c[3580]|0)+1,m=vr((n<<2|3)+16|0)|0,(m|0)!=0):0){da=m+19&-16;c[da+ -4>>2]=m}else{da=0}if((P|0)>0){V=0;do{U=da+(V<<2)|0;if((U|0)!=0){c[U>>2]=c[R+(V<<2)>>2]}V=V+1|0}while((V|0)!=(P|0))}if((R|0)==0){R=da;P=n}else{c[3582]=(c[3582]|0)+1;wr(c[R+ -4>>2]|0);R=da;P=n}}U=R+(K<<2)|0;if((U|0)!=0){c[U>>2]=d}d=K+1|0}else{d=K;K=U}c[S+(Q*12|0)+8>>2]=K;c[S+(T*12|0)+8>>2]=I;Q=c[O>>2]|0;K=d}if((N|0)>-1){c[(c[H>>2]|0)+(Q*12|0)>>2]=N-Q;N=c[O>>2]|0}else{N=Q;M=Q}L=c[L>>2]|0}while((L|0)!=(J|0));c[(c[H>>2]|0)+(M*12|0)>>2]=N-M}J=I+1|0;if((J|0)<(K|0)){I=J}else{break}}if((I|0)>-1){k=b+48|0;l=b+52|0;b=b+56|0;n=0;do{o=c[(c[R+(n<<2)>>2]|0)+8>>2]|0;if((o|0)!=0){m=o;do{p=m+20|0;if((c[p>>2]|0)>-1){r=c[x>>2]|0;if((r|0)==(c[k>>2]|0)?(h=(r|0)==0?1:r<<1,(r|0)<(h|0)):0){if((h|0)==0){q=0}else{c[3580]=(c[3580]|0)+1;q=vr((h<<2|3)+16|0)|0;if((q|0)==0){q=0}else{ha=q+19&-16;c[ha+ -4>>2]=q;q=ha}r=c[x>>2]|0}if((r|0)>0){s=0;do{t=q+(s<<2)|0;if((t|0)!=0){c[t>>2]=c[(c[l>>2]|0)+(s<<2)>>2]}s=s+1|0}while((s|0)!=(r|0))}r=c[l>>2]|0;if((r|0)!=0){if((a[b]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[r+ -4>>2]|0)}c[l>>2]=0}a[b]=1;c[l>>2]=q;c[k>>2]=h;r=c[x>>2]|0}q=(c[l>>2]|0)+(r<<2)|0;if((q|0)!=0){c[q>>2]=c[p>>2];r=c[x>>2]|0}c[x>>2]=r+1;p=m;do{c[p+20>>2]=-1;p=c[(c[p+8>>2]|0)+4>>2]|0}while((p|0)!=(m|0))}m=c[m>>2]|0}while((m|0)!=(o|0))}n=n+1|0}while((n|0)<(J|0))}if((R|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[R+ -4>>2]|0)}}$q(j);i=f;return}function _q(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;l=i;i=i+16|0;e=l;g=(d+b|0)/2|0;f=a+12|0;k=c[f>>2]|0;h=c[k+(g<<4)>>2]|0;j=c[k+(g<<4)+4>>2]|0;g=c[k+(g<<4)+8>>2]|0;m=b;n=d;while(1){while(1){o=c[k+(m<<4)+4>>2]|0;if((o|0)>=(j|0)){if((o|0)!=(j|0)){break}o=c[k+(m<<4)>>2]|0;if((o|0)>=(h|0)){if((o|0)!=(h|0)){break}if((c[k+(m<<4)+8>>2]|0)>=(g|0)){break}}}m=m+1|0}while(1){o=c[k+(n<<4)+4>>2]|0;if((j|0)>=(o|0)){if((j|0)!=(o|0)){break}o=c[k+(n<<4)>>2]|0;if((h|0)>=(o|0)){if((h|0)!=(o|0)){break}if((g|0)>=(c[k+(n<<4)+8>>2]|0)){break}}}n=n+ -1|0}if((m|0)<=(n|0)){o=k+(m<<4)|0;c[e+0>>2]=c[o+0>>2];c[e+4>>2]=c[o+4>>2];c[e+8>>2]=c[o+8>>2];c[e+12>>2]=c[o+12>>2];k=k+(n<<4)|0;c[o+0>>2]=c[k+0>>2];c[o+4>>2]=c[k+4>>2];c[o+8>>2]=c[k+8>>2];c[o+12>>2]=c[k+12>>2];o=(c[f>>2]|0)+(n<<4)|0;c[o+0>>2]=c[e+0>>2];c[o+4>>2]=c[e+4>>2];c[o+8>>2]=c[e+8>>2];c[o+12>>2]=c[e+12>>2];m=m+1|0;n=n+ -1|0}if((m|0)>(n|0)){break}k=c[f>>2]|0}if((n|0)>(b|0)){_q(a,b,n)}if((m|0)>=(d|0)){i=l;return}_q(a,m,d);i=l;return}function $q(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;g=b+84|0;f=b+92|0;h=c[f>>2]|0;e=b+96|0;if((h|0)!=0){if((a[e]|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[h+ -4>>2]|0)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+88>>2]=0;e=b+64|0;f=c[e>>2]|0;if((f|0)!=0){do{c[e>>2]=c[f+8>>2];g=c[f>>2]|0;if((g|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0);f=c[e>>2]|0}while((f|0)!=0)}e=b+48|0;f=c[e>>2]|0;if((f|0)!=0){do{c[e>>2]=c[f+8>>2];g=c[f>>2]|0;if((g|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[g+ -4>>2]|0)}c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0);f=c[e>>2]|0}while((f|0)!=0)}b=b+32|0;e=c[b>>2]|0;if((e|0)==0){i=d;return}do{c[b>>2]=c[e+8>>2];f=c[e>>2]|0;if((f|0)!=0){c[3582]=(c[3582]|0)+1;wr(c[f+ -4>>2]|0)}c[3582]=(c[3582]|0)+1;wr(c[e+ -4>>2]|0);e=c[b>>2]|0}while((e|0)!=0);i=d;return}function ar(a){a=a|0;var b=0;b=i;a=c[a>>2]|0;if((a|0)!=0){wr(a)}i=b;return}function br(a){a=a|0;var b=0,d=0;b=i;do{c[a+4>>2]=0;g[a+8>>2]=0.0;d=c[a+24>>2]|0;if((d|0)!=0){br(d)}a=c[a+28>>2]|0}while((a|0)!=0);i=b;return}function cr(a){a=a|0;var b=0,d=0;b=i;d=c[a+24>>2]|0;if((d|0)!=0){cr(d);wr(d)}a=c[a+28>>2]|0;if((a|0)==0){i=b;return}d=c[a+24>>2]|0;if((d|0)!=0){cr(d);wr(d)}d=c[a+28>>2]|0;if((d|0)!=0){cr(d);wr(d)}wr(a);i=b;return}function dr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;b=d;f=c[3598]|0;if((c[f>>2]|0)!=(a|0)){e=f+24|0;h=c[e>>2]|0;a:do{if((h|0)==0){g=5}else{while(1){if((c[h>>2]|0)==(a|0)){f=h;break a}h=c[h+28>>2]|0;if((h|0)==0){g=5;break}}}}while(0);do{if((g|0)==5){while(1){h=vr(36)|0;if((h|0)!=0){g=9;break}g=c[3818]|0;c[3818]=g+0;if((g|0)==0){g=8;break}lc[g&1]();g=5}if((g|0)==8){h=wb(4)|0;c[h>>2]=15288;vb(h|0,15336,198)}else if((g|0)==9){c[h>>2]=a;g=h+4|0;a=h+20|0;c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[a>>2]=f;c[h+24>>2]=0;f=h+28|0;c[f>>2]=0;c[h+32>>2]=0;br(h);c[f>>2]=c[e>>2];c[e>>2]=h;f=h;break}}}while(0);c[3598]=f}a=f+4|0;c[a>>2]=(c[a>>2]|0)+1;a=f+16|0;h=c[a>>2]|0;c[a>>2]=h+1;if((h|0)!=0){i=d;return}xb(b|0,0)|0;h=c[3584]|0;c[f+12>>2]=(c[b+4>>2]|0)-(c[h+4>>2]|0)+(((c[b>>2]|0)-(c[h>>2]|0)|0)*1e6|0);i=d;return}function er(){var a=0,b=0,d=0;a=i;while(1){b=vr(8)|0;if((b|0)!=0){d=6;break}b=c[3818]|0;c[3818]=b+0;if((b|0)==0){d=5;break}lc[b&1]()}if((d|0)==5){d=wb(4)|0;c[d>>2]=15288;vb(d|0,15336,198)}else if((d|0)==6){c[3584]=b;xb(b|0,0)|0;yb(200,14336,p|0)|0;c[3586]=14384;c[14348>>2]=0;c[14352>>2]=0;c[14356>>2]=0;c[14360>>2]=0;c[14364>>2]=0;c[14368>>2]=0;c[14372>>2]=0;c[14376>>2]=0;br(14344);yb(201,14344,p|0)|0;i=a;return}}function fr(a){a=a|0;return}function gr(a){a=a|0;return}function hr(a){a=a|0;return}function ir(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function jr(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function kr(a){a=a|0;var b=0;b=i;if((a|0)!=0){wr(a)}i=b;return}function lr(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+112|0;j=h+56|0;g=h;if((d|0)==(e|0)){u=1;i=h;return u|0}if((e|0)==0){u=0;i=h;return u|0}n=c[e>>2]|0;o=e+(c[n+ -8>>2]|0)|0;n=c[n+ -4>>2]|0;c[j>>2]=14528;c[j+4>>2]=e;c[j+8>>2]=14472;u=j+12|0;l=j+16|0;m=j+20|0;p=j+24|0;r=j+28|0;s=j+32|0;q=j+40|0;t=(n|0)==14528;e=u+0|0;k=e+40|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(k|0));b[u+40>>1]=0;a[u+42|0]=0;do{if(!t){Db[c[(c[n>>2]|0)+24>>2]&31](n,j,o,1,0);j=c[j+36>>2]|0;if((j|0)==0){if((c[q>>2]|0)!=1){u=0;i=h;return u|0}if((c[r>>2]|0)==1){j=(c[s>>2]|0)==1?c[m>>2]|0:0;break}else{u=0;i=h;return u|0}}else if((j|0)==1){if((c[p>>2]|0)!=1){if((c[q>>2]|0)!=0){u=0;i=h;return u|0}if((c[r>>2]|0)!=1){u=0;i=h;return u|0}if((c[s>>2]|0)!=1){u=0;i=h;return u|0}}j=c[l>>2]|0;break}else{u=0;i=h;return u|0}}else{c[j+48>>2]=1;Tb[c[(c[3632]|0)+20>>2]&7](n,j,o,o,1,0);j=(c[p>>2]|0)==1?o:0}}while(0);if((j|0)==0){u=0;i=h;return u|0}e=g+0|0;k=e+56|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(k|0));c[g>>2]=j;c[g+8>>2]=d;c[g+12>>2]=-1;c[g+48>>2]=1;oc[c[(c[j>>2]|0)+28>>2]&63](j,g,c[f>>2]|0,1);if((c[g+24>>2]|0)!=1){u=0;i=h;return u|0}c[f>>2]=c[g+16>>2];u=1;i=h;return u|0}function mr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((c[d+8>>2]|0)!=(b|0)){i=g;return}b=d+16|0;h=c[b>>2]|0;if((h|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}function nr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;if((b|0)!=(c[d+8>>2]|0)){h=c[b+8>>2]|0;oc[c[(c[h>>2]|0)+28>>2]&63](h,d,e,f);i=g;return}b=d+16|0;h=c[b>>2]|0;if((h|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}function or(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((b|0)==(c[d+8>>2]|0)){j=d+16|0;h=c[j>>2]|0;if((h|0)==0){c[j>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((h|0)!=(e|0)){l=d+36|0;c[l>>2]=(c[l>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;i=g;return}e=d+24|0;if((c[e>>2]|0)!=2){i=g;return}c[e>>2]=f;i=g;return}k=c[b+12>>2]|0;h=b+(k<<3)+16|0;j=c[b+20>>2]|0;l=j>>8;if((j&1|0)!=0){l=c[(c[e>>2]|0)+l>>2]|0}m=c[b+16>>2]|0;oc[c[(c[m>>2]|0)+28>>2]&63](m,d,e+l|0,(j&2|0)!=0?f:2);if((k|0)<=1){i=g;return}j=d+54|0;b=b+24|0;while(1){k=c[b+4>>2]|0;l=k>>8;if((k&1|0)!=0){l=c[(c[e>>2]|0)+l>>2]|0}m=c[b>>2]|0;oc[c[(c[m>>2]|0)+28>>2]&63](m,d,e+l|0,(k&2|0)!=0?f:2);if((a[j]|0)!=0){f=16;break}b=b+8|0;if(!(b>>>0<h>>>0)){f=16;break}}if((f|0)==16){i=g;return}}function pr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}d=d+28|0;if((c[d>>2]|0)==1){i=h;return}c[d>>2]=f;i=h;return}if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(m=d+20|0,(c[m>>2]|0)!=(e|0)):0){c[d+32>>2]=f;k=d+44|0;if((c[k>>2]|0)==4){i=h;return}w=c[b+12>>2]|0;q=b+(w<<3)+16|0;a:do{if((w|0)>0){s=d+52|0;t=d+53|0;o=d+54|0;n=b+8|0;r=d+24|0;u=0;p=0;b=b+16|0;b:do{a[s]=0;a[t]=0;v=c[b+4>>2]|0;w=v>>8;if((v&1|0)!=0){w=c[(c[e>>2]|0)+w>>2]|0}x=c[b>>2]|0;Tb[c[(c[x>>2]|0)+20>>2]&7](x,d,e,e+w|0,2-(v>>>1&1)|0,g);if((a[o]|0)!=0){break}do{if((a[t]|0)!=0){if((a[s]|0)==0){if((c[n>>2]&1|0)==0){p=1;break b}else{p=1;break}}if((c[r>>2]|0)==1){n=27;break a}if((c[n>>2]&2|0)==0){n=27;break a}else{u=1;p=1}}}while(0);b=b+8|0}while(b>>>0<q>>>0);if(u){l=p;n=26}else{j=p;n=23}}else{j=0;n=23}}while(0);if((n|0)==23){c[m>>2]=e;x=d+40|0;c[x>>2]=(c[x>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1;if(j){n=27}else{n=28}}else{l=j;n=26}}if((n|0)==26){if(l){n=27}else{n=28}}if((n|0)==27){c[k>>2]=3;i=h;return}else if((n|0)==28){c[k>>2]=4;i=h;return}}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}m=c[b+12>>2]|0;j=b+(m<<3)+16|0;l=c[b+20>>2]|0;n=l>>8;if((l&1|0)!=0){n=c[(c[e>>2]|0)+n>>2]|0}x=c[b+16>>2]|0;Db[c[(c[x>>2]|0)+24>>2]&31](x,d,e+n|0,(l&2|0)!=0?f:2,g);l=b+24|0;if((m|0)<=1){i=h;return}m=c[b+8>>2]|0;if((m&2|0)==0?(k=d+36|0,(c[k>>2]|0)!=1):0){if((m&1|0)==0){m=d+54|0;n=l;while(1){if((a[m]|0)!=0){n=53;break}if((c[k>>2]|0)==1){n=53;break}b=c[n+4>>2]|0;o=b>>8;if((b&1|0)!=0){o=c[(c[e>>2]|0)+o>>2]|0}x=c[n>>2]|0;Db[c[(c[x>>2]|0)+24>>2]&31](x,d,e+o|0,(b&2|0)!=0?f:2,g);n=n+8|0;if(!(n>>>0<j>>>0)){n=53;break}}if((n|0)==53){i=h;return}}m=d+24|0;n=d+54|0;o=l;while(1){if((a[n]|0)!=0){n=53;break}if((c[k>>2]|0)==1?(c[m>>2]|0)==1:0){n=53;break}b=c[o+4>>2]|0;p=b>>8;if((b&1|0)!=0){p=c[(c[e>>2]|0)+p>>2]|0}x=c[o>>2]|0;Db[c[(c[x>>2]|0)+24>>2]&31](x,d,e+p|0,(b&2|0)!=0?f:2,g);o=o+8|0;if(!(o>>>0<j>>>0)){n=53;break}}if((n|0)==53){i=h;return}}k=d+54|0;while(1){if((a[k]|0)!=0){n=53;break}m=c[l+4>>2]|0;n=m>>8;if((m&1|0)!=0){n=c[(c[e>>2]|0)+n>>2]|0}x=c[l>>2]|0;Db[c[(c[x>>2]|0)+24>>2]&31](x,d,e+n|0,(m&2|0)!=0?f:2,g);l=l+8|0;if(!(l>>>0<j>>>0)){n=53;break}}if((n|0)==53){i=h;return}}function qr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}j=d+28|0;if((c[j>>2]|0)==1){i=h;return}c[j>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){l=c[b+8>>2]|0;Db[c[(c[l>>2]|0)+24>>2]&31](l,d,e,f,g);i=h;return}if((c[d+16>>2]|0)!=(e|0)?(k=d+20|0,(c[k>>2]|0)!=(e|0)):0){c[d+32>>2]=f;f=d+44|0;if((c[f>>2]|0)==4){i=h;return}l=d+52|0;a[l]=0;m=d+53|0;a[m]=0;b=c[b+8>>2]|0;Tb[c[(c[b>>2]|0)+20>>2]&7](b,d,e,e,1,g);if((a[m]|0)!=0){if((a[l]|0)==0){b=1;j=13}}else{b=0;j=13}do{if((j|0)==13){c[k>>2]=e;m=d+40|0;c[m>>2]=(c[m>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1;if(b){break}}else{j=16}if((j|0)==16?b:0){break}c[f>>2]=4;i=h;return}}while(0);c[f>>2]=3;i=h;return}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function rr(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){i=g;return}d=d+28|0;if((c[d>>2]|0)==1){i=g;return}c[d>>2]=f;i=g;return}if((c[d>>2]|0)!=(b|0)){i=g;return}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[h>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1}c[d+44>>2]=4;i=g;return}if((f|0)!=1){i=g;return}c[d+32>>2]=1;i=g;return}function sr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;if((b|0)!=(c[d+8>>2]|0)){m=d+52|0;l=a[m]|0;o=d+53|0;n=a[o]|0;p=c[b+12>>2]|0;k=b+(p<<3)+16|0;a[m]=0;a[o]=0;q=c[b+20>>2]|0;r=q>>8;if((q&1|0)!=0){r=c[(c[f>>2]|0)+r>>2]|0}t=c[b+16>>2]|0;Tb[c[(c[t>>2]|0)+20>>2]&7](t,d,e,f+r|0,(q&2|0)!=0?g:2,h);a:do{if((p|0)>1){q=d+24|0;p=b+8|0;r=d+54|0;b=b+24|0;do{if((a[r]|0)!=0){break a}if((a[m]|0)==0){if((a[o]|0)!=0?(c[p>>2]&1|0)==0:0){break a}}else{if((c[q>>2]|0)==1){break a}if((c[p>>2]&2|0)==0){break a}}a[m]=0;a[o]=0;s=c[b+4>>2]|0;t=s>>8;if((s&1|0)!=0){t=c[(c[f>>2]|0)+t>>2]|0}u=c[b>>2]|0;Tb[c[(c[u>>2]|0)+20>>2]&7](u,d,e,f+t|0,(s&2|0)!=0?g:2,h);b=b+8|0}while(b>>>0<k>>>0)}}while(0);a[m]=l;a[o]=n;i=j;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52|0]=1;h=d+16|0;k=c[h>>2]|0;if((k|0)==0){c[h>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}if((k|0)!=(e|0)){u=d+36|0;c[u>>2]=(c[u>>2]|0)+1;a[d+54|0]=1;i=j;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g}else{g=h}if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}function tr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;j=i;if((b|0)!=(c[d+8>>2]|0)){b=c[b+8>>2]|0;Tb[c[(c[b>>2]|0)+20>>2]&7](b,d,e,f,g,h);i=j;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52|0]=1;b=d+16|0;f=c[b>>2]|0;if((f|0)==0){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}if((f|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54|0]=1;i=j;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g}else{g=b}if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=j;return}a[d+54|0]=1;i=j;return}function ur(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;h=i;if((c[d+8>>2]|0)!=(b|0)){i=h;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){i=h;return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=h;return}a[d+54|0]=1;i=h;return}if((b|0)!=(e|0)){b=d+36|0;c[b>>2]=(c[b>>2]|0)+1;a[d+54|0]=1;i=h;return}e=d+24|0;f=c[e>>2]|0;if((f|0)==2){c[e>>2]=g}else{g=f}if(!((c[d+48>>2]|0)==1&(g|0)==1)){i=h;return}a[d+54|0]=1;i=h;return}function vr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;do{if(a>>>0<245){if(a>>>0<11){a=16}else{a=a+11&-8}v=a>>>3;r=c[3694]|0;w=r>>>v;if((w&3|0)!=0){j=(w&1^1)+v|0;h=j<<1;f=14816+(h<<2)|0;h=14816+(h+2<<2)|0;d=c[h>>2]|0;e=d+8|0;g=c[e>>2]|0;do{if((f|0)!=(g|0)){if(g>>>0<(c[14792>>2]|0)>>>0){ub()}k=g+12|0;if((c[k>>2]|0)==(d|0)){c[k>>2]=f;c[h>>2]=g;break}else{ub()}}else{c[3694]=r&~(1<<j)}}while(0);H=j<<3;c[d+4>>2]=H|3;H=d+(H|4)|0;c[H>>2]=c[H>>2]|1;H=e;i=b;return H|0}if(a>>>0>(c[14784>>2]|0)>>>0){if((w|0)!=0){f=2<<v;f=w<<v&(f|0-f);f=(f&0-f)+ -1|0;d=f>>>12&16;f=f>>>d;e=f>>>5&8;f=f>>>e;g=f>>>2&4;f=f>>>g;j=f>>>1&2;f=f>>>j;h=f>>>1&1;h=(e|d|g|j|h)+(f>>>h)|0;f=h<<1;j=14816+(f<<2)|0;f=14816+(f+2<<2)|0;g=c[f>>2]|0;d=g+8|0;e=c[d>>2]|0;do{if((j|0)!=(e|0)){if(e>>>0<(c[14792>>2]|0)>>>0){ub()}k=e+12|0;if((c[k>>2]|0)==(g|0)){c[k>>2]=j;c[f>>2]=e;break}else{ub()}}else{c[3694]=r&~(1<<h)}}while(0);h=h<<3;f=h-a|0;c[g+4>>2]=a|3;e=g+a|0;c[g+(a|4)>>2]=f|1;c[g+h>>2]=f;h=c[14784>>2]|0;if((h|0)!=0){g=c[14796>>2]|0;l=h>>>3;j=l<<1;h=14816+(j<<2)|0;k=c[3694]|0;l=1<<l;if((k&l|0)!=0){j=14816+(j+2<<2)|0;k=c[j>>2]|0;if(k>>>0<(c[14792>>2]|0)>>>0){ub()}else{D=j;C=k}}else{c[3694]=k|l;D=14816+(j+2<<2)|0;C=h}c[D>>2]=g;c[C+12>>2]=g;c[g+8>>2]=C;c[g+12>>2]=h}c[14784>>2]=f;c[14796>>2]=e;H=d;i=b;return H|0}r=c[14780>>2]|0;if((r|0)!=0){d=(r&0-r)+ -1|0;G=d>>>12&16;d=d>>>G;F=d>>>5&8;d=d>>>F;H=d>>>2&4;d=d>>>H;h=d>>>1&2;d=d>>>h;e=d>>>1&1;e=c[15080+((F|G|H|h|e)+(d>>>e)<<2)>>2]|0;d=(c[e+4>>2]&-8)-a|0;h=e;while(1){g=c[h+16>>2]|0;if((g|0)==0){g=c[h+20>>2]|0;if((g|0)==0){break}}h=(c[g+4>>2]&-8)-a|0;f=h>>>0<d>>>0;d=f?h:d;h=g;e=f?g:e}h=c[14792>>2]|0;if(e>>>0<h>>>0){ub()}f=e+a|0;if(!(e>>>0<f>>>0)){ub()}g=c[e+24>>2]|0;k=c[e+12>>2]|0;do{if((k|0)==(e|0)){k=e+20|0;j=c[k>>2]|0;if((j|0)==0){k=e+16|0;j=c[k>>2]|0;if((j|0)==0){B=0;break}}while(1){l=j+20|0;m=c[l>>2]|0;if((m|0)!=0){j=m;k=l;continue}l=j+16|0;m=c[l>>2]|0;if((m|0)==0){break}else{j=m;k=l}}if(k>>>0<h>>>0){ub()}else{c[k>>2]=0;B=j;break}}else{j=c[e+8>>2]|0;if(j>>>0<h>>>0){ub()}h=j+12|0;if((c[h>>2]|0)!=(e|0)){ub()}l=k+8|0;if((c[l>>2]|0)==(e|0)){c[h>>2]=k;c[l>>2]=j;B=k;break}else{ub()}}}while(0);do{if((g|0)!=0){j=c[e+28>>2]|0;h=15080+(j<<2)|0;if((e|0)==(c[h>>2]|0)){c[h>>2]=B;if((B|0)==0){c[14780>>2]=c[14780>>2]&~(1<<j);break}}else{if(g>>>0<(c[14792>>2]|0)>>>0){ub()}h=g+16|0;if((c[h>>2]|0)==(e|0)){c[h>>2]=B}else{c[g+20>>2]=B}if((B|0)==0){break}}if(B>>>0<(c[14792>>2]|0)>>>0){ub()}c[B+24>>2]=g;g=c[e+16>>2]|0;do{if((g|0)!=0){if(g>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[B+16>>2]=g;c[g+24>>2]=B;break}}}while(0);g=c[e+20>>2]|0;if((g|0)!=0){if(g>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[B+20>>2]=g;c[g+24>>2]=B;break}}}}while(0);if(d>>>0<16){H=d+a|0;c[e+4>>2]=H|3;H=e+(H+4)|0;c[H>>2]=c[H>>2]|1}else{c[e+4>>2]=a|3;c[e+(a|4)>>2]=d|1;c[e+(d+a)>>2]=d;h=c[14784>>2]|0;if((h|0)!=0){g=c[14796>>2]|0;j=h>>>3;k=j<<1;h=14816+(k<<2)|0;l=c[3694]|0;j=1<<j;if((l&j|0)!=0){k=14816+(k+2<<2)|0;j=c[k>>2]|0;if(j>>>0<(c[14792>>2]|0)>>>0){ub()}else{z=k;A=j}}else{c[3694]=l|j;z=14816+(k+2<<2)|0;A=h}c[z>>2]=g;c[A+12>>2]=g;c[g+8>>2]=A;c[g+12>>2]=h}c[14784>>2]=d;c[14796>>2]=f}H=e+8|0;i=b;return H|0}}}else{if(!(a>>>0>4294967231)){z=a+11|0;a=z&-8;B=c[14780>>2]|0;if((B|0)!=0){A=0-a|0;z=z>>>8;if((z|0)!=0){if(a>>>0>16777215){C=31}else{G=(z+1048320|0)>>>16&8;H=z<<G;F=(H+520192|0)>>>16&4;H=H<<F;C=(H+245760|0)>>>16&2;C=14-(F|G|C)+(H<<C>>>15)|0;C=a>>>(C+7|0)&1|C<<1}}else{C=0}F=c[15080+(C<<2)>>2]|0;a:do{if((F|0)==0){D=0;z=0}else{if((C|0)==31){z=0}else{z=25-(C>>>1)|0}D=0;E=a<<z;z=0;while(1){H=c[F+4>>2]&-8;G=H-a|0;if(G>>>0<A>>>0){if((H|0)==(a|0)){A=G;D=F;z=F;break a}else{A=G;z=F}}G=c[F+20>>2]|0;F=c[F+(E>>>31<<2)+16>>2]|0;D=(G|0)==0|(G|0)==(F|0)?D:G;if((F|0)==0){break}else{E=E<<1}}}}while(0);if((D|0)==0&(z|0)==0){H=2<<C;B=B&(H|0-H);if((B|0)==0){break}H=(B&0-B)+ -1|0;E=H>>>12&16;H=H>>>E;C=H>>>5&8;H=H>>>C;F=H>>>2&4;H=H>>>F;G=H>>>1&2;H=H>>>G;D=H>>>1&1;D=c[15080+((C|E|F|G|D)+(H>>>D)<<2)>>2]|0}if((D|0)!=0){while(1){C=(c[D+4>>2]&-8)-a|0;B=C>>>0<A>>>0;A=B?C:A;z=B?D:z;B=c[D+16>>2]|0;if((B|0)!=0){D=B;continue}D=c[D+20>>2]|0;if((D|0)==0){break}}}if((z|0)!=0?A>>>0<((c[14784>>2]|0)-a|0)>>>0:0){f=c[14792>>2]|0;if(z>>>0<f>>>0){ub()}d=z+a|0;if(!(z>>>0<d>>>0)){ub()}e=c[z+24>>2]|0;g=c[z+12>>2]|0;do{if((g|0)==(z|0)){h=z+20|0;g=c[h>>2]|0;if((g|0)==0){h=z+16|0;g=c[h>>2]|0;if((g|0)==0){x=0;break}}while(1){j=g+20|0;k=c[j>>2]|0;if((k|0)!=0){g=k;h=j;continue}j=g+16|0;k=c[j>>2]|0;if((k|0)==0){break}else{g=k;h=j}}if(h>>>0<f>>>0){ub()}else{c[h>>2]=0;x=g;break}}else{h=c[z+8>>2]|0;if(h>>>0<f>>>0){ub()}j=h+12|0;if((c[j>>2]|0)!=(z|0)){ub()}f=g+8|0;if((c[f>>2]|0)==(z|0)){c[j>>2]=g;c[f>>2]=h;x=g;break}else{ub()}}}while(0);do{if((e|0)!=0){g=c[z+28>>2]|0;f=15080+(g<<2)|0;if((z|0)==(c[f>>2]|0)){c[f>>2]=x;if((x|0)==0){c[14780>>2]=c[14780>>2]&~(1<<g);break}}else{if(e>>>0<(c[14792>>2]|0)>>>0){ub()}f=e+16|0;if((c[f>>2]|0)==(z|0)){c[f>>2]=x}else{c[e+20>>2]=x}if((x|0)==0){break}}if(x>>>0<(c[14792>>2]|0)>>>0){ub()}c[x+24>>2]=e;e=c[z+16>>2]|0;do{if((e|0)!=0){if(e>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[x+16>>2]=e;c[e+24>>2]=x;break}}}while(0);e=c[z+20>>2]|0;if((e|0)!=0){if(e>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[x+20>>2]=e;c[e+24>>2]=x;break}}}}while(0);b:do{if(!(A>>>0<16)){c[z+4>>2]=a|3;c[z+(a|4)>>2]=A|1;c[z+(A+a)>>2]=A;f=A>>>3;if(A>>>0<256){g=f<<1;e=14816+(g<<2)|0;h=c[3694]|0;f=1<<f;if((h&f|0)!=0){f=14816+(g+2<<2)|0;g=c[f>>2]|0;if(g>>>0<(c[14792>>2]|0)>>>0){ub()}else{w=f;v=g}}else{c[3694]=h|f;w=14816+(g+2<<2)|0;v=e}c[w>>2]=d;c[v+12>>2]=d;c[z+(a+8)>>2]=v;c[z+(a+12)>>2]=e;break}e=A>>>8;if((e|0)!=0){if(A>>>0>16777215){e=31}else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=A>>>(e+7|0)&1|e<<1}}else{e=0}f=15080+(e<<2)|0;c[z+(a+28)>>2]=e;c[z+(a+20)>>2]=0;c[z+(a+16)>>2]=0;h=c[14780>>2]|0;g=1<<e;if((h&g|0)==0){c[14780>>2]=h|g;c[f>>2]=d;c[z+(a+24)>>2]=f;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break}f=c[f>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}c:do{if((c[f+4>>2]&-8|0)!=(A|0)){e=A<<e;g=f;while(1){h=g+(e>>>31<<2)+16|0;f=c[h>>2]|0;if((f|0)==0){break}if((c[f+4>>2]&-8|0)==(A|0)){r=f;break c}else{e=e<<1;g=f}}if(h>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[h>>2]=d;c[z+(a+24)>>2]=g;c[z+(a+12)>>2]=d;c[z+(a+8)>>2]=d;break b}}else{r=f}}while(0);f=r+8|0;e=c[f>>2]|0;g=c[14792>>2]|0;if(r>>>0<g>>>0){ub()}if(e>>>0<g>>>0){ub()}else{c[e+12>>2]=d;c[f>>2]=d;c[z+(a+8)>>2]=e;c[z+(a+12)>>2]=r;c[z+(a+24)>>2]=0;break}}else{H=A+a|0;c[z+4>>2]=H|3;H=z+(H+4)|0;c[H>>2]=c[H>>2]|1}}while(0);H=z+8|0;i=b;return H|0}}}else{a=-1}}}while(0);r=c[14784>>2]|0;if(!(a>>>0>r>>>0)){e=r-a|0;d=c[14796>>2]|0;if(e>>>0>15){c[14796>>2]=d+a;c[14784>>2]=e;c[d+(a+4)>>2]=e|1;c[d+r>>2]=e;c[d+4>>2]=a|3}else{c[14784>>2]=0;c[14796>>2]=0;c[d+4>>2]=r|3;H=d+(r+4)|0;c[H>>2]=c[H>>2]|1}H=d+8|0;i=b;return H|0}r=c[14788>>2]|0;if(a>>>0<r>>>0){G=r-a|0;c[14788>>2]=G;H=c[14800>>2]|0;c[14800>>2]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}do{if((c[3812]|0)==0){r=mb(30)|0;if((r+ -1&r|0)==0){c[15256>>2]=r;c[15252>>2]=r;c[15260>>2]=-1;c[15264>>2]=-1;c[15268>>2]=0;c[15220>>2]=0;c[3812]=(cb(0)|0)&-16^1431655768;break}else{ub()}}}while(0);w=a+48|0;A=c[15256>>2]|0;x=a+47|0;z=A+x|0;A=0-A|0;v=z&A;if(!(v>>>0>a>>>0)){H=0;i=b;return H|0}r=c[15216>>2]|0;if((r|0)!=0?(G=c[15208>>2]|0,H=G+v|0,H>>>0<=G>>>0|H>>>0>r>>>0):0){H=0;i=b;return H|0}d:do{if((c[15220>>2]&4|0)==0){B=c[14800>>2]|0;e:do{if((B|0)!=0){r=15224|0;while(1){C=c[r>>2]|0;if(!(C>>>0>B>>>0)?(y=r+4|0,(C+(c[y>>2]|0)|0)>>>0>B>>>0):0){break}r=c[r+8>>2]|0;if((r|0)==0){o=182;break e}}if((r|0)!=0){A=z-(c[14788>>2]|0)&A;if(A>>>0<2147483647){o=gb(A|0)|0;B=(o|0)==((c[r>>2]|0)+(c[y>>2]|0)|0);y=o;z=A;r=B?o:-1;A=B?A:0;o=191}else{A=0}}else{o=182}}else{o=182}}while(0);do{if((o|0)==182){r=gb(0)|0;if((r|0)!=(-1|0)){A=r;y=c[15252>>2]|0;z=y+ -1|0;if((z&A|0)==0){A=v}else{A=v-A+(z+A&0-y)|0}B=c[15208>>2]|0;z=B+A|0;if(A>>>0>a>>>0&A>>>0<2147483647){y=c[15216>>2]|0;if((y|0)!=0?z>>>0<=B>>>0|z>>>0>y>>>0:0){A=0;break}y=gb(A|0)|0;o=(y|0)==(r|0);z=A;r=o?r:-1;A=o?A:0;o=191}else{A=0}}else{A=0}}}while(0);f:do{if((o|0)==191){o=0-z|0;if((r|0)!=(-1|0)){p=A;o=202;break d}do{if((y|0)!=(-1|0)&z>>>0<2147483647&z>>>0<w>>>0?(u=c[15256>>2]|0,u=x-z+u&0-u,u>>>0<2147483647):0){if((gb(u|0)|0)==(-1|0)){gb(o|0)|0;break f}else{z=u+z|0;break}}}while(0);if((y|0)!=(-1|0)){r=y;p=z;o=202;break d}}}while(0);c[15220>>2]=c[15220>>2]|4;o=199}else{A=0;o=199}}while(0);if((((o|0)==199?v>>>0<2147483647:0)?(s=gb(v|0)|0,t=gb(0)|0,(t|0)!=(-1|0)&(s|0)!=(-1|0)&s>>>0<t>>>0):0)?(p=t-s|0,q=p>>>0>(a+40|0)>>>0,q):0){r=s;p=q?p:A;o=202}if((o|0)==202){q=(c[15208>>2]|0)+p|0;c[15208>>2]=q;if(q>>>0>(c[15212>>2]|0)>>>0){c[15212>>2]=q}q=c[14800>>2]|0;g:do{if((q|0)!=0){v=15224|0;while(1){w=c[v>>2]|0;t=v+4|0;u=c[t>>2]|0;if((r|0)==(w+u|0)){o=214;break}s=c[v+8>>2]|0;if((s|0)==0){break}else{v=s}}if(((o|0)==214?(c[v+12>>2]&8|0)==0:0)?q>>>0>=w>>>0&q>>>0<r>>>0:0){c[t>>2]=u+p;d=(c[14788>>2]|0)+p|0;e=q+8|0;if((e&7|0)==0){e=0}else{e=0-e&7}H=d-e|0;c[14800>>2]=q+e;c[14788>>2]=H;c[q+(e+4)>>2]=H|1;c[q+(d+4)>>2]=40;c[14804>>2]=c[15264>>2];break}if(r>>>0<(c[14792>>2]|0)>>>0){c[14792>>2]=r}t=r+p|0;s=15224|0;while(1){if((c[s>>2]|0)==(t|0)){o=224;break}u=c[s+8>>2]|0;if((u|0)==0){break}else{s=u}}if((o|0)==224?(c[s+12>>2]&8|0)==0:0){c[s>>2]=r;h=s+4|0;c[h>>2]=(c[h>>2]|0)+p;h=r+8|0;if((h&7|0)==0){h=0}else{h=0-h&7}j=r+(p+8)|0;if((j&7|0)==0){n=0}else{n=0-j&7}o=r+(n+p)|0;j=h+a|0;k=r+j|0;m=o-(r+h)-a|0;c[r+(h+4)>>2]=a|3;h:do{if((o|0)!=(c[14800>>2]|0)){if((o|0)==(c[14796>>2]|0)){H=(c[14784>>2]|0)+m|0;c[14784>>2]=H;c[14796>>2]=k;c[r+(j+4)>>2]=H|1;c[r+(H+j)>>2]=H;break}q=p+4|0;t=c[r+(q+n)>>2]|0;if((t&3|0)==1){a=t&-8;s=t>>>3;do{if(!(t>>>0<256)){l=c[r+((n|24)+p)>>2]|0;v=c[r+(p+12+n)>>2]|0;do{if((v|0)==(o|0)){u=n|16;t=r+(q+u)|0;s=c[t>>2]|0;if((s|0)==0){t=r+(u+p)|0;s=c[t>>2]|0;if((s|0)==0){g=0;break}}while(1){v=s+20|0;u=c[v>>2]|0;if((u|0)!=0){s=u;t=v;continue}v=s+16|0;u=c[v>>2]|0;if((u|0)==0){break}else{s=u;t=v}}if(t>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[t>>2]=0;g=s;break}}else{s=c[r+((n|8)+p)>>2]|0;if(s>>>0<(c[14792>>2]|0)>>>0){ub()}t=s+12|0;if((c[t>>2]|0)!=(o|0)){ub()}u=v+8|0;if((c[u>>2]|0)==(o|0)){c[t>>2]=v;c[u>>2]=s;g=v;break}else{ub()}}}while(0);if((l|0)!=0){s=c[r+(p+28+n)>>2]|0;t=15080+(s<<2)|0;if((o|0)==(c[t>>2]|0)){c[t>>2]=g;if((g|0)==0){c[14780>>2]=c[14780>>2]&~(1<<s);break}}else{if(l>>>0<(c[14792>>2]|0)>>>0){ub()}s=l+16|0;if((c[s>>2]|0)==(o|0)){c[s>>2]=g}else{c[l+20>>2]=g}if((g|0)==0){break}}if(g>>>0<(c[14792>>2]|0)>>>0){ub()}c[g+24>>2]=l;l=n|16;o=c[r+(l+p)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[g+16>>2]=o;c[o+24>>2]=g;break}}}while(0);l=c[r+(q+l)>>2]|0;if((l|0)!=0){if(l>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[g+20>>2]=l;c[l+24>>2]=g;break}}}}else{q=c[r+((n|8)+p)>>2]|0;g=c[r+(p+12+n)>>2]|0;t=14816+(s<<1<<2)|0;if((q|0)!=(t|0)){if(q>>>0<(c[14792>>2]|0)>>>0){ub()}if((c[q+12>>2]|0)!=(o|0)){ub()}}if((g|0)==(q|0)){c[3694]=c[3694]&~(1<<s);break}if((g|0)!=(t|0)){if(g>>>0<(c[14792>>2]|0)>>>0){ub()}s=g+8|0;if((c[s>>2]|0)==(o|0)){l=s}else{ub()}}else{l=g+8|0}c[q+12>>2]=g;c[l>>2]=q}}while(0);o=r+((a|n)+p)|0;m=a+m|0}g=o+4|0;c[g>>2]=c[g>>2]&-2;c[r+(j+4)>>2]=m|1;c[r+(m+j)>>2]=m;g=m>>>3;if(m>>>0<256){l=g<<1;d=14816+(l<<2)|0;m=c[3694]|0;g=1<<g;if((m&g|0)!=0){l=14816+(l+2<<2)|0;g=c[l>>2]|0;if(g>>>0<(c[14792>>2]|0)>>>0){ub()}else{f=l;e=g}}else{c[3694]=m|g;f=14816+(l+2<<2)|0;e=d}c[f>>2]=k;c[e+12>>2]=k;c[r+(j+8)>>2]=e;c[r+(j+12)>>2]=d;break}e=m>>>8;if((e|0)!=0){if(m>>>0>16777215){e=31}else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=m>>>(e+7|0)&1|e<<1}}else{e=0}f=15080+(e<<2)|0;c[r+(j+28)>>2]=e;c[r+(j+20)>>2]=0;c[r+(j+16)>>2]=0;l=c[14780>>2]|0;g=1<<e;if((l&g|0)==0){c[14780>>2]=l|g;c[f>>2]=k;c[r+(j+24)>>2]=f;c[r+(j+12)>>2]=k;c[r+(j+8)>>2]=k;break}f=c[f>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}i:do{if((c[f+4>>2]&-8|0)!=(m|0)){e=m<<e;while(1){g=f+(e>>>31<<2)+16|0;l=c[g>>2]|0;if((l|0)==0){break}if((c[l+4>>2]&-8|0)==(m|0)){d=l;break i}else{e=e<<1;f=l}}if(g>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[g>>2]=k;c[r+(j+24)>>2]=f;c[r+(j+12)>>2]=k;c[r+(j+8)>>2]=k;break h}}else{d=f}}while(0);f=d+8|0;e=c[f>>2]|0;g=c[14792>>2]|0;if(d>>>0<g>>>0){ub()}if(e>>>0<g>>>0){ub()}else{c[e+12>>2]=k;c[f>>2]=k;c[r+(j+8)>>2]=e;c[r+(j+12)>>2]=d;c[r+(j+24)>>2]=0;break}}else{H=(c[14788>>2]|0)+m|0;c[14788>>2]=H;c[14800>>2]=k;c[r+(j+4)>>2]=H|1}}while(0);H=r+(h|8)|0;i=b;return H|0}e=15224|0;while(1){d=c[e>>2]|0;if(!(d>>>0>q>>>0)?(n=c[e+4>>2]|0,m=d+n|0,m>>>0>q>>>0):0){break}e=c[e+8>>2]|0}e=d+(n+ -39)|0;if((e&7|0)==0){e=0}else{e=0-e&7}d=d+(n+ -47+e)|0;d=d>>>0<(q+16|0)>>>0?q:d;e=d+8|0;f=r+8|0;if((f&7|0)==0){f=0}else{f=0-f&7}H=p+ -40-f|0;c[14800>>2]=r+f;c[14788>>2]=H;c[r+(f+4)>>2]=H|1;c[r+(p+ -36)>>2]=40;c[14804>>2]=c[15264>>2];c[d+4>>2]=27;c[e+0>>2]=c[15224>>2];c[e+4>>2]=c[15228>>2];c[e+8>>2]=c[15232>>2];c[e+12>>2]=c[15236>>2];c[15224>>2]=r;c[15228>>2]=p;c[15236>>2]=0;c[15232>>2]=e;e=d+28|0;c[e>>2]=7;if((d+32|0)>>>0<m>>>0){do{H=e;e=e+4|0;c[e>>2]=7}while((H+8|0)>>>0<m>>>0)}if((d|0)!=(q|0)){d=d-q|0;e=q+(d+4)|0;c[e>>2]=c[e>>2]&-2;c[q+4>>2]=d|1;c[q+d>>2]=d;e=d>>>3;if(d>>>0<256){f=e<<1;d=14816+(f<<2)|0;g=c[3694]|0;e=1<<e;if((g&e|0)!=0){f=14816+(f+2<<2)|0;e=c[f>>2]|0;if(e>>>0<(c[14792>>2]|0)>>>0){ub()}else{k=f;j=e}}else{c[3694]=g|e;k=14816+(f+2<<2)|0;j=d}c[k>>2]=q;c[j+12>>2]=q;c[q+8>>2]=j;c[q+12>>2]=d;break}e=d>>>8;if((e|0)!=0){if(d>>>0>16777215){e=31}else{G=(e+1048320|0)>>>16&8;H=e<<G;F=(H+520192|0)>>>16&4;H=H<<F;e=(H+245760|0)>>>16&2;e=14-(F|G|e)+(H<<e>>>15)|0;e=d>>>(e+7|0)&1|e<<1}}else{e=0}j=15080+(e<<2)|0;c[q+28>>2]=e;c[q+20>>2]=0;c[q+16>>2]=0;f=c[14780>>2]|0;g=1<<e;if((f&g|0)==0){c[14780>>2]=f|g;c[j>>2]=q;c[q+24>>2]=j;c[q+12>>2]=q;c[q+8>>2]=q;break}f=c[j>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}j:do{if((c[f+4>>2]&-8|0)!=(d|0)){e=d<<e;while(1){j=f+(e>>>31<<2)+16|0;g=c[j>>2]|0;if((g|0)==0){break}if((c[g+4>>2]&-8|0)==(d|0)){h=g;break j}else{e=e<<1;f=g}}if(j>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[j>>2]=q;c[q+24>>2]=f;c[q+12>>2]=q;c[q+8>>2]=q;break g}}else{h=f}}while(0);f=h+8|0;e=c[f>>2]|0;d=c[14792>>2]|0;if(h>>>0<d>>>0){ub()}if(e>>>0<d>>>0){ub()}else{c[e+12>>2]=q;c[f>>2]=q;c[q+8>>2]=e;c[q+12>>2]=h;c[q+24>>2]=0;break}}}else{H=c[14792>>2]|0;if((H|0)==0|r>>>0<H>>>0){c[14792>>2]=r}c[15224>>2]=r;c[15228>>2]=p;c[15236>>2]=0;c[14812>>2]=c[3812];c[14808>>2]=-1;d=0;do{H=d<<1;G=14816+(H<<2)|0;c[14816+(H+3<<2)>>2]=G;c[14816+(H+2<<2)>>2]=G;d=d+1|0}while((d|0)!=32);d=r+8|0;if((d&7|0)==0){d=0}else{d=0-d&7}H=p+ -40-d|0;c[14800>>2]=r+d;c[14788>>2]=H;c[r+(d+4)>>2]=H|1;c[r+(p+ -36)>>2]=40;c[14804>>2]=c[15264>>2]}}while(0);d=c[14788>>2]|0;if(d>>>0>a>>>0){G=d-a|0;c[14788>>2]=G;H=c[14800>>2]|0;c[14800>>2]=H+a;c[H+(a+4)>>2]=G|1;c[H+4>>2]=a|3;H=H+8|0;i=b;return H|0}}c[(qb()|0)>>2]=12;H=0;i=b;return H|0}function wr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;if((a|0)==0){i=b;return}q=a+ -8|0;r=c[14792>>2]|0;if(q>>>0<r>>>0){ub()}o=c[a+ -4>>2]|0;n=o&3;if((n|0)==1){ub()}j=o&-8;h=a+(j+ -8)|0;do{if((o&1|0)==0){u=c[q>>2]|0;if((n|0)==0){i=b;return}q=-8-u|0;o=a+q|0;n=u+j|0;if(o>>>0<r>>>0){ub()}if((o|0)==(c[14796>>2]|0)){d=a+(j+ -4)|0;if((c[d>>2]&3|0)!=3){d=o;m=n;break}c[14784>>2]=n;c[d>>2]=c[d>>2]&-2;c[a+(q+4)>>2]=n|1;c[h>>2]=n;i=b;return}t=u>>>3;if(u>>>0<256){d=c[a+(q+8)>>2]|0;m=c[a+(q+12)>>2]|0;p=14816+(t<<1<<2)|0;if((d|0)!=(p|0)){if(d>>>0<r>>>0){ub()}if((c[d+12>>2]|0)!=(o|0)){ub()}}if((m|0)==(d|0)){c[3694]=c[3694]&~(1<<t);d=o;m=n;break}if((m|0)!=(p|0)){if(m>>>0<r>>>0){ub()}p=m+8|0;if((c[p>>2]|0)==(o|0)){s=p}else{ub()}}else{s=m+8|0}c[d+12>>2]=m;c[s>>2]=d;d=o;m=n;break}s=c[a+(q+24)>>2]|0;t=c[a+(q+12)>>2]|0;do{if((t|0)==(o|0)){u=a+(q+20)|0;t=c[u>>2]|0;if((t|0)==0){u=a+(q+16)|0;t=c[u>>2]|0;if((t|0)==0){p=0;break}}while(1){w=t+20|0;v=c[w>>2]|0;if((v|0)!=0){t=v;u=w;continue}v=t+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{t=w;u=v}}if(u>>>0<r>>>0){ub()}else{c[u>>2]=0;p=t;break}}else{u=c[a+(q+8)>>2]|0;if(u>>>0<r>>>0){ub()}r=u+12|0;if((c[r>>2]|0)!=(o|0)){ub()}v=t+8|0;if((c[v>>2]|0)==(o|0)){c[r>>2]=t;c[v>>2]=u;p=t;break}else{ub()}}}while(0);if((s|0)!=0){t=c[a+(q+28)>>2]|0;r=15080+(t<<2)|0;if((o|0)==(c[r>>2]|0)){c[r>>2]=p;if((p|0)==0){c[14780>>2]=c[14780>>2]&~(1<<t);d=o;m=n;break}}else{if(s>>>0<(c[14792>>2]|0)>>>0){ub()}r=s+16|0;if((c[r>>2]|0)==(o|0)){c[r>>2]=p}else{c[s+20>>2]=p}if((p|0)==0){d=o;m=n;break}}if(p>>>0<(c[14792>>2]|0)>>>0){ub()}c[p+24>>2]=s;r=c[a+(q+16)>>2]|0;do{if((r|0)!=0){if(r>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[p+16>>2]=r;c[r+24>>2]=p;break}}}while(0);q=c[a+(q+20)>>2]|0;if((q|0)!=0){if(q>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[p+20>>2]=q;c[q+24>>2]=p;d=o;m=n;break}}else{d=o;m=n}}else{d=o;m=n}}else{d=q;m=j}}while(0);if(!(d>>>0<h>>>0)){ub()}n=a+(j+ -4)|0;o=c[n>>2]|0;if((o&1|0)==0){ub()}if((o&2|0)==0){if((h|0)==(c[14800>>2]|0)){w=(c[14788>>2]|0)+m|0;c[14788>>2]=w;c[14800>>2]=d;c[d+4>>2]=w|1;if((d|0)!=(c[14796>>2]|0)){i=b;return}c[14796>>2]=0;c[14784>>2]=0;i=b;return}if((h|0)==(c[14796>>2]|0)){w=(c[14784>>2]|0)+m|0;c[14784>>2]=w;c[14796>>2]=d;c[d+4>>2]=w|1;c[d+w>>2]=w;i=b;return}m=(o&-8)+m|0;n=o>>>3;do{if(!(o>>>0<256)){l=c[a+(j+16)>>2]|0;q=c[a+(j|4)>>2]|0;do{if((q|0)==(h|0)){o=a+(j+12)|0;n=c[o>>2]|0;if((n|0)==0){o=a+(j+8)|0;n=c[o>>2]|0;if((n|0)==0){k=0;break}}while(1){p=n+20|0;q=c[p>>2]|0;if((q|0)!=0){n=q;o=p;continue}p=n+16|0;q=c[p>>2]|0;if((q|0)==0){break}else{n=q;o=p}}if(o>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[o>>2]=0;k=n;break}}else{o=c[a+j>>2]|0;if(o>>>0<(c[14792>>2]|0)>>>0){ub()}p=o+12|0;if((c[p>>2]|0)!=(h|0)){ub()}n=q+8|0;if((c[n>>2]|0)==(h|0)){c[p>>2]=q;c[n>>2]=o;k=q;break}else{ub()}}}while(0);if((l|0)!=0){n=c[a+(j+20)>>2]|0;o=15080+(n<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=k;if((k|0)==0){c[14780>>2]=c[14780>>2]&~(1<<n);break}}else{if(l>>>0<(c[14792>>2]|0)>>>0){ub()}n=l+16|0;if((c[n>>2]|0)==(h|0)){c[n>>2]=k}else{c[l+20>>2]=k}if((k|0)==0){break}}if(k>>>0<(c[14792>>2]|0)>>>0){ub()}c[k+24>>2]=l;h=c[a+(j+8)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[k+16>>2]=h;c[h+24>>2]=k;break}}}while(0);h=c[a+(j+12)>>2]|0;if((h|0)!=0){if(h>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[k+20>>2]=h;c[h+24>>2]=k;break}}}}else{k=c[a+j>>2]|0;a=c[a+(j|4)>>2]|0;j=14816+(n<<1<<2)|0;if((k|0)!=(j|0)){if(k>>>0<(c[14792>>2]|0)>>>0){ub()}if((c[k+12>>2]|0)!=(h|0)){ub()}}if((a|0)==(k|0)){c[3694]=c[3694]&~(1<<n);break}if((a|0)!=(j|0)){if(a>>>0<(c[14792>>2]|0)>>>0){ub()}j=a+8|0;if((c[j>>2]|0)==(h|0)){l=j}else{ub()}}else{l=a+8|0}c[k+12>>2]=a;c[l>>2]=k}}while(0);c[d+4>>2]=m|1;c[d+m>>2]=m;if((d|0)==(c[14796>>2]|0)){c[14784>>2]=m;i=b;return}}else{c[n>>2]=o&-2;c[d+4>>2]=m|1;c[d+m>>2]=m}h=m>>>3;if(m>>>0<256){a=h<<1;e=14816+(a<<2)|0;j=c[3694]|0;h=1<<h;if((j&h|0)!=0){h=14816+(a+2<<2)|0;a=c[h>>2]|0;if(a>>>0<(c[14792>>2]|0)>>>0){ub()}else{f=h;g=a}}else{c[3694]=j|h;f=14816+(a+2<<2)|0;g=e}c[f>>2]=d;c[g+12>>2]=d;c[d+8>>2]=g;c[d+12>>2]=e;i=b;return}f=m>>>8;if((f|0)!=0){if(m>>>0>16777215){f=31}else{v=(f+1048320|0)>>>16&8;w=f<<v;u=(w+520192|0)>>>16&4;w=w<<u;f=(w+245760|0)>>>16&2;f=14-(u|v|f)+(w<<f>>>15)|0;f=m>>>(f+7|0)&1|f<<1}}else{f=0}g=15080+(f<<2)|0;c[d+28>>2]=f;c[d+20>>2]=0;c[d+16>>2]=0;a=c[14780>>2]|0;h=1<<f;a:do{if((a&h|0)!=0){g=c[g>>2]|0;if((f|0)==31){f=0}else{f=25-(f>>>1)|0}b:do{if((c[g+4>>2]&-8|0)!=(m|0)){f=m<<f;a=g;while(1){h=a+(f>>>31<<2)+16|0;g=c[h>>2]|0;if((g|0)==0){break}if((c[g+4>>2]&-8|0)==(m|0)){e=g;break b}else{f=f<<1;a=g}}if(h>>>0<(c[14792>>2]|0)>>>0){ub()}else{c[h>>2]=d;c[d+24>>2]=a;c[d+12>>2]=d;c[d+8>>2]=d;break a}}else{e=g}}while(0);g=e+8|0;f=c[g>>2]|0;h=c[14792>>2]|0;if(e>>>0<h>>>0){ub()}if(f>>>0<h>>>0){ub()}else{c[f+12>>2]=d;c[g>>2]=d;c[d+8>>2]=f;c[d+12>>2]=e;c[d+24>>2]=0;break}}else{c[14780>>2]=a|h;c[g>>2]=d;c[d+24>>2]=g;c[d+12>>2]=d;c[d+8>>2]=d}}while(0);w=(c[14808>>2]|0)+ -1|0;c[14808>>2]=w;if((w|0)==0){d=15232|0}else{i=b;return}while(1){d=c[d>>2]|0;if((d|0)==0){break}else{d=d+8|0}}c[14808>>2]=-1;i=b;return}function xr(a){a=a|0;var b=0;b=i;rb(a|0);if((a|0)!=0){wr(a)}i=b;return}function yr(a){a=a|0;var b=0;b=i;rb(a|0);i=b;return}function zr(a){a=a|0;return 15304}function Ar(){c[3836]=o}function Br(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=b-d-(c>>>0>a>>>0|0)>>>0;return(F=b,a-c>>>0|0)|0}function Cr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;i=b&3;h=d|d<<8|d<<16|d<<24;g=f&~3;if(i){i=b+4-i|0;while((b|0)<(i|0)){a[b]=d;b=b+1|0}}while((b|0)<(g|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function Dr(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function Er(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(F=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function Fr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return ob(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Gr(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{Fr(b,c,d)|0}return b|0}function Hr(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}F=a<<c-32;return 0}function Ir(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}F=0;return b>>>c-32|0}function Jr(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}F=(b|0)<0?-1:0;return b>>c-32|0}function Kr(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function Lr(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function Mr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;d=b&65535;c=ba(d,f)|0;e=a>>>16;d=(c>>>16)+(ba(d,e)|0)|0;b=b>>>16;a=ba(b,f)|0;return(F=(d>>>16)+(ba(b,e)|0)+(((d&65535)+a|0)>>>16)|0,d+a<<16|c&65535|0)|0}function Nr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;a=Br(e^a,f^b,e,f)|0;b=F;e=g^e;f=h^f;g=Br((Sr(a,b,Br(g^c,h^d,g,h)|0,F,0)|0)^e,F^f,e,f)|0;return g|0}function Or(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;g=i;i=i+8|0;f=g|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=Br(h^a,j^b,h,j)|0;b=F;Sr(a,b,Br(k^d,l^e,k,l)|0,F,f)|0;k=Br(c[f>>2]^h,c[f+4>>2]^j,h,j)|0;j=F;i=g;return(F=j,k)|0}function Pr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;a=Mr(e,f)|0;c=F;return(F=(ba(b,f)|0)+(ba(d,e)|0)+c|c&0,a|0|0)|0}function Qr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Sr(a,b,c,d,0)|0;return a|0}function Rr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=i;i=i+8|0;f=g|0;Sr(a,b,d,e,f)|0;i=g;return(F=c[f+4>>2]|0,c[f>>2]|0)|0}function Sr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=a;j=b;i=j;k=d;g=e;l=g;if((i|0)==0){e=(f|0)!=0;if((l|0)==0){if(e){c[f>>2]=(h>>>0)%(k>>>0);c[f+4>>2]=0}l=0;m=(h>>>0)/(k>>>0)>>>0;return(F=l,m)|0}else{if(!e){l=0;m=0;return(F=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;l=0;m=0;return(F=l,m)|0}}m=(l|0)==0;do{if((k|0)!=0){if(!m){k=(Kr(l|0)|0)-(Kr(i|0)|0)|0;if(k>>>0<=31){m=k+1|0;l=31-k|0;b=k-31>>31;j=m;a=h>>>(m>>>0)&b|i<<l;b=i>>>(m>>>0)&b;k=0;l=h<<l;break}if((f|0)==0){l=0;m=0;return(F=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;l=0;m=0;return(F=l,m)|0}l=k-1|0;if((l&k|0)!=0){l=(Kr(k|0)|0)+33-(Kr(i|0)|0)|0;p=64-l|0;m=32-l|0;n=m>>31;o=l-32|0;b=o>>31;j=l;a=m-1>>31&i>>>(o>>>0)|(i<<m|h>>>(l>>>0))&b;b=b&i>>>(l>>>0);k=h<<p&n;l=(i<<p|h>>>(o>>>0))&n|h<<m&l-33>>31;break}if((f|0)!=0){c[f>>2]=l&h;c[f+4>>2]=0}if((k|0)==1){o=j|b&0;p=a|0|0;return(F=o,p)|0}else{p=Lr(k|0)|0;o=i>>>(p>>>0)|0;p=i<<32-p|h>>>(p>>>0)|0;return(F=o,p)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(k>>>0);c[f+4>>2]=0}o=0;p=(i>>>0)/(k>>>0)>>>0;return(F=o,p)|0}if((h|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}o=0;p=(i>>>0)/(l>>>0)>>>0;return(F=o,p)|0}k=l-1|0;if((k&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=k&i|b&0}o=0;p=i>>>((Lr(l|0)|0)>>>0);return(F=o,p)|0}k=(Kr(l|0)|0)-(Kr(i|0)|0)|0;if(k>>>0<=30){b=k+1|0;l=31-k|0;j=b;a=i<<l|h>>>(b>>>0);b=i>>>(b>>>0);k=0;l=h<<l;break}if((f|0)==0){o=0;p=0;return(F=o,p)|0}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(F=o,p)|0}}while(0);if((j|0)==0){g=0;e=0}else{h=d|0|0;i=g|e&0;d=Er(h,i,-1,-1)|0;g=F;e=0;do{m=l;l=k>>>31|l<<1;k=e|k<<1;m=a<<1|m>>>31|0;a=a>>>31|b<<1|0;Br(d,g,m,a)|0;b=F;p=b>>31|((b|0)<0?-1:0)<<1;e=p&1;a=Br(m,a,p&h,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&i)|0;b=F;j=j-1|0}while((j|0)!=0);g=0}h=0;if((f|0)!=0){c[f>>2]=a;c[f+4>>2]=b}o=(k|0)>>>31|(l|h)<<1|(h<<1|k>>>31)&0|g;p=(k<<1|0>>>31)&-2|e;return(F=o,p)|0}function Tr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Db[a&31](b|0,c|0,d|0,e|0,f|0)}function Ur(a,b,c){a=a|0;b=b|0;c=+c;Eb[a&15](b|0,+c)}function Vr(a,b){a=a|0;b=b|0;Fb[a&255](b|0)}function Wr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;Gb[a&0](b|0,c|0,d|0,+e,f|0,g|0)}function Xr(a,b,c){a=a|0;b=b|0;c=c|0;Hb[a&127](b|0,c|0)}function Yr(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return Ib[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)|0}function Zr(a,b){a=a|0;b=b|0;return Jb[a&63](b|0)|0}function _r(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;Kb[a&3](b|0,c|0,+d,e|0)}function $r(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=f|0;g=g|0;Lb[a&0](b|0,+c,+d,e|0,f|0,g|0)}function as(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;Mb[a&0](b|0,+c,d|0,e|0)}function bs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Nb[a&15](b|0,c|0,d|0,e|0)|0}function cs(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;Ob[a&7](b|0,+c,d|0)}function ds(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return+Pb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function es(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=j|0;k=k|0;l=+l;Qb[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,j|0,k|0,+l)}function fs(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return+Rb[a&15](b|0,c|0,d|0,e|0,f|0)}function gs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Sb[a&31](b|0,c|0,d|0)|0}function hs(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Tb[a&7](b|0,c|0,d|0,e|0,f|0,g|0)}function is(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return Ub[a&3](b|0,c|0,+d)|0}function js(a,b){a=a|0;b=b|0;return+Vb[a&3](b|0)}function ks(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Wb[a&3](b|0,c|0,d|0,e|0,f|0,g|0)|0}function ls(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;return+Xb[a&3](b|0,c|0,d|0,+e,f|0,g|0)}function ms(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;Yb[a&0](b|0,c|0,+d,e|0,f|0)}function ns(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Zb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function os(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;_b[a&0](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function ps(a,b,c){a=a|0;b=b|0;c=c|0;return $b[a&31](b|0,c|0)|0}function qs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+ac[a&7](b|0,c|0,d|0)}function rs(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return+bc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function ss(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;cc[a&1](b|0,c|0,d|0,e|0,+f)}function ts(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return+dc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function us(a,b,c){a=a|0;b=b|0;c=+c;return+ec[a&1](b|0,+c)}function vs(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=+j;k=k|0;l=+l;m=m|0;fc[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,+j,k|0,+l,m|0)}function ws(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;return+gc[a&3](b|0,c|0,+d,e|0,f|0)}function xs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+hc[a&1](b|0,c|0,d|0,e|0)}function ys(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return ic[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)|0}function zs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;jc[a&15](b|0,c|0,d|0,+e)}function As(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;kc[a&63](b|0,c|0,d|0)}function Bs(a){a=a|0;lc[a&1]()}function Cs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;mc[a&1](b|0,c|0,+d)}function Ds(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=+e;return nc[a&1](b|0,+c,d|0,+e)|0}function Es(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;oc[a&63](b|0,c|0,d|0,e|0)}function Fs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ca(0)}function Gs(a,b){a=a|0;b=+b;ca(1)}function Hs(a){a=a|0;ca(2)}function Is(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ca(3)}function Js(a,b){a=a|0;b=b|0;ca(4)}function Ks(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ca(5);return 0}function Ls(a){a=a|0;ca(6);return 0}function Ms(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;ca(7)}function Ns(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=d|0;e=e|0;f=f|0;ca(8)}function Os(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;ca(9)}function Ps(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ca(10);return 0}function Qs(a,b,c){a=a|0;b=+b;c=c|0;ca(11)}function Rs(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ca(12);return 0.0}function Ss(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=i|0;j=j|0;k=+k;ca(13)}function Ts(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ca(14);return 0.0}function Us(a,b,c){a=a|0;b=b|0;c=c|0;ca(15);return 0}function Vs(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ca(16)}function Ws(a,b,c){a=a|0;b=b|0;c=+c;ca(17);return 0}function Xs(a){a=a|0;ca(18);return 0.0}function Ys(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ca(19);return 0}function Zs(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ca(20);return 0.0}function _s(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ca(21)}function $s(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ca(22)}function at(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ca(23)}function bt(a,b){a=a|0;b=b|0;ca(24);return 0}function ct(a,b,c){a=a|0;b=b|0;c=c|0;ca(25);return 0.0}function dt(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ca(26);return 0.0}function et(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;ca(27)}function ft(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ca(28);return 0.0}function gt(a,b){a=a|0;b=+b;ca(29);return 0.0}function ht(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=+i;j=j|0;k=+k;l=l|0;ca(30)}function it(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ca(31);return 0.0}function jt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ca(32);return 0.0}function kt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ca(33);return 0}function lt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ca(34)}function mt(a,b,c){a=a|0;b=b|0;c=c|0;ca(35)}function nt(){ca(36)}function ot(){Bb()}function pt(a,b,c){a=a|0;b=b|0;c=+c;ca(37)}function qt(a,b,c,d){a=a|0;b=+b;c=c|0;d=+d;ca(38);return 0}function rt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ca(39)}




// EMSCRIPTEN_END_FUNCS
var Db=[Fs,li,Kl,_l,Ym,fn,Lo,Qo,_o,dp,gp,sp,Cp,Op,Xp,oq,rr,qr,pr,Fs,Fs,Fs,Fs,Fs,Fs,Fs,Fs,Fs,Fs,Fs,Fs,Fs];var Eb=[Gs,Lg,Jg,vg,ng,hg,Wg,_i,wj,gl,vl,ah,Gs,Gs,Gs,Gs];var Fb=[Hs,wf,xf,yf,Df,Ef,If,Jf,Nf,Of,$f,ag,Uf,gg,fg,dk,ek,ig,fk,lg,jg,Gg,kg,Ig,gh,lh,mh,nh,oh,wh,xh,rh,Hh,Ih,Lh,Kh,ai,hi,ii,ui,Bi,Ci,Di,Ei,Wi,Xi,qj,rj,Cj,Bj,Kj,Sj,bk,ak,sk,rk,xk,wk,Ak,pk,Ck,nk,Ek,Gk,Hk,Kk,Lk,Nk,Ok,Sk,Tk,Rk,Wk,al,bl,dl,el,ik,jl,pl,ql,Bl,Cl,Al,Dl,Pl,Ol,fm,Zl,gm,Xl,im,Sl,km,pm,om,um,vm,xm,ym,Am,Bm,Dm,Em,Gm,Hm,Jm,Km,Mm,Nm,Pm,Qm,Sm,Tm,Vm,Wm,_m,$m,cn,dn,lk,Qk,gn,hn,Aj,Uj,mn,nn,on,pn,wn,vn,Nn,On,Qn,Rn,Wn,Vn,ho,io,go,jo,Ao,zo,Hg,Yg,Ko,Jo,Po,Oo,Uo,Vo,$o,ap,cp,bp,hp,ip,jp,kp,mp,np,rp,qp,up,xp,Ap,zp,Dp,Fp,Jp,Ip,Mp,Lp,Qp,Rp,Up,Tp,Wp,Vp,Yp,aq,dq,eq,cq,iq,nq,mq,sq,rq,Kq,Jq,fr,ir,gr,hr,jr,kr,yr,xr,ar,cr,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs,Hs];var Gb=[Is];var Hb=[Js,Kf,Lf,Rf,Tf,Sg,rg,Rg,xg,yg,zg,og,pg,tg,sg,Mg,Ag,Bg,Cg,Dg,Eg,Vg,sh,th,Jh,Gh,pi,ti,Oi,Si,Ti,Yi,$g,$j,tj,vj,Fj,Ej,Mj,gk,uk,Yk,hl,ol,ul,am,em,hm,jm,mm,an,Kn,Mn,En,Hl,Co,No,So,fp,wp,yp,Bp,Hp,Kp,_p,qq,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js,Js];var Ib=[Ks,en,kn,Ks];var Jb=[Ls,Fc,bg,Tg,Ng,Og,Ug,yh,Eh,di,qi,ri,Ii,Ji,Ki,Mi,Ri,Zg,Zi,ch,dj,fj,gj,jj,uj,xj,eh,Nj,Pj,Qj,Rj,tl,wl,bm,cm,rm,sm,tm,Gn,Hn,In,Jn,Ln,mo,po,ro,so,vo,_g,Oq,zr,Ls,Ls,Ls,Ls,Ls,Ls,Ls,Ls,Ls,Ls,Ls,Ls,Ls];var Kb=[Ms,Yf,uh,Ms];var Lb=[Ns];var Mb=[Os];var Nb=[Ps,Gi,Gj,wm,zm,Cm,Fm,Im,Lm,Om,Rm,Um,Xm,Cn,$p,Ps];var Ob=[Qs,Vi,pj,sl,_n,lo,Io,Qs];var Pb=[Rs,Qf];var Qb=[Ss];var Rb=[Ts,Zm,Mo,Ro,ep,vp,Ep,Pp,Zp,pq,Ts,Ts,Ts,Ts,Ts,Ts];var Sb=[Us,fi,cg,zh,Fh,Fi,Qi,dh,yj,Dj,Ij,Hj,xl,qm,Fn,An,Mq,Nq,lr,Us,Us,Us,Us,Us,Us,Us,Us,Us,Us,Us,Us,Us];var Tb=[Vs,ph,ni,Vl,ur,tr,sr,Vs];var Ub=[Ws,lj,xo,Ws];var Vb=[Xs,_j,$i,bh];var Wb=[Ys,zl,bn,To];var Xb=[Zs,Mk,Pk,Zs];var Yb=[_s];var Zb=[$s,Yh];var _b=[at];var $b=[bt,Ff,Pf,Pg,Qg,hh,kh,Ch,Xn,Oj,Lj,Tj,Dk,Fk,Ik,Uk,_k,$k,Pn,Sn,bt,bt,bt,bt,bt,bt,bt,bt,bt,bt,bt,bt];var ac=[ct,Gf,Zf,ih,jh,vh,Jk,Vk];var bc=[dt,$h,Xh,dt];var cc=[et,zf];var dc=[ft,Wh,Zh,ft];var ec=[gt,Zj];var fc=[ht];var gc=[it,cl,fl,it];var hc=[jt,_h];var ic=[kt,ji,Ql,kt];var jc=[lt,Af,Vf,Gl,jn,sn,bq,hq,lq,lt,lt,lt,lt,lt,lt,lt];var kc=[mt,_f,wg,bi,ci,ki,si,Hi,Li,Ni,Pi,Yj,aj,bj,ej,ij,mj,Jl,nj,fh,Xk,il,nl,ll,El,Fl,Tl,dm,lm,Vj,Wj,qn,rn,zn,xn,yn,Dn,Yn,no,qo,uo,Bo,Go,Eo,lp,op,Gp,fq,gq,jq,kq,zj,Ml,Ll,mt,mt,mt,mt,mt,mt,mt,mt,mt,mt];var lc=[nt,ot];var mc=[pt,Zk];var nc=[qt,mg];var oc=[rt,qk,mk,qg,ug,Vh,mi,oi,Ui,cj,Il,hj,kj,sj,oj,Jj,ck,yk,zk,Bk,fo,eo,rl,ml,Ul,Yl,Zn,ko,oo,to,wo,yo,Ho,Fo,Np,Sp,mr,nr,or,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt];return{_strlen:Dr,_emscripten_bind_btQuaternion_w_0:he,_emscripten_bind_btTransform_getBasis_0:kf,_emscripten_bind_btTransform_getRotation_0:jf,_emscripten_bind_btRigidBody_getMotionState_0:Xe,_emscripten_bind_btCollisionObject_isActive_0:bd,_emscripten_bind_btQuadWord_w_0:pf,_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4:dd,_emscripten_bind_btTypedConstraint___destroy___0:vf,_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0:Se,_emscripten_bind_btSphereShape_btSphereShape_1:Oe,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4:qd,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2:pd,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3:hd,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1:gd,_emscripten_bind_btRigidBodyConstructionInfo___destroy___0:Jd,_emscripten_bind_btQuaternion_setX_1:ie,_emscripten_bind_btRigidBody_getWorldTransform_0:Ye,_emscripten_bind_btQuaternion_setZ_1:ke,_emscripten_bind_btConeShape_btConeShape_2:zd,_emscripten_bind_btQuaternion_y_0:fe,_emscripten_bind_btCapsuleShape_calculateLocalInertia_2:Pc,_emscripten_bind_btVector3_y_0:He,_emscripten_bind_btQuadWord_z_0:of,_emscripten_bind_btTransform_setRotation_1:gf,_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7:Jc,_emscripten_bind_btQuaternion_setW_1:le,_emscripten_bind_btAxisSweep3_btAxisSweep3_2:Rc,_emscripten_bind_btAxisSweep3_btAxisSweep3_3:Sc,_emscripten_bind_btDefaultMotionState_setWorldTransform_1:Wd,_emscripten_bind_btBoxShape_calculateLocalInertia_2:Md,_emscripten_bind_btVector4_z_0:xe,_emscripten_bind_btAxisSweep3_btAxisSweep3_4:Tc,_emscripten_bind_btAxisSweep3_btAxisSweep3_5:Uc,_emscripten_bind_btQuadWord_setX_1:qf,_free:wr,_emscripten_bind_btConeTwistConstraint_setLimit_2:xd,_emscripten_bind_btRigidBody___destroy___0:af,_emscripten_bind_ClosestRayResultCallback___destroy___0:ce,_emscripten_bind_btCollisionDispatcher___destroy___0:Pd,_emscripten_bind_btOverlappingPairCache___destroy___0:De,_emscripten_bind_btDefaultMotionState_getWorldTransform_1:Vd,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1:ld,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3:nd,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2:md,_emscripten_bind_RayResultCallback___destroy___0:re,_emscripten_bind_btVector4_op_mul_1:Be,_emscripten_bind_btQuadWord_x_0:mf,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1:Td,_emscripten_bind_btBroadphaseInterface___destroy___0:Zc,_emscripten_bind_btRigidBody_activate_1:_e,_emscripten_bind_btRigidBody_activate_0:Ze,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2:vd,_emscripten_bind_btVector3_op_mul_1:Me,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4:wd,_emscripten_bind_btQuaternion_x_0:ee,_emscripten_bind_btVector3___destroy___0:Ne,_emscripten_bind_btCapsuleShape___destroy___0:Qc,_emscripten_bind_btMotionState_getWorldTransform_1:sd,_emscripten_bind_btCollisionObject_activate_0:$c,_emscripten_bind_ContactResultCallback___destroy___0:Gd,_emscripten_bind_btQuaternion_z_0:ge,_emscripten_bind_btVector4_x_0:ve,_emscripten_bind_btVector3_x_0:Ge,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3:Hd,_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1:Od,_emscripten_bind_btVector3_setX_1:Je,_emscripten_bind_btCollisionConfiguration___destroy___0:Kd,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4:Id,_emscripten_bind_btManifoldPoint___destroy___0:Wc,_emscripten_bind_btQuaternion_btQuaternion_4:de,_emscripten_bind_btTransform_setIdentity_0:df,_emscripten_bind_btVector3_setZ_1:Le,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2:Ud,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0:Qd,_emscripten_bind_btDefaultCollisionConfiguration___destroy___0:Ed,_emscripten_bind_btRigidBody_isActive_0:$e,_emscripten_bind_btMotionState_setWorldTransform_1:td,_emscripten_bind_btQuadWord_setY_1:rf,_emscripten_bind_btQuaternion_setY_1:je,_emscripten_bind_btConeShape_calculateLocalInertia_2:Ad,_emscripten_bind_btVector4_btVector4_0:se,_emscripten_bind_btVector4_w_0:ue,_emscripten_bind_btBoxShape_btBoxShape_1:Ld,_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1:be,_emscripten_bind_btSphereShape___destroy___0:Qe,_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0:_d,_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1:kd,_emscripten_bind_btVector4_y_0:we,_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0:Yc,_emscripten_bind_btTransform_getOrigin_0:hf,_emscripten_bind_btMatrix3x3_setEulerZYX_3:Gc,_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0:Re,_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0:Ic,_memset:Cr,_emscripten_bind_btDefaultMotionState___destroy___0:Xd,_emscripten_bind_RayResultCallback_set_m_collisionObject_1:qe,_emscripten_bind_btQuadWord_setW_1:tf,_emscripten_bind_RayResultCallback_get_m_collisionObject_0:pe,_i64Subtract:Br,_emscripten_bind_btRigidBody_btRigidBody_1:We,_emscripten_bind_btCollisionShape___destroy___0:Ue,_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0:Lc,_emscripten_bind_btPoint2PointConstraint___destroy___0:rd,_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1:$d,_emscripten_bind_btAxisSweep3___destroy___0:Vc,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2:jd,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1:id,_emscripten_bind_btVector4_setY_1:ze,_emscripten_bind_ConcreteContactResultCallback___destroy___0:Kc,_malloc:vr,_emscripten_bind_btConeTwistConstraint___destroy___0:yd,_emscripten_bind_btCollisionObject___destroy___0:cd,_emscripten_bind_btTransform_btTransform_2:cf,_emscripten_bind_btTransform_btTransform_0:bf,_emscripten_bind_btVector3_btVector3_3:Fe,_emscripten_bind_btVector3_btVector3_0:Ee,_emscripten_bind_btBoxShape___destroy___0:Nd,_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0:fd,_emscripten_bind_btVector3_z_0:Ie,_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0:ae,_emscripten_bind_btCollisionObject_activate_1:ad,_emscripten_bind_btMatrix3x3___destroy___0:Hc,_emscripten_bind_btQuadWord___destroy___0:uf,_emscripten_bind_btCollisionShape_calculateLocalInertia_2:Te,_emscripten_bind_RayResultCallback_hasHit_0:oe,_emscripten_bind_btConeShape___destroy___0:Bd,_emscripten_bind_btConstraintSolver___destroy___0:Ve,_emscripten_bind_btDbvtBroadphase___destroy___0:Mc,_emscripten_bind_btQuaternion___destroy___0:me,_emscripten_bind_btCapsuleShape_btCapsuleShape_2:Nc,_emscripten_bind_btQuadWord_setZ_1:sf,_emscripten_bind_btSphereShape_calculateLocalInertia_2:Pe,_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2:Yd,_emscripten_bind_btVector4___destroy___0:Ce,_i64Add:Er,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0:Cd,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1:Dd,_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0:Xc,_emscripten_bind_btVector4_btVector4_4:te,_emscripten_bind_btTransform_setOrigin_1:ff,_emscripten_bind_ClosestRayResultCallback_hasHit_0:Zd,_emscripten_bind_btDispatcher___destroy___0:ne,_emscripten_bind_btDiscreteDynamicsWorld___destroy___0:od,_emscripten_bind_btTransform___destroy___0:lf,_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1:ed,_memmove:Gr,_emscripten_bind_ContactResultCallback_addSingleResult_7:Fd,_emscripten_bind_btVector4_setX_1:ye,_emscripten_bind_btQuadWord_y_0:nf,_memcpy:Fr,_emscripten_bind_btCollisionObject_getWorldTransform_0:_c,_emscripten_bind_btVector4_setZ_1:Ae,_emscripten_bind_btMotionState___destroy___0:ud,_emscripten_bind_btVector3_setY_1:Ke,__GLOBAL__I_a:er,runPostSets:Ar,stackAlloc:pc,stackSave:qc,stackRestore:rc,setThrew:sc,setTempRet0:vc,setTempRet1:wc,setTempRet2:xc,setTempRet3:yc,setTempRet4:zc,setTempRet5:Ac,setTempRet6:Bc,setTempRet7:Cc,setTempRet8:Dc,setTempRet9:Ec,dynCall_viiiii:Tr,dynCall_vid:Ur,dynCall_vi:Vr,dynCall_viiidii:Wr,dynCall_vii:Xr,dynCall_iiiiiiiiiii:Yr,dynCall_ii:Zr,dynCall_viidi:_r,dynCall_viddiii:$r,dynCall_vidii:as,dynCall_iiiii:bs,dynCall_vidi:cs,dynCall_diiiiiiii:ds,dynCall_viiiiddddiid:es,dynCall_diiiii:fs,dynCall_iiii:gs,dynCall_viiiiii:hs,dynCall_iiid:is,dynCall_di:js,dynCall_iiiiiii:ks,dynCall_diiidii:ls,dynCall_viidii:ms,dynCall_viiiiiiiii:ns,dynCall_viiiiiiiiii:os,dynCall_iii:ps,dynCall_diii:qs,dynCall_diiiiiiiiii:rs,dynCall_viiiid:ss,dynCall_diiiiiiiii:ts,dynCall_did:us,dynCall_viiiidddddidi:vs,dynCall_diidii:ws,dynCall_diiii:xs,dynCall_iiiiiiiiii:ys,dynCall_viiid:zs,dynCall_viii:As,dynCall_v:Bs,dynCall_viid:Cs,dynCall_iidid:Ds,dynCall_viiii:Es}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_viiidii": invoke_viiidii, "invoke_vii": invoke_vii, "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii, "invoke_ii": invoke_ii, "invoke_viidi": invoke_viidi, "invoke_viddiii": invoke_viddiii, "invoke_vidii": invoke_vidii, "invoke_iiiii": invoke_iiiii, "invoke_vidi": invoke_vidi, "invoke_diiiiiiii": invoke_diiiiiiii, "invoke_viiiiddddiid": invoke_viiiiddddiid, "invoke_diiiii": invoke_diiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiid": invoke_iiid, "invoke_di": invoke_di, "invoke_iiiiiii": invoke_iiiiiii, "invoke_diiidii": invoke_diiidii, "invoke_viidii": invoke_viidii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_diii": invoke_diii, "invoke_diiiiiiiiii": invoke_diiiiiiiiii, "invoke_viiiid": invoke_viiiid, "invoke_diiiiiiiii": invoke_diiiiiiiii, "invoke_did": invoke_did, "invoke_viiiidddddidi": invoke_viiiidddddidi, "invoke_diidii": invoke_diidii, "invoke_diiii": invoke_diiii, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_iidid": invoke_iidid, "invoke_viiii": invoke_viiii, "_cosf": _cosf, "__ZSt9terminatev": __ZSt9terminatev, "_fmod": _fmod, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_is_number_type": ___cxa_is_number_type, "_atan2f": _atan2f, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_fflush": _fflush, "___cxa_guard_release": ___cxa_guard_release, "_time": _time, "_emscripten_asm_const_double": _emscripten_asm_const_double, "___setErrNo": ___setErrNo, "_fabsf": _fabsf, "_sbrk": _sbrk, "_llvm_pow_f32": _llvm_pow_f32, "___cxa_begin_catch": ___cxa_begin_catch, "_sinf": _sinf, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_sysconf": _sysconf, "_acosf": _acosf, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sqrtf": _sqrtf, "___errno_location": ___errno_location, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "___cxa_does_inherit": ___cxa_does_inherit, "__exit": __exit, "_abort": _abort, "___cxa_throw": ___cxa_throw, "___cxa_allocate_exception": ___cxa_allocate_exception, "_gettimeofday": _gettimeofday, "_atexit": _atexit, "_llvm_trap": _llvm_trap, "_exit": _exit, "___cxa_pure_virtual": ___cxa_pure_virtual, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTISt9exception": __ZTISt9exception, "___dso_handle": ___dso_handle }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _emscripten_bind_btQuaternion_w_0 = Module["_emscripten_bind_btQuaternion_w_0"] = asm["_emscripten_bind_btQuaternion_w_0"];
var _emscripten_bind_btTransform_getBasis_0 = Module["_emscripten_bind_btTransform_getBasis_0"] = asm["_emscripten_bind_btTransform_getBasis_0"];
var _emscripten_bind_btTransform_getRotation_0 = Module["_emscripten_bind_btTransform_getRotation_0"] = asm["_emscripten_bind_btTransform_getRotation_0"];
var _emscripten_bind_btRigidBody_getMotionState_0 = Module["_emscripten_bind_btRigidBody_getMotionState_0"] = asm["_emscripten_bind_btRigidBody_getMotionState_0"];
var _emscripten_bind_btCollisionObject_isActive_0 = Module["_emscripten_bind_btCollisionObject_isActive_0"] = asm["_emscripten_bind_btCollisionObject_isActive_0"];
var _emscripten_bind_btQuadWord_w_0 = Module["_emscripten_bind_btQuadWord_w_0"] = asm["_emscripten_bind_btQuadWord_w_0"];
var _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4 = Module["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"];
var _emscripten_bind_btTypedConstraint___destroy___0 = Module["_emscripten_bind_btTypedConstraint___destroy___0"] = asm["_emscripten_bind_btTypedConstraint___destroy___0"];
var _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"];
var _emscripten_bind_btSphereShape_btSphereShape_1 = Module["_emscripten_bind_btSphereShape_btSphereShape_1"] = asm["_emscripten_bind_btSphereShape_btSphereShape_1"];
var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"];
var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"];
var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"];
var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"];
var _emscripten_bind_btRigidBodyConstructionInfo___destroy___0 = Module["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"];
var _emscripten_bind_btQuaternion_setX_1 = Module["_emscripten_bind_btQuaternion_setX_1"] = asm["_emscripten_bind_btQuaternion_setX_1"];
var _emscripten_bind_btRigidBody_getWorldTransform_0 = Module["_emscripten_bind_btRigidBody_getWorldTransform_0"] = asm["_emscripten_bind_btRigidBody_getWorldTransform_0"];
var _emscripten_bind_btQuaternion_setZ_1 = Module["_emscripten_bind_btQuaternion_setZ_1"] = asm["_emscripten_bind_btQuaternion_setZ_1"];
var _emscripten_bind_btConeShape_btConeShape_2 = Module["_emscripten_bind_btConeShape_btConeShape_2"] = asm["_emscripten_bind_btConeShape_btConeShape_2"];
var _emscripten_bind_btQuaternion_y_0 = Module["_emscripten_bind_btQuaternion_y_0"] = asm["_emscripten_bind_btQuaternion_y_0"];
var _emscripten_bind_btCapsuleShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"];
var _emscripten_bind_btVector3_y_0 = Module["_emscripten_bind_btVector3_y_0"] = asm["_emscripten_bind_btVector3_y_0"];
var _emscripten_bind_btQuadWord_z_0 = Module["_emscripten_bind_btQuadWord_z_0"] = asm["_emscripten_bind_btQuadWord_z_0"];
var _emscripten_bind_btTransform_setRotation_1 = Module["_emscripten_bind_btTransform_setRotation_1"] = asm["_emscripten_bind_btTransform_setRotation_1"];
var _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"];
var _emscripten_bind_btQuaternion_setW_1 = Module["_emscripten_bind_btQuaternion_setW_1"] = asm["_emscripten_bind_btQuaternion_setW_1"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_2 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_3 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"];
var _emscripten_bind_btDefaultMotionState_setWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"];
var _emscripten_bind_btBoxShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBoxShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBoxShape_calculateLocalInertia_2"];
var _emscripten_bind_btVector4_z_0 = Module["_emscripten_bind_btVector4_z_0"] = asm["_emscripten_bind_btVector4_z_0"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_4 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_5 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"];
var _emscripten_bind_btQuadWord_setX_1 = Module["_emscripten_bind_btQuadWord_setX_1"] = asm["_emscripten_bind_btQuadWord_setX_1"];
var _free = Module["_free"] = asm["_free"];
var _emscripten_bind_btConeTwistConstraint_setLimit_2 = Module["_emscripten_bind_btConeTwistConstraint_setLimit_2"] = asm["_emscripten_bind_btConeTwistConstraint_setLimit_2"];
var _emscripten_bind_btRigidBody___destroy___0 = Module["_emscripten_bind_btRigidBody___destroy___0"] = asm["_emscripten_bind_btRigidBody___destroy___0"];
var _emscripten_bind_ClosestRayResultCallback___destroy___0 = Module["_emscripten_bind_ClosestRayResultCallback___destroy___0"] = asm["_emscripten_bind_ClosestRayResultCallback___destroy___0"];
var _emscripten_bind_btCollisionDispatcher___destroy___0 = Module["_emscripten_bind_btCollisionDispatcher___destroy___0"] = asm["_emscripten_bind_btCollisionDispatcher___destroy___0"];
var _emscripten_bind_btOverlappingPairCache___destroy___0 = Module["_emscripten_bind_btOverlappingPairCache___destroy___0"] = asm["_emscripten_bind_btOverlappingPairCache___destroy___0"];
var _emscripten_bind_btDefaultMotionState_getWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"];
var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"];
var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"];
var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"];
var _emscripten_bind_RayResultCallback___destroy___0 = Module["_emscripten_bind_RayResultCallback___destroy___0"] = asm["_emscripten_bind_RayResultCallback___destroy___0"];
var _emscripten_bind_btVector4_op_mul_1 = Module["_emscripten_bind_btVector4_op_mul_1"] = asm["_emscripten_bind_btVector4_op_mul_1"];
var _emscripten_bind_btQuadWord_x_0 = Module["_emscripten_bind_btQuadWord_x_0"] = asm["_emscripten_bind_btQuadWord_x_0"];
var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"];
var _emscripten_bind_btBroadphaseInterface___destroy___0 = Module["_emscripten_bind_btBroadphaseInterface___destroy___0"] = asm["_emscripten_bind_btBroadphaseInterface___destroy___0"];
var _emscripten_bind_btRigidBody_activate_1 = Module["_emscripten_bind_btRigidBody_activate_1"] = asm["_emscripten_bind_btRigidBody_activate_1"];
var _emscripten_bind_btRigidBody_activate_0 = Module["_emscripten_bind_btRigidBody_activate_0"] = asm["_emscripten_bind_btRigidBody_activate_0"];
var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"];
var _emscripten_bind_btVector3_op_mul_1 = Module["_emscripten_bind_btVector3_op_mul_1"] = asm["_emscripten_bind_btVector3_op_mul_1"];
var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"];
var _emscripten_bind_btQuaternion_x_0 = Module["_emscripten_bind_btQuaternion_x_0"] = asm["_emscripten_bind_btQuaternion_x_0"];
var _emscripten_bind_btVector3___destroy___0 = Module["_emscripten_bind_btVector3___destroy___0"] = asm["_emscripten_bind_btVector3___destroy___0"];
var _emscripten_bind_btCapsuleShape___destroy___0 = Module["_emscripten_bind_btCapsuleShape___destroy___0"] = asm["_emscripten_bind_btCapsuleShape___destroy___0"];
var _emscripten_bind_btMotionState_getWorldTransform_1 = Module["_emscripten_bind_btMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btMotionState_getWorldTransform_1"];
var _emscripten_bind_btCollisionObject_activate_0 = Module["_emscripten_bind_btCollisionObject_activate_0"] = asm["_emscripten_bind_btCollisionObject_activate_0"];
var _emscripten_bind_ContactResultCallback___destroy___0 = Module["_emscripten_bind_ContactResultCallback___destroy___0"] = asm["_emscripten_bind_ContactResultCallback___destroy___0"];
var _emscripten_bind_btQuaternion_z_0 = Module["_emscripten_bind_btQuaternion_z_0"] = asm["_emscripten_bind_btQuaternion_z_0"];
var _emscripten_bind_btVector4_x_0 = Module["_emscripten_bind_btVector4_x_0"] = asm["_emscripten_bind_btVector4_x_0"];
var _emscripten_bind_btVector3_x_0 = Module["_emscripten_bind_btVector3_x_0"] = asm["_emscripten_bind_btVector3_x_0"];
var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"];
var _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1 = Module["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"] = asm["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"];
var _emscripten_bind_btVector3_setX_1 = Module["_emscripten_bind_btVector3_setX_1"] = asm["_emscripten_bind_btVector3_setX_1"];
var _emscripten_bind_btCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btCollisionConfiguration___destroy___0"];
var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"];
var _emscripten_bind_btManifoldPoint___destroy___0 = Module["_emscripten_bind_btManifoldPoint___destroy___0"] = asm["_emscripten_bind_btManifoldPoint___destroy___0"];
var _emscripten_bind_btQuaternion_btQuaternion_4 = Module["_emscripten_bind_btQuaternion_btQuaternion_4"] = asm["_emscripten_bind_btQuaternion_btQuaternion_4"];
var _emscripten_bind_btTransform_setIdentity_0 = Module["_emscripten_bind_btTransform_setIdentity_0"] = asm["_emscripten_bind_btTransform_setIdentity_0"];
var _emscripten_bind_btVector3_setZ_1 = Module["_emscripten_bind_btVector3_setZ_1"] = asm["_emscripten_bind_btVector3_setZ_1"];
var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"];
var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"];
var _emscripten_bind_btDefaultCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"];
var _emscripten_bind_btRigidBody_isActive_0 = Module["_emscripten_bind_btRigidBody_isActive_0"] = asm["_emscripten_bind_btRigidBody_isActive_0"];
var _emscripten_bind_btMotionState_setWorldTransform_1 = Module["_emscripten_bind_btMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btMotionState_setWorldTransform_1"];
var _emscripten_bind_btQuadWord_setY_1 = Module["_emscripten_bind_btQuadWord_setY_1"] = asm["_emscripten_bind_btQuadWord_setY_1"];
var _emscripten_bind_btQuaternion_setY_1 = Module["_emscripten_bind_btQuaternion_setY_1"] = asm["_emscripten_bind_btQuaternion_setY_1"];
var _emscripten_bind_btConeShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShape_calculateLocalInertia_2"];
var _emscripten_bind_btVector4_btVector4_0 = Module["_emscripten_bind_btVector4_btVector4_0"] = asm["_emscripten_bind_btVector4_btVector4_0"];
var _emscripten_bind_btVector4_w_0 = Module["_emscripten_bind_btVector4_w_0"] = asm["_emscripten_bind_btVector4_w_0"];
var _emscripten_bind_btBoxShape_btBoxShape_1 = Module["_emscripten_bind_btBoxShape_btBoxShape_1"] = asm["_emscripten_bind_btBoxShape_btBoxShape_1"];
var _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"];
var _emscripten_bind_btSphereShape___destroy___0 = Module["_emscripten_bind_btSphereShape___destroy___0"] = asm["_emscripten_bind_btSphereShape___destroy___0"];
var _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"];
var _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"];
var _emscripten_bind_btVector4_y_0 = Module["_emscripten_bind_btVector4_y_0"] = asm["_emscripten_bind_btVector4_y_0"];
var _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"];
var _emscripten_bind_btTransform_getOrigin_0 = Module["_emscripten_bind_btTransform_getOrigin_0"] = asm["_emscripten_bind_btTransform_getOrigin_0"];
var _emscripten_bind_btMatrix3x3_setEulerZYX_3 = Module["_emscripten_bind_btMatrix3x3_setEulerZYX_3"] = asm["_emscripten_bind_btMatrix3x3_setEulerZYX_3"];
var _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"];
var _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0 = Module["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"] = asm["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"];
var _memset = Module["_memset"] = asm["_memset"];
var _emscripten_bind_btDefaultMotionState___destroy___0 = Module["_emscripten_bind_btDefaultMotionState___destroy___0"] = asm["_emscripten_bind_btDefaultMotionState___destroy___0"];
var _emscripten_bind_RayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"];
var _emscripten_bind_btQuadWord_setW_1 = Module["_emscripten_bind_btQuadWord_setW_1"] = asm["_emscripten_bind_btQuadWord_setW_1"];
var _emscripten_bind_RayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _emscripten_bind_btRigidBody_btRigidBody_1 = Module["_emscripten_bind_btRigidBody_btRigidBody_1"] = asm["_emscripten_bind_btRigidBody_btRigidBody_1"];
var _emscripten_bind_btCollisionShape___destroy___0 = Module["_emscripten_bind_btCollisionShape___destroy___0"] = asm["_emscripten_bind_btCollisionShape___destroy___0"];
var _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0 = Module["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"] = asm["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"];
var _emscripten_bind_btPoint2PointConstraint___destroy___0 = Module["_emscripten_bind_btPoint2PointConstraint___destroy___0"] = asm["_emscripten_bind_btPoint2PointConstraint___destroy___0"];
var _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"];
var _emscripten_bind_btAxisSweep3___destroy___0 = Module["_emscripten_bind_btAxisSweep3___destroy___0"] = asm["_emscripten_bind_btAxisSweep3___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"];
var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"];
var _emscripten_bind_btVector4_setY_1 = Module["_emscripten_bind_btVector4_setY_1"] = asm["_emscripten_bind_btVector4_setY_1"];
var _emscripten_bind_ConcreteContactResultCallback___destroy___0 = Module["_emscripten_bind_ConcreteContactResultCallback___destroy___0"] = asm["_emscripten_bind_ConcreteContactResultCallback___destroy___0"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _emscripten_bind_btConeTwistConstraint___destroy___0 = Module["_emscripten_bind_btConeTwistConstraint___destroy___0"] = asm["_emscripten_bind_btConeTwistConstraint___destroy___0"];
var _emscripten_bind_btCollisionObject___destroy___0 = Module["_emscripten_bind_btCollisionObject___destroy___0"] = asm["_emscripten_bind_btCollisionObject___destroy___0"];
var _emscripten_bind_btTransform_btTransform_2 = Module["_emscripten_bind_btTransform_btTransform_2"] = asm["_emscripten_bind_btTransform_btTransform_2"];
var _emscripten_bind_btTransform_btTransform_0 = Module["_emscripten_bind_btTransform_btTransform_0"] = asm["_emscripten_bind_btTransform_btTransform_0"];
var _emscripten_bind_btVector3_btVector3_3 = Module["_emscripten_bind_btVector3_btVector3_3"] = asm["_emscripten_bind_btVector3_btVector3_3"];
var _emscripten_bind_btVector3_btVector3_0 = Module["_emscripten_bind_btVector3_btVector3_0"] = asm["_emscripten_bind_btVector3_btVector3_0"];
var _emscripten_bind_btBoxShape___destroy___0 = Module["_emscripten_bind_btBoxShape___destroy___0"] = asm["_emscripten_bind_btBoxShape___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"];
var _emscripten_bind_btVector3_z_0 = Module["_emscripten_bind_btVector3_z_0"] = asm["_emscripten_bind_btVector3_z_0"];
var _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"];
var _emscripten_bind_btCollisionObject_activate_1 = Module["_emscripten_bind_btCollisionObject_activate_1"] = asm["_emscripten_bind_btCollisionObject_activate_1"];
var _emscripten_bind_btMatrix3x3___destroy___0 = Module["_emscripten_bind_btMatrix3x3___destroy___0"] = asm["_emscripten_bind_btMatrix3x3___destroy___0"];
var _emscripten_bind_btQuadWord___destroy___0 = Module["_emscripten_bind_btQuadWord___destroy___0"] = asm["_emscripten_bind_btQuadWord___destroy___0"];
var _emscripten_bind_btCollisionShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"];
var _emscripten_bind_RayResultCallback_hasHit_0 = Module["_emscripten_bind_RayResultCallback_hasHit_0"] = asm["_emscripten_bind_RayResultCallback_hasHit_0"];
var _emscripten_bind_btConeShape___destroy___0 = Module["_emscripten_bind_btConeShape___destroy___0"] = asm["_emscripten_bind_btConeShape___destroy___0"];
var _emscripten_bind_btConstraintSolver___destroy___0 = Module["_emscripten_bind_btConstraintSolver___destroy___0"] = asm["_emscripten_bind_btConstraintSolver___destroy___0"];
var _emscripten_bind_btDbvtBroadphase___destroy___0 = Module["_emscripten_bind_btDbvtBroadphase___destroy___0"] = asm["_emscripten_bind_btDbvtBroadphase___destroy___0"];
var _emscripten_bind_btQuaternion___destroy___0 = Module["_emscripten_bind_btQuaternion___destroy___0"] = asm["_emscripten_bind_btQuaternion___destroy___0"];
var _emscripten_bind_btCapsuleShape_btCapsuleShape_2 = Module["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"] = asm["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"];
var _emscripten_bind_btQuadWord_setZ_1 = Module["_emscripten_bind_btQuadWord_setZ_1"] = asm["_emscripten_bind_btQuadWord_setZ_1"];
var _emscripten_bind_btSphereShape_calculateLocalInertia_2 = Module["_emscripten_bind_btSphereShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btSphereShape_calculateLocalInertia_2"];
var _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2 = Module["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"] = asm["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"];
var _emscripten_bind_btVector4___destroy___0 = Module["_emscripten_bind_btVector4___destroy___0"] = asm["_emscripten_bind_btVector4___destroy___0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"];
var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"];
var _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"];
var _emscripten_bind_btVector4_btVector4_4 = Module["_emscripten_bind_btVector4_btVector4_4"] = asm["_emscripten_bind_btVector4_btVector4_4"];
var _emscripten_bind_btTransform_setOrigin_1 = Module["_emscripten_bind_btTransform_setOrigin_1"] = asm["_emscripten_bind_btTransform_setOrigin_1"];
var _emscripten_bind_ClosestRayResultCallback_hasHit_0 = Module["_emscripten_bind_ClosestRayResultCallback_hasHit_0"] = asm["_emscripten_bind_ClosestRayResultCallback_hasHit_0"];
var _emscripten_bind_btDispatcher___destroy___0 = Module["_emscripten_bind_btDispatcher___destroy___0"] = asm["_emscripten_bind_btDispatcher___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld___destroy___0 = Module["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"];
var _emscripten_bind_btTransform___destroy___0 = Module["_emscripten_bind_btTransform___destroy___0"] = asm["_emscripten_bind_btTransform___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _emscripten_bind_ContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ContactResultCallback_addSingleResult_7"];
var _emscripten_bind_btVector4_setX_1 = Module["_emscripten_bind_btVector4_setX_1"] = asm["_emscripten_bind_btVector4_setX_1"];
var _emscripten_bind_btQuadWord_y_0 = Module["_emscripten_bind_btQuadWord_y_0"] = asm["_emscripten_bind_btQuadWord_y_0"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _emscripten_bind_btCollisionObject_getWorldTransform_0 = Module["_emscripten_bind_btCollisionObject_getWorldTransform_0"] = asm["_emscripten_bind_btCollisionObject_getWorldTransform_0"];
var _emscripten_bind_btVector4_setZ_1 = Module["_emscripten_bind_btVector4_setZ_1"] = asm["_emscripten_bind_btVector4_setZ_1"];
var _emscripten_bind_btMotionState___destroy___0 = Module["_emscripten_bind_btMotionState___destroy___0"] = asm["_emscripten_bind_btMotionState___destroy___0"];
var _emscripten_bind_btVector3_setY_1 = Module["_emscripten_bind_btVector3_setY_1"] = asm["_emscripten_bind_btVector3_setY_1"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_viiidii = Module["dynCall_viiidii"] = asm["dynCall_viiidii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = asm["dynCall_iiiiiiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viidi = Module["dynCall_viidi"] = asm["dynCall_viidi"];
var dynCall_viddiii = Module["dynCall_viddiii"] = asm["dynCall_viddiii"];
var dynCall_vidii = Module["dynCall_vidii"] = asm["dynCall_vidii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_vidi = Module["dynCall_vidi"] = asm["dynCall_vidi"];
var dynCall_diiiiiiii = Module["dynCall_diiiiiiii"] = asm["dynCall_diiiiiiii"];
var dynCall_viiiiddddiid = Module["dynCall_viiiiddddiid"] = asm["dynCall_viiiiddddiid"];
var dynCall_diiiii = Module["dynCall_diiiii"] = asm["dynCall_diiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiid = Module["dynCall_iiid"] = asm["dynCall_iiid"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_diiidii = Module["dynCall_diiidii"] = asm["dynCall_diiidii"];
var dynCall_viidii = Module["dynCall_viidii"] = asm["dynCall_viidii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_diiiiiiiiii = Module["dynCall_diiiiiiiiii"] = asm["dynCall_diiiiiiiiii"];
var dynCall_viiiid = Module["dynCall_viiiid"] = asm["dynCall_viiiid"];
var dynCall_diiiiiiiii = Module["dynCall_diiiiiiiii"] = asm["dynCall_diiiiiiiii"];
var dynCall_did = Module["dynCall_did"] = asm["dynCall_did"];
var dynCall_viiiidddddidi = Module["dynCall_viiiidddddidi"] = asm["dynCall_viiiidddddidi"];
var dynCall_diidii = Module["dynCall_diidii"] = asm["dynCall_diidii"];
var dynCall_diiii = Module["dynCall_diiii"] = asm["dynCall_diiii"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_iidid = Module["dynCall_iidid"] = asm["dynCall_iidid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






// Bindings utilities

function WrapperObject() {
}
WrapperObject.prototype = Object.create(WrapperObject.prototype);
WrapperObject.prototype.constructor = WrapperObject;
WrapperObject.prototype.__class__ = WrapperObject;
WrapperObject.__cache__ = {};
Module['WrapperObject'] = WrapperObject;

function getCache(__class__) {
  return (__class__ || WrapperObject).__cache__;
}
Module['getCache'] = getCache;

function wrapPointer(ptr, __class__) {
  var cache = getCache(__class__);
  var ret = cache[ptr];
  if (ret) return ret;
  ret = Object.create((__class__ || WrapperObject).prototype);
  ret.ptr = ptr;
  return cache[ptr] = ret;
}
Module['wrapPointer'] = wrapPointer;

function castObject(obj, __class__) {
  return wrapPointer(obj.ptr, __class__);
}
Module['castObject'] = castObject;

Module['NULL'] = wrapPointer(0);

function destroy(obj) {
  if (!obj['__destroy__']) throw 'Error: Cannot destroy object. (Did you create it yourself?)';
  obj['__destroy__']();
  // Remove from cache, so the object can be GC'd and refs added onto it released
  delete getCache(obj.__class__)[obj.ptr];
}
Module['destroy'] = destroy;

function compare(obj1, obj2) {
  return obj1.ptr === obj2.ptr;
}
Module['compare'] = compare;

function getPointer(obj) {
  return obj.ptr;
}
Module['getPointer'] = getPointer;

function getClass(obj) {
  return obj.__class__;
}
Module['getClass'] = getClass;

// Converts a value into a C-style string.
function ensureString(value) {
  if (typeof value == 'string') return allocate(intArrayFromString(value), 'i8', ALLOC_STACK);
  return value;
}


// btMatrix3x3
function btMatrix3x3() { throw "cannot construct a btMatrix3x3, no constructor in IDL" }
btMatrix3x3.prototype = Object.create(WrapperObject.prototype);
btMatrix3x3.prototype.constructor = btMatrix3x3;
btMatrix3x3.prototype.__class__ = btMatrix3x3;
btMatrix3x3.__cache__ = {};
Module['btMatrix3x3'] = btMatrix3x3;

btMatrix3x3.prototype.setEulerZYX = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  _emscripten_bind_btMatrix3x3_setEulerZYX_3(self, arg0, arg1, arg2);
};

  btMatrix3x3.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btMatrix3x3___destroy___0(self);
}
// ConcreteContactResultCallback
function ConcreteContactResultCallback() {
  this.ptr = _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0();
  getCache(ConcreteContactResultCallback)[this.ptr] = this;
};
ConcreteContactResultCallback.prototype = Object.create(ContactResultCallback.prototype);
ConcreteContactResultCallback.prototype.constructor = ConcreteContactResultCallback;
ConcreteContactResultCallback.prototype.__class__ = ConcreteContactResultCallback;
ConcreteContactResultCallback.__cache__ = {};
Module['ConcreteContactResultCallback'] = ConcreteContactResultCallback;

ConcreteContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg4 && typeof arg4 === 'object') arg4 = arg4.ptr;
  else arg4 = ensureString(arg4);
  if (arg5 && typeof arg5 === 'object') arg5 = arg5.ptr;
  else arg5 = ensureString(arg5);
  if (arg6 && typeof arg6 === 'object') arg6 = arg6.ptr;
  else arg6 = ensureString(arg6);
  return _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
};

  ConcreteContactResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_ConcreteContactResultCallback___destroy___0(self);
}
// btDbvtBroadphase
function btDbvtBroadphase() {
  this.ptr = _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0();
  getCache(btDbvtBroadphase)[this.ptr] = this;
};
btDbvtBroadphase.prototype = Object.create(WrapperObject.prototype);
btDbvtBroadphase.prototype.constructor = btDbvtBroadphase;
btDbvtBroadphase.prototype.__class__ = btDbvtBroadphase;
btDbvtBroadphase.__cache__ = {};
Module['btDbvtBroadphase'] = btDbvtBroadphase;

  btDbvtBroadphase.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDbvtBroadphase___destroy___0(self);
}
// btCapsuleShape
function btCapsuleShape(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btCapsuleShape_btCapsuleShape_2(arg0, arg1);
  getCache(btCapsuleShape)[this.ptr] = this;
};
btCapsuleShape.prototype = Object.create(btCollisionShape.prototype);
btCapsuleShape.prototype.constructor = btCapsuleShape;
btCapsuleShape.prototype.__class__ = btCapsuleShape;
btCapsuleShape.__cache__ = {};
Module['btCapsuleShape'] = btCapsuleShape;

btCapsuleShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCapsuleShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btCapsuleShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCapsuleShape___destroy___0(self);
}
// btAxisSweep3
function btAxisSweep3(arg0, arg1, arg2, arg3, arg4) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg4 && typeof arg4 === 'object') arg4 = arg4.ptr;
  else arg4 = ensureString(arg4);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_2(arg0, arg1); getCache(btAxisSweep3)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_3(arg0, arg1, arg2); getCache(btAxisSweep3)[this.ptr] = this;return }
  if (arg4 === undefined) { this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_4(arg0, arg1, arg2, arg3); getCache(btAxisSweep3)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_5(arg0, arg1, arg2, arg3, arg4);
  getCache(btAxisSweep3)[this.ptr] = this;
};
btAxisSweep3.prototype = Object.create(WrapperObject.prototype);
btAxisSweep3.prototype.constructor = btAxisSweep3;
btAxisSweep3.prototype.__class__ = btAxisSweep3;
btAxisSweep3.__cache__ = {};
Module['btAxisSweep3'] = btAxisSweep3;

  btAxisSweep3.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btAxisSweep3___destroy___0(self);
}
// btManifoldPoint
function btManifoldPoint() { throw "cannot construct a btManifoldPoint, no constructor in IDL" }
btManifoldPoint.prototype = Object.create(WrapperObject.prototype);
btManifoldPoint.prototype.constructor = btManifoldPoint;
btManifoldPoint.prototype.__class__ = btManifoldPoint;
btManifoldPoint.__cache__ = {};
Module['btManifoldPoint'] = btManifoldPoint;

  btManifoldPoint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btManifoldPoint___destroy___0(self);
}
// btSequentialImpulseConstraintSolver
function btSequentialImpulseConstraintSolver() {
  this.ptr = _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0();
  getCache(btSequentialImpulseConstraintSolver)[this.ptr] = this;
};
btSequentialImpulseConstraintSolver.prototype = Object.create(WrapperObject.prototype);
btSequentialImpulseConstraintSolver.prototype.constructor = btSequentialImpulseConstraintSolver;
btSequentialImpulseConstraintSolver.prototype.__class__ = btSequentialImpulseConstraintSolver;
btSequentialImpulseConstraintSolver.__cache__ = {};
Module['btSequentialImpulseConstraintSolver'] = btSequentialImpulseConstraintSolver;

  btSequentialImpulseConstraintSolver.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0(self);
}
// btBroadphaseInterface
function btBroadphaseInterface() { throw "cannot construct a btBroadphaseInterface, no constructor in IDL" }
btBroadphaseInterface.prototype = Object.create(WrapperObject.prototype);
btBroadphaseInterface.prototype.constructor = btBroadphaseInterface;
btBroadphaseInterface.prototype.__class__ = btBroadphaseInterface;
btBroadphaseInterface.__cache__ = {};
Module['btBroadphaseInterface'] = btBroadphaseInterface;

  btBroadphaseInterface.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btBroadphaseInterface___destroy___0(self);
}
// btCollisionObject
function btCollisionObject() { throw "cannot construct a btCollisionObject, no constructor in IDL" }
btCollisionObject.prototype = Object.create(WrapperObject.prototype);
btCollisionObject.prototype.constructor = btCollisionObject;
btCollisionObject.prototype.__class__ = btCollisionObject;
btCollisionObject.__cache__ = {};
Module['btCollisionObject'] = btCollisionObject;

btCollisionObject.prototype.getWorldTransform = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btCollisionObject_getWorldTransform_0(self), btTransform);
};

btCollisionObject.prototype.activate = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { _emscripten_bind_btCollisionObject_activate_0(self);  return }
  _emscripten_bind_btCollisionObject_activate_1(self, arg0);
};

btCollisionObject.prototype.isActive = function() {
  var self = this.ptr;
  return _emscripten_bind_btCollisionObject_isActive_0(self);
};

  btCollisionObject.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionObject___destroy___0(self);
}
// btDiscreteDynamicsWorld
function btDiscreteDynamicsWorld(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  this.ptr = _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4(arg0, arg1, arg2, arg3);
  getCache(btDiscreteDynamicsWorld)[this.ptr] = this;
};
btDiscreteDynamicsWorld.prototype = Object.create(WrapperObject.prototype);
btDiscreteDynamicsWorld.prototype.constructor = btDiscreteDynamicsWorld;
btDiscreteDynamicsWorld.prototype.__class__ = btDiscreteDynamicsWorld;
btDiscreteDynamicsWorld.__cache__ = {};
Module['btDiscreteDynamicsWorld'] = btDiscreteDynamicsWorld;

btDiscreteDynamicsWorld.prototype.setGravity = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1(self, arg0);
};

btDiscreteDynamicsWorld.prototype.getGravity = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0(self), btVector3);
};

btDiscreteDynamicsWorld.prototype.addRigidBody = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg1 === undefined) { _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1(self, arg0);  return }
  if (arg2 === undefined) { _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(self, arg0, arg1);  return }
  _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3(self, arg0, arg1, arg2);
};

btDiscreteDynamicsWorld.prototype.addConstraint = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg1 === undefined) { _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1(self, arg0);  return }
  _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2(self, arg0, arg1);
};

btDiscreteDynamicsWorld.prototype.removeConstraint = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1(self, arg0);
};

btDiscreteDynamicsWorld.prototype.stepSimulation = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg1 === undefined) { return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1(self, arg0) }
  if (arg2 === undefined) { return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2(self, arg0, arg1) }
  return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3(self, arg0, arg1, arg2);
};

  btDiscreteDynamicsWorld.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDiscreteDynamicsWorld___destroy___0(self);
}
// btPoint2PointConstraint
function btPoint2PointConstraint(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2(arg0, arg1); getCache(btPoint2PointConstraint)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(arg0, arg1, arg2); getCache(btPoint2PointConstraint)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4(arg0, arg1, arg2, arg3);
  getCache(btPoint2PointConstraint)[this.ptr] = this;
};
btPoint2PointConstraint.prototype = Object.create(WrapperObject.prototype);
btPoint2PointConstraint.prototype.constructor = btPoint2PointConstraint;
btPoint2PointConstraint.prototype.__class__ = btPoint2PointConstraint;
btPoint2PointConstraint.__cache__ = {};
Module['btPoint2PointConstraint'] = btPoint2PointConstraint;

  btPoint2PointConstraint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btPoint2PointConstraint___destroy___0(self);
}
// btMotionState
function btMotionState() { throw "cannot construct a btMotionState, no constructor in IDL" }
btMotionState.prototype = Object.create(WrapperObject.prototype);
btMotionState.prototype.constructor = btMotionState;
btMotionState.prototype.__class__ = btMotionState;
btMotionState.__cache__ = {};
Module['btMotionState'] = btMotionState;

btMotionState.prototype.getWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btMotionState_getWorldTransform_1(self, arg0);
};

btMotionState.prototype.setWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btMotionState_setWorldTransform_1(self, arg0);
};

  btMotionState.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btMotionState___destroy___0(self);
}
// btConeTwistConstraint
function btConeTwistConstraint(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2(arg0, arg1); getCache(btConeTwistConstraint)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(arg0, arg1, arg2); getCache(btConeTwistConstraint)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4(arg0, arg1, arg2, arg3);
  getCache(btConeTwistConstraint)[this.ptr] = this;
};
btConeTwistConstraint.prototype = Object.create(btTypedConstraint.prototype);
btConeTwistConstraint.prototype.constructor = btConeTwistConstraint;
btConeTwistConstraint.prototype.__class__ = btConeTwistConstraint;
btConeTwistConstraint.__cache__ = {};
Module['btConeTwistConstraint'] = btConeTwistConstraint;

btConeTwistConstraint.prototype.setLimit = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConeTwistConstraint_setLimit_2(self, arg0, arg1);
};

  btConeTwistConstraint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConeTwistConstraint___destroy___0(self);
}
// btConeShape
function btConeShape(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btConeShape_btConeShape_2(arg0, arg1);
  getCache(btConeShape)[this.ptr] = this;
};
btConeShape.prototype = Object.create(btCollisionShape.prototype);
btConeShape.prototype.constructor = btConeShape;
btConeShape.prototype.__class__ = btConeShape;
btConeShape.__cache__ = {};
Module['btConeShape'] = btConeShape;

btConeShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConeShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btConeShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConeShape___destroy___0(self);
}
// btDefaultCollisionConfiguration
function btDefaultCollisionConfiguration(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0(); getCache(btDefaultCollisionConfiguration)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1(arg0);
  getCache(btDefaultCollisionConfiguration)[this.ptr] = this;
};
btDefaultCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
btDefaultCollisionConfiguration.prototype.constructor = btDefaultCollisionConfiguration;
btDefaultCollisionConfiguration.prototype.__class__ = btDefaultCollisionConfiguration;
btDefaultCollisionConfiguration.__cache__ = {};
Module['btDefaultCollisionConfiguration'] = btDefaultCollisionConfiguration;

  btDefaultCollisionConfiguration.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDefaultCollisionConfiguration___destroy___0(self);
}
// ContactResultCallback
function ContactResultCallback() { throw "cannot construct a ContactResultCallback, no constructor in IDL" }
ContactResultCallback.prototype = Object.create(WrapperObject.prototype);
ContactResultCallback.prototype.constructor = ContactResultCallback;
ContactResultCallback.prototype.__class__ = ContactResultCallback;
ContactResultCallback.__cache__ = {};
Module['ContactResultCallback'] = ContactResultCallback;

ContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg4 && typeof arg4 === 'object') arg4 = arg4.ptr;
  else arg4 = ensureString(arg4);
  if (arg5 && typeof arg5 === 'object') arg5 = arg5.ptr;
  else arg5 = ensureString(arg5);
  if (arg6 && typeof arg6 === 'object') arg6 = arg6.ptr;
  else arg6 = ensureString(arg6);
  return _emscripten_bind_ContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
};

  ContactResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_ContactResultCallback___destroy___0(self);
}
// btRigidBodyConstructionInfo
function btRigidBodyConstructionInfo(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3(arg0, arg1, arg2); getCache(btRigidBodyConstructionInfo)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4(arg0, arg1, arg2, arg3);
  getCache(btRigidBodyConstructionInfo)[this.ptr] = this;
};
btRigidBodyConstructionInfo.prototype = Object.create(WrapperObject.prototype);
btRigidBodyConstructionInfo.prototype.constructor = btRigidBodyConstructionInfo;
btRigidBodyConstructionInfo.prototype.__class__ = btRigidBodyConstructionInfo;
btRigidBodyConstructionInfo.__cache__ = {};
Module['btRigidBodyConstructionInfo'] = btRigidBodyConstructionInfo;

  btRigidBodyConstructionInfo.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btRigidBodyConstructionInfo___destroy___0(self);
}
// btCollisionConfiguration
function btCollisionConfiguration() { throw "cannot construct a btCollisionConfiguration, no constructor in IDL" }
btCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
btCollisionConfiguration.prototype.constructor = btCollisionConfiguration;
btCollisionConfiguration.prototype.__class__ = btCollisionConfiguration;
btCollisionConfiguration.__cache__ = {};
Module['btCollisionConfiguration'] = btCollisionConfiguration;

  btCollisionConfiguration.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionConfiguration___destroy___0(self);
}
// btBoxShape
function btBoxShape(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btBoxShape_btBoxShape_1(arg0);
  getCache(btBoxShape)[this.ptr] = this;
};
btBoxShape.prototype = Object.create(btCollisionShape.prototype);
btBoxShape.prototype.constructor = btBoxShape;
btBoxShape.prototype.__class__ = btBoxShape;
btBoxShape.__cache__ = {};
Module['btBoxShape'] = btBoxShape;

btBoxShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btBoxShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btBoxShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btBoxShape___destroy___0(self);
}
// btCollisionDispatcher
function btCollisionDispatcher(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1(arg0);
  getCache(btCollisionDispatcher)[this.ptr] = this;
};
btCollisionDispatcher.prototype = Object.create(WrapperObject.prototype);
btCollisionDispatcher.prototype.constructor = btCollisionDispatcher;
btCollisionDispatcher.prototype.__class__ = btCollisionDispatcher;
btCollisionDispatcher.__cache__ = {};
Module['btCollisionDispatcher'] = btCollisionDispatcher;

  btCollisionDispatcher.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionDispatcher___destroy___0(self);
}
// btCollisionObjectWrapper
function btCollisionObjectWrapper() { throw "cannot construct a btCollisionObjectWrapper, no constructor in IDL" }
btCollisionObjectWrapper.prototype = Object.create(WrapperObject.prototype);
btCollisionObjectWrapper.prototype.constructor = btCollisionObjectWrapper;
btCollisionObjectWrapper.prototype.__class__ = btCollisionObjectWrapper;
btCollisionObjectWrapper.__cache__ = {};
Module['btCollisionObjectWrapper'] = btCollisionObjectWrapper;

// btDefaultMotionState
function btDefaultMotionState(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0(); getCache(btDefaultMotionState)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1(arg0); getCache(btDefaultMotionState)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2(arg0, arg1);
  getCache(btDefaultMotionState)[this.ptr] = this;
};
btDefaultMotionState.prototype = Object.create(btMotionState.prototype);
btDefaultMotionState.prototype.constructor = btDefaultMotionState;
btDefaultMotionState.prototype.__class__ = btDefaultMotionState;
btDefaultMotionState.__cache__ = {};
Module['btDefaultMotionState'] = btDefaultMotionState;

btDefaultMotionState.prototype.getWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDefaultMotionState_getWorldTransform_1(self, arg0);
};

btDefaultMotionState.prototype.setWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDefaultMotionState_setWorldTransform_1(self, arg0);
};

  btDefaultMotionState.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDefaultMotionState___destroy___0(self);
}
// ClosestRayResultCallback
function ClosestRayResultCallback(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2(arg0, arg1);
  getCache(ClosestRayResultCallback)[this.ptr] = this;
};
ClosestRayResultCallback.prototype = Object.create(RayResultCallback.prototype);
ClosestRayResultCallback.prototype.constructor = ClosestRayResultCallback;
ClosestRayResultCallback.prototype.__class__ = ClosestRayResultCallback;
ClosestRayResultCallback.__cache__ = {};
Module['ClosestRayResultCallback'] = ClosestRayResultCallback;

ClosestRayResultCallback.prototype.hasHit = function() {
  var self = this.ptr;
  return _emscripten_bind_ClosestRayResultCallback_hasHit_0(self);
};

  ClosestRayResultCallback.prototype.get_m_rayToWorld= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0(self), btVector3);
}
  ClosestRayResultCallback.prototype.set_m_rayToWorld= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1(self, arg0);
}
  ClosestRayResultCallback.prototype.get_m_collisionObject= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
}
  ClosestRayResultCallback.prototype.set_m_collisionObject= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1(self, arg0);
}
  ClosestRayResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_ClosestRayResultCallback___destroy___0(self);
}
// btQuaternion
function btQuaternion(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  this.ptr = _emscripten_bind_btQuaternion_btQuaternion_4(arg0, arg1, arg2, arg3);
  getCache(btQuaternion)[this.ptr] = this;
};
btQuaternion.prototype = Object.create(btQuadWord.prototype);
btQuaternion.prototype.constructor = btQuaternion;
btQuaternion.prototype.__class__ = btQuaternion;
btQuaternion.__cache__ = {};
Module['btQuaternion'] = btQuaternion;

btQuaternion.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_x_0(self);
};

btQuaternion.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_y_0(self);
};

btQuaternion.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_z_0(self);
};

btQuaternion.prototype.w = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_w_0(self);
};

btQuaternion.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setX_1(self, arg0);
};

btQuaternion.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setY_1(self, arg0);
};

btQuaternion.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setZ_1(self, arg0);
};

btQuaternion.prototype.setW = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setW_1(self, arg0);
};

  btQuaternion.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btQuaternion___destroy___0(self);
}
// btDispatcher
function btDispatcher() { throw "cannot construct a btDispatcher, no constructor in IDL" }
btDispatcher.prototype = Object.create(WrapperObject.prototype);
btDispatcher.prototype.constructor = btDispatcher;
btDispatcher.prototype.__class__ = btDispatcher;
btDispatcher.__cache__ = {};
Module['btDispatcher'] = btDispatcher;

  btDispatcher.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDispatcher___destroy___0(self);
}
// RayResultCallback
function RayResultCallback() { throw "cannot construct a RayResultCallback, no constructor in IDL" }
RayResultCallback.prototype = Object.create(WrapperObject.prototype);
RayResultCallback.prototype.constructor = RayResultCallback;
RayResultCallback.prototype.__class__ = RayResultCallback;
RayResultCallback.__cache__ = {};
Module['RayResultCallback'] = RayResultCallback;

RayResultCallback.prototype.hasHit = function() {
  var self = this.ptr;
  return _emscripten_bind_RayResultCallback_hasHit_0(self);
};

  RayResultCallback.prototype.get_m_collisionObject= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_RayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
}
  RayResultCallback.prototype.set_m_collisionObject= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_RayResultCallback_set_m_collisionObject_1(self, arg0);
}
  RayResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_RayResultCallback___destroy___0(self);
}
// btVector4
function btVector4(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_0(); getCache(btVector4)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_1(arg0); getCache(btVector4)[this.ptr] = this;return }
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_2(arg0, arg1); getCache(btVector4)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_3(arg0, arg1, arg2); getCache(btVector4)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btVector4_btVector4_4(arg0, arg1, arg2, arg3);
  getCache(btVector4)[this.ptr] = this;
};
btVector4.prototype = Object.create(btVector3.prototype);
btVector4.prototype.constructor = btVector4;
btVector4.prototype.__class__ = btVector4;
btVector4.__cache__ = {};
Module['btVector4'] = btVector4;

btVector4.prototype.w = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_w_0(self);
};

btVector4.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_x_0(self);
};

btVector4.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_y_0(self);
};

btVector4.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_z_0(self);
};

btVector4.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector4_setX_1(self, arg0);
};

btVector4.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector4_setY_1(self, arg0);
};

btVector4.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector4_setZ_1(self, arg0);
};

btVector4.prototype.op_mul = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btVector4_op_mul_1(self, arg0), btVector3);
};

  btVector4.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btVector4___destroy___0(self);
}
// btOverlappingPairCache
function btOverlappingPairCache() { throw "cannot construct a btOverlappingPairCache, no constructor in IDL" }
btOverlappingPairCache.prototype = Object.create(WrapperObject.prototype);
btOverlappingPairCache.prototype.constructor = btOverlappingPairCache;
btOverlappingPairCache.prototype.__class__ = btOverlappingPairCache;
btOverlappingPairCache.__cache__ = {};
Module['btOverlappingPairCache'] = btOverlappingPairCache;

  btOverlappingPairCache.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btOverlappingPairCache___destroy___0(self);
}
// btVector3
function btVector3(arg0, arg1, arg2) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btVector3_btVector3_0(); getCache(btVector3)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btVector3_btVector3_1(arg0); getCache(btVector3)[this.ptr] = this;return }
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btVector3_btVector3_2(arg0, arg1); getCache(btVector3)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btVector3_btVector3_3(arg0, arg1, arg2);
  getCache(btVector3)[this.ptr] = this;
};
btVector3.prototype = Object.create(WrapperObject.prototype);
btVector3.prototype.constructor = btVector3;
btVector3.prototype.__class__ = btVector3;
btVector3.__cache__ = {};
Module['btVector3'] = btVector3;

btVector3.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector3_x_0(self);
};

btVector3.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector3_y_0(self);
};

btVector3.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector3_z_0(self);
};

btVector3.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector3_setX_1(self, arg0);
};

btVector3.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector3_setY_1(self, arg0);
};

btVector3.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector3_setZ_1(self, arg0);
};

btVector3.prototype.op_mul = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btVector3_op_mul_1(self, arg0), btVector3);
};

  btVector3.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btVector3___destroy___0(self);
}
// btSphereShape
function btSphereShape(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btSphereShape_btSphereShape_1(arg0);
  getCache(btSphereShape)[this.ptr] = this;
};
btSphereShape.prototype = Object.create(btCollisionShape.prototype);
btSphereShape.prototype.constructor = btSphereShape;
btSphereShape.prototype.__class__ = btSphereShape;
btSphereShape.__cache__ = {};
Module['btSphereShape'] = btSphereShape;

btSphereShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btSphereShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btSphereShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btSphereShape___destroy___0(self);
}
// btDefaultCollisionConstructionInfo
function btDefaultCollisionConstructionInfo() {
  this.ptr = _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0();
  getCache(btDefaultCollisionConstructionInfo)[this.ptr] = this;
};
btDefaultCollisionConstructionInfo.prototype = Object.create(WrapperObject.prototype);
btDefaultCollisionConstructionInfo.prototype.constructor = btDefaultCollisionConstructionInfo;
btDefaultCollisionConstructionInfo.prototype.__class__ = btDefaultCollisionConstructionInfo;
btDefaultCollisionConstructionInfo.__cache__ = {};
Module['btDefaultCollisionConstructionInfo'] = btDefaultCollisionConstructionInfo;

  btDefaultCollisionConstructionInfo.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0(self);
}
// btCollisionShape
function btCollisionShape() { throw "cannot construct a btCollisionShape, no constructor in IDL" }
btCollisionShape.prototype = Object.create(WrapperObject.prototype);
btCollisionShape.prototype.constructor = btCollisionShape;
btCollisionShape.prototype.__class__ = btCollisionShape;
btCollisionShape.__cache__ = {};
Module['btCollisionShape'] = btCollisionShape;

btCollisionShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCollisionShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btCollisionShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionShape___destroy___0(self);
}
// btConstraintSolver
function btConstraintSolver() { throw "cannot construct a btConstraintSolver, no constructor in IDL" }
btConstraintSolver.prototype = Object.create(WrapperObject.prototype);
btConstraintSolver.prototype.constructor = btConstraintSolver;
btConstraintSolver.prototype.__class__ = btConstraintSolver;
btConstraintSolver.__cache__ = {};
Module['btConstraintSolver'] = btConstraintSolver;

  btConstraintSolver.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConstraintSolver___destroy___0(self);
}
// btRigidBody
function btRigidBody(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btRigidBody_btRigidBody_1(arg0);
  getCache(btRigidBody)[this.ptr] = this;
};
btRigidBody.prototype = Object.create(btCollisionObject.prototype);
btRigidBody.prototype.constructor = btRigidBody;
btRigidBody.prototype.__class__ = btRigidBody;
btRigidBody.__cache__ = {};
Module['btRigidBody'] = btRigidBody;

btRigidBody.prototype.getMotionState = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btRigidBody_getMotionState_0(self), btMotionState);
};

btRigidBody.prototype.getWorldTransform = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btRigidBody_getWorldTransform_0(self), btTransform);
};

btRigidBody.prototype.activate = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { _emscripten_bind_btRigidBody_activate_0(self);  return }
  _emscripten_bind_btRigidBody_activate_1(self, arg0);
};

btRigidBody.prototype.isActive = function() {
  var self = this.ptr;
  return _emscripten_bind_btRigidBody_isActive_0(self);
};

  btRigidBody.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btRigidBody___destroy___0(self);
}
// btTransform
function btTransform(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btTransform_btTransform_0(); getCache(btTransform)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btTransform_btTransform_1(arg0); getCache(btTransform)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btTransform_btTransform_2(arg0, arg1);
  getCache(btTransform)[this.ptr] = this;
};
btTransform.prototype = Object.create(WrapperObject.prototype);
btTransform.prototype.constructor = btTransform;
btTransform.prototype.__class__ = btTransform;
btTransform.__cache__ = {};
Module['btTransform'] = btTransform;

btTransform.prototype.setIdentity = function() {
  var self = this.ptr;
  _emscripten_bind_btTransform_setIdentity_0(self);
};

btTransform.prototype.setOrigin = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btTransform_setOrigin_1(self, arg0);
};

btTransform.prototype.setRotation = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btTransform_setRotation_1(self, arg0);
};

btTransform.prototype.getOrigin = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btTransform_getOrigin_0(self), btVector3);
};

btTransform.prototype.getRotation = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btTransform_getRotation_0(self), btQuaternion);
};

btTransform.prototype.getBasis = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btTransform_getBasis_0(self), btMatrix3x3);
};

  btTransform.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btTransform___destroy___0(self);
}
// btQuadWord
function btQuadWord() { throw "cannot construct a btQuadWord, no constructor in IDL" }
btQuadWord.prototype = Object.create(WrapperObject.prototype);
btQuadWord.prototype.constructor = btQuadWord;
btQuadWord.prototype.__class__ = btQuadWord;
btQuadWord.__cache__ = {};
Module['btQuadWord'] = btQuadWord;

btQuadWord.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_x_0(self);
};

btQuadWord.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_y_0(self);
};

btQuadWord.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_z_0(self);
};

btQuadWord.prototype.w = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_w_0(self);
};

btQuadWord.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setX_1(self, arg0);
};

btQuadWord.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setY_1(self, arg0);
};

btQuadWord.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setZ_1(self, arg0);
};

btQuadWord.prototype.setW = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setW_1(self, arg0);
};

  btQuadWord.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btQuadWord___destroy___0(self);
}
// btTypedConstraint
function btTypedConstraint() { throw "cannot construct a btTypedConstraint, no constructor in IDL" }
btTypedConstraint.prototype = Object.create(WrapperObject.prototype);
btTypedConstraint.prototype.constructor = btTypedConstraint;
btTypedConstraint.prototype.__class__ = btTypedConstraint;
btTypedConstraint.__cache__ = {};
Module['btTypedConstraint'] = btTypedConstraint;

  btTypedConstraint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btTypedConstraint___destroy___0(self);
}

this['Ammo'] = Module; /* With or without a closure, the proper usage is Ammo.* */



  return this;
}).call({});
